Imports System.Drawing.Printing
Imports System.IO
Imports System.Windows.Forms.DataVisualization.Charting

Class ClothSales_Cloth_Delivery
    Implements Interface_MDIActions

    Private con As New SqlClient.SqlConnection(Common_Procedures.Connection_String)
    Private con1 As New SqlClient.SqlConnection(Common_Procedures.ConnectionString_CompanyGroupdetails)
    Private FrmLdSTS As Boolean = False
    Private New_Entry As Boolean = False
    Private Insert_Entry As Boolean = False
    Private Filter_Status As Boolean = False
    Private Filter_RowNo As Integer = -1
    Private Pk_Condition As String = "CSDLV-"
    Private NoCalc_Status As Boolean = False
    Private Prec_ActCtrl As New Control
    Private vcbo_KeyDwnVal As Double
    Private vCbo_ItmNm As String
    Private dgv_ActCtrlName As String = ""
    Private WithEvents dgtxt_Details As New DataGridViewTextBoxEditingControl
    Private WithEvents dgtxt_Pieces_BaleNo_EntryDetails As New DataGridViewTextBoxEditingControl
    Private Print_PDF_Status As Boolean = False
    Private EMAIL_Status As Boolean = False
    Private WHATSAPP_Status As Boolean = False
    Private vEMAIL_Attachment_FileName As String
    Private prn_HdDt As New DataTable
    Private prn_DetDt As New DataTable
    Private prn_DetDt2 As New DataTable
    Private vPrnDet As New DataTable
    Private prn_PageNo As Integer
    Private prn_DetIndx As Integer
    Private prn_DetAr(500, 500, 10) As String
    'Private prn_DetAr1(500, 10) As String
    Private prn_DetMxIndx As Integer
    Private prn_NoofBmDets As Integer
    Private prn_DetSNo As Integer
    Private prn_HdIndx As Integer
    Private prn_HdIndx1 As Integer
    Private prn_HdMxIndx As Integer
    Private prn_Count As Integer
    Private prn_HdAr(100, 10) As String
    Private prn_HeadIndx As Integer
    Private prn_Prev_HeadIndx As Integer
    Private prn_InpOpts As String = ""
    Private prn_OriDupTri As String = ""
    Private prn_TotCopies As Integer = 0
    Private prn_DetAr1(500, 20) As String
    Private prn_DetDt1 As New DataTable
    Private prn_BLDetAr(1000, 10) As String
    Private prn_TotBlMtr As Single = 0
    Private prn_TotBlWgt As Single = 0
    Private prn_TotBls As Integer = 0
    Private prn_NoofBaleDets As Integer
    Private prn_BaleCode1 As String = ""
    Private prn_BaleCode2 As String = ""
    Private prn_TotalBales As Integer = 0
    Private prn_TotalPcs As String = ""
    Private prn_TotalMtrs As String = ""
    Private prn_TotalWgt As String = ""
    Private vprn_TotAmt As String = ""
    Private prn_baleWieght As String = ""
    Private prn_HdDt2 As New DataTable
    Private prn_DetMxIndx1 As Integer
    Dim prn_PL_Tot_Mtr As String = 0
    Dim prn_PL_Tot_GrsWgt As String = 0
    Dim prn_PL_Tot_NetWgt As String = 0
    Dim prn_PL_Tot_Rls As Integer = 0
    Dim prn_PL_Tot_Pcs As Integer = 0
    Public Shared EntFnYrCode As String = ""

    Public vmskOldText As String = ""
    Public vmskSelStrt As Integer = -1
    Public vmskLrText As String = ""
    Public vmskLrStrt As Integer = -1
    Private PrntCnt2ndPageSTS As Boolean = False
    'Private prn_DetDt1 As New DataTable
    Private prn_PageNo1 As Integer
    Private prn_DetIndx1 As Integer
    Private prn_NoofBmDets1 As Integer
    'Private prn_NoofBmDets As Integer
    'Private prn_TotCopies As Integer = 0
    'Private prn_Count As Integer = 0
    Private prn_DetSNo1 As Integer

    Private Prnt_HalfSheet_STS As Boolean = False
    Private vPrnt_2Copy_In_SinglePage As Integer = 0

    Private vPcsSelc_STatus As Boolean = False

    Private vtot_pcs As Integer = 0
    Private vtot_wgt As String = 0
    Private lst_prnt As Boolean = False
    Private vPrnt_PackSlip_Wgt As Boolean = False


    Private CGST_AMOUNT As String = 0
    Private SGST_AMOUNT As String = 0
    Private IGST_AMOUNT As String = 0
    Private ROUND_OFF_AMOUNT As String = 0
    Private NET_AMOUNT As String = 0


    Dim vCLONAME As String = ""
    Dim vPrn_Roll_Packing_Po_No As String = ""
    Dim vPrn_Roll_Packing_Po_Date As String = ""
    Private prn_TotaGrslWgt As String = ""


    Private vPACKING_LIST_PRINT_WITHOUT_WGT_STS As Boolean = False

    Private prn_Clothname As String = ""
    Private vTot_Mtrs As String = ""
    Private vPacking_SlipNo As String = ""
    Private vPartyName As String = ""
    Private Total_pcs As Integer = 0
    Private Pack_Type_Name As String = ""
    Private vPRN_Weight_Column_Status As Boolean
    Private vPRN_Packing_Slip_Status As Boolean

    Private Total_mtrs As Single = 0
    Private Total_Wgt As Single = 0

    Private vPRN_ClothSales_Invoice_No As String, vPRN_ClothSales_Invoice_Date As String, vPRN_Party_OrderNo As String, vPRN_Party_OrderDate As String, vPRN_Cloth_name As String, vPRN_Pack_Type_Name As String, vPRN_Packing_SlipNo As String
    Private vPRN_PartyName As String, vPRN_PartyCityName As String, vPRN_PartyAdd1 As String, vPRN_PartyAdd2 As String, vPRN_PartyAdd3 As String, vPRN_PartyAdd4 As String, vPRN_PartyGSTIN As String
    Private vPRN_ClothSales_DCNo As String, vPRN_ClothSales_DCDate As String
    Private vPRN_FOLDINGPERC As Single

    Private Sub clear()

        NoCalc_Status = True
        chk_Verified_Status.Checked = False
        New_Entry = False
        Insert_Entry = False
        Prnt_HalfSheet_STS = False
        Print_PDF_Status = False
        EMAIL_Status = False
        WHATSAPP_Status = False
        pnl_Back.Enabled = True
        pnl_Filter.Visible = False
        pnl_Selection.Visible = False
        pnl_BaleSelection.Visible = False
        pnl_BaleSelection_ToolTip.Visible = False
        pnl_Print.Visible = False
        pnl_PieceSelection.Visible = False
        pnl_PieceSelection_ToolTip.Visible = False
        pnl_Pieces_BaleNo_Entry_Details.Visible = False
        pnl_ClothName_ToPrint.Visible = False
        pnl_InvoiceSelection.Visible = False
        dgv_BaleDetails.Visible = False
        Grp_EWB.Visible = False
        vPACKING_LIST_PRINT_WITHOUT_WGT_STS = False


        vmskOldText = ""
        vmskSelStrt = -1

        vmskLrText = ""
        vmskLrStrt = -1

        cbo_DeliveryTo.Text = ""
        lbl_DcNo.Text = ""
        lbl_DcNo.ForeColor = Color.Black

        msk_date.Text = ""
        dtp_Date.Text = ""
        cbo_PartyName.Text = ""
        cbo_Agent.Text = ""
        cbo_Through.Text = "DIRECT"
        cbo_Transport.Text = ""
        cbo_DespTo.Text = ""
        cbo_Grid_ClothName.Text = ""
        cbo_Grid_Clothtype.Text = ""
        cbo_Type.Text = "DIRECT"

        lbl_UserName_CreatedBy.Text = ""
        lbl_UserName_ModifiedBy.Text = ""

        cbo_Type.Enabled = True
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTTILES (SOMANUR)
            cbo_Type.Text = "ORDER"  ' "INVOICE" ' "ORDER"
            'cbo_Type.Enabled = False
        End If
        cbo_RollBundle.Text = "BALE"
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" Then
            cbo_RollBundle.Text = "ROLL"
        End If
        cbo_Vechile.Text = ""
        cbo_Godown.Text = "GODOWN"

        txt_Freight.Text = ""
        txt_OrderNo.Text = ""
        txt_DelvAdd1.Text = ""
        txt_DelvAdd2.Text = ""
        txt_LrNo.Text = ""

        dtp_LrDate.Text = ""
        msk_LrDate.Text = ""
        txt_Order_Date.Text = ""
        txt_EWay_Bill_No.Text = ""
        txt_EWBNo.Text = ""
        lbl_UserName.Text = "USER : " & Trim(UCase(Common_Procedures.User_IdNoToName(con1, Common_Procedures.User.IdNo)))

        txt_Note.Text = ""
        txt_Despatch_DateAndTime.Text = ""

        chk_Sample.Checked = False
        chk_No_Invoice.Checked = False





        cbo_DeliveryTo.Enabled = True
        cbo_DeliveryTo.BackColor = Color.White

        cbo_PartyName.Enabled = True
        cbo_PartyName.BackColor = Color.White

        cbo_Agent.Enabled = True
        cbo_Agent.BackColor = Color.White

        cbo_DespTo.Enabled = True
        cbo_DespTo.BackColor = Color.White

        cbo_Through.Enabled = True
        cbo_Through.BackColor = Color.White

        cbo_Transport.Enabled = True
        cbo_Transport.BackColor = Color.White

        txt_OrderNo.Enabled = True
        txt_OrderNo.BackColor = Color.White

        txt_Order_Date.Enabled = True
        txt_Order_Date.BackColor = Color.White

        txt_DelvAdd1.Enabled = True
        txt_DelvAdd1.BackColor = Color.White

        txt_DelvAdd2.Enabled = True
        txt_DelvAdd2.BackColor = Color.White

        msk_date.Enabled = True
        msk_date.BackColor = Color.White

        txt_LrNo.Enabled = True
        txt_LrNo.BackColor = Color.White

        cbo_Grid_ClothName.Enabled = True
        cbo_Grid_ClothName.BackColor = Color.White

        cbo_Grid_Clothtype.Enabled = True
        cbo_Grid_Clothtype.BackColor = Color.White

        dgv_Details.Rows.Clear()
        dgv_Details_Total.Rows.Clear()
        dgv_Details_Total.Rows.Add()

        dgv_BaleDetails.Rows.Clear()

        pnl_PieceSelection.Visible = False
        pnl_PieceSelection_ToolTip.Visible = False
        dgv_PieceSelection.Rows.Clear()
        dgv_Pieces_BaleNo_Entry_Details.Rows.Clear()
        dgv_PieceDetails.Rows.Clear()

        If Filter_Status = False Then
            dtp_Filter_Fromdate.Text = Common_Procedures.Company_FromDate
            dtp_Filter_ToDate.Text = Common_Procedures.Company_ToDate
            cbo_Filter_PartyName.Text = ""
            cbo_Filter_PartyName.SelectedIndex = -1
            cbo_Filter_ClothName.Text = ""
            cbo_Filter_ClothName.SelectedIndex = -1
            dgv_Filter_Details.Rows.Clear()
        End If

        Grid_Cell_DeSelect()

        cbo_Grid_ClothName.Visible = False
        cbo_Grid_Clothtype.Visible = False

        NoCalc_Status = False

    End Sub

    Private Sub ControlGotFocus(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim txtbx As TextBox
        Dim combobx As ComboBox
        Dim Msktxbx As MaskedTextBox
        Dim Chkbx As CheckBox

        On Error Resume Next

        If TypeOf Me.ActiveControl Is TextBox Or TypeOf Me.ActiveControl Is ComboBox Or TypeOf Me.ActiveControl Is MaskedTextBox Or TypeOf Me.ActiveControl Is Button Or TypeOf Me.ActiveControl Is CheckBox Then
            Me.ActiveControl.BackColor = Color.SpringGreen
            Me.ActiveControl.ForeColor = Color.Blue
        End If

        If TypeOf Me.ActiveControl Is TextBox Then
            txtbx = Me.ActiveControl
            txtbx.SelectAll()
        ElseIf TypeOf Me.ActiveControl Is ComboBox Then
            combobx = Me.ActiveControl
            combobx.SelectAll()
        ElseIf TypeOf Me.ActiveControl Is CheckBox Then
            Chkbx = Me.ActiveControl
            Chkbx.Focus()
        ElseIf TypeOf Me.ActiveControl Is MaskedTextBox Then
            Msktxbx = Me.ActiveControl
            Msktxbx.SelectionStart = 0
        End If

        If Me.ActiveControl.Name <> cbo_Grid_ClothName.Name Then
            cbo_Grid_ClothName.Visible = False
        End If
        If Me.ActiveControl.Name <> cbo_Grid_Clothtype.Name Then
            cbo_Grid_Clothtype.Visible = False
        End If
        If Me.ActiveControl.Name <> dgv_Details.Name And Not (TypeOf ActiveControl Is DataGridViewTextBoxEditingControl) Then
            pnl_BaleSelection_ToolTip.Visible = False
            pnl_PieceSelection_ToolTip.Visible = False
        End If

        If Me.ActiveControl.Name <> dgv_Details.Name Then
            Grid_DeSelect()
        End If

        Prec_ActCtrl = Me.ActiveControl

    End Sub

    Private Sub ControlLostFocus(ByVal sender As Object, ByVal e As System.EventArgs)

        On Error Resume Next

        If IsNothing(Prec_ActCtrl) = False Then
            If TypeOf Prec_ActCtrl Is TextBox Or TypeOf Prec_ActCtrl Is ComboBox Or TypeOf Prec_ActCtrl Is MaskedTextBox Then
                Prec_ActCtrl.BackColor = Color.White
                Prec_ActCtrl.ForeColor = Color.Black
            ElseIf TypeOf Prec_ActCtrl Is CheckBox Then
                Prec_ActCtrl.BackColor = Color.LightSkyBlue
                Prec_ActCtrl.ForeColor = Color.Black
            ElseIf TypeOf Prec_ActCtrl Is Button Then
                Prec_ActCtrl.BackColor = Color.FromArgb(41, 57, 85)
                Prec_ActCtrl.ForeColor = Color.White
            End If
        End If

    End Sub

    Private Sub Grid_DeSelect()
        On Error Resume Next
        If Not IsNothing(dgv_Details.CurrentCell) Then dgv_Details.CurrentCell.Selected = False
        If Not IsNothing(dgv_Details_Total.CurrentCell) Then dgv_Details_Total.CurrentCell.Selected = False
    End Sub

    Private Sub TextBoxControlKeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs)
        On Error Resume Next
        If e.KeyValue = 38 Then SendKeys.Send("+{TAB}")
        If e.KeyValue = 40 Then SendKeys.Send("{TAB}")
    End Sub

    Private Sub TextBoxControlKeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        On Error Resume Next
        If Asc(e.KeyChar) = 13 Then SendKeys.Send("{TAB}")
    End Sub

    Private Sub Grid_Cell_DeSelect()
        On Error Resume Next
        If Not IsNothing(dgv_Details.CurrentCell) Then dgv_Details.CurrentCell.Selected = False
        If Not IsNothing(dgv_Details_Total.CurrentCell) Then dgv_Details_Total.CurrentCell.Selected = False
        If Not IsNothing(dgv_Filter_Details.CurrentCell) Then dgv_Filter_Details.CurrentCell.Selected = False
    End Sub

    Private Sub ClothSales_Cloth_Delivery_Activated(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Activated
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable

        Try

            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_PartyName.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "LEDGER" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_PartyName.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_Agent.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "AGENT" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_Agent.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_Transport.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "LEDGER" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_Transport.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_Grid_ClothName.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "CLOTH NAME" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_Grid_ClothName.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_ClothName_ToPrint.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "CLOTH NAME" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_ClothName_ToPrint.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_Grid_Clothtype.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "CLOTH TYPE" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_Grid_Clothtype.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_DeliveryTo.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "LEDGER" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_DeliveryTo.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If

            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            If FrmLdSTS = True Then

                lbl_Company.Text = ""
                lbl_Company.Tag = 0
                Common_Procedures.CompIdNo = 0

                Me.Text = ""

                lbl_Company.Text = Common_Procedures.get_Company_From_CompanySelection(con)
                lbl_Company.Tag = Val(Common_Procedures.CompIdNo)

                Me.Text = lbl_Heading.Text & "  -  " & lbl_Company.Text

                new_record()

            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SHOW...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        FrmLdSTS = False

    End Sub

    Private Sub ClothSales_Cloth_Delivery_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed
        On Error Resume Next
        con.Close()
        con.Dispose()
        Common_Procedures.Last_Closed_FormName = Me.Name
    End Sub

    Private Sub ClothSales_Cloth_Delivery_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles Me.KeyPress
        Try

            If Asc(e.KeyChar) = 27 Then


                If pnl_Filter.Visible = True Then
                    btn_Filter_Close_Click(sender, e)
                    Exit Sub

                ElseIf pnl_InvoiceSelection.Visible = True Then
                    btn_Close_InvoiceSelection_Click(sender, e)
                    Exit Sub

                ElseIf dgv_BaleDetails.Visible = True Then
                    btn_BaleDetails_Click(sender, e)
                    Exit Sub

                ElseIf pnl_Selection.Visible = True Then
                    btn_Close_Selection_Click(sender, e)
                    Exit Sub

                ElseIf pnl_BaleSelection.Visible = True Then
                    btn_Close_BaleSelection_Click(sender, e)
                    Exit Sub

                ElseIf pnl_PieceSelection.Visible = True Then
                    btn_Close_PieceSelection_Click(sender, e)
                    Exit Sub

                ElseIf pnl_ClothName_ToPrint.Visible = True Then
                    btn_Close_ClothName_ToPrint_Click(sender, e)
                    Exit Sub

                ElseIf pnl_Pieces_BaleNo_Entry_Details.Visible = True Then
                    btn_Close_Pieces_BaleNo_Entry_Details_Click(sender, e)
                    Exit Sub

                ElseIf pnl_Print.Visible = True Then
                    btn_print_Close_Click(sender, e)
                    Exit Sub

                Else

                    If MessageBox.Show("Do you want to Close?", "FOR CLOSING ENTRY...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) <> Windows.Forms.DialogResult.Yes Then
                        Exit Sub

                    Else
                        Close_Form()

                    End If

                End If

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT CLOSE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub ClothSales_Cloth_Delivery_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Dim OpYrCode As String = ""
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim dt2 As New DataTable
        Dim dt3 As New DataTable
        Dim dt4 As New DataTable
        Dim dt5 As New DataTable
        Dim dt6 As New DataTable
        Dim dt7 As New DataTable
        Dim dt8 As New DataTable

        Me.Text = ""

        con.Open()

        If Trim(UCase(Common_Procedures.ClothDelivery_Opening_OR_Entry)) = "OPENING" Then
            OpYrCode = Microsoft.VisualBasic.Left(Trim(Common_Procedures.FnRange), 4)
            OpYrCode = Trim(Mid(Val(OpYrCode) - 1, 3, 2)) & "-" & Trim(Microsoft.VisualBasic.Right(OpYrCode, 2))

            EntFnYrCode = OpYrCode
            btn_BaleSelection.Visible = False

        Else
            EntFnYrCode = Common_Procedures.FnYearCode
            btn_BaleSelection.Visible = True
        End If

        lbl_Godown_Caption.Visible = False
        cbo_Godown.Visible = False

        btn_Print_Bundle_Without_Weight.Visible = False

        If Common_Procedures.settings.Multi_Godown_Status = 1 Then
            txt_DelvAdd1.Height = 23
            txt_DelvAdd2.Height = 23
            txt_DelvAdd1.Width = 170
            txt_DelvAdd2.Width = 170
            txt_DelvAdd1.Left = 73
            txt_DelvAdd2.Left = 259
            lbl_Godown_Caption.Visible = True
            cbo_Godown.Visible = True
        End If

        btn_ClothName_ToPrint_Selection.Visible = False
        btn_BaleDetails.Visible = False
        btn_PackingList_Excel.Visible = False
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1155" Then
            btn_ClothName_ToPrint_Selection.Visible = True
            btn_BaleDetails.Visible = True
            btn_PackingList_Excel.Visible = True
            dgv_Details.Columns(10).Visible = True
            dgv_Details.Columns(6).Width = dgv_Details.Columns(6).Width - 10
            dgv_Details.Columns(7).Width = dgv_Details.Columns(7).Width - 10
            dgv_Details.Columns(13).Width = dgv_Details.Columns(13).Width - 10
            dgv_Details.Columns(10).Width = 30
            dgv_Details.Columns(10).HeaderText = "D.SNO"
            dgv_BaleDetails.Height = 2 * dgv_BaleDetails.Height
        End If

        txt_Despatch_DateAndTime.Visible = False
        lbl_Despatch_DateAndTime_Caption.Visible = False
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTILES (SOMANUR)
            txt_Despatch_DateAndTime.Visible = True
            lbl_Despatch_DateAndTime_Caption.Visible = True

            chk_No_Invoice.Visible = False
            'If Trim(Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry_No_Invoice) <> "" Then
            '    chk_No_Invoice.Visible = True
            'End If

            lbl_InvoiceNo.Visible = True
            lbl_InvoiceNo_Caption.Visible = True

        End If


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1155" Then
            btn_Print_Bundle.Text = "PACKING SLIP"
            btn_Print_Bundle.Width = btn_Print_Bundle.Width + 25
            btn_Print_Bundle.Left = btn_Print_Bundle.Left - 20
            btn_Print_Bale.Left = btn_Print_Bale.Left - 5
            btn_Print_Bale.Width = btn_Print_Bale.Width - 15

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1007" Then

            lbl_OrderNo_Caption.Text = "Party P.O No"
            lbl_OrderDate_Caption.Text = "P.O Date"

            lbl_DelvAdd1_Caption.Visible = False
            txt_DelvAdd1.Visible = False
            txt_DelvAdd2.Visible = False
            btn_BaleSelection.Visible = True 'False
            btn_PieceSelection.Visible = True
            btn_Print_Bale.Visible = True
            btn_Print_Bundle.Text = "PACKING SLIP"
            'btn_Print_Bundle.Location = New Point(102, 119)
            'btn_Print_Bundle.Width = btn_Print_Bale.Width + btn_Print_Bundle.Width
            dgv_PieceSelection.Columns(2).Width = 120
            dgv_PieceSelection.Columns(3).Width = 80

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1520" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1075" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1569" Then

            lbl_OrderNo_Caption.Text = "Party P.O No"
            lbl_OrderDate_Caption.Text = "P.O Date"

            lbl_DelvAdd1_Caption.Visible = False
            txt_DelvAdd1.Visible = False
            txt_DelvAdd2.Visible = False
            btn_BaleSelection.Visible = True 'False
            btn_PieceSelection.Visible = True
            btn_Print_Bale.Visible = False
            btn_Print_Bundle.Text = "PACKING SLIP"
            btn_Print_Bundle.Location = New Point(102, 119)
            btn_Print_Bundle.Width = btn_Print_Bale.Width + btn_Print_Bundle.Width
            dgv_PieceSelection.Columns(2).Width = 120
            dgv_PieceSelection.Columns(3).Width = 80

        End If


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1428" Then
            btn_Print_Bale.Text = "DC-WITH WGT"
            btn_Print_Bundle.Text = "DC-WITHOUT WGT"
            btn_Print_Bale.Height = 45
            btn_Print_Bundle.Height = 45
            btn_Print_Bundle.Width = 90
            btn_Print_Cancel.Width = 60
            btn_Print_Cancel.Location = New Point(287, 119)
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then '---- MANI OMEGA FABRICS (THIRUCHENKODU)
            dgv_BaleSelection.Columns(2).HeaderText = "FER No."
            dgv_BaleSelection.Columns(2).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1578" Then '---- AMARNATH MILLS (ERODE)
            btn_Print_Bale.Text = "BALE Packing"
            btn_Print_Bundle.Text = "ROLL Packing"
            btn_Print_Bale.Height = 45
            btn_Print_Bundle.Height = 45
            btn_Print_Bundle.Width = 90
            btn_Print_Cancel.Width = 60
            btn_Print_Cancel.Location = New Point(287, 119)
        End If

        btn_UserModification.Visible = False
        If Common_Procedures.settings.User_Modifications_Show_Status = 1 Then
            If Val(Common_Procedures.User.IdNo) = 1 Or Common_Procedures.User.Show_UserModification_Status = 1 Then
                btn_UserModification.Visible = True
            End If
        End If

        cbo_Type.Items.Clear()
        cbo_Type.Items.Add(" ")
        cbo_Type.Items.Add("DIRECT")
        cbo_Type.Items.Add("ORDER")
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '---- BRT TEXTILES (SOMANUR)
            cbo_Type.Items.Add("INVOICE")
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1608" Then '---- samanth TEXTILES 
            btn_Print_Bundle_Without_Weight.Visible = True
        End If

        cbo_Through.Items.Clear()
        cbo_Through.Items.Add(" ")
        cbo_Through.Items.Add("DIRECT")
        cbo_Through.Items.Add("BANK")
        cbo_Through.Items.Add("AGENT")

        cbo_RollBundle.Items.Clear()
        cbo_RollBundle.Items.Add(" ")
        cbo_RollBundle.Items.Add("ROLL")
        cbo_RollBundle.Items.Add("BUNDLE")
        cbo_RollBundle.Items.Add("BALE")
        cbo_RollBundle.Items.Add("PCS")


        cbo_Verified_Sts.Items.Clear()
        cbo_Verified_Sts.Items.Add("")
        cbo_Verified_Sts.Items.Add("YES")
        cbo_Verified_Sts.Items.Add("NO")


        pnl_Filter.Visible = False
        pnl_Filter.Left = (Me.Width - pnl_Filter.Width) \ 2
        pnl_Filter.Top = (Me.Height - pnl_Filter.Height) \ 2
        pnl_Filter.BringToFront()

        pnl_Selection.Visible = False
        pnl_Selection.Left = (Me.Width - pnl_Selection.Width) \ 2
        pnl_Selection.Top = (Me.Height - pnl_Selection.Height) \ 2
        pnl_Selection.BringToFront()

        pnl_BaleSelection.Visible = False
        pnl_BaleSelection.Left = (Me.Width - pnl_BaleSelection.Width) \ 2
        pnl_BaleSelection.Top = (Me.Height - pnl_BaleSelection.Height) \ 2
        pnl_BaleSelection.BringToFront()

        pnl_PieceSelection.Visible = False
        pnl_PieceSelection.Left = (Me.Width - pnl_PieceSelection.Width) \ 2
        pnl_PieceSelection.Top = (Me.Height - pnl_PieceSelection.Height) \ 2
        pnl_PieceSelection.BringToFront()

        pnl_ClothName_ToPrint.Visible = False
        pnl_ClothName_ToPrint.Left = (Me.Width - pnl_ClothName_ToPrint.Width) \ 2
        pnl_ClothName_ToPrint.Top = (Me.Height - pnl_ClothName_ToPrint.Height) \ 2
        pnl_ClothName_ToPrint.BringToFront()

        pnl_Pieces_BaleNo_Entry_Details.Visible = False
        pnl_Pieces_BaleNo_Entry_Details.Left = (Me.Width - pnl_Pieces_BaleNo_Entry_Details.Width) \ 2
        pnl_Pieces_BaleNo_Entry_Details.Top = (Me.Height - pnl_Pieces_BaleNo_Entry_Details.Height) \ 2
        pnl_Pieces_BaleNo_Entry_Details.BringToFront()

        pnl_Print.Visible = False
        pnl_Print.Left = (Me.Width - pnl_Print.Width) \ 2
        pnl_Print.Top = (Me.Height - pnl_Print.Height) \ 2
        pnl_Print.BringToFront()

        pnl_InvoiceSelection.Visible = False
        pnl_InvoiceSelection.Left = (Me.Width - pnl_InvoiceSelection.Width) \ 2
        pnl_InvoiceSelection.Top = (Me.Height - pnl_InvoiceSelection.Height) \ 2
        pnl_InvoiceSelection.BringToFront()


        chk_Verified_Status.Visible = False
        If Common_Procedures.settings.Vefified_Status = 1 Then
            If Val(Common_Procedures.User.IdNo) = 1 Or Common_Procedures.User.Show_Verified_Status = 1 Then
                chk_Verified_Status.Visible = True
                lbl_verfied_sts.Visible = True
                cbo_Verified_Sts.Visible = True


            End If
        Else
            chk_Verified_Status.Visible = False
            lbl_verfied_sts.Visible = False
            cbo_Verified_Sts.Visible = False
        End If

        dgv_BaleDetails.Visible = False

        pnl_BaleSelection_ToolTip.Visible = False

        dgv_PieceDetails.Visible = False
        pnl_PieceSelection_ToolTip.Visible = False

        AddHandler msk_date.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_PartyName.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Agent.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Type.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_DespTo.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Grid_ClothName.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Grid_Clothtype.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Through.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Transport.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Freight.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Order_Date.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_OrderNo.GotFocus, AddressOf ControlGotFocus
        AddHandler msk_date.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_LrNo.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_DelvAdd1.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_DelvAdd2.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Note.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Despatch_DateAndTime.GotFocus, AddressOf ControlGotFocus
        AddHandler dtp_Filter_Fromdate.GotFocus, AddressOf ControlGotFocus
        AddHandler dtp_Filter_ToDate.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Filter_PartyName.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Filter_ClothName.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_save.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_close.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_Bale.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_Bundle.GotFocus, AddressOf ControlGotFocus
        'AddHandler btn_Print_Cancel.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_Delivery.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_FormJJ.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_EWay_Bill_No.GotFocus, AddressOf ControlGotFocus
        AddHandler msk_LrDate.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_RollBundle.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Vechile.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Godown.GotFocus, AddressOf ControlGotFocus
        AddHandler chk_No_Invoice.GotFocus, AddressOf ControlGotFocus
        AddHandler chk_Sample.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_PieceSelection_LotNo.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_PieceSelection_PcsNo.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_PieceSelection_Meters.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_BaleSelection_BaleNo.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_BaleSelection_BarCode.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_BaleSelection_CompanyName.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_BaleSelection_FabricName.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_BaleSelection_MetersEqualTo.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_BaleSelection_MetersFrom.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_BaleSelection_MetersTo.GotFocus, AddressOf ControlGotFocus

        AddHandler cbo_DeliveryTo.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_DeliveryTo.LostFocus, AddressOf ControlLostFocus

        AddHandler chk_Verified_Status.GotFocus, AddressOf ControlGotFocus
        AddHandler chk_Verified_Status.LostFocus, AddressOf ControlLostFocus



        AddHandler msk_date.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_PartyName.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Agent.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Type.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Transport.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Grid_ClothName.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_DespTo.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Grid_Clothtype.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Through.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Freight.LostFocus, AddressOf ControlLostFocus
        AddHandler msk_date.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_LrNo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Order_Date.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_DelvAdd1.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_DelvAdd2.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_OrderNo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Note.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Despatch_DateAndTime.LostFocus, AddressOf ControlLostFocus
        AddHandler dtp_Filter_Fromdate.LostFocus, AddressOf ControlLostFocus
        AddHandler dtp_Filter_ToDate.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Filter_PartyName.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Filter_ClothName.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_save.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_close.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_Bale.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_Bundle.LostFocus, AddressOf ControlLostFocus
        'AddHandler btn_Print_Cancel.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_Delivery.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_FormJJ.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_EWay_Bill_No.LostFocus, AddressOf ControlLostFocus
        AddHandler msk_LrDate.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_RollBundle.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Vechile.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Godown.LostFocus, AddressOf ControlLostFocus
        AddHandler chk_No_Invoice.LostFocus, AddressOf ControlLostFocus
        AddHandler chk_Sample.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_PieceSelection_LotNo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_PieceSelection_PcsNo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_PieceSelection_Meters.LostFocus, AddressOf ControlLostFocus

        AddHandler txt_BaleSelection_BaleNo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_BaleSelection_BarCode.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_BaleSelection_CompanyName.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_BaleSelection_FabricName.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_BaleSelection_MetersEqualTo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_BaleSelection_MetersFrom.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_BaleSelection_MetersTo.LostFocus, AddressOf ControlLostFocus

        'AddHandler msk_date.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Freight.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_DelvAdd1.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_OrderNo.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_LrNo.KeyDown, AddressOf TextBoxControlKeyDown
        ' AddHandler msk_date.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Order_Date.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler dtp_Filter_Fromdate.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler dtp_Filter_ToDate.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_EWay_Bill_No.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler msk_LrDate.KeyDown, AddressOf TextBoxControlKeyDown

        AddHandler msk_date.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Freight.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_DelvAdd1.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_OrderNo.KeyPress, AddressOf TextBoxControlKeyPress
        ' AddHandler msk_date.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_LrNo.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Order_Date.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_EWay_Bill_No.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler dtp_Filter_Fromdate.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler dtp_Filter_ToDate.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler msk_LrDate.KeyPress, AddressOf TextBoxControlKeyPress

        lbl_Company.Text = ""
        lbl_Company.Tag = 0
        lbl_Company.Visible = False
        Common_Procedures.CompIdNo = 0

        Filter_Status = False
        FrmLdSTS = True
        new_record()
    End Sub
    Public Sub Get_vehicle_from_Transport()
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim transport_id As Integer
        If Common_Procedures.settings.CustomerCode <> "1186" Then Exit Sub

        transport_id = Common_Procedures.Ledger_NameToIdNo(con, cbo_Transport.Text)
        Da = New SqlClient.SqlDataAdapter("select vehicle_no from ledger_head where ledger_idno=" & Str(Val(transport_id)) & "", con)
        Dt = New DataTable
        Da.Fill(Dt)
        If Dt.Rows.Count <> 0 Then
            cbo_Vechile.Text = Dt.Rows(0).Item("vehicle_no").ToString
        End If
        Dt.Clear()
    End Sub
    Private Sub Close_Form()

        Try

            lbl_Company.Tag = 0
            lbl_Company.Text = ""
            Me.Text = ""
            Common_Procedures.CompIdNo = 0

            lbl_Company.Text = Common_Procedures.Show_CompanySelection_On_FormClose(con)
            lbl_Company.Tag = Val(Common_Procedures.CompIdNo)
            Me.Text = lbl_Company.Text
            If Val(Common_Procedures.CompIdNo) = 0 Then

                Me.Close()

            Else

                new_record()

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT CLOSE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Protected Overrides Function ProcessCmdKey(ByRef msg As System.Windows.Forms.Message, ByVal keyData As System.Windows.Forms.Keys) As Boolean
        Dim dgv1 As New DataGridView

        If ActiveControl.Name = dgv_Details.Name Or ActiveControl.Name = dgv_Pieces_BaleNo_Entry_Details.Name Or TypeOf ActiveControl Is DataGridViewTextBoxEditingControl Then

            dgv1 = Nothing

            If ActiveControl.Name = dgv_Details.Name Then
                dgv1 = dgv_Details

            ElseIf dgv_Details.IsCurrentRowDirty = True Then
                dgv1 = dgv_Details

            ElseIf dgv_ActCtrlName = dgv_Details.Name Then
                dgv1 = dgv_Details

            ElseIf ActiveControl.Name = dgv_Pieces_BaleNo_Entry_Details.Name Then
                dgv1 = dgv_Pieces_BaleNo_Entry_Details

            ElseIf dgv_Pieces_BaleNo_Entry_Details.IsCurrentRowDirty = True Then
                dgv1 = dgv_Pieces_BaleNo_Entry_Details

            ElseIf dgv_ActCtrlName = dgv_Pieces_BaleNo_Entry_Details.Name Then
                dgv1 = dgv_Pieces_BaleNo_Entry_Details

            End If

            If IsNothing(dgv1) = False And IsNothing(dgv1.CurrentCell) = False Then

                With dgv1

                    If dgv1.Name = dgv_Details.Name Then

                        If keyData = Keys.Enter Or keyData = Keys.Down Then

                            If .CurrentCell.ColumnIndex > 7 Then

                                If .CurrentCell.RowIndex = .RowCount - 1 Then
                                    cbo_Transport.Focus()

                                Else

                                    .CurrentCell = .Rows(.CurrentCell.RowIndex + 1).Cells(1)

                                End If
                            ElseIf .CurrentCell.ColumnIndex = 7 Then

                                .CurrentCell = .Rows(.CurrentRow.Index).Cells(13)
                            Else
                                .CurrentCell = .Rows(.CurrentRow.Index).Cells(.CurrentCell.ColumnIndex + 1)

                            End If

                            Return True

                        ElseIf keyData = Keys.Up Then

                            If .CurrentCell.ColumnIndex <= 1 Then
                                If .CurrentCell.RowIndex = 0 Then
                                    If cbo_Godown.Visible = True Then
                                        cbo_Godown.Focus()
                                    Else
                                        txt_DelvAdd2.Focus()
                                    End If

                                Else
                                    .CurrentCell = .Rows(.CurrentCell.RowIndex - 1).Cells(7)

                                End If

                            ElseIf .CurrentCell.ColumnIndex = 13 Then

                                .CurrentCell = .Rows(.CurrentRow.Index).Cells(7)

                            Else

                                .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(.CurrentCell.ColumnIndex - 1)

                            End If

                            Return True

                        Else
                            Return MyBase.ProcessCmdKey(msg, keyData)

                        End If



                        '---- Piece BaleNo Entry Details grid
                    ElseIf dgv1.Name = dgv_Pieces_BaleNo_Entry_Details.Name Then

                        If keyData = Keys.Enter Or keyData = Keys.Down Then

                            If .CurrentCell.ColumnIndex >= 11 Then

                                If .CurrentCell.RowIndex = .RowCount - 1 Then
                                    vPcsSelc_STatus = False
                                    Close_Pieces_BaleNo_Entry_Details()

                                Else
                                    .CurrentCell = .Rows(.CurrentCell.RowIndex + 1).Cells(11)

                                End If

                            Else

                                .CurrentCell = .Rows(.CurrentRow.Index).Cells(11)

                            End If

                            Return True

                        ElseIf keyData = Keys.Up Then

                            If .CurrentCell.ColumnIndex <= 11 Then
                                If .CurrentCell.RowIndex = 0 Then
                                    'btn_Pieces_BaleNo_Entry_Details_PieceSelection.Focus()

                                Else
                                    .CurrentCell = .Rows(.CurrentCell.RowIndex - 1).Cells(11)

                                End If

                            Else

                                .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(11)

                            End If

                            Return True

                        Else
                            Return MyBase.ProcessCmdKey(msg, keyData)

                        End If


                    End If



                End With

            Else

                Return MyBase.ProcessCmdKey(msg, keyData)

            End If

        Else

            Return MyBase.ProcessCmdKey(msg, keyData)

        End If

    End Function

    Private Sub move_record(ByVal no As String)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim dt2 As New DataTable
        Dim NewCode As String
        Dim LockSTS As Boolean = False
        Dim n As Integer
        Dim SNo As Integer

        If Trim(no) = "0" Or Trim(no) = "" Then Exit Sub

        clear()

        NoCalc_Status = True

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(no) & "/" & Trim(EntFnYrCode)

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.* from ClothSales_Delivery_Head a Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count > 0 Then

                lbl_DcNo.Text = dt1.Rows(0).Item("ClothSales_Delivery_No").ToString
                dtp_Date.Text = dt1.Rows(0).Item("ClothSales_Delivery_Date").ToString
                msk_date.Text = dtp_Date.Text

                cbo_PartyName.Text = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("Ledger_IdNo").ToString))
                cbo_Agent.Text = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("Agent_IdNo").ToString))
                cbo_Transport.Text = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("Transport_IdNo").ToString))
                cbo_DeliveryTo.Text = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("DeliveryTo_idno").ToString))
                cbo_Type.Text = dt1.Rows(0).Item("Order_Type").ToString
                cbo_DespTo.Text = dt1.Rows(0).Item("Despatch_To").ToString
                cbo_Through.Text = dt1.Rows(0).Item("Through_Name").ToString

                If Val(dt1.Rows(0).Item("created_useridno").ToString) <> 0 Then
                    If IsDate(dt1.Rows(0).Item("created_DateTime").ToString) = True And Trim(dt1.Rows(0).Item("created_DateTime_Text").ToString) <> "" Then
                        lbl_UserName_CreatedBy.Text = "Created by " & Trim(UCase(Common_Procedures.User_IdNoToName(con, Val(dt1.Rows(0).Item("created_useridno").ToString)))) & " @ " & Trim(dt1.Rows(0).Item("created_DateTime_Text").ToString)
                    Else
                        lbl_UserName_CreatedBy.Text = "USER : " & Trim(UCase(Common_Procedures.User_IdNoToName(con, Val(dt1.Rows(0).Item("created_useridno").ToString))))
                    End If
                End If
                If Val(dt1.Rows(0).Item("Last_modified_useridno").ToString) <> 0 Then
                    If IsDate(dt1.Rows(0).Item("Last_modified_DateTime").ToString) = True And Trim(dt1.Rows(0).Item("Last_modified_DateTime_Text").ToString) <> "" Then
                        lbl_UserName_ModifiedBy.Text = "Last Modified by " & Trim(UCase(Common_Procedures.User_IdNoToName(con, Val(dt1.Rows(0).Item("Last_modified_useridno").ToString)))) & " @ " & Trim(dt1.Rows(0).Item("Last_modified_DateTime_Text").ToString)
                    End If
                End If

                txt_LrNo.Text = dt1.Rows(0).Item("Lr_No").ToString
                msk_LrDate.Text = dt1.Rows(0).Item("Lr_Date").ToString
                txt_Order_Date.Text = dt1.Rows(0).Item("Party_OrderDate").ToString
                txt_OrderNo.Text = dt1.Rows(0).Item("Party_OrderNo").ToString
                txt_DelvAdd1.Text = dt1.Rows(0).Item("Delivery_Address1").ToString
                txt_DelvAdd2.Text = dt1.Rows(0).Item("Delivery_Address2").ToString
                txt_Freight.Text = dt1.Rows(0).Item("Freight_Amount").ToString
                txt_Note.Text = dt1.Rows(0).Item("Note").ToString
                txt_Despatch_DateAndTime.Text = dt1.Rows(0).Item("Despatch_DateandTime").ToString
                'txt_EWay_Bill_No.Text = dt1.Rows(0).Item("JJ_FormNo").ToString
                txt_EWay_Bill_No.Text = dt1.Rows(0).Item("EwayBill_No").ToString

                cbo_RollBundle.Text = dt1.Rows(0).Item("Packing_Type").ToString
                cbo_Vechile.Text = dt1.Rows(0).Item("Vechile_No").ToString
                cbo_Godown.Text = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("WareHouse_IdNo").ToString))

                lbl_UserName.Text = "USER : " & Trim(UCase(Common_Procedures.User_IdNoToName(con1, Val(dt1.Rows(0).Item("User_IdNo").ToString))))

                If Val(dt1.Rows(0).Item("Sample_Status").ToString) = 1 Then chk_Sample.Checked = True
                If Val(dt1.Rows(0).Item("No_Invoice_Status").ToString) = 1 Then chk_No_Invoice.Checked = True
                If Val(dt1.Rows(0).Item("Verified_Status").ToString) = 1 Then chk_Verified_Status.Checked = True








                da2 = New SqlClient.SqlDataAdapter("Select a.*, b.Cloth_Name, c.ClothType_Name, tPC.Cloth_Name as ClothName_PrintName from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_IdNo = b.Cloth_IdNo LEFT OUTER JOIN ClothType_Head c ON a.ClothType_IdNo = c.ClothType_IdNo  INNER JOIN Cloth_Head tPC ON a.ClothIdNo_ToPrint = tPC.Cloth_IdNo Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' Order by a.sl_no", con)
                dt2 = New DataTable
                da2.Fill(dt2)

                With dgv_Details

                    .Rows.Clear()
                    SNo = 0

                    If dt2.Rows.Count > 0 Then

                        For i = 0 To dt2.Rows.Count - 1

                            n = .Rows.Add()

                            SNo = SNo + 1

                            .Rows(n).Cells(0).Value = Val(SNo)
                            .Rows(n).Cells(1).Value = dt2.Rows(i).Item("Cloth_Name").ToString
                            .Rows(n).Cells(2).Value = dt2.Rows(i).Item("ClothType_Name").ToString
                            If Val(dt2.Rows(i).Item("Fold_Perc").ToString) <> 0 Then
                                .Rows(n).Cells(3).Value = Val(dt2.Rows(i).Item("Fold_Perc").ToString)
                            End If
                            If Val(dt2.Rows(i).Item("Bales").ToString) <> 0 Then
                                .Rows(n).Cells(4).Value = Val(dt2.Rows(i).Item("Bales").ToString)
                            End If
                            .Rows(n).Cells(5).Value = dt2.Rows(i).Item("Bales_Nos").ToString
                            If Val(dt2.Rows(i).Item("Pcs").ToString) <> 0 Then
                                .Rows(n).Cells(6).Value = Val(dt2.Rows(i).Item("Pcs").ToString)
                            End If
                            .Rows(n).Cells(7).Value = Format(Val(dt2.Rows(i).Item("Meters").ToString), "########0.00")
                            .Rows(n).Cells(8).Value = dt2.Rows(i).Item("ClothSales_Order_Code").ToString
                            .Rows(n).Cells(9).Value = dt2.Rows(i).Item("ClothSales_Order_SlNo").ToString
                            .Rows(n).Cells(10).Value = dt2.Rows(i).Item("ClothSales_Delivery_SlNo").ToString
                            .Rows(n).Cells(11).Value = Val(dt2.Rows(i).Item("Invoice_Meters").ToString) + Val(dt2.Rows(i).Item("Return_Meters").ToString)
                            .Rows(n).Cells(12).Value = dt2.Rows(i).Item("PackingSlip_Codes").ToString
                            .Rows(n).Cells(13).Value = Format(Val(dt2.Rows(i).Item("Rate").ToString), "#######0.00")
                            .Rows(n).Cells(14).Value = dt2.Rows(i).Item("Piece_Selection_LotCodes_PcsNos").ToString
                            If Val(dt2.Rows(i).Item("Cloth_IdNo").ToString) <> Val(dt2.Rows(i).Item("ClothIdNo_ToPrint").ToString) Then
                                .Rows(n).Cells(15).Value = dt2.Rows(i).Item("ClothName_PrintName").ToString
                            End If
                            .Rows(n).Cells(16).Value = dt2.Rows(i).Item("ClothSales_Invoice_Code").ToString
                            .Rows(n).Cells(17).Value = dt2.Rows(i).Item("ClothSales_Invoice_SlNo").ToString

                            .Rows(n).Cells(18).Value = dt2.Rows(i).Item("Amount").ToString
                            .Rows(n).Cells(19).Value = dt2.Rows(i).Item("HSN_Code").ToString
                            .Rows(n).Cells(20).Value = dt2.Rows(i).Item("Tax_Perc").ToString

                            If Val(.Rows(n).Cells(11).Value) <> 0 Then
                                For j = 0 To .ColumnCount - 1
                                    .Rows(n).Cells(j).Style.BackColor = Color.LightGray
                                Next j
                                LockSTS = True
                            End If

                        Next i

                    End If

                    If .Rows.Count = 0 Then
                        .Rows.Add()

                    Else

                        n = .Rows.Count - 1
                        If Trim(.Rows(n).Cells(1).Value) = "" And Val(.Rows(n).Cells(7).Value) = 0 Then
                            .Rows(n).Cells(10).Value = ""
                            Set_Max_Delivery_DetailsSlNo(n, 10)
                            'If Val(.Rows(n).Cells(10).Value) = 0 Then
                            '    If n = 0 Then
                            '        .Rows(n).Cells(10).Value = 1
                            '    Else
                            '        .Rows(n).Cells(10).Value = Val(.Rows(n - 1).Cells(10).Value) + 1
                            '    End If
                            'End If
                        End If

                    End If

                End With

                With dgv_Details_Total
                    If .RowCount = 0 Then .Rows.Add()
                    .Rows(0).Cells(4).Value = Val(dt1.Rows(0).Item("Total_Bales").ToString)
                    .Rows(0).Cells(6).Value = Val(dt1.Rows(0).Item("Total_Pcs").ToString)
                    .Rows(0).Cells(7).Value = Format(Val(dt1.Rows(0).Item("Total_Meters").ToString), "########0.00")
                    .Rows(0).Cells(8).Value = Format(Val(dt1.Rows(0).Item("Total_Taxable_Amount").ToString), "########0.00")
                End With


                da2 = New SqlClient.SqlDataAdapter("Select a.* from Packing_Slip_Head a Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Delivery_DetailsSlNo, a.Delivery_No, a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code", con)
                dt2 = New DataTable
                da2.Fill(dt2)

                With dgv_BaleDetails

                    .Rows.Clear()
                    SNo = 0

                    If dt2.Rows.Count > 0 Then

                        For i = 0 To dt2.Rows.Count - 1

                            n = .Rows.Add()

                            SNo = SNo + 1

                            .Rows(n).Cells(0).Value = Val(dt2.Rows(i).Item("Delivery_DetailsSlNo").ToString)
                            .Rows(n).Cells(1).Value = dt2.Rows(i).Item("Packing_Slip_No").ToString
                            .Rows(n).Cells(2).Value = Val(dt2.Rows(i).Item("Total_Pcs").ToString)
                            .Rows(n).Cells(3).Value = Val(dt2.Rows(i).Item("Total_Meters").ToString)
                            .Rows(n).Cells(4).Value = Val(dt2.Rows(i).Item("Total_Weight").ToString)
                            .Rows(n).Cells(5).Value = dt2.Rows(i).Item("Packing_Slip_Code").ToString
                            .Rows(n).Cells(6).Value = dt2.Rows(i).Item("Bale_Bundle").ToString

                        Next i

                    End If

                End With

                da2 = New SqlClient.SqlDataAdapter("Select a.*, b.Cloth_Name as  PieceCloth_Name, c.ClothType_Name as PieceType_Name, d.ledger_name as PieceParty_Name from ClothSales_Delivery_Piece_Details a LEFT OUTER JOIN Cloth_Head b ON a.PieceCloth_IdNo = b.Cloth_IdNo LEFT OUTER JOIN ClothType_Head c ON a.PieceType_IdNo = c.ClothType_IdNo LEFT OUTER JOIN Ledger_Head d ON a.PieceParty_IdNo <> 0 and a.PieceParty_IdNo = d.Ledger_Idno Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' Order by a.Clothsale_Delivery_Slno, a.sl_no", con)
                dt2 = New DataTable
                da2.Fill(dt2)

                With dgv_PieceDetails

                    .Rows.Clear()

                    If dt2.Rows.Count > 0 Then

                        For i = 0 To dt2.Rows.Count - 1

                            n = .Rows.Add()

                            .Rows(n).Cells(0).Value = dt2.Rows(i).Item("Clothsale_Delivery_Slno").ToString
                            .Rows(n).Cells(1).Value = dt2.Rows(i).Item("Lot_No").ToString
                            .Rows(n).Cells(2).Value = dt2.Rows(i).Item("Piece_No").ToString
                            .Rows(n).Cells(3).Value = dt2.Rows(i).Item("PieceType_Name").ToString
                            .Rows(n).Cells(4).Value = Format(Val(dt2.Rows(i).Item("Meters").ToString), "########0.00")
                            .Rows(n).Cells(5).Value = Format(Val(dt2.Rows(i).Item("Weight").ToString), "########0.000")
                            .Rows(n).Cells(6).Value = Format(Val(dt2.Rows(i).Item("Weight_Meter").ToString), "########0.000")

                            .Rows(n).Cells(7).Value = dt2.Rows(i).Item("PieceParty_Name").ToString

                            .Rows(n).Cells(8).Value = dt2.Rows(i).Item("lot_code").ToString
                            .Rows(n).Cells(9).Value = dt2.Rows(i).Item("PieceCloth_Name").ToString

                            .Rows(n).Cells(10).Value = dt2.Rows(i).Item("Loom_No").ToString

                            .Rows(n).Cells(11).Value = dt2.Rows(i).Item("Bale_No").ToString


                        Next i

                    End If

                End With

            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then
                If LockSTS = True Then

                    cbo_PartyName.Enabled = False
                    cbo_PartyName.BackColor = Color.LightGray

                    cbo_Agent.Enabled = False
                    cbo_Agent.BackColor = Color.LightGray

                    cbo_DespTo.Enabled = False
                    cbo_DespTo.BackColor = Color.LightGray

                    cbo_Through.Enabled = False
                    cbo_Through.BackColor = Color.LightGray

                    'cbo_Transport.Enabled = False
                    'cbo_Transport.BackColor = Color.LightGray

                    txt_OrderNo.Enabled = False
                    txt_OrderNo.BackColor = Color.LightGray

                    txt_Order_Date.Enabled = False
                    txt_Order_Date.BackColor = Color.LightGray

                    txt_DelvAdd1.Enabled = False
                    txt_DelvAdd1.BackColor = Color.LightGray

                    txt_DelvAdd2.Enabled = False
                    txt_DelvAdd2.BackColor = Color.LightGray

                    'msk_date.Enabled = False
                    'msk_date.BackColor = Color.LightGray

                    txt_LrNo.Enabled = False
                    txt_LrNo.BackColor = Color.LightGray

                    cbo_Grid_ClothName.Enabled = False
                    cbo_Grid_ClothName.BackColor = Color.LightGray

                    cbo_Grid_Clothtype.Enabled = False
                    cbo_Grid_Clothtype.BackColor = Color.LightGray

                End If
            End If
            Grid_Cell_DeSelect()
            dgv_ActCtrlName = ""

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT MOVE RECORDS...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally

            dt1.Dispose()
            da1.Dispose()

            dt2.Dispose()
            da2.Dispose()

            If msk_date.Visible And msk_date.Enabled Then msk_date.Focus()

        End Try

        NoCalc_Status = False

    End Sub

    Public Sub delete_record() Implements Interface_MDIActions.delete_record
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim cmd As New SqlClient.SqlCommand
        Dim trans As SqlClient.SqlTransaction
        Dim NewCode As String = ""
        Dim vOrdByNo As String = ""
        Dim K As Integer = 0
        Dim vPackSlp_Code_FldNm As String = ""
        Dim vPackSlp_Inc_FldNm As String = ""
        Dim Nr As Long


        vOrdByNo = Common_Procedures.OrderBy_CodeToValue(lbl_DcNo.Text)

        ' If Val(Common_Procedures.User.IdNo) <> 1 And InStr(Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, "~L~") = 0 And InStr(Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, "~D~") = 0 Then MessageBox.Show("You have No Rights to Delete", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error) : Exit Sub
        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.DeletingEntry, Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, New_Entry, Me, con, "ClothSales_Delivery_Head", "ClothSales_Delivery_Code", NewCode, "ClothSales_Delivery_Date", "(ClothSales_Delivery_Code = '" & Trim(NewCode) & "')") = False Then Exit Sub



        If Common_Procedures.settings.Vefified_Status = 1 Then
            NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

            If Val(Common_Procedures.get_FieldValue(con, "ClothSales_Delivery_Head", "Verified_Status", "(ClothSales_Delivery_Code = '" & Trim(NewCode) & "')")) = 1 Then
                MessageBox.Show("Entry Already Verified", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub
            End If
        End If


        If Val(lbl_Company.Tag) = 0 Then
            MessageBox.Show("Invalid Company Selection", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        If pnl_Back.Enabled = False Then
            MessageBox.Show("Close Other Windows", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        If MessageBox.Show("Do you want to Delete?", "FOR DELETION...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) <> Windows.Forms.DialogResult.Yes Then
            Exit Sub
        End If

        If New_Entry = True Then
            MessageBox.Show("This is New Entry", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Da = New SqlClient.SqlDataAdapter("select sum(Invoice_Meters) from ClothSales_Delivery_Details Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
        Dt1 = New DataTable
        Da.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                If Val(Dt1.Rows(0)(0).ToString) > 0 Then
                    MessageBox.Show("Already some pieces invoiced for this dc", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    Exit Sub
                End If
            End If
        End If

        Da = New SqlClient.SqlDataAdapter("select sum(Return_Meters) from ClothSales_Delivery_Details Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
        Dt1 = New DataTable
        Da.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                If Val(Dt1.Rows(0)(0).ToString) > 0 Then
                    MessageBox.Show("Already some pieces Returned for this dc", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    Exit Sub
                End If
            End If
        End If
        Dt1.Clear()

        trans = con.BeginTransaction
        Call Common_Procedures.User_Modification_Updation(con, "HEAD", Me.Name, "DELETE", "ClothSales_Delivery_head", "ClothSales_Delivery_Code", Val(lbl_Company.Tag), NewCode, lbl_DcNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, True, "", "", "ClothSales_Delivery_Code, Company_IdNo, for_OrderBy", trans)

        Call Common_Procedures.User_Modification_Updation(con, "DETAILS", Me.Name, "DELETE", "ClothSales_Delivery_Details", "ClothSales_Delivery_Code", Val(lbl_Company.Tag), NewCode, lbl_DcNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, True, " Cloth_IdNo,ClothType_IdNo,Fold_Perc,Bales,Bales_Nos,Pcs,Meters,ClothSales_Order_code,ClothSales_Order_SlNo,ClothSales_Delivery_SlNo,PackingSlip_Codes,Rate", "Sl_No", "ClothSales_Delivery_Code, For_OrderBy, Company_IdNo, ClothSales_Delivery_No, ClothSales_Delivery_Date, Ledger_Idno", trans)

        Try

            NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

            cmd.Connection = con
            cmd.Transaction = trans

            cmd.CommandText = "Update ClothSales_Invoice_Head set Delivery_Against_Invoice_Code = ''  Where Delivery_Against_Invoice_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
            nr = cmd.ExecuteNonQuery()

            cmd.CommandText = "Update ClothSales_order_Details set Delivery_Meters = a.Delivery_Meters - b.Meters from ClothSales_order_Details a, ClothSales_Delivery_Details b Where b.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.ClothSales_Order_code = b.ClothSales_Order_code and a.ClothSales_Order_SlNo = b.ClothSales_Order_SlNo"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "Update Packing_Slip_Head set Delivery_Code = '', Delivery_No = '', Delivery_DetailsSlNo = 0, Delivery_Increment = Delivery_Increment - 1, Delivery_Date = Null Where Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()
            For k = 1 To 5
                vPackSlp_Code_FldNm = "PackingSlip_Code_Type" & Trim(Val(k))
                vPackSlp_Inc_FldNm = "PackingSlip_Inc_Type" & Trim(Val(k))

                cmd.CommandText = "Update Weaver_ClothReceipt_Piece_Details set " & vPackSlp_Code_FldNm & " = '',  " & vPackSlp_Inc_FldNm & "  = " & vPackSlp_Inc_FldNm & " - 1 Where  " & vPackSlp_Code_FldNm & " = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()

            Next K

            cmd.CommandText = "Delete from Stock_Cloth_Processing_Details Where Reference_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "delete from ClothSales_Delivery_Details where company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "delete from ClothSales_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            trans.Commit()

            new_record()

            MessageBox.Show("Deleted Successfully!!!", "FOR DELETION...", MessageBoxButtons.OKCancel, MessageBoxIcon.Information)

        Catch ex As Exception
            trans.Rollback()
            MessageBox.Show(ex.Message, "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally

            Dt1.Dispose()
            Da.Dispose()
            trans.Dispose()
            cmd.Dispose()

            If msk_date.Enabled = True And msk_date.Visible = True Then msk_date.Focus()

        End Try

    End Sub

    Public Sub filter_record() Implements Interface_MDIActions.filter_record

        If Filter_Status = False Then

            Dim da As New SqlClient.SqlDataAdapter
            Dim dt1 As New DataTable
            Dim dt2 As New DataTable

            da = New SqlClient.SqlDataAdapter("select Ledger_DisplayName from Ledger_AlaisHead order by Ledger_DisplayName", con)
            da.Fill(dt1)
            cbo_Filter_PartyName.DataSource = dt1
            cbo_Filter_PartyName.DisplayMember = "Ledger_DisplayName"


            da = New SqlClient.SqlDataAdapter("select Cloth_Name from Cloth_Head order by Cloth_Name", con)
            da.Fill(dt2)
            cbo_Filter_ClothName.DataSource = dt2
            cbo_Filter_ClothName.DisplayMember = "Cloth_Name"

            dtp_Filter_Fromdate.Text = Common_Procedures.Company_FromDate
            dtp_Filter_ToDate.Text = Common_Procedures.Company_ToDate
            cbo_Filter_PartyName.Text = ""
            cbo_Filter_PartyName.SelectedIndex = -1
            cbo_Filter_ClothName.Text = ""
            cbo_Filter_ClothName.SelectedIndex = -1
            dgv_Filter_Details.Rows.Clear()

        End If

        pnl_Filter.Visible = True
        pnl_Filter.Enabled = True
        pnl_Back.Enabled = False
        If Filter_Status = True Then
            If dgv_Filter_Details.Rows.Count > 0 And Filter_RowNo >= 0 Then
                dgv_Filter_Details.Focus()
                dgv_Filter_Details.CurrentCell = dgv_Filter_Details.Rows(Filter_RowNo).Cells(0)
                dgv_Filter_Details.CurrentCell.Selected = True
            Else
                If dtp_Filter_Fromdate.Enabled And dtp_Filter_Fromdate.Visible Then dtp_Filter_Fromdate.Focus()

            End If

        Else
            If dtp_Filter_Fromdate.Enabled And dtp_Filter_Fromdate.Visible Then dtp_Filter_Fromdate.Focus()

        End If
    End Sub

    Public Sub movefirst_record() Implements Interface_MDIActions.movefirst_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String

        Try

            da = New SqlClient.SqlDataAdapter("select top 1 ClothSales_Delivery_No from ClothSales_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code like '%/" & Trim(EntFnYrCode) & "' Order by for_Orderby, ClothSales_Delivery_No", con)
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = Trim(dt.Rows(0)(0).ToString)
                End If
            End If

            dt.Clear()

            If Trim(movno) <> "0" And Trim(movno) <> "" Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub movenext_record() Implements Interface_MDIActions.movenext_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String = ""
        Dim OrdByNo As Single = 0

        Try

            OrdByNo = Common_Procedures.OrderBy_CodeToValue(Trim(lbl_DcNo.Text))

            da = New SqlClient.SqlDataAdapter("select top 1 ClothSales_Delivery_No from ClothSales_Delivery_Head where for_orderby > " & Str(Val(OrdByNo)) & " and company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code like '%/" & Trim(EntFnYrCode) & "' Order by for_Orderby, ClothSales_Delivery_No", con)
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = dt.Rows(0)(0).ToString
                End If
            End If

            If Val(movno) <> 0 Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub moveprevious_record() Implements Interface_MDIActions.moveprevious_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String = ""
        Dim OrdByNo As Single = 0

        Try

            OrdByNo = Common_Procedures.OrderBy_CodeToValue(Trim(lbl_DcNo.Text))

            da = New SqlClient.SqlDataAdapter("select top 1 ClothSales_Delivery_No from ClothSales_Delivery_Head where for_orderby < " & Str(Val(OrdByNo)) & " and company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code like '%/" & Trim(EntFnYrCode) & "' Order by for_Orderby desc, ClothSales_Delivery_No desc", con)
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = dt.Rows(0)(0).ToString
                End If
            End If

            If Val(movno) <> 0 Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub movelast_record() Implements Interface_MDIActions.movelast_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String = ""

        Try
            da = New SqlClient.SqlDataAdapter("select top 1 ClothSales_Delivery_No from ClothSales_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code like '%/" & Trim(EntFnYrCode) & "' Order by for_Orderby desc, ClothSales_Delivery_No desc", con)
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = dt.Rows(0)(0).ToString
                End If
            End If

            If Val(movno) <> 0 Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub new_record() Implements Interface_MDIActions.new_record
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable

        Try
            clear()

            New_Entry = True


            If Common_Procedures.settings.Delivery_ContinousNo_Status = 1 Then
                lbl_DcNo.Text = Common_Procedures.get_Cloth_JobWork_Delivery_MaxCode(con, Val(lbl_Company.Tag), EntFnYrCode)
            Else
                lbl_DcNo.Text = Common_Procedures.get_MaxCode(con, "ClothSales_Delivery_Head", "ClothSales_Delivery_Code", "For_OrderBy", "", Val(lbl_Company.Tag), EntFnYrCode)
            End If

            lbl_DcNo.ForeColor = Color.Red



            msk_date.Text = Date.Today.ToShortDateString
            Da = New SqlClient.SqlDataAdapter("select top 1 * from ClothSales_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code like '%/" & Trim(EntFnYrCode) & "' Order by for_Orderby desc, ClothSales_Delivery_No desc", con)
            Dt1 = New DataTable
            Da.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If Val(Common_Procedures.settings.PreviousEntryDate_ByDefault) = 1 Then '---- M.S Textiles (Tirupur)
                    If Dt1.Rows(0).Item("ClothSales_Delivery_Date").ToString <> "" Then msk_date.Text = Dt1.Rows(0).Item("ClothSales_Delivery_Date").ToString
                End If
            End If
            Dt1.Clear()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR NEW RECORD...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally

            Dt1.Dispose()
            Da.Dispose()

            If msk_date.Enabled And msk_date.Visible Then
                msk_date.Focus()
                msk_date.SelectionStart = 0
            End If

        End Try

    End Sub

    Public Sub open_record() Implements Interface_MDIActions.open_record
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim movno As String, inpno As String
        Dim InvCode As String
        Dim vCSMovNo As String
        Dim vCSInvCode As String = ""
        Dim vYSInvCode As String = ""
        Dim vYSMovNo As String = ""

        Try

            inpno = InputBox("Enter Dc No.", "FOR FINDING...")

            InvCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(EntFnYrCode)

            Da = New SqlClient.SqlDataAdapter("select ClothSales_Delivery_No from ClothSales_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(InvCode) & "'", con)
            Da.Fill(Dt)

            movno = ""
            If Dt.Rows.Count > 0 Then
                If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                    movno = Trim(Dt.Rows(0)(0).ToString)
                End If
            End If

            Dt.Clear()
            vCSMovNo = ""
            If Common_Procedures.settings.Delivery_ContinousNo_Status = 1 Then

                vCSInvCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(Common_Procedures.FnYearCode)

                Da = New SqlClient.SqlDataAdapter("select JobWork_Piece_Delivery_No from JobWork_Piece_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and JobWork_Piece_Delivery_Code = '" & Trim(vCSInvCode) & "'  ", con)
                Dt = New DataTable
                Da.Fill(Dt)

                vCSMovNo = ""
                If Dt.Rows.Count > 0 Then
                    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                        vCSMovNo = Trim(Dt.Rows(0)(0).ToString)
                    End If
                End If

                Dt.Clear()

            End If

            If Trim(movno) <> "0" And Trim(movno) <> "" Then
                move_record(movno)

            ElseIf Val(vCSMovNo) <> 0 Then
                MessageBox.Show("This DC No. is in Jobwork DC", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            Else
                MessageBox.Show("Invoice No. does not exists", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End If
            'If Val(movno) <> 0 Then
            '    move_record(movno)

            'Else
            '    MessageBox.Show("Inv No. does not exists", "DOES NOT FIND...", MessageBoxButtons.OK, MessageBoxIcon.Error)

            'End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT FIND...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            Dt.Dispose()
            Da.Dispose()

        End Try

    End Sub

    Public Sub insert_record() Implements Interface_MDIActions.insert_record
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim movno As String, inpno As String
        Dim InvCode As String
        Dim vCSMovNo As String
        Dim vCSInvCode As String = ""
        Dim vYSInvCode As String = ""
        Dim vYSMovNo As String = ""

        '  If Val(Common_Procedures.User.IdNo) <> 1 And InStr(Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, "~L~") = 0 And InStr(Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, "~I~") = 0 Then MessageBox.Show("You have No Rights to DELETE", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error) : Exit Sub

        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.InsertingEntry, Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, New_Entry, Me) = False Then Exit Sub

        Try

            inpno = InputBox("Enter New Dc No.", "FOR NEW Dc NO. INSERTION...")


            If Val(inpno) = 0 Then
                MessageBox.Show("Invalid DC No.", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

                Exit Sub
            End If



            InvCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(EntFnYrCode)

            Da = New SqlClient.SqlDataAdapter("select ClothSales_Delivery_No from ClothSales_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(InvCode) & "'", con)
            Da.Fill(Dt)

            movno = ""
            If Dt.Rows.Count > 0 Then
                If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                    movno = Trim(Dt.Rows(0)(0).ToString)
                End If
            End If

            Dt.Clear()
            vCSMovNo = ""
            If Common_Procedures.settings.Delivery_ContinousNo_Status = 1 Then

                vCSInvCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(Common_Procedures.FnYearCode)

                Da = New SqlClient.SqlDataAdapter("select JobWork_Piece_Delivery_No from JobWork_Piece_Delivery_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and JobWork_Piece_Delivery_Code = '" & Trim(vCSInvCode) & "'  ", con)
                Dt = New DataTable
                Da.Fill(Dt)

                vCSMovNo = ""
                If Dt.Rows.Count > 0 Then
                    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                        vCSMovNo = Trim(Dt.Rows(0)(0).ToString)
                    End If
                End If

                Dt.Clear()

            End If

            If Trim(movno) <> "0" And Trim(movno) <> "" Then
                move_record(movno)

            ElseIf Val(vCSMovNo) <> 0 Then
                MessageBox.Show("This DC No. is in Jobwork DC", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            Else
                new_record()
                Insert_Entry = True
                lbl_DcNo.Text = Trim(UCase(inpno))
            End If
            'If Val(movno) <> 0 Then
            '    move_record(movno)

            'Else
            '    MessageBox.Show("Inv No. does not exists", "DOES NOT FIND...", MessageBoxButtons.OK, MessageBoxIcon.Error)

            'End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT FIND...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            Dt.Dispose()
            Da.Dispose()

        End Try


    End Sub

    Public Sub save_record() Implements Interface_MDIActions.save_record
        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Dt2 As New DataTable
        Dim tr As SqlClient.SqlTransaction
        Dim vCOMPID As Integer = 0
        Dim NewCode As String = ""
        Dim clth_ID As Integer = 0
        Dim FP_ID As Integer = 0
        Dim clthtyp_ID As Integer = 0
        Dim Trans_ID As Integer
        Dim Led_ID As Integer = 0
        Dim Ag_ID As Integer = 0
        Dim Sno As Integer = 0, Sno2 As Integer = 0, vPcsSno As Integer = 0
        Dim EntID As String = ""
        Dim PBlNo As String = ""
        Dim Partcls As String = ""
        Dim vTotPcs As Single, vTotMtrs As Single, vTotBals As Single, vTotAmt As Single
        Dim Cr_ID As Integer = 0
        Dim Dr_ID As Integer = 0
        Dim Smp_STS As Integer = 0
        Dim Nr As Integer = 0
        Dim OrdCd As String = ""
        Dim OrdSlNo As Long = 0
        Dim vINVCODE As String = ""
        Dim vINVDETSLNO As Long = 0
        Dim DcCd As String = ""
        Dim DcSlNo As Long = 0
        Dim OpYrCode As String = ""
        Dim Usr_ID As Integer = 0
        Dim vGodwn_ID As Integer = 0
        Dim I As Integer, J As Integer
        Dim NoInv_STS As Integer = 0
        Dim vPcsTyp_ID As Integer = 0
        Dim vDel_ID As Integer = 0
        Dim Verified_STS As String = ""
        Dim vOrdByNo As String = ""
        Dim vPcsparty_ID As Integer = 0
        Dim vPcsClo_ID As Integer = 0
        Dim vPackSlp_Code_FldNm As String = ""
        Dim vPackSlp_Inc_FldNm As String = ""
        Dim vPcsMtr_FldNm As String = ""
        Dim vPRINT_CloID As Integer = 0
        Dim vSELC_DCCODE As String
        Dim vERR_BALECODE As String = ""
        Dim vCREATED_DTTM_TXT As String = ""
        Dim vMODIFIED_DTTM_TXT As String = ""

        'Dim IGST_AMOUNT As String = "0"
        'Dim CGST_AMOUNT As String = "0"
        'Dim SGST_AMOUNT As String = "0"
        'Dim NET_AMOUNT As String = "0"



        vOrdByNo = Common_Procedures.OrderBy_CodeToValue(lbl_DcNo.Text)

        vDel_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_DeliveryTo.Text)
        If Common_Procedures.settings.CustomerCode = "1267" Then
            'If vDel_ID = 0 Then
            '    MessageBox.Show("Invalid Delivery At", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            '    If cbo_DeliveryTo.Enabled Then cbo_DeliveryTo.Focus()
            '    Exit Sub
            'End If
        End If

        If Val(lbl_Company.Tag) = 0 Then
            MessageBox.Show("Invalid Company Selection", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        If Val(Common_Procedures.User.IdNo) = 0 Then
            MessageBox.Show("Invalid User Name", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If
        'If Common_Procedures.UserRight_Check(Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, New_Entry) = False Then Exit Sub
        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.SavingEntry, Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, New_Entry, Me, con, "ClothSales_Delivery_Head", "ClothSales_Delivery_Code", NewCode, "ClothSales_Delivery_Date", "(ClothSales_Delivery_Code = '" & Trim(NewCode) & "')", "(Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code LIKE '%/" & Trim(Common_Procedures.FnYearCode) & "')", "for_Orderby desc, ClothSales_Delivery_No desc", dtp_Date.Value.Date) = False Then Exit Sub
        If Common_Procedures.settings.Vefified_Status = 1 Then
            If Not (Val(Common_Procedures.User.IdNo) = 1 Or Common_Procedures.User.Show_Verified_Status = 1) Then
                NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

                If Val(Common_Procedures.get_FieldValue(con, "ClothSales_Delivery_Head", "Verified_Status", "(ClothSales_Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "')")) = 1 Then
                    MessageBox.Show("Entry Already Verified", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    Exit Sub
                End If
            End If
        End If


        If pnl_Back.Enabled = False Then
            MessageBox.Show("Close Other Windows", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        If IsDate(msk_date.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If msk_date.Enabled And msk_date.Visible Then msk_date.Focus()
            Exit Sub
        End If

        If EntFnYrCode = Common_Procedures.FnYearCode Then
            If Not (Convert.ToDateTime(msk_date.Text) >= Common_Procedures.Company_FromDate And Convert.ToDateTime(msk_date.Text) <= Common_Procedures.Company_ToDate) Then
                MessageBox.Show("Date is out of financial range", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If msk_date.Enabled And msk_date.Visible Then msk_date.Focus()
                Exit Sub
            End If

        End If


        If Common_Procedures.settings.CustomerCode = "1267" Then
            'If Trim(cbo_DespTo.Text) = "" Then
            '    MessageBox.Show("Invalid Despatch To", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            '    If cbo_DespTo.Enabled Then cbo_DespTo.Focus()
            '    Exit Sub
            'End If
        End If
        Led_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_PartyName.Text)
        If Led_ID = 0 Then
            MessageBox.Show("Invalid Party Name", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If cbo_PartyName.Enabled Then cbo_PartyName.Focus()
            Exit Sub
        End If




        Ag_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Agent.Text)

        Trans_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Transport.Text)

        vGodwn_ID = Common_Procedures.Ledger_NameToIdNo(con, cbo_Godown.Text)
        If cbo_Godown.Visible = True Then
            If vGodwn_ID = 0 Then
                MessageBox.Show("Invalid Fabric Godown Name", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If cbo_Godown.Enabled And cbo_Godown.Visible Then cbo_Godown.Focus()
                Exit Sub
            End If
        End If
        If vGodwn_ID = 0 Then vGodwn_ID = Common_Procedures.CommonLedger.Godown_Ac

        For I = 0 To dgv_Details.RowCount - 1

            If Val(dgv_Details.Rows(I).Cells(6).Value) <> 0 Or Val(dgv_Details.Rows(I).Cells(7).Value) <> 0 Then

                clth_ID = Common_Procedures.Cloth_NameToIdNo(con, dgv_Details.Rows(I).Cells(1).Value)
                If clth_ID = 0 Then
                    MessageBox.Show("Invalid Cloth Name", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    If dgv_Details.Enabled And dgv_Details.Visible Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(I).Cells(1)
                    End If
                    Exit Sub
                End If

                clthtyp_ID = Common_Procedures.ClothType_NameToIdNo(con, dgv_Details.Rows(I).Cells(2).Value)
                If clthtyp_ID = 0 Then
                    MessageBox.Show("Invalid Cloth Type Name", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    If dgv_Details.Enabled And dgv_Details.Visible Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(I).Cells(2)
                    End If
                    Exit Sub
                End If

                If Val(dgv_Details.Rows(I).Cells(3).Value) = 0 Then
                    dgv_Details.Rows(I).Cells(3).Value = 100
                    'MessageBox.Show("Invalid Folding", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    'If dgv_Details.Enabled And dgv_Details.Visible Then
                    '    dgv_Details.Focus()
                    '    dgv_Details.CurrentCell = dgv_Details.Rows(i).Cells(3)
                    'End If
                    'Exit Sub
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1116" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1446" Then '----Lourdu Matha
                    If Val(dgv_Details.Rows(I).Cells(6).Value) = 0 Then
                        MessageBox.Show("Invalid Pcs", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                        If dgv_Details.Enabled And dgv_Details.Visible Then
                            dgv_Details.Focus()
                            dgv_Details.CurrentCell = dgv_Details.Rows(I).Cells(6)
                        End If
                        Exit Sub
                    End If
                Else
                    If Val(dgv_Details.Rows(I).Cells(7).Value) = 0 Then
                        MessageBox.Show("Invalid metres", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                        If dgv_Details.Enabled And dgv_Details.Visible Then
                            dgv_Details.Focus()
                            dgv_Details.CurrentCell = dgv_Details.Rows(I).Cells(7)
                        End If
                        Exit Sub
                    End If
                End If



                If Trim(Common_Procedures.settings.CustomerCode) = "1267" Then

                    If Trim(cbo_Type.Text) = "DIRECT" Then
                        clthtyp_ID = Common_Procedures.ClothType_NameToIdNo(con, dgv_Details.Rows(I).Cells(2).Value)
                        If clthtyp_ID <> 0 Then
                            If clthtyp_ID = 1 Then
                                MessageBox.Show("Select Correct Entry or Cloth Type!", "DOES NOT SAVE", MessageBoxButtons.OK, MessageBoxIcon.Error)
                                If dgv_Details.Enabled And dgv_Details.Visible Then
                                    dgv_Details.Focus()
                                    dgv_Details.CurrentCell = dgv_Details.Rows(I).Cells(2)
                                End If
                                Exit Sub
                            End If
                        End If
                    End If

                    If Trim(dgv_Details.Rows(I).Cells(12).Value) = "" And Trim(cbo_Type.Text) <> "INVOICE" Then
                        MessageBox.Show("Invalid Bale Selection", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                        If dgv_Details.Enabled And dgv_Details.Visible Then
                            dgv_Details.Focus()
                            dgv_Details.CurrentCell = dgv_Details.Rows(I).Cells(4)
                        End If
                        Exit Sub

                    End If

                End If

                If Val(dgv_Details.Rows(I).Cells(10).Value) = 0 Then
                    MessageBox.Show("Invalid Cloth Delivery Details.SlNo", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    If dgv_Details.Enabled And dgv_Details.Visible Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(I).Cells(7)
                    End If
                    Exit Sub
                End If

            End If

        Next
        Verified_STS = 0
        If chk_Verified_Status.Checked = True Then Verified_STS = 1


        NoCalc_Status = False

        IGST_AMOUNT = 0
        CGST_AMOUNT = 0
        SGST_AMOUNT = 0

        Amount_Calculation()
        'Total_Calculation()

        vTotPcs = 0 : vTotMtrs = 0 : vTotBals = 0 : vTotAmt = 0

        If dgv_Details_Total.RowCount > 0 Then
            vTotBals = Val(dgv_Details_Total.Rows(0).Cells(4).Value())
            vTotPcs = Val(dgv_Details_Total.Rows(0).Cells(6).Value())
            vTotMtrs = Val(dgv_Details_Total.Rows(0).Cells(7).Value())
            vTotAmt = Val(dgv_Details_Total.Rows(0).Cells(8).Value())

        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1116" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1380" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1446" Then '----Lourdu Matha
            If vTotMtrs = 0 Then
                MessageBox.Show("Invalid METERS", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If dgv_Details.Enabled And dgv_Details.Visible And dgv_Details.Rows.Count > 0 Then
                    dgv_Details.Focus()
                    dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(7)
                End If
                Exit Sub
            End If
        End If


        Smp_STS = 0
        If chk_Sample.Checked = True Then Smp_STS = 1
        NoInv_STS = 0
        If chk_No_Invoice.Checked = True Then NoInv_STS = 1

        'If Trim(txt_EWay_Bill_No.Text) <> "" Then
        '    NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)
        '    Da = New SqlClient.SqlDataAdapter("select * from ClothSales_Delivery_Head where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code <> '" & Trim(NewCode) & "' and ClothSales_Delivery_Code LIKE '%/" & Trim(EntFnYrCode) & "' and JJ_FormNo = '" & Trim(txt_EWay_Bill_No.Text) & "'", con)
        '    Dt1 = New DataTable
        '    Da.Fill(Dt1)
        '    If Dt1.Rows.Count > 0 Then
        '        MessageBox.Show("Duplicate JJ Form No", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
        '        If txt_EWay_Bill_No.Enabled And txt_EWay_Bill_No.Visible Then txt_EWay_Bill_No.Focus()
        '        Exit Sub
        '    End If
        '    Dt1.Clear()
        'End If

        cmd.Connection = con



        cmd.CommandText = "Truncate Table TempTable_For_NegativeStock"
        cmd.ExecuteNonQuery()

        tr = con.BeginTransaction

        Try

            If Insert_Entry = True Or New_Entry = False Then
                NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

            Else


                If Common_Procedures.settings.Delivery_ContinousNo_Status = 1 Then
                    lbl_DcNo.Text = Common_Procedures.get_Cloth_JobWork_Delivery_MaxCode(con, Val(lbl_Company.Tag), Common_Procedures.FnYearCode, tr)
                Else
                    lbl_DcNo.Text = Common_Procedures.get_MaxCode(con, "ClothSales_Delivery_Head", "ClothSales_Delivery_Code", "For_OrderBy", "", Val(lbl_Company.Tag), EntFnYrCode, tr)
                End If

                NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

            End If

            vSELC_DCCODE = Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode) & "/" & Trim(Val(lbl_Company.Tag))

            cmd.Connection = con
            cmd.Transaction = tr

            cmd.Parameters.Clear()
            cmd.Parameters.AddWithValue("@DeliveryDate", Convert.ToDateTime(msk_date.Text))
            'cmd.Parameters.AddWithValue("@DeliveryDate", dtp_Date.Value.Date)

            vOrdByNo = Val(Common_Procedures.OrderBy_CodeToValue(lbl_DcNo.Text))


            vCREATED_DTTM_TXT = ""
            vMODIFIED_DTTM_TXT = ""

            vCREATED_DTTM_TXT = Trim(Format(Now, "dd-MM-yyyy hh:mm tt"))
            cmd.Parameters.AddWithValue("@createddatetime", Now)


            vMODIFIED_DTTM_TXT = Trim(Format(Now, "dd-MM-yyyy hh:mm tt"))
            cmd.Parameters.AddWithValue("@modifieddatetime", Now)

            If New_Entry = True Then

                cmd.CommandText = "Insert into ClothSales_Delivery_Head ( ClothSales_Delivery_Code ,               Company_IdNo       ,     ClothSales_Delivery_No   ,         for_OrderBy        , ClothSales_Delivery_Date  ,              Ledger_IdNo,    Order_Type                 ,      Party_OrderNo               ,    Party_OrderDate                 ,        Through_Name             ,     Agent_IdNo          ,    Lr_No                     ,          Lr_Date                ,   Despatch_To                  , Sample_Status             ,  Delivery_Address1               , Delivery_Address2                ,       Transport_IdNo      ,      Freight_Amount                ,        Note                   ,        Total_Bales        ,          Total_Pcs       ,          Total_Meters     ,                              JJ_Form_OrderByNo                           ,               JJ_FormNo           ,                   user_idNo              ,     Packing_Type                    ,               Vechile_No         ,    WareHouse_IdNo      ,         No_Invoice_Status   ,               Despatch_DateandTime           ,       Verified_Status     ,       Deliveryto_idno    , ClothSales_DeliveryCode_forSelection      ,               EwayBill_No           ,         RoundOff_Amount     ,       CGST_Amount         ,       SGST_Amount      ,      IGST_Amount       ,                    Net_Amount           , Total_Taxable_Amount  ,                             created_useridno           ,   created_DateTime,          created_DateTime_Text    , Last_modified_useridno, Last_modified_DateTime, Last_modified_DateTime_Text  ) " &
                " Values                                                 ('" & Trim(NewCode) & "'   , " & Str(Val(lbl_Company.Tag)) & ", '" & Trim(lbl_DcNo.Text) & "', " & Str(Val(vOrdByNo)) & " , @DeliveryDate             , " & Str(Val(Led_ID)) & ", '" & Trim(cbo_Type.Text) & "' , '" & Trim(txt_OrderNo.Text) & "' , '" & Trim(txt_Order_Date.Text) & "', '" & Trim(cbo_Through.Text) & "', " & Str(Val(Ag_ID)) & " , '" & Trim(txt_LrNo.Text) & "', '" & Trim(msk_LrDate.Text) & "' , '" & Trim(cbo_DespTo.Text) & "', " & Str(Val(Smp_STS)) & " , '" & Trim(txt_DelvAdd1.Text) & "', '" & Trim(txt_DelvAdd2.Text) & "', " & Str(Val(Trans_ID)) & ", " & Str(Val(txt_Freight.Text)) & " , '" & Trim(txt_Note.Text) & "' , " & Str(Val(vTotBals)) & ", " & Str(Val(vTotPcs)) & ", " & Str(Val(vTotMtrs)) & "," & Str(Val(Common_Procedures.OrderBy_CodeToValue(txt_EWay_Bill_No.Text))) & ", '" & Trim(txt_EWay_Bill_No.Text) & "' , " & Val(Common_Procedures.User.IdNo) & " , '" & Trim(cbo_RollBundle.Text) & "' , '" & Trim(cbo_Vechile.Text) & "' , " & Val(vGodwn_ID) & " , " & Str(Val(NoInv_STS)) & " , '" & Trim(txt_Despatch_DateAndTime.Text) & "', " & Val(Verified_STS) & " , " & Str(Val(vDel_ID)) & ",     '" & Trim(vSELC_DCCODE) & "' ,'" & Trim(txt_EWay_Bill_No.Text) & "', " & Val(ROUND_OFF_AMOUNT) & "," & Str(Val(CGST_AMOUNT)) & "," & Str(Val(SGST_AMOUNT)) & "," & Str(Val(IGST_AMOUNT)) & "," & Str(Val(NET_AMOUNT)) & " , " & Str(Val(vTotAmt)) & "  ,      " & Str(Val(Common_Procedures.User.IdNo)) & ",  @createddatetime ,  '" & Trim(vCREATED_DTTM_TXT) & "',              0        ,     NUll              ,          ''    ) "
                cmd.ExecuteNonQuery()

            Else

                Call Common_Procedures.User_Modification_Updation(con, "HEAD", Me.Name, "OLD", "ClothSales_Delivery_head", "ClothSales_Delivery_Code", Val(lbl_Company.Tag), NewCode, lbl_DcNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, "", "", "ClothSales_Delivery_Code, Company_IdNo, for_OrderBy", tr)

                Call Common_Procedures.User_Modification_Updation(con, "DETAILS", Me.Name, "OLD", "ClothSales_Delivery_Details", "ClothSales_Delivery_Code", Val(lbl_Company.Tag), NewCode, lbl_DcNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, " Cloth_IdNo,ClothType_IdNo,Fold_Perc,Bales,Bales_Nos,Pcs,Meters,ClothSales_Order_code,ClothSales_Order_SlNo,ClothSales_Delivery_SlNo,PackingSlip_Codes,Rate", "Sl_No", "ClothSales_Delivery_Code, For_OrderBy, Company_IdNo, ClothSales_Delivery_No, ClothSales_Delivery_Date, Ledger_Idno", tr)

                cmd.CommandText = "Update ClothSales_Delivery_Head set ClothSales_Delivery_Date = @DeliveryDate, Ledger_IdNo =  " & Str(Val(Led_ID)) & ", Order_Type = '" & Trim(cbo_Type.Text) & "', Party_OrderNo = '" & Trim(txt_OrderNo.Text) & "', Party_OrderDate = '" & Trim(txt_Order_Date.Text) & "',  Through_Name = '" & Trim(cbo_Through.Text) & "'              ,     Agent_IdNo = " & Str(Val(Ag_ID)) & "    ,   Lr_No    = '" & Trim(txt_LrNo.Text) & "'       ,   Lr_Date    = '" & Trim(msk_LrDate.Text) & "'  ,   Despatch_To = '" & Trim(cbo_DespTo.Text) & "', Sample_Status =   " & Str(Val(Smp_STS)) & " ,     Transport_IdNo = " & Str(Val(Trans_ID)) & "       ,  Delivery_Address1 = '" & Trim(txt_DelvAdd1.Text) & "', Delivery_Address2 = '" & Trim(txt_DelvAdd2.Text) & "'  ,   Freight_Amount =  " & Str(Val(txt_Freight.Text)) & "  ,  Note = '" & Trim(txt_Note.Text) & "' , Total_Bales  = " & Str(Val(vTotBals)) & ", Total_Pcs =  " & Str(Val(vTotPcs)) & ", Total_Meters = " & Str(Val(vTotMtrs)) & ", JJ_Form_OrderByNo = " & Str(Val(Common_Procedures.OrderBy_CodeToValue(txt_EWay_Bill_No.Text))) & ", JJ_FormNo = '" & Trim(txt_EWay_Bill_No.Text) & "',  Packing_Type = '" & Trim(cbo_RollBundle.Text) & "'  ,  Vechile_No = '" & Trim(cbo_Vechile.Text) & "'  , USER_IDNO = " & Val(Common_Procedures.User.IdNo) & " , WareHouse_IdNo = " & Val(vGodwn_ID) & " , No_Invoice_Status = " & Str(Val(NoInv_STS)) & "  , Despatch_DateandTime = '" & Trim(txt_Despatch_DateAndTime.Text) & "',Verified_Status= " & Val(Verified_STS) & " ,DeliveryTo_idno= " & Str(Val(vDel_ID)) & ",EwayBill_No='" & Trim(txt_EWay_Bill_No.Text) & "' ,RoundOff_Amount=" & Val(ROUND_OFF_AMOUNT) & ",CGST_Amount=" & Str(Val(CGST_AMOUNT)) & ",SGST_Amount=" & Str(Val(CGST_AMOUNT)) & ",IGST_Amount=" & Str(Val(IGST_AMOUNT)) & ",Net_Amount=" & Str(Val(NET_AMOUNT)) & ",Total_Taxable_Amount= " & Str(Val(vTotAmt)) & " , Last_modified_useridno = " & Str(Val(Common_Procedures.User.IdNo)) & ", Last_modified_DateTime = @modifieddatetime, Last_modified_DateTime_Text = '" & Trim(vMODIFIED_DTTM_TXT) & "' where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "Update ClothSales_order_Details set Delivery_Meters = a.Delivery_Meters - b.Meters from ClothSales_order_Details a, ClothSales_Delivery_Details b Where b.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.ClothSales_Order_code = b.ClothSales_Order_code and a.ClothSales_Order_SlNo = b.ClothSales_Order_SlNo"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "Update Packing_Slip_Head set Delivery_Code = '', Delivery_No = '', Delivery_DetailsSlNo = 0, Delivery_Increment = Delivery_Increment - 1, Delivery_Date = Null Where Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "Update ClothSales_Invoice_Head set Delivery_Against_Invoice_Code = '' Where Delivery_Against_Invoice_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()

                For k = 1 To 5

                    vPackSlp_Code_FldNm = "PackingSlip_Code_Type" & Trim(Val(k))
                    vPackSlp_Inc_FldNm = "PackingSlip_Inc_Type" & Trim(Val(k))

                    cmd.CommandText = "Update Weaver_ClothReceipt_Piece_Details set " & vPackSlp_Code_FldNm & " = '',  " & vPackSlp_Inc_FldNm & "  = " & vPackSlp_Inc_FldNm & " - 1 Where  " & vPackSlp_Code_FldNm & " = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
                    cmd.ExecuteNonQuery()

                Next k

            End If

            Call Common_Procedures.User_Modification_Updation(con, "HEAD", Me.Name, "NEW", "ClothSales_Delivery_head", "ClothSales_Delivery_Code", Val(lbl_Company.Tag), NewCode, lbl_DcNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, "", "", "ClothSales_Delivery_Code, Company_IdNo, for_OrderBy", tr)


            EntID = Trim(Pk_Condition) & Trim(lbl_DcNo.Text)
            PBlNo = Trim(lbl_DcNo.Text)
            Partcls = "ClothSales : Dc.No. " & Trim(lbl_DcNo.Text)

            cmd.CommandText = "Delete from ClothSales_Delivery_Details Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and Invoice_Meters = 0"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "Delete from ClothSales_Delivery_Piece_Details Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "Delete from Stock_Cloth_Processing_Details Where Reference_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            With dgv_Details

                Sno = 0
                vPcsSno = 0
                For I = 0 To .RowCount - 1

                    If Val(.Rows(I).Cells(6).Value) <> 0 Or Val(.Rows(I).Cells(7).Value) <> 0 Then

                        Sno = Sno + 1

                        clth_ID = Common_Procedures.Cloth_NameToIdNo(con, .Rows(I).Cells(1).Value, tr)
                        vPRINT_CloID = Common_Procedures.Cloth_NameToIdNo(con, .Rows(I).Cells(15).Value, tr)
                        If vPRINT_CloID = 0 Then
                            vPRINT_CloID = clth_ID
                        End If


                        clthtyp_ID = Common_Procedures.ClothType_NameToIdNo(con, .Rows(I).Cells(2).Value, tr)

                        OrdCd = ""
                        OrdSlNo = 0
                        vINVCODE = ""
                        vINVDETSLNO = 0
                        If Trim(UCase(cbo_Type.Text)) = "ORDER" Then
                            OrdCd = Trim(.Rows(I).Cells(8).Value)
                            OrdSlNo = Val(.Rows(I).Cells(9).Value)
                        ElseIf Trim(UCase(cbo_Type.Text)) = "INVOICE" Then
                            vINVCODE = Trim(.Rows(I).Cells(16).Value)
                            vINVDETSLNO = Val(.Rows(I).Cells(17).Value)
                        End If


                        Nr = 0
                        cmd.CommandText = "Update ClothSales_Delivery_Details set ClothSales_Delivery_Date = @DeliveryDate , Ledger_IdNo = " & Str(Val(Led_ID)) & ", Sl_No  = " & Str(Val(Sno)) & " , Cloth_IdNo = " & Str(Val(clth_ID)) & " , ClothIdNo_ToPrint = " & Str(Val(vPRINT_CloID)) & " , ClothType_IdNo = " & Str(Val(clthtyp_ID)) & " , Fold_Perc =  " & Str(Val(.Rows(I).Cells(3).Value)) & ", Bales = " & Str(Val(.Rows(I).Cells(4).Value)) & " ,   Bales_Nos = '" & Trim(.Rows(I).Cells(5).Value) & "',      Pcs   = " & Str(Val(.Rows(I).Cells(6).Value)) & ",  Meters = " & Str(Val(.Rows(I).Cells(7).Value)) & ", ClothSales_Order_code = '" & Trim(OrdCd) & "',    ClothSales_Order_SlNo  = " & Str(Val(OrdSlNo)) & ", PackingSlip_Codes = '" & Trim(.Rows(I).Cells(12).Value) & "', Rate = " & Str(Val(.Rows(I).Cells(13).Value)) & ", Piece_Selection_LotCodes_PcsNos = '" & Trim(.Rows(I).Cells(14).Value) & "' , ClothSales_Invoice_Code = '" & Trim(vINVCODE) & "',   ClothSales_Invoice_SlNo  = " & Str(Val(vINVDETSLNO)) & " ,amount =" & Str(Val(.Rows(I).Cells(18).Value)) & ",hsn_code='" & Trim(.Rows(I).Cells(19).Value) & "',Tax_Perc=" & Str(Val(.Rows(I).Cells(20).Value)) & " where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and ClothSales_Delivery_SlNo = " & Str(Val(.Rows(I).Cells(10).Value))
                        Nr = cmd.ExecuteNonQuery()

                        If Nr = 0 Then

                            cmd.CommandText = "Insert into ClothSales_Delivery_Details ( ClothSales_Delivery_Code ,               Company_IdNo       ,   ClothSales_Delivery_No    ,           for_OrderBy      , ClothSales_Delivery_Date       ,            Ledger_IdNo        ,         Sl_No       ,          Cloth_IdNo          ,      ClothIdNo_ToPrint         ,      ClothType_IdNo         ,                   Fold_Perc              ,                 Bales                    ,                   Bales_Nos           ,                       Pcs                 ,                      Meters              ,  ClothSales_Order_code ,   ClothSales_Order_SlNo  ,              ClothSales_Delivery_SlNo     ,              PackingSlip_Codes         ,                    Rate                     ,       Piece_Selection_LotCodes_PcsNos    , ClothSales_Invoice_Code ,     ClothSales_Invoice_SlNo    ,                      Amount                ,           Hsn_Code                    ,                   Tax_Perc ) " &
                                                "     Values                        (   '" & Trim(NewCode) & "'   , " & Str(Val(lbl_Company.Tag)) & ", '" & Trim(lbl_DcNo.Text) & "', " & Str(Val(vOrdByNo)) & ",       @DeliveryDate            ,      " & Str(Val(Led_ID)) & " , " & Str(Val(Sno)) & ", " & Str(Val(clth_ID)) & "   , " & Str(Val(vPRINT_CloID)) & " , " & Str(Val(clthtyp_ID)) & ", " & Str(Val(.Rows(I).Cells(3).Value)) & ", " & Str(Val(.Rows(I).Cells(4).Value)) & ",'" & Trim(.Rows(I).Cells(5).Value) & "',  " & Str(Val(.Rows(I).Cells(6).Value)) & ", " & Str(Val(.Rows(I).Cells(7).Value)) & ", '" & Trim(OrdCd) & "'  , " & Str(Val(OrdSlNo)) & ", " & Str(Val(.Rows(I).Cells(10).Value)) & ", '" & Trim(.Rows(I).Cells(12).Value) & "', " & Str(Val(.Rows(I).Cells(13).Value)) & " , '" & Trim(.Rows(I).Cells(14).Value) & "' , '" & Trim(vINVCODE) & "',  " & Str(Val(vINVDETSLNO)) & " ," & Str(Val(.Rows(I).Cells(18).Value)) & ",'" & Trim(.Rows(I).Cells(19).Value) & "'," & Str(Val(.Rows(I).Cells(20).Value)) & ") "
                            cmd.ExecuteNonQuery()

                        End If

                        If Trim(UCase(cbo_Type.Text)) = "ORDER" Then

                            Nr = 0
                            cmd.CommandText = "Update ClothSales_Order_Details set Delivery_Meters = Delivery_Meters + " & Str(Val(.Rows(I).Cells(7).Value)) & " Where ClothSales_Order_code = '" & Trim(.Rows(I).Cells(8).Value) & "' and ClothSales_Order_SlNo = " & Str(Val(.Rows(I).Cells(9).Value)) & " and ( Ledger_IdNo = " & Str(Val(Led_ID)) & " OR ledger_Idno IN (select sq1.ledger_idno from ledger_head sq1, ledger_head sq2 where sq2.Ledger_Idno = " & Str(Val(Led_ID)) & " and sq1.LedgerGroup_Idno = sq2.LedgerGroup_Idno ) )"
                            Nr = cmd.ExecuteNonQuery()
                            If Nr = 0 Then
                                Throw New ApplicationException("Mismatch of Order and Party Details")
                            End If

                        ElseIf Trim(UCase(cbo_Type.Text)) = "INVOICE" Then
                            Nr = 0
                            cmd.CommandText = "Update ClothSales_Invoice_Head set Delivery_Against_Invoice_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Where ClothSales_Invoice_Code = '" & Trim(.Rows(I).Cells(16).Value) & "'"
                            Nr = cmd.ExecuteNonQuery()
                            If Nr = 0 Then
                                Throw New ApplicationException("Mismatch of Invoice and Party Details")
                            End If

                        End If


                        With dgv_BaleDetails

                            For J = 0 To dgv_BaleDetails.RowCount - 1

                                If Val(dgv_BaleDetails.Rows(J).Cells(3).Value) <> 0 And Trim(dgv_BaleDetails.Rows(J).Cells(5).Value) <> "" Then

                                    If Val(dgv_BaleDetails.Rows(J).Cells(0).Value) = Val(dgv_Details.Rows(I).Cells(10).Value) Then

                                        vERR_BALECODE = Trim(dgv_BaleDetails.Rows(J).Cells(5).Value)

                                        Nr = 0
                                        cmd.CommandText = "Update Packing_Slip_Head set Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "', Delivery_No = '" & Trim(lbl_DcNo.Text) & "', Delivery_DetailsSlNo = " & Str(Val(dgv_BaleDetails.Rows(J).Cells(0).Value)) & ", Delivery_Increment = Delivery_Increment + 1, Delivery_Date = @DeliveryDate Where Packing_Slip_Code = '" & Trim(dgv_BaleDetails.Rows(J).Cells(5).Value) & "' and Delivery_Code = ''"
                                        Nr = cmd.ExecuteNonQuery()
                                        If Nr <> 1 Then
                                            Throw New ApplicationException("Invalid PackingSlip Updation for BaleNo : " & Trim(dgv_BaleDetails.Rows(J).Cells(5).Value) & " in Sl.No : " & Trim(Val(dgv_Details.Rows(I).Cells(0).Value)))
                                        End If

                                    End If

                                End If

                            Next J

                        End With

                        With dgv_PieceDetails

                            For k = 0 To dgv_PieceDetails.RowCount - 1

                                If Val(dgv_PieceDetails.Rows(k).Cells(0).Value) <> 0 And Trim(dgv_PieceDetails.Rows(k).Cells(2).Value) <> "" And Val(dgv_PieceDetails.Rows(k).Cells(4).Value) <> 0 And Trim(dgv_PieceDetails.Rows(k).Cells(8).Value) <> "" Then

                                    If Val(dgv_PieceDetails.Rows(k).Cells(0).Value) = Val(dgv_Details.Rows(I).Cells(10).Value) Then

                                        vPcsSno = vPcsSno + 1

                                        vPcsTyp_ID = Common_Procedures.ClothType_NameToIdNo(con, dgv_PieceDetails.Rows(k).Cells(3).Value, tr)
                                        vPcsparty_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, dgv_PieceDetails.Rows(k).Cells(7).Value, tr)
                                        vPcsClo_ID = Common_Procedures.Cloth_NameToIdNo(con, dgv_PieceDetails.Rows(k).Cells(9).Value, tr)

                                        cmd.CommandText = "Insert into ClothSales_Delivery_Piece_Details ( ClothSales_Delivery_Code    ,               Company_IdNo       ,   ClothSales_Delivery_No    ,           for_OrderBy      , ClothSales_Delivery_Date       ,            Ledger_IdNo        ,         Cloth_IdNo          ,      ClothType_IdNo         ,                                 Fold_Perc           ,                           Clothsale_Delivery_Slno        ,                Sl_No      ,                                    Lot_No              ,                                     Piece_No            ,            PieceType_IdNo     ,                                     Meters              ,                                      Weight              ,                                      Weight_Meter        ,            PieceParty_IdNo    ,                                    Lot_Code            ,         PieceCloth_IdNo      ,                                    Loom_No              ,                                    Bale_No               ) " &
                                                            "     Values                                 (   '" & Trim(NewCode) & "'   , " & Str(Val(lbl_Company.Tag)) & ", '" & Trim(lbl_DcNo.Text) & "', " & Str(Val(vOrdByNo)) & ",       @DeliveryDate            ,      " & Str(Val(Led_ID)) & " , " & Str(Val(clth_ID)) & "   , " & Str(Val(clthtyp_ID)) & ", " & Str(Val(dgv_Details.Rows(I).Cells(3).Value)) & ", " & Str(Val(dgv_PieceDetails.Rows(k).Cells(0).Value)) & ",  " & Str(Val(vPcsSno)) & ", '" & Trim(dgv_PieceDetails.Rows(k).Cells(1).Value) & "',  '" & Trim(dgv_PieceDetails.Rows(k).Cells(2).Value) & "',  " & Str(Val(vPcsTyp_ID)) & ", " & Str(Val(dgv_PieceDetails.Rows(k).Cells(4).Value)) & ", " & Str(Val(dgv_PieceDetails.Rows(k).Cells(5).Value)) & ", " & Str(Val(dgv_PieceDetails.Rows(k).Cells(6).Value)) & ", " & Str(Val(vPcsparty_ID)) & ", '" & Trim(dgv_PieceDetails.Rows(k).Cells(8).Value) & "', " & Str(Val(vPcsClo_ID)) & " , '" & Trim(dgv_PieceDetails.Rows(k).Cells(10).Value) & "', '" & Trim(dgv_PieceDetails.Rows(k).Cells(11).Value) & "' ) "
                                        cmd.ExecuteNonQuery()


                                        vPackSlp_Code_FldNm = "PackingSlip_Code_Type" & Trim(Val(vPcsTyp_ID))
                                        vPackSlp_Inc_FldNm = "PackingSlip_Inc_Type" & Trim(Val(vPcsTyp_ID))
                                        vPcsMtr_FldNm = "Type" & Trim(Val(vPcsTyp_ID)) & "_Meters"

                                        Nr = 0
                                        cmd.CommandText = "update Weaver_ClothReceipt_Piece_Details set " & vPackSlp_Code_FldNm & " = '" & Trim(Pk_Condition) & Trim(NewCode) & "',  " & vPackSlp_Inc_FldNm & "  = " & vPackSlp_Inc_FldNm & " + 1 Where lot_code = '" & Trim(dgv_PieceDetails.Rows(k).Cells(8).Value) & "' and Piece_No = '" & Trim(dgv_PieceDetails.Rows(k).Cells(2).Value) & "' and " & vPcsMtr_FldNm & " <> 0 "
                                        Nr = cmd.ExecuteNonQuery()

                                        If Nr <> 1 Then
                                            Throw New ApplicationException("Invalid Pcs Details  -  LotNo. " & Trim(dgv_PieceDetails.Rows(k).Cells(8).Value) & " , Piece No = " & Trim(dgv_PieceDetails.Rows(k).Cells(2).Value))
                                            Exit Sub
                                        End If

                                    End If

                                End If

                            Next k

                        End With

                    End If

                Next I

                Call Common_Procedures.User_Modification_Updation(con, "DETAILS", Me.Name, "NEW", "ClothSales_Delivery_Details", "ClothSales_Delivery_Code", Val(lbl_Company.Tag), NewCode, lbl_DcNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, " Cloth_IdNo,ClothType_IdNo,Fold_Perc,Bales,Bales_Nos,Pcs,Meters,ClothSales_Order_code,ClothSales_Order_SlNo,ClothSales_Delivery_SlNo,PackingSlip_Codes,Rate", "Sl_No", "ClothSales_Delivery_Code, For_OrderBy, Company_IdNo, ClothSales_Delivery_No, ClothSales_Delivery_Date, Ledger_Idno", tr)


            End With


            '-------STOCK POSTING


            OpYrCode = Microsoft.VisualBasic.Left(Trim(Common_Procedures.FnRange), 4)
            OpYrCode = Trim(Mid(Val(OpYrCode) - 1, 3, 2)) & "-" & Trim(Microsoft.VisualBasic.Right(OpYrCode, 2))


            cmd.CommandText = "Truncate Table " & Trim(Common_Procedures.EntryTempSubTable) & ""
            cmd.ExecuteNonQuery()

            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempSubTable) & "(Int5, Name1, Int1, Int2, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5) select a.company_idno, a.ClothSales_Delivery_Code, a.ClothSales_Delivery_SlNo, a.Cloth_IdNo, a.Fold_Perc, (CASE WHEN a.ClothType_IdNo = 1 THEN a.Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 2 THEN a.Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 3 THEN a.Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 4 THEN a.Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 5 THEN a.Meters ELSE 0 END) from ClothSales_Delivery_Details a where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
            Nr = cmd.ExecuteNonQuery()

            '---Bale Selected in Delivery
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempSubTable) & "(Int5, Name1, Int1, Int2, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5) select tC.company_idno, tC.ClothSales_Delivery_Code, tC.ClothSales_Delivery_SlNo, tC.Cloth_IdNo, tC.Fold_Perc, -1*(CASE WHEN tC.ClothType_IdNo = 1 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 2 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 3 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 4 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 5 THEN a.Total_Meters ELSE 0 END) from Packing_Slip_Head a, ClothSales_Delivery_Details tC where tC.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.Packing_Slip_Code LIKE '%/" & Trim(OpYrCode) & "' and a.Delivery_Code = '" & Trim(Pk_Condition) & "' + tC.ClothSales_Delivery_Code and a.Delivery_DetailsSlNo = tC.ClothSales_Delivery_SlNo"
            Nr = cmd.ExecuteNonQuery()
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempSubTable) & "(Int5, Name1, Int1, Int2, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5) select tC.company_idno, tC.ClothSales_Delivery_Code, tC.ClothSales_Delivery_SlNo, tC.Cloth_IdNo, tC.Fold_Perc, -1*(CASE WHEN tC.ClothType_IdNo = 1 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 2 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 3 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 4 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tC.ClothType_IdNo = 5 THEN b.Meters ELSE 0 END) from Packing_Slip_Head a, Packing_Slip_Details b, ClothSales_Delivery_Details tC where tC.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.Packing_Slip_Code NOT LIKE '%/" & Trim(OpYrCode) & "' and a.Company_IdNo = b.Company_IdNo and a.Packing_Slip_Code = b.Packing_Slip_Code and a.Delivery_Code = '" & Trim(Pk_Condition) & "' + tC.ClothSales_Delivery_Code and a.Delivery_DetailsSlNo = tC.ClothSales_Delivery_SlNo"
            Nr = cmd.ExecuteNonQuery()
            '---Bale Selected in Invoice
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempSubTable) & "(Int5, Name1, Int1, Int2, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5) select tCSDD.company_idno, tCSDD.ClothSales_Delivery_Code, tCSDD.ClothSales_Delivery_SlNo, tCSDD.Cloth_IdNo, tCSDD.Fold_Perc, -1*(CASE WHEN tCSDD.ClothType_IdNo = 1 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 2 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 3 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 4 THEN a.Total_Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 5 THEN a.Total_Meters ELSE 0 END) from Packing_Slip_Head a, ClothSales_Delivery_Details tCSDD, ClothSales_Invoice_Details tCSID  where tCSDD.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.Packing_Slip_Code LIKE '%/" & Trim(OpYrCode) & "' and a.Delivery_Code = tCSID.ClothSales_Invoice_Code and tCSDD.ClothSales_Invoice_Code = tCSID.ClothSales_Invoice_Code and tCSDD.ClothSales_Invoice_SlNo = tCSID.ClothSales_Invoice_SlNo"
            Nr = cmd.ExecuteNonQuery()
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempSubTable) & "(Int5, Name1, Int1, Int2, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5) select tCSDD.company_idno, tCSDD.ClothSales_Delivery_Code, tCSDD.ClothSales_Delivery_SlNo, tCSDD.Cloth_IdNo, tCSDD.Fold_Perc, -1*(CASE WHEN tCSDD.ClothType_IdNo = 1 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 2 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 3 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 4 THEN b.Meters ELSE 0 END), -1*(CASE WHEN tCSDD.ClothType_IdNo = 5 THEN b.Meters ELSE 0 END) from Packing_Slip_Head a, Packing_Slip_Details b, ClothSales_Delivery_Details tCSDD, ClothSales_Invoice_Details tCSID where tCSDD.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.Packing_Slip_Code NOT LIKE '%/" & Trim(OpYrCode) & "' and a.Company_IdNo = b.Company_IdNo and a.Packing_Slip_Code = b.Packing_Slip_Code and a.Delivery_Code = tCSID.ClothSales_Invoice_Code and tCSDD.ClothSales_Invoice_Code = tCSID.ClothSales_Invoice_Code and tCSDD.ClothSales_Invoice_SlNo = tCSID.ClothSales_Invoice_SlNo"
            Nr = cmd.ExecuteNonQuery()


            cmd.CommandText = "Truncate Table " & Trim(Common_Procedures.EntryTempTable) & ""
            Nr = cmd.ExecuteNonQuery()

            '---direct Meters (ie : not Selected in Delivery & invoice )
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Int5, Int1, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5, Currency1, Currency2, Currency3, Currency4, Currency5) select Int5, Int2, Weight1, sum(Meters1), sum(Meters2), sum(Meters3), sum(Meters4), sum(Meters5) , 0, 0, 0, 0, 0 from " & Trim(Common_Procedures.EntryTempSubTable) & " group by Int5, Int2, Weight1 "
            Nr = cmd.ExecuteNonQuery()

            '---Bale Selected in Delivery
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Int5, Int1, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5, Currency1, Currency2, Currency3, Currency4, Currency5) select a.company_idno, a.Cloth_IdNo, a.Folding, (CASE WHEN a.ClothType_IdNo = 1 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 2 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 3 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 4 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 5 THEN a.Total_Meters ELSE 0 END) , 0, 0, 0, 0, 0 from Packing_Slip_Head a where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' and a.Packing_Slip_Code LIKE '%/" & Trim(OpYrCode) & "'"
            Nr = cmd.ExecuteNonQuery()
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Int5, Int1, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5, Currency1, Currency2, Currency3, Currency4, Currency5) select a.company_idno, b.Cloth_IdNo, b.Folding, (CASE WHEN b.ClothType_IdNo = 1 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 2 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 3 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 4 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 5 THEN b.Meters ELSE 0 END) , (CASE WHEN b.ClothType_IdNo = 1 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 2 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 3 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 4 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 5 THEN b.ExcSht_Meters ELSE 0 END)  from Packing_Slip_Head a, Packing_Slip_Details b where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' and a.Packing_Slip_Code NOT LIKE '%/" & Trim(OpYrCode) & "' and a.Company_IdNo = b.Company_IdNo and a.Packing_Slip_Code = b.Packing_Slip_Code"
            Nr = cmd.ExecuteNonQuery()

            '---Bale Selected in Invoice
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Int5, Int1, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5, Currency1, Currency2, Currency3, Currency4, Currency5) select a.company_idno, a.Cloth_IdNo, a.Folding, (CASE WHEN a.ClothType_IdNo = 1 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 2 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 3 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 4 THEN a.Total_Meters ELSE 0 END), (CASE WHEN a.ClothType_IdNo = 5 THEN a.Total_Meters ELSE 0 END) , 0, 0, 0, 0, 0 from Packing_Slip_Head a, ClothSales_Delivery_Details tCSDD, ClothSales_Invoice_Details tCSID Where tCSDD.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.Delivery_Code = tCSID.ClothSales_Invoice_Code and a.Packing_Slip_Code LIKE '%/" & Trim(OpYrCode) & "' and tCSDD.ClothSales_Invoice_Code = tCSID.ClothSales_Invoice_Code and tCSDD.ClothSales_Invoice_SlNo = tCSID.ClothSales_Invoice_SlNo"
            Nr = cmd.ExecuteNonQuery()
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Int5, Int1, Weight1, Meters1, Meters2, Meters3, Meters4, Meters5, Currency1, Currency2, Currency3, Currency4, Currency5) select a.company_idno, b.Cloth_IdNo, b.Folding, (CASE WHEN b.ClothType_IdNo = 1 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 2 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 3 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 4 THEN b.Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 5 THEN b.Meters ELSE 0 END) , (CASE WHEN b.ClothType_IdNo = 1 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 2 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 3 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 4 THEN b.ExcSht_Meters ELSE 0 END), (CASE WHEN b.ClothType_IdNo = 5 THEN b.ExcSht_Meters ELSE 0 END)  from Packing_Slip_Head a, Packing_Slip_Details b, ClothSales_Delivery_Details tCSDD, ClothSales_Invoice_Details tCSID where tCSDD.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.Delivery_Code = tCSID.ClothSales_Invoice_Code and a.Packing_Slip_Code NOT LIKE '%/" & Trim(OpYrCode) & "' and a.Company_IdNo = b.Company_IdNo and a.Packing_Slip_Code = b.Packing_Slip_Code and tCSDD.ClothSales_Invoice_Code = tCSID.ClothSales_Invoice_Code and tCSDD.ClothSales_Invoice_SlNo = tCSID.ClothSales_Invoice_SlNo"
            Nr = cmd.ExecuteNonQuery()

            Da = New SqlClient.SqlDataAdapter("select Int5 as compidno, Int1 as Clo_IdNo, Weight1 as FoldPerc, sum(Meters1 ) as Type1_Mtrs, sum(Meters2) as Type2_Mtrs, sum(Meters3) as Type3_Mtrs, sum(Meters4) as Type4_Mtrs, sum(Meters5) as Type5_Mtrs , sum(Currency1) as ExcSht1_Mtrs, sum(Currency2) as ExcSht2_Mtrs, sum(Currency3) as ExcSht3_Mtrs, sum(Currency4) as ExcSht4_Mtrs, sum(Currency5) as ExcSht5_Mtrs from " & Trim(Common_Procedures.EntryTempTable) & " group by Int5, Int1, Weight1 having sum(Meters1) <> 0 or sum(Meters2) <> 0 or sum(Meters3) <> 0 or sum(Meters4) <> 0 or sum(Meters5) <> 0 ", con)
            Da.SelectCommand.Transaction = tr
            Dt1 = New DataTable
            Da.Fill(Dt1)

            Sno = 0
            Sno2 = 2000
            If Dt1.Rows.Count > 0 Then
                For I = 0 To Dt1.Rows.Count - 1

                    If Trim(UCase(Common_Procedures.ClothDelivery_Opening_OR_Entry)) <> "OPENING" Then

                        vCOMPID = 0
                        vCOMPID = Val(Dt1.Rows(I).Item("compidno").ToString)
                        If Val(vCOMPID) = 0 Then vCOMPID = Val(lbl_Company.Tag)

                        If Val(Dt1.Rows(I).Item("Type1_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("Type2_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("Type3_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("Type4_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("Type5_Mtrs").ToString) <> 0 Then

                            Sno = Sno + 1

                            cmd.CommandText = "Insert into Stock_Cloth_Processing_Details (              Reference_Code                ,          Company_IdNo     ,           Reference_No       ,          for_OrderBy      , Reference_Date ,                                            StockOff_IdNo   ,      DeliveryTo_Idno    ,         ReceivedFrom_Idno  ,         Entry_ID     ,       Party_Bill_No  ,       Particulars      ,           Sl_No      ,                         Cloth_Idno                     ,                          Folding                       ,                         Meters_Type1                     ,                         Meters_Type2                     ,                         Meters_Type3                     ,                         Meters_Type4                     ,                         Meters_Type5                     ) " &
                            "  Values                         ('" & Trim(Pk_Condition) & Trim(NewCode) & "', " & Str(Val(vCOMPID)) & ", '" & Trim(lbl_DcNo.Text) & "', " & Str(Val(vOrdByNo)) & ",  @DeliveryDate , " & Str(Val(Common_Procedures.CommonLedger.OwnSort_Ac)) & ", " & Str(Val(Led_ID)) & ", " & Str(Val(vGodwn_ID)) & ", '" & Trim(EntID) & "', '" & Trim(PBlNo) & "', '" & Trim(Partcls) & "', " & Str(Val(Sno)) & ", " & Str(Val(Dt1.Rows(I).Item("Clo_IdNo").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("FoldPerc").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("Type1_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("Type2_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("Type3_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("Type4_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("Type5_Mtrs").ToString)) & " ) "
                            cmd.ExecuteNonQuery()

                        End If

                        If Val(Dt1.Rows(I).Item("ExcSht1_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("ExcSht2_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("ExcSht3_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("ExcSht4_Mtrs").ToString) <> 0 Or Val(Dt1.Rows(I).Item("ExcSht5_Mtrs").ToString) <> 0 Then

                            Sno2 = Sno2 + 1

                            cmd.CommandText = "Insert into Stock_Cloth_Processing_Details (              Reference_Code                ,          Company_IdNo     ,           Reference_No       ,          for_OrderBy      , Reference_Date ,                                           StockOff_IdNo   ,      DeliveryTo_Idno       , ReceivedFrom_Idno  ,         Entry_ID     ,       Party_Bill_No  ,       Particulars ,           Sl_No        ,                         Cloth_Idno                     ,                          Folding                       ,                         Meters_Type1                       ,                           Meters_Type2                       ,                         Meters_Type3                       ,                         Meters_Type4                       ,                         Meters_Type5                        ) " &
                            "                              Values                         ('" & Trim(Pk_Condition) & Trim(NewCode) & "', " & Str(Val(vCOMPID)) & ", '" & Trim(lbl_DcNo.Text) & "', " & Str(Val(vOrdByNo)) & ",  @DeliveryDate , " & Str(Val(Common_Procedures.CommonLedger.OwnSort_Ac)) & ", " & Str(Val(vGodwn_ID)) & ",       0            , '" & Trim(EntID) & "', '" & Trim(PBlNo) & "', 'Packing Exc/Sht'  , " & Str(Val(Sno2)) & ", " & Str(Val(Dt1.Rows(I).Item("Clo_IdNo").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("FoldPerc").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("ExcSht1_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("ExcSht2_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("ExcSht3_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("ExcSht4_Mtrs").ToString)) & ", " & Str(Val(Dt1.Rows(I).Item("ExcSht5_Mtrs").ToString)) & " ) "
                            cmd.ExecuteNonQuery()

                        End If

                    End If
                Next

            End If

            If Trim(UCase(cbo_Type.Text)) <> "INVOICE" Then
                '--***********************************************************COMMEMTED BY FOR-1267-BY-THANGES-TODAY-ONLY(12-09-2023)
                '--***********************************************************remove the comment BY FOR-1267-BY-THANGES-TODAY-ONLY(13-05-2025) - for BRT
                If Common_Procedures.settings.CustomerCode = "1267" Then
                'If Common_Procedures.settings.ClothInvoice_Bale_Selection_Compulsary = 1 Or Common_Procedures.settings.CustomerCode = "1267" Then

                    '----- Saving Cross Checking (ClothSales_Delivery_Head   Vs  Packing_Slip_Head )

                    cmd.CommandText = "Truncate Table " & Trim(Common_Procedures.EntryTempTable) & ""
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select Total_Meters from Packing_Slip_Head where Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select -1*Total_Meters from ClothSales_Delivery_Head where  ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select sum(Meters1) as ProdMtrs from " & Trim(Common_Procedures.EntryTempTable) & " having sum(Meters1) <> 0", con)
                    Da.SelectCommand.Transaction = tr
                    Dt2 = New DataTable
                    Da.Fill(Dt2)
                    If Dt2.Rows.Count > 0 Then
                        If IsDBNull(Dt2.Rows(0)(0).ToString) = False Then
                            If Val(Dt2.Rows(0)(0).ToString) <> 0 Then
                                Throw New ApplicationException("Invalid Bale Selection : Mismatch of Dc && Bale Meters")
                                Exit Sub
                            End If
                        End If
                    End If
                    Dt2.Clear()

                    '----- Saving Cross Checking (ClothSales_Delivery_Details  Vs  PackingSlip Head)

                    cmd.CommandText = "Truncate Table " & Trim(Common_Procedures.EntryTempTable) & ""
                    cmd.ExecuteNonQuery()

                    '--Opening Bale
                    cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select sum(a.Total_Meters) from Packing_Slip_Head a where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' and a.Packing_Slip_Code NOT IN (select b.Packing_Slip_Code from Packing_Slip_Details b) "
                    cmd.ExecuteNonQuery()
                    '--from Packing entry Entry
                    cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select sum(b.Meters) from Packing_Slip_Head a, Packing_Slip_Details b where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' and a.Packing_Slip_Code = b.Packing_Slip_Code"
                    cmd.ExecuteNonQuery()
                    cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select -1*Meters from ClothSales_Delivery_Details where  ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
                '    cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select -1*Total_Meters from ClothSales_Delivery_Head where  ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
                    cmd.ExecuteNonQuery()

                    Da = New SqlClient.SqlDataAdapter("select sum(Meters1) as ProdMtrs from " & Trim(Common_Procedures.EntryTempTable) & " having sum(Meters1) <> 0", con)
                    Da.SelectCommand.Transaction = tr
                    Dt2 = New DataTable
                    Da.Fill(Dt2)
                    If Dt2.Rows.Count > 0 Then
                        If IsDBNull(Dt2.Rows(0)(0).ToString) = False Then
                            If Val(Dt2.Rows(0)(0).ToString) <> 0 Then
                                Throw New ApplicationException("Invalid Bale Selection : Mismatch of Dc && Bale Meters")
                                Exit Sub
                            End If
                        End If
                    End If
                    Dt2.Clear()



                    If Common_Procedures.settings.CustomerCode = "1267" Then

                '    If Common_Procedures.settings.CustomerCode = "-1267-THANGES-TODAY-ONLY(12-09-2023)" Then
                        cmd.CommandText = "Truncate Table " & Trim(Common_Procedures.EntryTempTable) & ""
                        cmd.ExecuteNonQuery()

                        cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select Total_Meters from Packing_Slip_Head where Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' and Packing_Slip_Date <= @DeliveryDate"
                        'cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select Total_Meters from Packing_Slip_Head where Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
                        cmd.ExecuteNonQuery()
                        cmd.CommandText = "Insert Into " & Trim(Common_Procedures.EntryTempTable) & "(Meters1) select -1*Total_Meters from ClothSales_Delivery_Head where  ClothSales_Delivery_Code = '" & Trim(NewCode) & "'"
                        cmd.ExecuteNonQuery()

                        Da = New SqlClient.SqlDataAdapter("select sum(Meters1) as ProdMtrs from " & Trim(Common_Procedures.EntryTempTable) & " having sum(Meters1) <> 0", con)
                        Da.SelectCommand.Transaction = tr
                        Dt2 = New DataTable
                        Da.Fill(Dt2)
                        If Dt2.Rows.Count > 0 Then
                            If IsDBNull(Dt2.Rows(0)(0).ToString) = False Then
                                If Val(Dt2.Rows(0)(0).ToString) <> 0 Then
                                    Throw New ApplicationException("Invalid Bale Selection : Delivery Date should be greater than Packing Slip Date")
                                    Exit Sub
                                End If
                            End If
                        End If
                        Dt2.Clear()

                    End If

                    '----- Saving Cross Checking with PieceChecking
                    Dim vERRMSG As String = ""
                    Dim vFAB_LOTCODE As String = ""

                    vFAB_LOTCODE = "~99999999/00-00~~"
                    Da = New SqlClient.SqlDataAdapter("select distinct(a.Lot_Code) as lotno from Packing_Slip_Details a,  Packing_Slip_Head b where b.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' and a.lot_code <> '' and a.Packing_Slip_Code = b.Packing_Slip_Code", con)
                    Da.SelectCommand.Transaction = tr
                    Dt2 = New DataTable
                    Da.Fill(Dt2)
                    If Dt2.Rows.Count > 0 Then
                        For I = 0 To Dt2.Rows.Count - 1
                            If IsDBNull(Dt2.Rows(I)(0).ToString) = False Then
                                If Trim(Dt2.Rows(I)(0).ToString) <> "" Then
                                    vFAB_LOTCODE = Trim(vFAB_LOTCODE) & IIf(Trim(vFAB_LOTCODE) <> "", ", ", "") & "~" & Trim(Dt2.Rows(I)(0).ToString) & "~"
                                End If
                            End If
                        Next I
                    End If
                    Dt2.Clear()

                    vERRMSG = ""
                    If Common_Procedures.Cross_Checking_PieceChecking_PackingSlip_Meters(con, vFAB_LOTCODE, vERRMSG, tr) = False Then
                        Throw New ApplicationException(vERRMSG)
                        Exit Sub
                    End If

                End If

            End If

            If Val(Common_Procedures.settings.Negative_Stock_Restriction_for_Cloth_Stock) = 1 Then

                cmd.CommandText = "Insert into TempTable_For_NegativeStock ( Stock_Type, Reference_Code, Reference_Date, Company_Idno, Ledger_Idno      , StockOff_IdNo, Cloth_IdNo,                             ClothType_IdNo                                                                                                                                                 , Folding ) " &
                                      " Select                               'CLOTH'   , Reference_Code, Reference_Date, Company_IdNo, ReceivedFrom_Idno, StockOff_IdNo, Cloth_IdNo, (CASE WHEN Meters_Type1 <> 0 THEN 1  WHEN Meters_Type2 <> 0 THEN 2 WHEN Meters_Type3 <> 0 THEN 3 WHEN Meters_Type4 <> 0 THEN 4 WHEN Meters_Type5 <> 0 THEN 5 ELSE 0 END  ) as ClothtypeIDNO, Folding from Stock_Cloth_Processing_Details where Reference_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'"
                Nr = cmd.ExecuteNonQuery()

                If Common_Procedures.Check_is_Negative_Stock_Status(con, tr) = True Then Exit Sub

            End If
            tr.Commit()

            MessageBox.Show("Saved Successfully!!!", "FOR SAVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Information)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '---- BRT TEXTTILES (SOMANUR)
                If New_Entry = True Then
                    Send_SMS()
                End If
            End If

            If Val(Common_Procedures.settings.OnSave_MoveTo_NewEntry_Status) = 1 Then
                If New_Entry = True Then
                    new_record()
                Else
                    move_record(lbl_DcNo.Text)
                End If

            Else
                move_record(lbl_DcNo.Text)

            End If


        Catch ex As Exception

            tr.Rollback()
            If InStr(1, Trim(LCase(ex.Message)), Trim(LCase("CK_PackingSlip_Delivery_Increment"))) > 0 Then
                MessageBox.Show("Invalid : Duplicate Bale Selection - " & vERR_BALECODE, "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            ElseIf InStr(1, Trim(LCase(ex.Message)), Trim(LCase("CK_ClothSales_Delivery_Details_1"))) > 0 Then
                MessageBox.Show("Invalid Delivery Meters : Lesser than Invoice/Return Meters ", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Else
                MessageBox.Show(ex.Message, "FOR SAVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            End If


        Finally

            Dt1.Dispose()
            Da.Dispose()
            cmd.Dispose()
            tr.Dispose()

            If msk_date.Enabled And msk_date.Visible Then msk_date.Focus()

        End Try

    End Sub
    Private Sub Total_Calculation()
        Dim Sno As Integer
        Dim TotPcs As Single
        Dim TotBals As Single
        Dim TotMtrs As Single
        Dim RNDOFF As String = 0
        Dim TotAmt As String = 0
        Dim vStrNetAmt As String = 0
        Dim FLDPERC As String = 0
        Dim vFoldPer As String = 0
        Dim fmt As String = 0
        Dim VFoldMtr As String = 0
        Dim HSN_Code As String = 0
        Dim GST_Per As String = 0
        If NoCalc_Status = True Then Exit Sub

        Sno = 0
        TotPcs = 0 : TotBals = 0 : TotMtrs = 0

        With dgv_Details
            For i = 0 To .RowCount - 1
                Sno = Sno + 1
                .Rows(i).Cells(0).Value = Sno
                If Val(.Rows(i).Cells(7).Value) <> 0 Then

                    TotBals = TotBals + Val(.Rows(i).Cells(4).Value())
                    TotPcs = TotPcs + Val(.Rows(i).Cells(6).Value())
                    TotMtrs = TotMtrs + Val(.Rows(i).Cells(7).Value())
                    TotAmt = TotAmt + Val(.Rows(i).Cells(18).Value())
                End If

            Next i

        End With

        '------TOTAL AMOUNT

        With dgv_Details_Total
            If .RowCount = 0 Then .Rows.Add()
            .Rows(0).Cells(4).Value = Val(TotBals)
            .Rows(0).Cells(6).Value = Val(TotPcs)
            .Rows(0).Cells(7).Value = Format(Val(TotMtrs), "########0.00")
            .Rows(0).Cells(8).Value = Format(Val(TotAmt), "########0.00")
        End With

        GST_Calculation()

        NetAmount_Calculation()

    End Sub

    Private Sub cbo_PartyName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_PartyName.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Ledger_AlaisHead", "Ledger_DisplayName", "( (Ledger_Type = '' or Ledger_Type = 'JOBWORKER'  and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_PartyName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_PartyName.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_PartyName, msk_date, Nothing, "Ledger_AlaisHead", "Ledger_DisplayName", " ( (Ledger_Type = '' or Ledger_Type = 'JOBWORKER'  and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Show_In_All_Entry = 1) ", "(Ledger_idno = 0)")
        If (e.KeyValue = 40 And cbo_PartyName.DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
            If cbo_Type.Enabled Then
                cbo_Type.Focus()

            Else
                txt_OrderNo.Focus()

            End If

        End If
    End Sub

    Private Sub cbo_PartyName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_PartyName.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_PartyName, Nothing, "Ledger_AlaisHead", "Ledger_DisplayName", " ( (Ledger_Type = '' or Ledger_Type = 'JOBWORKER'  and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Show_In_All_Entry = 1) ", "(Ledger_idno = 0)")
        If Asc(e.KeyChar) = 13 Then

            If cbo_Type.Enabled Then
                cbo_Type.Focus()

            Else

                If Trim(UCase(cbo_Type.Text)) = "ORDER" Then

                    If MessageBox.Show("Do you want to select order:", "FOR ORDER SELECTION...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                        btn_Selection_Click(sender, e)

                    Else
                        txt_OrderNo.Focus()

                    End If

                ElseIf Trim(UCase(cbo_Type.Text)) = "INVOICE" Then

                    If MessageBox.Show("Do you want to select Invoice:", "FOR INVOICE SELECTION...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                        Show_ClothInvoice_Selection()

                    Else
                        txt_OrderNo.Focus()

                    End If

                Else
                    txt_OrderNo.Focus()

                End If

            End If

        End If

    End Sub

    Private Sub cbo_PartyName_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_PartyName.KeyUp
        If e.Control = False And e.KeyValue = 17 Then
            Common_Procedures.MDI_LedType = ""
            Dim f As New Ledger_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_PartyName.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()

        End If
    End Sub

    Private Sub cbo_Agent_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Agent.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Ledger_AlaisHead", "Ledger_DisplayName", "(Ledger_Type = 'AGENT')", "(Ledger_IdNo = 0)")

    End Sub

    Private Sub cbo_Agent_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Agent.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Agent, cbo_Through, txt_LrNo, "Ledger_AlaisHead", "Ledger_DisplayName", "(Ledger_Type = 'AGENT')", "(Ledger_IdNo = 0)")

    End Sub

    Private Sub cbo_Agent_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Agent.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Agent, txt_LrNo, "Ledger_AlaisHead", "Ledger_DisplayName", "(Ledger_Type = 'AGENT')", "(Ledger_IdNo = 0)")
    End Sub

    Private Sub cbo_Agent_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Agent.KeyUp
        If e.Control = False And e.KeyValue = 17 Then

            Dim f As New Agent_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_Agent.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()

        End If
    End Sub

    Private Sub cbo_Type_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Type.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "", "", "", "")

    End Sub

    Private Sub cbo_Type_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Type.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Type, cbo_PartyName, txt_OrderNo, "", "", "", "")

    End Sub

    Private Sub cbo_Type_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Type.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Type, txt_OrderNo, "", "", "", "")
        If Asc(e.KeyChar) = 13 Then
            If Trim(UCase(cbo_Type.Text)) = "ORDER" Then
                If MessageBox.Show("Do you want to select ORDER INDENT:", "FOR ORDER INDENT SELECTION...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                    btn_Selection_Click(sender, e)

                Else
                    txt_OrderNo.Focus()

                End If

            ElseIf Trim(UCase(cbo_Type.Text)) = "INVOICE" Then

                If MessageBox.Show("Do you want to select INVOICE :", "FOR INVOICE SELECTION...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                    Show_ClothInvoice_Selection()

                Else
                    txt_OrderNo.Focus()

                End If

            Else
                txt_OrderNo.Focus()
            End If


        End If

    End Sub

    Private Sub cbo_DespTo_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_DespTo.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "ClothSales_Delivery_Head", "Despatch_To", "", "")
    End Sub

    Private Sub cbo_DespTo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_DespTo.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_DespTo, msk_LrDate, txt_EWay_Bill_No, "ClothSales_Delivery_Head", "Despatch_To", "", "")
    End Sub

    Private Sub cbo_DespTo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_DespTo.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_DespTo, txt_EWay_Bill_No, "ClothSales_Delivery_Head", "Despatch_To", "", "", False)
    End Sub

    Private Sub cbo_Through_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Through.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "", "", "", "")

    End Sub

    Private Sub cbo_Through_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Through.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Through, txt_Order_Date, cbo_Agent, "", "", "", "")

    End Sub

    Private Sub cbo_Through_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Through.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Through, cbo_Agent, "", "", "", "", False)

    End Sub

    Private Sub cbo_Transport_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Transport.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Ledger_AlaisHead", "Ledger_DisplayName", "(Ledger_Type = 'TRANSPORT')", "(Ledger_IdNo = 0)")
        Get_vehicle_from_Transport()
    End Sub

    Private Sub cbo_Transport_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Transport.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Transport, Nothing, txt_Freight, "Ledger_AlaisHead", "Ledger_DisplayName", "(Ledger_Type = 'TRANSPORT')", "(Ledger_IdNo = 0)")
        If e.KeyValue = 38 Then
            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
                dgv_Details.CurrentCell.Selected = True

            Else
                txt_DelvAdd2.Focus()

            End If
        End If
        Get_vehicle_from_Transport()
    End Sub

    Private Sub cbo_Transport_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Transport.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Transport, txt_Freight, "Ledger_AlaisHead", "Ledger_DisplayName", "(Ledger_Type = 'TRANSPORT')", "(Ledger_IdNo = 0)")
        Get_vehicle_from_Transport()
    End Sub

    Private Sub cbo_Transport_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Transport.KeyUp
        If e.Control = False And e.KeyValue = 17 Then
            Common_Procedures.UR.Ledr_Wea_Siz_Rw_Trans_JbWrk_Creation = Common_Procedures.UR.Ledger_Creation
            Common_Procedures.MDI_LedType = "TRANSPORT"
            Dim f As New Ledger_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_Transport.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()
        End If
    End Sub

    Private Sub cbo_Grid_ClothName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Grid_ClothName.GotFocus
        vCbo_ItmNm = Trim(cbo_Grid_ClothName.Text)

        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Cloth_Head", "Cloth_Name", "", "(Cloth_IdNo = 0)")

    End Sub

    Private Sub cbo_Grid_ClothName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Grid_ClothName.KeyDown

        Dim dep_idno As Integer = 0

        vcbo_KeyDwnVal = e.KeyValue

        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Grid_ClothName, Nothing, Nothing, "Cloth_Head", "Cloth_Name", "", "(Cloth_IdNo = 0)")

        With dgv_Details

            If (e.KeyValue = 38 And cbo_Grid_ClothName.DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                If .CurrentCell.RowIndex <= 0 Then
                    If cbo_Godown.Visible And cbo_Godown.Enabled Then
                        cbo_Godown.Focus()
                    ElseIf txt_DelvAdd2.Visible And txt_DelvAdd2.Enabled Then
                        txt_DelvAdd2.Focus()
                    Else
                        cbo_DeliveryTo.Focus()
                    End If

                Else
                    .Focus()
                    .CurrentCell = .Rows(.CurrentCell.RowIndex - 1).Cells(13)

                End If

            End If

            If (e.KeyValue = 40 And cbo_Grid_ClothName.DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then

                If .CurrentCell.RowIndex = .Rows.Count - 1 And Trim(.Rows(.CurrentCell.RowIndex).Cells.Item(1).Value) = "" Then
                    cbo_Transport.Focus()

                Else
                    .Focus()
                    .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(.CurrentCell.ColumnIndex + 1)

                End If

            End If

        End With
    End Sub

    Private Sub cbo_Grid_ClothName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Grid_ClothName.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Grid_ClothName, cbo_Grid_Clothtype, "Cloth_Head", "Cloth_Name", "", "(Cloth_IdNo = 0)")

        If Asc(e.KeyChar) = 13 Then

            e.Handled = True

            If btn_ClothName_ToPrint_Selection.Visible Then
                btn_ClothName_ToPrint_Selection_Click(sender, e)

            Else

                With dgv_Details
                    If Trim(.Rows(.CurrentRow.Index).Cells(1).Value) = "" And .CurrentRow.Index = .Rows.Count - 1 Then
                        cbo_Transport.Focus()
                    Else
                        .CurrentCell = .Rows(.CurrentRow.Index).Cells(2)
                    End If
                End With

            End If

        End If
    End Sub

    Private Sub cbo_Grid_ClothName_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Grid_ClothName.KeyUp
        If e.Control = False And e.KeyValue = 17 Then
            Dim f As New Cloth_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_Grid_ClothName.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()
        End If
    End Sub

    Private Sub cbo_Grid_Clothtype_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Grid_Clothtype.GotFocus
        vCbo_ItmNm = Trim(cbo_Grid_Clothtype.Text)
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "ClothType_Head", "ClothType_Name", "", "(ClothType_IdNo = 0)")

    End Sub

    Private Sub cbo_Grid_Clothtype_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Grid_Clothtype.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Grid_Clothtype, Nothing, Nothing, "ClothType_Head", "ClothType_Name", "", "(ClothType_IdNo = 0)")
        vcbo_KeyDwnVal = e.KeyValue

        With dgv_Details

            If (e.KeyValue = 38 And cbo_Grid_Clothtype.DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                .Focus()
                .CurrentCell = .Rows(.CurrentRow.Index).Cells(.CurrentCell.ColumnIndex - 1)
            End If

            If (e.KeyValue = 40 And cbo_Grid_Clothtype.DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then
                .Focus()
                .CurrentCell = .Rows(.CurrentRow.Index).Cells(.CurrentCell.ColumnIndex + 1)
            End If

        End With

    End Sub

    Private Sub cbo_Grid_Clothtype_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Grid_Clothtype.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Grid_Clothtype, Nothing, "ClothType_Head", "ClothType_Name", "", "(ClothType_IdNo = 0)")

        If Asc(e.KeyChar) = 13 Then

            With dgv_Details

                .Focus()
                .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(.CurrentCell.ColumnIndex + 1)

            End With

        End If

    End Sub


    Private Sub dgv_Details_CellEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellEnter
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Dt2 As New DataTable
        Dim rect As Rectangle

        With dgv_Details

            dgv_ActCtrlName = .Name

            If Val(.CurrentRow.Cells(0).Value) = 0 Then
                .CurrentRow.Cells(0).Value = .CurrentRow.Index + 1
            End If

            If Val(.Rows(e.RowIndex).Cells(10).Value) = 0 Then
                Set_Max_Delivery_DetailsSlNo(e.RowIndex, 10)
                'If e.RowIndex = 0 Then
                '    .Rows(e.RowIndex).Cells(10).Value = 1
                'Else
                '    .Rows(e.RowIndex).Cells(10).Value = Val(.Rows(e.RowIndex - 1).Cells(10).Value) + 1
                'End If
            End If

            If Trim(.CurrentRow.Cells(2).Value) = "" Then
                .CurrentRow.Cells(2).Value = Common_Procedures.ClothType_IdNoToName(con, 1)
            End If

            If Val(.CurrentRow.Cells(3).Value) = 0 Then
                .CurrentRow.Cells(3).Value = "100"
            End If

            If e.ColumnIndex = 1 And dgv_Details.ReadOnly = False And (Trim(UCase(cbo_Type.Text)) <> "ORDER" And (Val(.Rows(.CurrentCell.RowIndex).Cells(11).Value) = 0)) Then

                If cbo_Grid_ClothName.Visible = False Or Val(cbo_Grid_ClothName.Tag) <> e.RowIndex Then

                    cbo_Grid_ClothName.Tag = -1
                    Da = New SqlClient.SqlDataAdapter("select Cloth_Name from Cloth_Head order by Cloth_Name", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    cbo_Grid_ClothName.DataSource = Dt1
                    cbo_Grid_ClothName.DisplayMember = "Cloth_Name"

                    rect = .GetCellDisplayRectangle(e.ColumnIndex, e.RowIndex, False)

                    cbo_Grid_ClothName.Left = .Left + rect.Left
                    cbo_Grid_ClothName.Top = .Top + rect.Top

                    cbo_Grid_ClothName.Width = rect.Width
                    cbo_Grid_ClothName.Height = rect.Height
                    cbo_Grid_ClothName.Text = .CurrentCell.Value

                    cbo_Grid_ClothName.Tag = Val(e.RowIndex)
                    cbo_Grid_ClothName.Visible = True

                    cbo_Grid_ClothName.BringToFront()
                    cbo_Grid_ClothName.Focus()

                End If

            Else
                cbo_Grid_ClothName.Visible = False

            End If

            If e.ColumnIndex = 2 And dgv_Details.ReadOnly = False And (Trim(UCase(cbo_Type.Text)) <> "ORDER" And (Val(.Rows(.CurrentCell.RowIndex).Cells(11).Value) = 0)) Then

                If cbo_Grid_Clothtype.Visible = False Or Val(cbo_Grid_Clothtype.Tag) <> e.RowIndex Then

                    cbo_Grid_Clothtype.Tag = -1
                    Da = New SqlClient.SqlDataAdapter("select ClothType_Name from ClothType_Head order by ClothType_Name", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    cbo_Grid_Clothtype.DataSource = Dt1
                    cbo_Grid_Clothtype.DisplayMember = "ClothType_Name"

                    rect = .GetCellDisplayRectangle(e.ColumnIndex, e.RowIndex, False)

                    cbo_Grid_Clothtype.Left = .Left + rect.Left
                    cbo_Grid_Clothtype.Top = .Top + rect.Top

                    cbo_Grid_Clothtype.Width = rect.Width
                    cbo_Grid_Clothtype.Height = rect.Height
                    cbo_Grid_Clothtype.Text = .CurrentCell.Value

                    cbo_Grid_Clothtype.Tag = Val(e.RowIndex)
                    cbo_Grid_Clothtype.Visible = True

                    cbo_Grid_Clothtype.BringToFront()
                    cbo_Grid_Clothtype.Focus()

                End If

            Else
                cbo_Grid_Clothtype.Visible = False

            End If

            If btn_BaleSelection.Visible = True Then

                If e.ColumnIndex = 4 And dgv_Details.ReadOnly = False And Trim(UCase(Common_Procedures.ClothDelivery_Opening_OR_Entry)) <> "OPENING" Or e.ColumnIndex = 5 And Trim(UCase(Common_Procedures.ClothDelivery_Opening_OR_Entry)) <> "OPENING" Then

                    rect = .GetCellDisplayRectangle(e.ColumnIndex, e.RowIndex, False)

                    pnl_BaleSelection_ToolTip.Left = .Left + rect.Left
                    pnl_BaleSelection_ToolTip.Top = .Top + rect.Top + rect.Height + 3

                    pnl_BaleSelection_ToolTip.Visible = True

                Else
                    pnl_BaleSelection_ToolTip.Visible = False

                End If

            End If


            If btn_PieceSelection.Visible = True Or Trim(UCase(cbo_RollBundle.Text)) = "PCS" Then

                If e.ColumnIndex = 6 And dgv_Details.ReadOnly = False And Trim(UCase(Common_Procedures.ClothDelivery_Opening_OR_Entry)) <> "OPENING" Then

                    rect = .GetCellDisplayRectangle(e.ColumnIndex, e.RowIndex, False)

                    pnl_PieceSelection_ToolTip.Left = .Left + rect.Left
                    pnl_PieceSelection_ToolTip.Top = .Top + rect.Top + rect.Height + 3

                    pnl_PieceSelection_ToolTip.Visible = True

                Else
                    pnl_PieceSelection_ToolTip.Visible = False

                End If

            End If

        End With

    End Sub

    Private Sub dgv_Details_CellLeave(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellLeave
        With dgv_Details
            If .CurrentCell.ColumnIndex = 7 Or .CurrentCell.ColumnIndex = 13 Then
                If Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value) <> 0 Then
                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = Format(Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value), "#########0.00")
                Else
                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = ""
                End If
            End If
        End With
    End Sub

    Private Sub dgv_Details_CellValueChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellValueChanged
        On Error Resume Next

        If FrmLdSTS = True Or NoCalc_Status = True Then Exit Sub

        If IsNothing(dgv_Details.CurrentCell) Then Exit Sub
        With dgv_Details
            If .Visible Then
                If .CurrentCell.ColumnIndex = 1 Or .CurrentCell.ColumnIndex = 3 Or .CurrentCell.ColumnIndex = 4 Or .CurrentCell.ColumnIndex = 6 Or .CurrentCell.ColumnIndex = 7 Or .CurrentCell.ColumnIndex = 13 Then
                    Amount_Calculation(.CurrentCell.RowIndex, .CurrentCell.ColumnIndex)
                    Total_Calculation()
                End If
            End If
        End With
    End Sub

    Private Sub dgv_Details_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgv_Details.EditingControlShowing
        dgtxt_Details = CType(dgv_Details.EditingControl, DataGridViewTextBoxEditingControl)
    End Sub

    Private Sub dgtxt_Details_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgtxt_Details.Enter
        dgv_ActCtrlName = dgv_Details.Name
        dgv_Details.EditingControl.BackColor = Color.Lime
        dgv_Details.EditingControl.ForeColor = Color.Blue
        dgtxt_Details.SelectAll()
    End Sub

    Private Sub dgtxt_Details_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgtxt_Details.KeyDown
        With dgv_Details
            vcbo_KeyDwnVal = e.KeyValue
            If .Visible Then

                If e.KeyValue = Keys.Delete Then

                    If Val(.Rows(.CurrentCell.RowIndex).Cells(11).Value) <> 0 Or Trim(.Rows(.CurrentCell.RowIndex).Cells(12).Value) <> "" Then
                        e.Handled = True
                        e.SuppressKeyPress = True
                    End If

                    If .CurrentCell.ColumnIndex = 1 Or .CurrentCell.ColumnIndex = 2 Or .CurrentCell.ColumnIndex = 3 Then
                        If Trim(UCase(cbo_Type.Text)) = "ORDER" Then
                            e.Handled = True
                            e.SuppressKeyPress = True
                        End If
                    End If

                    If .CurrentCell.ColumnIndex = 6 Or .CurrentCell.ColumnIndex = 7 Then
                        If Trim(.Rows(.CurrentCell.RowIndex).Cells(14).Value) <> "" Then
                            e.Handled = True
                            e.SuppressKeyPress = True
                        End If
                    End If

                End If

            End If

        End With

    End Sub

    Private Sub dgtxt_Details_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles dgtxt_Details.KeyPress
        On Error Resume Next
        Dim i As Integer
        Dim n As Integer = -1

        With dgv_Details
            If .Visible Then

                If Val(.Rows(.CurrentCell.RowIndex).Cells(11).Value) <> 0 Then
                    e.Handled = True

                    Add_NewRow_ToGrid()

                End If

                If .CurrentCell.ColumnIndex = 1 Or .CurrentCell.ColumnIndex = 2 Or .CurrentCell.ColumnIndex = 3 Then
                    If Trim(UCase(cbo_Type.Text)) = "ORDER" Then
                        e.Handled = True
                    End If
                End If

                If .CurrentCell.ColumnIndex = 3 Or .CurrentCell.ColumnIndex = 4 Or .CurrentCell.ColumnIndex = 6 Or .CurrentCell.ColumnIndex = 7 Or .CurrentCell.ColumnIndex = 13 Then

                    If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
                        e.Handled = True
                    End If

                End If

                If .CurrentCell.ColumnIndex = 6 Or .CurrentCell.ColumnIndex = 7 Then
                    If Trim(.Rows(.CurrentCell.RowIndex).Cells(14).Value) <> "" Or Trim(.Rows(.CurrentCell.RowIndex).Cells(12).Value) <> "" Then
                        e.Handled = True
                    End If
                End If

            End If
        End With

    End Sub

    Private Sub dgtxt_Details_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgtxt_Details.KeyUp

        If e.Control = True And UCase(Chr(e.KeyCode)) = "D" Then
            dgv_Details_KeyUp(sender, e)
        End If

        If btn_BaleSelection.Visible = True Then
            If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
                If dgv_Details.CurrentCell.ColumnIndex = 4 Or dgv_Details.CurrentCell.ColumnIndex = 5 Then
                    btn_BaleSelection_Click(sender, e)
                End If
            End If
        End If

        If btn_PieceSelection.Visible = True Or Trim(UCase(cbo_RollBundle.Text)) = "PCS" Then
            If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
                If dgv_Details.CurrentCell.ColumnIndex = 6 Then
                    btn_PieceSelection_Click(sender, e)
                End If
            End If
        End If


    End Sub

    Private Sub dgtxt_Details_TextChanged(sender As Object, e As EventArgs) Handles dgtxt_Details.TextChanged
        Try
            With dgv_Details
                If .Visible Then
                    If IsNothing(dgv_Details.CurrentCell) Then Exit Sub
                    If .Rows.Count > 0 Then
                        .Rows(.CurrentCell.RowIndex).Cells.Item(.CurrentCell.ColumnIndex).Value = Trim(dgtxt_Details.Text)
                    End If
                End If
            End With

        Catch ex As NullReferenceException
            '---MessageBox.Show(ex.Message, "ERROR WHILE DETAILS TEXTBOX TEXTCHANGE....", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Catch ex As ObjectDisposedException
            '---MessageBox.Show(ex.Message, "ERROR WHILE DETAILS TEXTBOX TEXTCHANGE....", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "ERROR WHILE DETAILS TEXTBOX TEXTCHANGE....", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub dgv_Details_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Details.KeyUp
        Dim i As Integer
        Dim n As Integer

        If e.Control = True And UCase(Chr(e.KeyCode)) = "D" Then

            With dgv_Details

                If Val(.Rows(.CurrentCell.RowIndex).Cells(11).Value) = 0 Then

                    n = .CurrentRow.Index

                    If n = .Rows.Count - 1 Then
                        For i = 0 To .ColumnCount - 1
                            .Rows(n).Cells(i).Value = ""
                        Next

                    Else
                        .Rows.RemoveAt(n)

                    End If

                    Total_Calculation()

                End If

            End With

        End If

        If btn_BaleSelection.Visible = True Then
            If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
                If dgv_Details.CurrentCell.ColumnIndex = 4 Or dgv_Details.CurrentCell.ColumnIndex = 5 Then
                    btn_BaleSelection_Click(sender, e)
                End If
            End If
        End If

        If btn_PieceSelection.Visible = True Or Trim(UCase(cbo_RollBundle.Text)) = "PCS" Then
            If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
                If dgv_Details.CurrentCell.ColumnIndex = 6 Then
                    btn_PieceSelection_Click(sender, e)
                End If
            End If
        End If

    End Sub

    Private Sub dgv_Details_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgv_Details.LostFocus
        On Error Resume Next
        If Not IsNothing(dgv_Details.CurrentCell) Then dgv_Details.CurrentCell.Selected = False
    End Sub

    Private Sub dgv_Details_RowsAdded(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewRowsAddedEventArgs) Handles dgv_Details.RowsAdded
        Dim n As Integer
        If IsNothing(dgv_Details.CurrentCell) Then Exit Sub
        With dgv_Details
            n = .RowCount
            .Rows(n - 1).Cells(0).Value = Val(n)

            If Val(.Rows(e.RowIndex).Cells(10).Value) = 0 Then
                Set_Max_Delivery_DetailsSlNo(e.RowIndex, 10)
                'If e.RowIndex = 0 Then
                '    .Rows(e.RowIndex).Cells(10).Value = 1
                'Else
                '    .Rows(e.RowIndex).Cells(10).Value = Val(.Rows(e.RowIndex - 1).Cells(10).Value) + 1
                'End If
            End If

        End With

    End Sub

    Private Sub txt_DelvAdd2_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_DelvAdd2.KeyDown
        If e.KeyValue = 38 Then SendKeys.Send("+{TAB}")
        If (e.KeyValue = 40) Then
            If cbo_Godown.Visible = True Then
                cbo_Godown.Focus()
            ElseIf dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
            Else
                cbo_Transport.Focus()
            End If
        End If
    End Sub

    Private Sub txt_DelvAdd2_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_DelvAdd2.KeyPress
        If Asc(e.KeyChar) = 13 Then
            If cbo_Godown.Visible = True Then
                cbo_Godown.Focus()
            ElseIf dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
            Else
                cbo_Transport.Focus()
            End If
        End If
    End Sub



    Private Sub cbo_Grid_ClothName_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Grid_ClothName.TextChanged
        Try
            If cbo_Grid_ClothName.Visible Then
                If IsNothing(dgv_Details.CurrentCell) Then Exit Sub
                With dgv_Details
                    If Val(cbo_Grid_ClothName.Tag) = Val(.CurrentCell.RowIndex) And .CurrentCell.ColumnIndex = 1 Then
                        .Rows(.CurrentCell.RowIndex).Cells.Item(.CurrentCell.ColumnIndex).Value = Trim(cbo_Grid_ClothName.Text)
                    End If
                End With
            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "FOR MOVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub cbo_Grid_Clothtype_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Grid_Clothtype.TextChanged
        Try
            If cbo_Grid_Clothtype.Visible Then
                If IsNothing(dgv_Details.CurrentCell) Then Exit Sub
                With dgv_Details
                    If Val(cbo_Grid_Clothtype.Tag) = Val(.CurrentCell.RowIndex) And .CurrentCell.ColumnIndex = 2 Then
                        .Rows(.CurrentCell.RowIndex).Cells.Item(.CurrentCell.ColumnIndex).Value = Trim(cbo_Grid_Clothtype.Text)
                    End If
                End With
            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "FOR MOVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub btn_save_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_save.Click
        save_record()
    End Sub

    Private Sub btn_close_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_close.Click
        Me.Close()
    End Sub

    Private Sub btn_Print_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print.Click
        Common_Procedures.Print_OR_Preview_Status = 1
        Print_PDF_Status = False
        EMAIL_Status = False
        WHATSAPP_Status = False
        print_record()
    End Sub

    Private Sub txt_Note_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_Note.KeyDown
        If e.KeyValue = 38 Then
            If cbo_Vechile.Visible And cbo_Vechile.Enabled Then
                cbo_Vechile.Focus()
            Else
                txt_Freight.Focus()
            End If
        End If

        If e.KeyValue = 40 Then
            If txt_Despatch_DateAndTime.Visible Then
                txt_Despatch_DateAndTime.Focus()
            Else
                If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                    save_record()
                Else
                    msk_date.Focus()
                End If
            End If
        End If
    End Sub

    Private Sub txt_Note_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Note.KeyPress
        If Asc(e.KeyChar) = 13 Then
            If txt_Despatch_DateAndTime.Visible Then
                txt_Despatch_DateAndTime.Focus()
            Else
                If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                    save_record()
                Else
                    msk_date.Focus()
                End If
            End If
        End If
    End Sub

    Private Sub btn_Filter_Close_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Filter_Close.Click
        pnl_Back.Enabled = True
        pnl_Filter.Visible = False
        Filter_Status = False
    End Sub

    Private Sub btn_Filter_Show_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Filter_Show.Click
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim dt2 As New DataTable
        Dim n As Integer
        Dim Led_IdNo As Integer, Clth_IdNo As Integer
        Dim Condt As String = ""

        Try

            Condt = ""
            Led_IdNo = 0
            Clth_IdNo = 0

            If IsDate(dtp_Filter_Fromdate.Value) = True And IsDate(dtp_Filter_ToDate.Value) = True Then
                Condt = "a.ClothSales_Delivery_Date between '" & Trim(Format(dtp_Filter_Fromdate.Value, "MM/dd/yyyy")) & "' and '" & Trim(Format(dtp_Filter_ToDate.Value, "MM/dd/yyyy")) & "' "
            ElseIf IsDate(dtp_Filter_Fromdate.Value) = True Then
                Condt = "a.ClothSales_Delivery_Date = '" & Trim(Format(dtp_Filter_Fromdate.Value, "MM/dd/yyyy")) & "' "
            ElseIf IsDate(dtp_Filter_ToDate.Value) = True Then
                Condt = "a.ClothSales_Delivery_Date = '" & Trim(Format(dtp_Filter_ToDate.Value, "MM/dd/yyyy")) & "' "
            End If

            If Trim(cbo_Filter_PartyName.Text) <> "" Then
                Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Filter_PartyName.Text)
            End If

            If Trim(cbo_Filter_ClothName.Text) <> "" Then
                Clth_IdNo = Common_Procedures.Cloth_NameToIdNo(con, cbo_Filter_ClothName.Text)
            End If

            If Val(Led_IdNo) <> 0 Then
                Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " (a.Ledger_Idno = " & Str(Val(Led_IdNo)) & ")"
            End If

            If Val(Clth_IdNo) <> 0 Then
                Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " b.Cloth_IdNo = " & Str(Val(Clth_IdNo))
            End If
            If cbo_Verified_Sts.Visible = True And Trim(cbo_Verified_Sts.Text) <> "" Then
                If Trim(cbo_Verified_Sts.Text) = "YES" Then
                    Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " a.Verified_Status = 1 "
                ElseIf Trim(cbo_Verified_Sts.Text) = "NO" Then
                    Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " a.Verified_Status = 0 "
                End If
            End If


            da = New SqlClient.SqlDataAdapter("select a.*, c.Cloth_Name, d.ClothType_name, e.Ledger_Name from ClothSales_Delivery_Head a left outer join ClothSales_Delivery_Details b on a.ClothSales_Delivery_Code = b.ClothSales_Delivery_Code left outer join Cloth_head c on b.Cloth_idno = c.Cloth_idno left outer join ClothType_head d on b.ClothType_idno = d.ClothType_idno left outer join Ledger_head e on a.Ledger_idno = e.Ledger_idno where a.company_idno =" & Str(Val(lbl_Company.Tag)) & "and a.ClothSales_Delivery_Code like '%/" & Trim(EntFnYrCode) & "' " & IIf(Trim(Condt) <> "", " and ", "") & Condt & " Order by ClothSales_Delivery_Date, for_orderby, ClothSales_Delivery_No", con)
            da.Fill(dt2)

            dgv_Filter_Details.Rows.Clear()

            If dt2.Rows.Count > 0 Then

                For i = 0 To dt2.Rows.Count - 1

                    n = dgv_Filter_Details.Rows.Add()

                    dgv_Filter_Details.Rows(n).Cells(0).Value = i + 1
                    dgv_Filter_Details.Rows(n).Cells(1).Value = dt2.Rows(i).Item("ClothSales_Delivery_No").ToString
                    dgv_Filter_Details.Rows(n).Cells(2).Value = Format(Convert.ToDateTime(dt2.Rows(i).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy")
                    dgv_Filter_Details.Rows(n).Cells(3).Value = dt2.Rows(i).Item("Ledger_Name").ToString
                    dgv_Filter_Details.Rows(n).Cells(4).Value = dt2.Rows(i).Item("Party_OrderNo").ToString
                    dgv_Filter_Details.Rows(n).Cells(5).Value = dt2.Rows(i).Item("Cloth_Name").ToString
                    dgv_Filter_Details.Rows(n).Cells(6).Value = dt2.Rows(i).Item("ClothType_Name").ToString
                    dgv_Filter_Details.Rows(n).Cells(7).Value = Format(Val(dt2.Rows(i).Item("Total_Meters").ToString), "########0.00")

                Next i

            End If

            dt2.Clear()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT FILTER...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            dt2.Dispose()
            da.Dispose()

            If dgv_Filter_Details.Visible And dgv_Filter_Details.Enabled Then dgv_Filter_Details.Focus()

        End Try

    End Sub

    Private Sub Open_FilterEntry()
        Dim movno As String

        On Error Resume Next

        movno = Trim(dgv_Filter_Details.CurrentRow.Cells(1).Value)

        If Val(movno) <> 0 Then
            Filter_Status = True
            Filter_RowNo = dgv_Filter_Details.CurrentRow.Index
            move_record(movno)
            pnl_Back.Enabled = True
            pnl_Filter.Visible = False
        End If

    End Sub

    Private Sub dgv_Filter_Details_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs)
        Open_FilterEntry()
    End Sub

    Private Sub dgv_Filter_Details_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs)
        If e.KeyCode = 13 Then
            Open_FilterEntry()
        End If
    End Sub

    Private Sub dgv_Details_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellEndEdit
        dgv_Details_CellLeave(sender, e)
    End Sub

    Private Sub cbo_Filter_ClothName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Filter_ClothName.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Cloth_Head", "Cloth_Name", "", "(Cloth_idno = 0)")

    End Sub

    Private Sub cbo_Filter_ClothName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Filter_ClothName.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Filter_ClothName, cbo_Filter_PartyName, Nothing, "Cloth_Head", "Cloth_Name", "", "(Cloth_idno = 0)")
        If e.KeyValue = 40 Or (e.Control = True And e.KeyValue = 40) Then
            If Common_Procedures.settings.CustomerCode = "1249" Then
                cbo_Verified_Sts.Focus()
            Else
                btn_Filter_Show.Focus()

            End If

        End If
    End Sub


    Private Sub cbo_Filter_ClothName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Filter_ClothName.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Filter_ClothName, Nothing, "Cloth_Head", "Cloth_Name", "", "(Cloth_idno = 0)")
        If Asc(e.KeyChar) = 13 Then
            If Common_Procedures.settings.CustomerCode = "1249" Then
                cbo_Verified_Sts.Focus()
            Else
                btn_Filter_Show.Focus()

            End If
        End If
    End Sub

    Private Sub cbo_Verified_Sts_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Verified_Sts.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "", "", "", "")

    End Sub
    Private Sub cbo_Verified_Sts_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Verified_Sts.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Verified_Sts, cbo_Filter_ClothName, btn_Filter_Show, "", "", "", "")
    End Sub

    Private Sub cbo_Verified_Sts_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Verified_Sts.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Verified_Sts, btn_Filter_Show, "", "", "", "")
    End Sub


    Private Sub cbo_Filter_PartyName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Filter_PartyName.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Ledger_AlaisHead", "Ledger_DisplayName", "( (Ledger_Type = '' or Ledger_Type = 'JOBWORKER'  and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_Filter_PartyName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Filter_PartyName.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Filter_PartyName, dtp_Filter_ToDate, cbo_Filter_ClothName, "Ledger_AlaisHead", "Ledger_DisplayName", "( (Ledger_Type = '' or Ledger_Type = 'JOBWORKER'  and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_Filter_PartyName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Filter_PartyName.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Filter_PartyName, cbo_Filter_ClothName, "Ledger_AlaisHead", "Ledger_DisplayName", "( (Ledger_Type = '' or Ledger_Type = 'JOBWORKER'  and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14) ) or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Public Sub print_record() Implements Interface_MDIActions.print_record

        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.PrintEntry, Common_Procedures.UR.ClothSales_Cloth_Delivery_Entry, New_Entry) = False Then Exit Sub

        pnl_Print.Visible = True
        pnl_Back.Enabled = False
        If btn_Print_Delivery.Enabled And btn_Print_Delivery.Visible Then
            btn_Print_Delivery.Focus()
        End If
    End Sub

    Private Sub btn_Print_Delivery_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_Delivery.Click
        EMAIL_Status = False
        WHATSAPP_Status = False
        Printing_Delivery()
        btn_print_Close_Click(sender, e)
    End Sub

    Private Sub btn_Print_Bale_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_Bale.Click
        EMAIL_Status = False
        WHATSAPP_Status = False
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1090" Then
            Printing_Bale_Delivery()

        ElseIf Common_Procedures.settings.CustomerCode = "1428" Then
            vPrnt_PackSlip_Wgt = True
            Printing_Packing_slip()

        ElseIf Common_Procedures.settings.CustomerCode = "1520" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1569" Then
            Printing_Delivery_cum_PackingList()

        Else
            Printing_Bale()
        End If
        btn_print_Close_Click(sender, e)
    End Sub

    Private Sub btn_Print_Cancel_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_Cancel.Click
        btn_print_Close_Click(sender, e)
    End Sub

    Private Sub btn_print_Close_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_Print.Click
        pnl_Back.Enabled = True
        pnl_Print.Visible = False
        vPACKING_LIST_PRINT_WITHOUT_WGT_STS = False
    End Sub

    Public Sub Printing_Delivery()
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim NewCode As String
        'Dim ps As Printing.PaperSize
        Dim PpSzSTS As Boolean = False
        Dim Def_PrntrNm As String = ""
        Dim vFILNm As String = ""
        Dim vFLPATH As String = ""
        Dim vPDFFLPATH_and_NAME As String = ""
        Dim vPRNTRNAME As String
        Dim vPARTYNM As String = ""

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            vPARTYNM = ""
            da1 = New SqlClient.SqlDataAdapter("select * from ClothSales_Delivery_Head Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count <= 0 Then

                If EMAIL_Status = False And WHATSAPP_Status = False Then
                    MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                End If
                Exit Sub

            Else
                vPARTYNM = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("Ledger_IdNo").ToString))

            End If

            dt1.Dispose()
            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        prn_TotCopies = 1
        Prnt_HalfSheet_STS = False

        vPrnt_2Copy_In_SinglePage = Common_Procedures.settings.ClothsalesDelivery_Print_2Copy_In_SinglePage

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Then '---- Prakash Sizing (Somanur)

            Dim mymsgbox As New Tsoft_MessageBox("Select Paper Size to Print", "A4,HALF-SHEET,CANCEL", "FOR PRINTING...", "IF A4 is selected, 2 copies of dc will be printed in single A4 sheet," & Chr(13) & "If HALF-SHEET is selected 1 copy of dc will be printed in 8x6 paper size", MesssageBoxIcons.Questions, 2)
            mymsgbox.ShowDialog()

            If mymsgbox.MessageBoxResult = 1 Then
                vPrnt_2Copy_In_SinglePage = 1

            ElseIf mymsgbox.MessageBoxResult = 2 Then
                Prnt_HalfSheet_STS = True

                vPrnt_2Copy_In_SinglePage = 0

            Else

                Exit Sub

            End If

            'prn_TotCopies = Val(InputBox("Enter No.of Copies", "FOR DELIVERY PRINTING...", "1"))
            'If Val(prn_TotCopies) <= 0 Then
            '    Exit Sub
            'End If

        End If

        set_PaperSize_For_PrintDocument1()

        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then

            If Print_PDF_Status = True Then

                vFLPATH = ""
                vPRNTRNAME = Common_Procedures.get_PDF_PrinterName(EMAIL_Status, WHATSAPP_Status, vFLPATH)

                If Trim(vPRNTRNAME) = "" Then
                    Exit Sub
                End If

                Def_PrntrNm = PrintDocument1.PrinterSettings.PrinterName

                vPARTYNM = Common_Procedures.Replace_SpecialCharacters_With_UnderScore(vPARTYNM)

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SPINNERS PRIVATE LIMITED (FABRIC DIVISION)
                    vFILNm = Trim("Delivery_" & Trim(lbl_DcNo.Text) & "_" & Trim(vPARTYNM) & ".pdf")
                Else
                    vFILNm = Trim("Delivery_" & Trim(lbl_DcNo.Text) & ".pdf")
                End If

                vFILNm = StrConv(vFILNm, vbProperCase)
                vPDFFLPATH_and_NAME = Trim(vFLPATH) & "\" & Trim(vFILNm)
                vEMAIL_Attachment_FileName = Trim(vPDFFLPATH_and_NAME)

                PrintDocument1.DocumentName = Trim(vFILNm)
                PrintDocument1.PrinterSettings.PrinterName = Trim(vPRNTRNAME)    ' "Microsoft Print to PDF"
                'PrintDocument1.PrinterSettings.PrinterName = "doPDF v7"
                PrintDocument1.PrinterSettings.PrintToFile = True
                PrintDocument1.PrinterSettings.PrintFileName = Trim(vPDFFLPATH_and_NAME)
                PrintDocument1.Print()

                'Debug.Print(PrintDocument1.PrinterSettings.PrintFileName)

                PrintDocument1.PrinterSettings.PrinterName = Trim(Def_PrntrNm)
                Print_PDF_Status = False


                'PrintDocument1.DocumentName = "Delivery"
                'PrintDocument1.PrinterSettings.PrinterName = "doPDF v7"
                'PrintDocument1.PrinterSettings.PrintFileName = "c:\Delivery.pdf"
                'PrintDocument1.Print()


            Else

                Try
                    If Val(Common_Procedures.settings.Printing_Show_PrintDialogue) = 1 Then
                        PrintDialog1.PrinterSettings = PrintDocument1.PrinterSettings
                        If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                            PrintDocument1.PrinterSettings = PrintDialog1.PrinterSettings
                            set_PaperSize_For_PrintDocument1()
                            PrintDocument1.Print()
                        End If

                    Else

                        PrintDocument1.Print()

                    End If

                Catch ex As Exception

                    MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

                End Try

            End If

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                set_PaperSize_For_PrintDocument1()
                'For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                '    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                '    If ps.Width = 800 And ps.Height = 600 Then
                '        PrintDocument1.DefaultPageSettings.PaperSize = ps
                '        PpSzSTS = True
                '        Exit For
                '    End If
                'Next

                'If PpSzSTS = False Then
                '    Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
                '    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
                '    PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
                'End If

                ppd.Document = PrintDocument1

                ppd.WindowState = FormWindowState.Maximized
                ppd.StartPosition = FormStartPosition.CenterScreen
                ppd.ClientSize = New Size(800, 900)

                ppd.ShowDialog()

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If

        Print_PDF_Status = False

    End Sub

    Private Sub PrintDocument1_BeginPrint(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintEventArgs) Handles PrintDocument1.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim NewCode As String
        Dim Mtr_Rate As Integer = 0


        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        prn_HdDt.Clear()
        prn_DetDt.Clear()
        prn_DetIndx = 0
        prn_DetSNo = 0
        prn_PageNo = 0
        vprn_TotAmt = 0

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.*, b.*, c.*,f.*, d.Ledger_Name as TransportName ,e.Ledger_Name as Agent_Name,Csh.State_Name as Company_State_Name, Csh.State_Code as Company_State_Code, Lsh.State_Name as Ledger_State_Name, Lsh.State_Code as Ledger_State_Code ,f.Ledger_MainName as DeliveryTo_LedgerName, f.Ledger_Address1 as DeliveryTo_LedgerAddress1, f.Ledger_Address2 as DeliveryTo_LedgerAddress2, f.Ledger_Address3 as DeliveryTo_LedgerAddress3, f.Ledger_Address4 as DeliveryTo_LedgerAddress4, f.Ledger_GSTinNo as DeliveryTo_LedgerGSTinNo, f.Ledger_pHONENo as DeliveryTo_LedgerPhoneNo, f.Pan_No as DeliveryTo_PanNo,Dsh.State_Name as DeliveryTo_State_Name, Dsh.State_Code as DeliveryTo_State_Code from ClothSales_Delivery_Head a INNER JOIN Company_Head b ON a.Company_IdNo = b.Company_IdNo LEFT OUTER JOIN State_Head Csh ON b.Company_State_IdNo = Csh.State_IdNo INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo LEFT OUTER JOIN State_Head Lsh ON c.Ledger_State_IdNo = Lsh.State_IdNo Left outer JOIN Ledger_Head d ON a.Transport_IdNo = d.Ledger_IdNo Left outer JOIN Ledger_Head e ON a.Agent_IdNo = e.Ledger_IdNo LEFT OUTER JOIN Ledger_Head f ON  a.DeliveryTo_IdNo = f.Ledger_IdNo  LEFT OUTER JOIN State_Head Dsh ON f.Ledger_State_IdNo = Dsh.State_IdNo where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)

            If prn_HdDt.Rows.Count > 0 Then

                da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, b.Cloth_Description, d.ClothType_name , e.* from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.ClothIdNo_ToPrint = b.Cloth_idno INNER JOIN ItemGroup_Head e ON e.ItemGroup_IdNo = b.ItemGroup_IdNo LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' Order by a.Sl_No", con)
                'da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, b.Cloth_Description, d.ClothType_name ,e.* from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno INNER JOIN ItemGroup_Head e ON e.ItemGroup_IdNo = b.ItemGroup_IdNo LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' Order by a.Sl_No", con)
                prn_DetDt = New DataTable
                da2.Fill(prn_DetDt)

            Else
                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End If

            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub PrintDocument1_PrintPage(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument1.PrintPage

        If prn_HdDt.Rows.Count <= 0 Then Exit Sub

        If Trim(Common_Procedures.settings.CustomerCode) = "1311" Then '-----SRI SAAI TEXTTILE
            Printing_Delivery_Format2(e)

        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1186" Then ''----united Weaves
            Printing_Format_DC_1186(e)

        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1420" Then ''----Cyber Textile
            Printing_Delivery_Format1420(e)

        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1267" Then ''----BRT Textile
            Printing_Delivery_Format1267(e)

        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1464" Then ''---- MOF
            Printing_Delivery_Format4_1464(e)

        Else
            Printing_Delivery_Format3(e)

        End If
    End Sub

    Private Sub Printing_Delivery_Format2(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim ItmNm1 As String, ItmNm2 As String
        Dim SlNo As Integer
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0
        Dim TpMargin As Single = 0
        set_PaperSize_For_PrintDocument1()

        'For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '    If ps.Width = 800 And ps.Height = 600 Then
        '        PrintDocument1.DefaultPageSettings.PaperSize = ps
        '        e.PageSettings.PaperSize = ps
        '        PpSzSTS = True
        '        Exit For
        '    End If
        'Next

        'If PpSzSTS = False Then

        '    Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
        '    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1

        '    'For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '    '    If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
        '    '        ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '    '        PrintDocument1.DefaultPageSettings.PaperSize = ps
        '    '        e.PageSettings.PaperSize = ps
        '    '        PpSzSTS = True
        '    '        Exit For
        '    '    End If
        '    'Next

        '    'If PpSzSTS = False Then
        '    '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '    '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '    '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '    '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '    '            e.PageSettings.PaperSize = ps
        '    '            Exit For
        '    '        End If
        '    '    Next
        '    'End If

        'End If

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 20
            .Right = 30
            .Top = 30
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        'pFont = New Font("Calibri", 11, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        NoofItems_PerPage = 20

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            NoofItems_PerPage = NoofItems_PerPage - 1
        End If
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        '    NoofItems_PerPage = 4

        'Else
        '    NoofItems_PerPage = 5

        'End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = Val(35) : ClAr(2) = 290 : ClAr(3) = 105 : ClAr(4) = 80 : ClAr(5) = 110
        ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))

        TxtHgt = 18

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)



        If Trim(Common_Procedures.settings.CustomerCode) = "1037" And vPrnt_2Copy_In_SinglePage = 1 Then
            PCnt = PCnt + 1
            PrntCnt = PrntCnt + 1
        End If
        PrntCnt2ndPageSTS = False
        TpMargin = TMargin

        Try
            If prn_HdDt.Rows.Count > 0 Then

                Printing_Delivery_Format2_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = 0

                CurY = CurY - 10

                If prn_DetDt.Rows.Count > 0 Then

                    Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, "Continued...", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, pFont)

                            NoofDets = NoofDets + 1

                            Printing_Delivery_Format2_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                            e.HasMorePages = True
                            Return

                        End If

                        ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Name").ToString)
                        ItmNm2 = ""
                        If Len(ItmNm1) > 40 Then
                            For I = 40 To 1 Step -1
                                If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                            Next I
                            If I = 0 Then I = 40
                            ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                            ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                        End If

                        CurY = CurY + TxtHgt + 10
                        SlNo = SlNo + 1
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetIndx), LMargin + 15, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Item_HSN_Code").ToString, LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Pcs").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 0 And Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 100 Then
                                CurY = CurY + TxtHgt
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) & " CM  Folding ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If
                        End If

                        NoofDets = NoofDets + 1

                        If Trim(ItmNm2) <> "" Then
                            CurY = CurY + TxtHgt - 5
                            Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm2), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            NoofDets = NoofDets + 1
                        End If

                        prn_DetIndx = prn_DetIndx + 1

                    Loop

                End If

                Printing_Delivery_Format2_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        e.HasMorePages = False

    End Sub

    Private Sub Printing_Delivery_Format2_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_Email As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single, strWidth As Single = 0
        Dim C1 As Single
        Dim W1, w2 As Single
        Dim S1, S2, S3 As Single
        Dim vprn_BlNos As String = ""
        Dim Gst_dt As Date
        Dim Entry_dt As Date
        Dim CurX As Single = 0
        Dim vPackType As String = ""

        PageNo = PageNo + 1

        CurY = TMargin

        da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, d.ClothType_name from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        da2.Fill(dt2)

        If dt2.Rows.Count > NoofItems_PerPage Then
            Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        End If
        dt2.Clear()

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_Cap = "GSTIN : "
            Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 18, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

        Gst_dt = #7/1/2017#
        Entry_dt = dtp_Date.Value

        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt - 13  ' 10

        Else

            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_GSTIN_Cap), p1Font).Width
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_StateNm & "     " & Cmp_GSTIN_Cap & Cmp_GSTIN_No), pFont).Width
            If PrintWidth > strWidth Then
                CurX = LMargin + (PrintWidth - strWidth) / 2
            Else
                CurX = LMargin
            End If

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateCap, CurX, CurY, 0, 0, p1Font)
            strWidth = e.Graphics.MeasureString(Cmp_StateCap, p1Font).Width
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateNm, CurX, CurY, 0, 0, pFont)

            strWidth = e.Graphics.MeasureString(Cmp_StateNm, pFont).Width
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, "     " & Cmp_GSTIN_Cap, CurX, CurY, 0, PrintWidth, p1Font)
            strWidth = e.Graphics.MeasureString("     " & Cmp_GSTIN_Cap, p1Font).Width
            CurX = CurX + strWidth

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, CurX, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Trim(Cmp_PhNo & "   " & Cmp_Email), LMargin, CurY, 2, PrintWidth, pFont)

            CurY = CurY + TxtHgt - 1

        End If

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 16, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY CHALLAN", LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3)
        W1 = e.Graphics.MeasureString("ORDER NO : ", pFont).Width
        w2 = e.Graphics.MeasureString("DESP.TO : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO  :  ", pFont).Width
        S2 = e.Graphics.MeasureString("TRANSPORT :  ", pFont).Width

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_MAInName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 15, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 14, FontStyle.Bold)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 15, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 15, CurY, 0, 0, pFont)
        If prn_HdDt.Rows(0).Item("Party_OrderNo").ToString <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)
        End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 15, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            If Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, " TIN NO : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString), LMargin + S1 + 15, CurY, 0, 0, pFont)
            End If

        Else
            If Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString) <> "" Then
                p1Font = New Font("Calibri", 11, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN NO : " & Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString), LMargin + S1 + 15, CurY, 0, 0, p1Font)
            End If

        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))
        CurY = CurY + 5

        Common_Procedures.Print_To_PrintDocument(e, "THROUGH  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Through_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        If Trim(prn_HdDt.Rows(0).Item("Vechile_No").ToString) <> "" Then
            S3 = e.Graphics.MeasureString("THROUGH     :   " & prn_HdDt.Rows(0).Item("Through_Name").ToString, pFont).Width + 30

            Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + S3 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + S3 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + S3 + 30, CurY, 0, 0, pFont)
        End If


        Common_Procedures.Print_To_PrintDocument(e, "DESP.TO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_To").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "LR.NO  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "TRANSPORT ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("TransportName").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "AGENT ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        'vprn_BlNos = ""
        'For i = 0 To prn_DetDt.Rows.Count - 1
        '    If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
        '        vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
        '    End If
        'Next

        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        'Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & vprn_BlNos, LMargin + C1 + 10, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        pFont = New Font("Calibri", 11, FontStyle.Bold)
        CurY = CurY + TxtHgt - 10
        Common_Procedures.Print_To_PrintDocument(e, "SNO", LMargin, CurY, 2, ClAr(1), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "CLOTH NAME", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "HSN CODE", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & "S", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)


        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY


    End Sub

    Private Sub Printing_Delivery_Format2_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim vPackType As String = ""
        Dim BLNo1 As String = ""
        Dim BLNo2 As String = ""


        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY

        CurY = CurY + TxtHgt - 10
        If is_LastPage = True Then
            pFont = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " TOTAL", LMargin + ClAr(1) + ClAr(2) - 70, CurY, 2, ClAr(4), pFont)
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(0).Item("Total_Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Pcs").ToString), "#########0"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(6) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
        CurY = CurY + 10


        vprn_BlNos = ""
        For i = 0 To prn_DetDt.Rows.Count - 1
            If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
                vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
            End If
        Next

        BLNo1 = Trim(vprn_BlNos)
        BLNo2 = ""

        If Len(BLNo1) > 75 Then
            For i = 75 To 1 Step -1
                If Mid$(Trim(BLNo1), i, 1) = " " Or Mid$(Trim(BLNo1), i, 1) = "," Or Mid$(Trim(BLNo1), i, 1) = "." Or Mid$(Trim(BLNo1), i, 1) = "-" Or Mid$(Trim(BLNo1), i, 1) = "/" Or Mid$(Trim(BLNo1), i, 1) = "_" Or Mid$(Trim(BLNo1), i, 1) = "(" Or Mid$(Trim(BLNo1), i, 1) = ")" Or Mid$(Trim(BLNo1), i, 1) = "\" Or Mid$(Trim(BLNo1), i, 1) = "[" Or Mid$(Trim(BLNo1), i, 1) = "]" Or Mid$(Trim(BLNo1), i, 1) = "{" Or Mid$(Trim(BLNo1), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = 75
            BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - i)
            BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), i)
        End If


        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & BLNo1, LMargin + 10, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo2, LMargin + 10, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "NOTE : " & prn_HdDt.Rows(0).Item("Note").ToString, LMargin + 10, CurY, 0, 0, pFont)
            CurY = CurY + TxtHgt
        End If
        'End If

        If Common_Procedures.User.IdNo <> 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + 20, CurY, 0, 0, pFont)
        End If

        CurY = CurY + TxtHgt + 20

        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        p1Font = New Font("Calibri", 12, FontStyle.Bold)

        Common_Procedures.Print_To_PrintDocument(e, "Prepared By", LMargin + 20, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 250, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub dgv_Filter_Details_CellDoubleClick1(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Filter_Details.CellDoubleClick
        Open_FilterEntry()
    End Sub

    Private Sub dgv_Filter_Details_KeyDown1(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Filter_Details.KeyDown
        If e.KeyCode = 13 Then
            Open_FilterEntry()
        End If
    End Sub

    Private Sub txt_Freight_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Freight.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub btn_Selection_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Selection.Click
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer, j As Integer, n As Integer, SNo As Integer
        Dim LedIdNo As Integer
        Dim NewCode As String
        Dim CompIDCondt As String
        Dim Ent_Bls As Single = 0
        Dim Ent_BlNos As String = ""
        Dim Ent_Pcs As Single = 0
        Dim Ent_Mtrs As Single = 0
        Dim Ent_Rate As Single = 0
        Dim Ent_Closale_Delv_Slno As Long = 0
        Dim Ent_InvMtrs As String = 0


        LedIdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_PartyName.Text)

        If LedIdNo = 0 Then
            MessageBox.Show("Invalid Party Name", "DOES NOT SELECT ORDER...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If cbo_PartyName.Enabled And cbo_PartyName.Visible Then cbo_PartyName.Focus()
            Exit Sub
        End If

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        CompIDCondt = "(a.company_idno = " & Str(Val(lbl_Company.Tag)) & ")"
        If Common_Procedures.settings.EntrySelection_Combine_AllCompany = 1 Then
            CompIDCondt = ""
            If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                CompIDCondt = "(tZ.Company_Type <> 'UNACCOUNT')"
            End If
        End If

        If Trim(UCase(cbo_Type.Text)) = "INVOICE" Then

            Show_ClothInvoice_Selection()

        Else

            With dgv_Selection

                .Rows.Clear()
                SNo = 0

                Da = New SqlClient.SqlDataAdapter("select a.*, b.*, c.Cloth_Name, d.Ledger_Name as agentname, e.Ledger_Name as Transportname,f.Ledger_Name as Delivery_name,  g.ClothType_name, h.Bales as Ent_Bales, h.Bales_Nos as Ent_Bales_Nos, h.Pcs as Ent_Pcs, h.Meters as Ent_DcMeters, h.Rate as Ent_Rate, h.ClothSales_Delivery_SlNo as Ent_Clothsale_Delivery_Slno,  (ISNULL(h.Invoice_Meters,0)+ISNULL(h.Return_Meters,0)) as Ent_Invoice_meters from ClothSales_Order_Head a INNER JOIN Clothsales_Order_details b ON a.ClothSales_Order_Code = b.ClothSales_Order_Code  INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Cloth_Head c ON b.Cloth_IdNo = c.Cloth_IdNo INNER JOIN ClothType_Head g ON b.ClothType_IdNo = g.ClothType_IdNo LEFT OUTER JOIN Ledger_Head d ON a.Agent_IdNo = d.Ledger_IdNo LEFT OUTER JOIN Ledger_Head e ON a.Transport_IdNo = e.Ledger_IdNo LEFT OUTER JOIN Ledger_Head f ON a.DeliveryTo_IdNo = f.Ledger_IdNo LEFT OUTER JOIN ClothSales_Delivery_Details h ON h.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and b.ClothSales_Order_Code = h.ClothSales_Order_Code and b.ClothSales_Order_SlNo = h.ClothSales_Order_SlNo Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & " (a.ledger_Idno = " & Str(Val(LedIdNo)) & " OR  a.ledger_Idno IN (select sq1.ledger_idno from ledger_head sq1, ledger_head sq2 where sq2.LedgerGroup_Idno <> 0 and sq2.Ledger_Idno = " & Str(Val(LedIdNo)) & " and sq1.LedgerGroup_Idno = sq2.LedgerGroup_Idno ) ) and (((b.Order_Meters - b.Order_Cancel_Meters - b.Delivery_Meters - b.Invoice_Meters) > 0  and a.Order_Close_Status = 0) or h.Meters > 0 ) order by a.ClothSales_Order_Date, a.for_orderby, a.ClothSales_Order_No", con)
                Dt1 = New DataTable
                Da.Fill(Dt1)

                If Dt1.Rows.Count > 0 Then

                    For i = 0 To Dt1.Rows.Count - 1

                        n = .Rows.Add()

                        Ent_Bls = 0
                        Ent_BlNos = ""
                        Ent_Pcs = 0
                        Ent_Mtrs = 0
                        Ent_Rate = 0
                        Ent_Closale_Delv_Slno = 0
                        Ent_InvMtrs = 0

                        If IsDBNull(Dt1.Rows(i).Item("Ent_Bales").ToString) = False Then
                            Ent_Bls = Val(Dt1.Rows(i).Item("Ent_Bales").ToString)
                        End If
                        If IsDBNull(Dt1.Rows(i).Item("Ent_Bales_Nos").ToString) = False Then
                            Ent_BlNos = Dt1.Rows(i).Item("Ent_Bales_Nos").ToString
                        End If
                        If IsDBNull(Dt1.Rows(i).Item("Ent_Pcs").ToString) = False Then
                            Ent_Pcs = Val(Dt1.Rows(i).Item("Ent_Pcs").ToString)
                        End If
                        If IsDBNull(Dt1.Rows(i).Item("Ent_DcMeters").ToString) = False Then
                            Ent_Mtrs = Val(Dt1.Rows(i).Item("Ent_DcMeters").ToString)
                        End If
                        If IsDBNull(Dt1.Rows(i).Item("Ent_Rate").ToString) = False Then
                            Ent_Rate = Val(Dt1.Rows(i).Item("Ent_Rate").ToString)
                        End If
                        If IsDBNull(Dt1.Rows(i).Item("Ent_Clothsale_Delivery_Slno").ToString) = False Then
                            Ent_Closale_Delv_Slno = Val(Dt1.Rows(i).Item("Ent_Clothsale_Delivery_Slno").ToString)
                        End If
                        If IsDBNull(Dt1.Rows(i).Item("Ent_Invoice_meters").ToString) = False Then
                            Ent_InvMtrs = Val(Dt1.Rows(i).Item("Ent_Invoice_meters").ToString)
                        End If

                        SNo = SNo + 1
                        .Rows(n).Cells(0).Value = Val(SNo)
                        .Rows(n).Cells(1).Value = Dt1.Rows(i).Item("Party_OrderNo").ToString
                        .Rows(n).Cells(2).Value = Format(Convert.ToDateTime(Dt1.Rows(i).Item("ClothSales_Order_Date").ToString), "dd-MM-yyyy")
                        .Rows(n).Cells(3).Value = Dt1.Rows(i).Item("Cloth_Name").ToString
                        .Rows(n).Cells(4).Value = Dt1.Rows(i).Item("ClothType_Name").ToString
                        .Rows(n).Cells(5).Value = Val(Dt1.Rows(i).Item("Fold_Perc").ToString)
                        .Rows(n).Cells(6).Value = Val(Dt1.Rows(i).Item("Order_Pcs").ToString)
                        .Rows(n).Cells(7).Value = Format(Val(Dt1.Rows(i).Item("Order_Meters").ToString) - Val(Dt1.Rows(i).Item("Order_Cancel_Meters").ToString) - Val(Dt1.Rows(i).Item("Delivery_Meters").ToString) - Val(Dt1.Rows(i).Item("Invoice_Meters").ToString) + Val(Ent_Mtrs), "#########0.00")

                        If Ent_Mtrs > 0 Then
                            .Rows(n).Cells(8).Value = "1"
                            For j = 0 To .ColumnCount - 1
                                .Rows(n).Cells(j).Style.ForeColor = Color.Red
                            Next
                        Else
                            .Rows(n).Cells(8).Value = ""
                        End If

                        .Rows(n).Cells(9).Value = Dt1.Rows(i).Item("agentname").ToString
                        .Rows(n).Cells(10).Value = Dt1.Rows(i).Item("Transportname").ToString
                        .Rows(n).Cells(11).Value = Dt1.Rows(i).Item("Through_Name").ToString
                        .Rows(n).Cells(12).Value = Dt1.Rows(i).Item("Despatch_To").ToString
                        .Rows(n).Cells(13).Value = Dt1.Rows(i).Item("Delivery_Address1").ToString
                        .Rows(n).Cells(14).Value = Dt1.Rows(i).Item("Delivery_name").ToString
                        '.Rows(n).Cells(14).Value = Dt1.Rows(i).Item("Delivery_Address2").ToString
                        .Rows(n).Cells(15).Value = Dt1.Rows(i).Item("Clothsales_Order_Code").ToString
                        .Rows(n).Cells(16).Value = Dt1.Rows(i).Item("Clothsales_Order_SlNo").ToString

                        .Rows(n).Cells(17).Value = Val(Ent_Bls)
                        .Rows(n).Cells(18).Value = Ent_BlNos
                        .Rows(n).Cells(19).Value = Ent_Pcs
                        .Rows(n).Cells(20).Value = Ent_Mtrs
                        .Rows(n).Cells(21).Value = Val(Dt1.Rows(i).Item("Rate").ToString)
                        .Rows(n).Cells(22).Value = Ent_Rate
                        .Rows(n).Cells(23).Value = Ent_Closale_Delv_Slno
                        .Rows(n).Cells(24).Value = Ent_InvMtrs

                    Next

                End If
                Dt1.Clear()

            End With

            Total_BaleSelection_Calculation()

            pnl_Selection.Visible = True
            pnl_Back.Enabled = False
            dgv_Selection.Focus()

        End If


    End Sub

    Private Sub dgv_Selection_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Selection.CellClick
        Select_OrderIndent_Grid(e.RowIndex)
    End Sub

    Private Sub Select_OrderIndent_Grid(ByVal RwIndx As Integer)
        Dim i As Integer

        With dgv_Selection

            If .RowCount > 0 And RwIndx >= 0 Then

                .Rows(RwIndx).Cells(8).Value = (Val(.Rows(RwIndx).Cells(8).Value) + 1) Mod 2

                If Val(.Rows(RwIndx).Cells(8).Value) = 1 Then

                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Red
                    Next


                Else
                    .Rows(RwIndx).Cells(8).Value = ""

                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Black
                    Next

                End If

            End If

        End With

    End Sub

    Private Sub dgv_Selection_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Selection.KeyDown
        Dim n As Integer

        On Error Resume Next

        If e.KeyCode = Keys.Enter Or e.KeyCode = Keys.Space Then

            If dgv_Selection.CurrentCell.RowIndex >= 0 Then

                n = dgv_Selection.CurrentCell.RowIndex

                Select_OrderIndent_Grid(n)

                e.Handled = True

            End If
        End If

    End Sub

    Private Sub btn_Close_Selection_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_Selection.Click
        Close_OrderIndent_Selection()
    End Sub

    Private Sub Close_OrderIndent_Selection()
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim n As Integer = 0
        Dim sno As Integer = 0
        Dim i As Integer = 0
        Dim j As Integer = 0
        Dim vPackSlipCodes As String = ""


        dgv_Details.Rows.Clear()

        For i = 0 To dgv_Selection.RowCount - 1

            If Val(dgv_Selection.Rows(i).Cells(8).Value) = 1 Then

                txt_OrderNo.Text = dgv_Selection.Rows(i).Cells(1).Value
                txt_Order_Date.Text = dgv_Selection.Rows(i).Cells(2).Value
                cbo_Agent.Text = dgv_Selection.Rows(i).Cells(9).Value
                cbo_Through.Text = dgv_Selection.Rows(i).Cells(11).Value
                cbo_DespTo.Text = dgv_Selection.Rows(i).Cells(12).Value
                cbo_Transport.Text = dgv_Selection.Rows(i).Cells(10).Value

                If txt_DelvAdd1.Text = "" Then
                    If (dgv_Selection.Rows(i).Cells(13).Value) <> "" Then
                        txt_DelvAdd1.Text = dgv_Selection.Rows(i).Cells(13).Value
                    End If
                End If

                'If txt_DelvAdd2.Text = "" Then
                '    If (dgv_Selection.Rows(i).Cells(14).Value) <> "" Then
                '        txt_DelvAdd2.Text = dgv_Selection.Rows(i).Cells(14).Value
                '    End If
                'End If

                If cbo_DeliveryTo.Text = "" Then
                    If Trim(dgv_Selection.Rows(i).Cells(14).Value) <> "" Then
                        cbo_DeliveryTo.Text = dgv_Selection.Rows(i).Cells(14).Value
                    End If
                End If

                n = dgv_Details.Rows.Add()
                sno = sno + 1
                dgv_Details.Rows(n).Cells(0).Value = Val(sno)
                dgv_Details.Rows(n).Cells(1).Value = dgv_Selection.Rows(i).Cells(3).Value
                dgv_Details.Rows(n).Cells(2).Value = dgv_Selection.Rows(i).Cells(4).Value
                dgv_Details.Rows(n).Cells(3).Value = dgv_Selection.Rows(i).Cells(5).Value

                If Val(dgv_Selection.Rows(i).Cells(17).Value) <> 0 Then
                    dgv_Details.Rows(n).Cells(4).Value = dgv_Selection.Rows(i).Cells(17).Value
                End If
                dgv_Details.Rows(n).Cells(5).Value = dgv_Selection.Rows(i).Cells(18).Value

                If Val(dgv_Selection.Rows(i).Cells(19).Value) <> 0 Then
                    dgv_Details.Rows(n).Cells(6).Value = dgv_Selection.Rows(i).Cells(19).Value
                Else
                    dgv_Details.Rows(n).Cells(6).Value = dgv_Selection.Rows(i).Cells(6).Value
                End If

                If Val(dgv_Selection.Rows(i).Cells(20).Value) <> 0 Then
                    dgv_Details.Rows(n).Cells(7).Value = dgv_Selection.Rows(i).Cells(20).Value
                Else
                    dgv_Details.Rows(n).Cells(7).Value = dgv_Selection.Rows(i).Cells(7).Value
                End If

                dgv_Details.Rows(n).Cells(8).Value = dgv_Selection.Rows(i).Cells(15).Value
                dgv_Details.Rows(n).Cells(9).Value = dgv_Selection.Rows(i).Cells(16).Value

                dgv_Details.Rows(n).Cells(10).Value = dgv_Selection.Rows(i).Cells(23).Value
                If Val(dgv_Details.Rows(n).Cells(10).Value) = 0 Then
                    Set_Max_Delivery_DetailsSlNo(n, 10)
                End If

                dgv_Details.Rows(n).Cells(11).Value = dgv_Selection.Rows(i).Cells(24).Value

                vPackSlipCodes = ""
                For j = 0 To dgv_BaleDetails.RowCount - 1
                    If Val(dgv_BaleDetails.Rows(j).Cells(0).Value) = Val(dgv_Details.Rows(n).Cells(10).Value) And Val(dgv_BaleDetails.Rows(j).Cells(3).Value) <> 0 And Trim(dgv_BaleDetails.Rows(j).Cells(5).Value) <> "" Then
                        vPackSlipCodes = Trim(vPackSlipCodes) & IIf(Trim(vPackSlipCodes) = "", "~", "") & Trim(dgv_BaleDetails.Rows(j).Cells(5).Value) & "~"
                    End If
                Next
                dgv_Details.Rows(n).Cells(12).Value = vPackSlipCodes

                If Val(dgv_Selection.Rows(i).Cells(22).Value) <> 0 Then
                    dgv_Details.Rows(n).Cells(13).Value = dgv_Selection.Rows(i).Cells(22).Value
                Else
                    dgv_Details.Rows(n).Cells(13).Value = dgv_Selection.Rows(i).Cells(21).Value
                End If

            End If

        Next

        Total_Calculation()


        pnl_Back.Enabled = True
        pnl_Selection.Visible = False
        If txt_LrNo.Enabled And txt_LrNo.Visible Then txt_LrNo.Focus()

    End Sub

    Private Sub cbo_Type_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Type.TextChanged
        If Trim(UCase(cbo_Type.Text)) = "ORDER" Then
            dgv_Details.AllowUserToAddRows = False
            dgv_Details.ReadOnly = False
        ElseIf Trim(UCase(cbo_Type.Text)) = "INVOICE" Then
            dgv_Details.AllowUserToAddRows = False
            dgv_Details.ReadOnly = True
        Else
            dgv_Details.AllowUserToAddRows = True
            dgv_Details.ReadOnly = False
        End If
    End Sub

    Private Sub btn_BaleSelection_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_BaleSelection.Click
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Dt2 As New DataTable
        Dim i As Integer, j As Integer, n As Integer, SNo As Integer
        Dim Clo_ID As Integer, CloType_ID As Integer
        Dim NewCode As String = ""
        Dim Fd_Perc As String = 0
        Dim CompIDCondt As String
        Dim dgvDet_CurRow As Integer
        Dim dgv_DetSlNo As Long
        Dim vGod_ID As Integer = 0
        Dim Clo_GrpIdNos As String
        Dim Clo_UndIdNo As Integer
        Dim CloID_Cond As String = ""
        Dim vBarCode As String = ""
        Dim vYrCode As String = ""
        Dim vCond_Fold As String = ""
        Dim vSELC_BALECODES As String = ""
        Dim vSELC_OTHER_DET_BALECODES As String = ""
        Dim vFERNOS As String

        Try

            If Trim(UCase(cbo_Type.Text)) = "INVOICE" Then
                Exit Sub
            End If

            If IsNothing(dgv_Details.CurrentCell) Then
                Exit Sub
            End If


            If Trim(UCase(cbo_RollBundle.Text)) = "PCS" Then
                btn_PieceSelection_Click(sender, e)
                Exit Sub
            End If

            If dgv_Details.CurrentCell.RowIndex < 0 Then
                MessageBox.Show("Invalid Cloth Name & Type Selection", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If dgv_Details.Enabled And dgv_Details.Visible Then
                    If dgv_Details.Rows.Count > 0 Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(4)
                        dgv_Details.CurrentCell.Selected = True
                    End If
                End If
                Exit Sub
            End If

            vGod_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Godown.Text)
            If cbo_Godown.Visible = True Then
                If vGod_ID = 0 Then
                    MessageBox.Show("Invalid Fabric Godown Name", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    If cbo_Godown.Enabled And cbo_Godown.Visible Then cbo_Godown.Focus()
                    Exit Sub
                End If
            End If
            If vGod_ID = 0 Then vGod_ID = Common_Procedures.CommonLedger.Godown_Ac

            Clo_ID = Common_Procedures.Cloth_NameToIdNo(con, dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(1).Value)
            If Clo_ID = 0 Then
                MessageBox.Show("Invalid Cloth Name", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If dgv_Details.Enabled And dgv_Details.Visible Then
                    If dgv_Details.Rows.Count > 0 Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
                        If cbo_Grid_ClothName.Visible And cbo_Grid_ClothName.Enabled Then cbo_Grid_ClothName.Focus()
                        'dgv_Details.CurrentCell.Selected = True
                        Exit Sub
                    End If
                End If
                Exit Sub
            End If

            CloType_ID = Common_Procedures.ClothType_NameToIdNo(con, dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(2).Value)
            If CloType_ID = 0 Then
                MessageBox.Show("Invalid Cloth Type ", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If dgv_Details.Enabled And dgv_Details.Visible Then
                    If dgv_Details.Rows.Count > 0 Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(2)
                        If cbo_Grid_Clothtype.Visible And cbo_Grid_Clothtype.Enabled Then cbo_Grid_Clothtype.Focus()
                        Exit Sub
                    End If
                End If
                Exit Sub
            End If

            Fd_Perc = dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(3).Value
            If Val(Fd_Perc) = 0 Then Fd_Perc = 100
            If Val(Fd_Perc) = 0 Then
                MessageBox.Show("Invalid Folding", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If dgv_Details.Enabled And dgv_Details.Visible Then
                    If dgv_Details.Rows.Count > 0 Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(3)
                        dgv_Details.CurrentCell.Selected = True
                    End If
                End If
                Exit Sub
            End If



            dgvDet_CurRow = dgv_Details.CurrentCell.RowIndex
            dgv_DetSlNo = Val(dgv_Details.Rows(dgvDet_CurRow).Cells(10).Value)
            If Val(dgv_DetSlNo) = 0 Then
                Set_Max_Delivery_DetailsSlNo(dgvDet_CurRow, 10)
            End If
            dgv_DetSlNo = Val(dgv_Details.Rows(dgvDet_CurRow).Cells(10).Value)
            If Val(dgv_DetSlNo) = 0 Then
                MessageBox.Show("Invalid Cloth Delivery Details.SlNo", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If dgv_Details.Enabled And dgv_Details.Visible Then
                    If dgv_Details.Rows.Count > 0 Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(dgvDet_CurRow).Cells(7)
                        dgv_Details.CurrentCell.Selected = True
                    End If
                End If
                Exit Sub
            End If

            CompIDCondt = "(a.company_idno = " & Str(Val(lbl_Company.Tag)) & ")"
            If Common_Procedures.settings.EntrySelection_Combine_AllCompany = 1 Then
                CompIDCondt = ""
                If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                    CompIDCondt = "(tZ.Company_Type <> 'UNACCOUNT')"
                End If
            End If

            If Trim(cbo_RollBundle.Text) <> "" Then
                CompIDCondt = Trim(CompIDCondt) & IIf(Trim(CompIDCondt) <> "", " and ", "") & "(a.Bale_Bundle = '" & Trim(cbo_RollBundle.Text) & "')"
            End If

            Clo_UndIdNo = Clo_ID

            Da = New SqlClient.SqlDataAdapter("select * from Cloth_head where Cloth_idno = " & Str(Val(Clo_UndIdNo)), con)
            Dt1 = New DataTable
            Da.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) = False Then
                    If Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) <> 0 Then Clo_UndIdNo = Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString)
                End If
            End If
            Dt1.Clear()

            Da = New SqlClient.SqlDataAdapter("select * from Cloth_head where Cloth_StockUnder_IdNo = " & Str(Val(Clo_UndIdNo)), con)
            Dt1 = New DataTable
            Da.Fill(Dt1)

            Clo_GrpIdNos = ""
            If Dt1.Rows.Count > 0 Then
                For i = 0 To Dt1.Rows.Count - 1
                    Clo_GrpIdNos = Trim(Clo_GrpIdNos) & IIf(Trim(Clo_GrpIdNos) <> "", ", ", "") & Trim(Val(Dt1.Rows(i).Item("Cloth_IdNo")))
                Next
            End If
            If Trim(Clo_GrpIdNos) <> "" Then
                Clo_GrpIdNos = "(" & Clo_GrpIdNos & ")"
            Else
                Clo_GrpIdNos = "(" & Trim(Val(Clo_ID)) & ")"
            End If

            CloID_Cond = "(a.Cloth_idno = " & Str(Clo_ID) & " or a.Cloth_idno IN " & Trim(Clo_GrpIdNos) & ")"

            NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)



            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1428" Then
                vCond_Fold = ""
            Else
                vCond_Fold = " and a.Folding = " & Str(Val(Fd_Perc)) & ""
            End If


            With dgv_BaleDetails

                vSELC_OTHER_DET_BALECODES = "'-99999/00-00/CLOSE'"
                vSELC_BALECODES = "'-9999/00-00/CLOSE'"
                For i = 0 To .RowCount - 1
                    If Val(.Rows(i).Cells(0).Value) = Val(dgv_DetSlNo) Then
                        vSELC_BALECODES = Trim(vSELC_BALECODES) & IIf(Trim(vSELC_BALECODES) <> "", ",", "") & "'" & Trim(.Rows(i).Cells(5).Value) & "'"
                    Else
                        vSELC_OTHER_DET_BALECODES = Trim(vSELC_OTHER_DET_BALECODES) & IIf(Trim(vSELC_OTHER_DET_BALECODES) <> "", ",", "") & "'" & Trim(.Rows(i).Cells(5).Value) & "'"
                    End If
                Next i
                vSELC_BALECODES = "(" & Trim(vSELC_BALECODES) & ")"
                vSELC_OTHER_DET_BALECODES = "(" & Trim(vSELC_OTHER_DET_BALECODES) & ")"

            End With

            Dim vORDBY As String = ""
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1155" Then
                vORDBY = "a.for_orderby, a.Packing_Slip_No, a.Packing_Slip_Code"

            Else
                vORDBY = "a.company_idno, a.Packing_Slip_Date, a.for_orderby, a.Packing_Slip_No, a.Packing_Slip_Code"

            End If

            With dgv_BaleSelection

                .Rows.Clear()
                SNo = 0

                Da = New SqlClient.SqlDataAdapter("select a.*, tz.Company_ShortName, tC.Cloth_Name from Packing_Slip_Head a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Cloth_Head tC ON a.cloth_idno <> 0 and a.cloth_idno = tC.cloth_idno Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & Trim(CloID_Cond) & " and a.ClothType_IdNo = " & Str(Val(CloType_ID)) & "  " & Trim(vCond_Fold) & " and a.Packing_Slip_Code IN " & Trim(vSELC_BALECODES) & " order by " & vORDBY, con)
                'Da = New SqlClient.SqlDataAdapter("select a.*, tz.Company_ShortName, tC.Cloth_Name from Packing_Slip_Head a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Cloth_Head tC ON a.cloth_idno <> 0 and a.cloth_idno = tC.cloth_idno Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & Trim(CloID_Cond) & " and a.ClothType_IdNo = " & Str(Val(CloType_ID)) & "  " & Trim(vCond_Fold) & " and a.Packing_Slip_Code IN " & Trim(vSELC_BALECODES) & " order by a.company_idno, a.Packing_Slip_Date, a.for_orderby, a.Packing_Slip_No, a.Packing_Slip_Code", con)
                ''Da = New SqlClient.SqlDataAdapter("Select a.*, tz.Company_ShortName, tC.Cloth_Name from Packing_Slip_Head a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno  INNER JOIN Cloth_Head tC ON a.cloth_idno <> 0 and a.cloth_idno = tC.cloth_idno Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & " a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' and a.Delivery_DetailsSlNo = " & Str(Val(dgv_DetSlNo)) & " and " & Trim(CloID_Cond) & " and a.ClothType_IdNo = " & Str(Val(CloType_ID)) & "  " & Trim(vCond_Fold) & " Order by a.company_idno, a.Packing_Slip_Date, a.for_orderby, a.Packing_Slip_No, a.Packing_Slip_Code", con)
                Dt1 = New DataTable
                Da.Fill(Dt1)

                If Dt1.Rows.Count > 0 Then

                    For i = 0 To Dt1.Rows.Count - 1

                        n = .Rows.Add()

                        SNo = SNo + 1
                        .Rows(n).Cells(0).Value = Val(SNo)
                        .Rows(n).Cells(1).Value = Dt1.Rows(i).Item("Packing_Slip_No").ToString
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then '---- MANI OMEGA FABRICS (THIRUCHENKODU)

                            vFERNOS = ""

                            Da = New SqlClient.SqlDataAdapter("select Lot_No, Pcs_No from Packing_Slip_Details where Packing_Slip_Code = '" & Trim(Dt1.Rows(i).Item("Packing_Slip_Code").ToString) & "'", con)
                            Dt2 = New DataTable
                            Da.Fill(Dt2)
                            If Dt2.Rows.Count > 0 Then
                                For j = 0 To Dt2.Rows.Count - 1
                                    If IsDBNull(Dt2.Rows(j).Item("Pcs_No").ToString) = False Then
                                        vFERNOS = Trim(vFERNOS) & IIf(Trim(vFERNOS) <> "", ", ", "") & Trim(Dt2.Rows(j).Item("Pcs_No").ToString)
                                    End If
                                Next
                            End If
                            Dt2.Clear()

                            .Rows(n).Cells(2).Value = vFERNOS

                        Else

                            If Val(Dt1.Rows(i).Item("Total_Pcs").ToString) <> 0 Then
                                .Rows(n).Cells(2).Value = Val(Dt1.Rows(i).Item("Total_Pcs").ToString)
                            End If

                        End If

                        If Val(Dt1.Rows(i).Item("Total_Meters").ToString) <> 0 Then
                            .Rows(n).Cells(3).Value = Format(Val(Dt1.Rows(i).Item("Total_Meters").ToString), "#########0.00")
                        End If
                        If Val(Dt1.Rows(i).Item("Total_Weight").ToString) <> 0 Then
                            .Rows(n).Cells(4).Value = Format(Val(Dt1.Rows(i).Item("Total_Weight").ToString), "#########0.000")
                        End If
                        .Rows(n).Cells(5).Value = "1"
                        .Rows(n).Cells(6).Value = Dt1.Rows(i).Item("Packing_Slip_Code").ToString
                        .Rows(n).Cells(7).Value = Dt1.Rows(i).Item("Bale_Bundle").ToString

                        .Rows(n).Cells(8).Value = Dt1.Rows(i).Item("Company_ShortName").ToString
                        .Rows(n).Cells(9).Value = Dt1.Rows(i).Item("Cloth_Name").ToString

                        vYrCode = Microsoft.VisualBasic.Right(Trim(Dt1.Rows(i).Item("Packing_Slip_Code").ToString), 5)
                        vBarCode = Microsoft.VisualBasic.Left(vYrCode, 2) & Trim(Val(Dt1.Rows(i).Item("Company_IdNo").ToString)) & Trim(UCase(Dt1.Rows(i).Item("Packing_Slip_No").ToString))

                        .Rows(n).Cells(10).Value = vBarCode

                        For j = 0 To .ColumnCount - 1
                            .Rows(i).Cells(j).Style.ForeColor = Color.Red
                        Next

                    Next

                End If
                Dt1.Clear()

                If cbo_Godown.Visible = True Then
                    If vGod_ID <> 0 Then
                        CompIDCondt = Trim(CompIDCondt) & IIf(Trim(CompIDCondt) <> "", " and ", "") & " (a.WareHouse_idno = " & Str(vGod_ID) & ")"
                    End If
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                    CompIDCondt = Trim(CompIDCondt) & IIf(Trim(CompIDCondt) <> "", " and ", "") & " (a.Packing_Slip_Date <= '" & Trim(Format(dtp_Date.Value, "MM/dd/yyyy")) & "')"
                End If

                Da = New SqlClient.SqlDataAdapter("select a.*, tz.Company_ShortName, tC.Cloth_Name from Packing_Slip_Head a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Cloth_Head tC ON a.cloth_idno <> 0 and a.cloth_idno = tC.cloth_idno Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & " a.Delivery_Code = '' and " & Trim(CloID_Cond) & " and a.ClothType_IdNo = " & Str(Val(CloType_ID)) & "  " & Trim(vCond_Fold) & " and a.Packing_Slip_Code NOT IN " & Trim(vSELC_BALECODES) & " and a.Packing_Slip_Code NOT IN " & Trim(vSELC_OTHER_DET_BALECODES) & " order by " & vORDBY, con)
                'Da = New SqlClient.SqlDataAdapter("select a.*, tz.Company_ShortName, tC.Cloth_Name from Packing_Slip_Head a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno INNER JOIN Cloth_Head tC ON a.cloth_idno <> 0 and a.cloth_idno = tC.cloth_idno Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & " a.Delivery_Code = '' and " & Trim(CloID_Cond) & " and a.ClothType_IdNo = " & Str(Val(CloType_ID)) & "  " & Trim(vCond_Fold) & " and a.Packing_Slip_Code NOT IN " & Trim(vSELC_BALECODES) & " and a.Packing_Slip_Code NOT IN " & Trim(vSELC_OTHER_DET_BALECODES) & " order by a.company_idno, a.Packing_Slip_Date, a.for_orderby, a.Packing_Slip_No, a.Packing_Slip_Code", con)
                Dt1 = New DataTable
                Da.Fill(Dt1)

                If Dt1.Rows.Count > 0 Then

                    For i = 0 To Dt1.Rows.Count - 1

                        n = .Rows.Add()

                        SNo = SNo + 1
                        .Rows(n).Cells(0).Value = Val(SNo)
                        .Rows(n).Cells(1).Value = Dt1.Rows(i).Item("Packing_Slip_No").ToString
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then '---- MANI OMEGA FABRICS (THIRUCHENKODU)

                            vFERNOS = ""

                            Da = New SqlClient.SqlDataAdapter("select Lot_No, Pcs_No from Packing_Slip_Details where Packing_Slip_Code = '" & Trim(Dt1.Rows(i).Item("Packing_Slip_Code").ToString) & "'", con)
                            Dt2 = New DataTable
                            Da.Fill(Dt2)
                            If Dt2.Rows.Count > 0 Then
                                For j = 0 To Dt2.Rows.Count - 1
                                    If IsDBNull(Dt2.Rows(j).Item("Pcs_No").ToString) = False Then
                                        vFERNOS = Trim(vFERNOS) & IIf(Trim(vFERNOS) <> "", ", ", "") & Trim(Dt2.Rows(j).Item("Pcs_No").ToString)
                                    End If
                                Next
                            End If
                            Dt2.Clear()

                            .Rows(n).Cells(2).Value = vFERNOS

                        Else

                            If Val(Dt1.Rows(i).Item("Total_Pcs").ToString) <> 0 Then
                                .Rows(n).Cells(2).Value = Val(Dt1.Rows(i).Item("Total_Pcs").ToString)
                            End If

                        End If


                        If Val(Dt1.Rows(i).Item("Total_Meters").ToString) <> 0 Then
                            .Rows(n).Cells(3).Value = Format(Val(Dt1.Rows(i).Item("Total_Meters").ToString), "#########0.00")
                        End If
                        If Val(Dt1.Rows(i).Item("Total_Weight").ToString) <> 0 Then
                            .Rows(n).Cells(4).Value = Format(Val(Dt1.Rows(i).Item("Total_Weight").ToString), "#########0.000")
                        End If
                        .Rows(n).Cells(5).Value = ""
                        .Rows(n).Cells(6).Value = Dt1.Rows(i).Item("Packing_Slip_Code").ToString
                        .Rows(n).Cells(7).Value = Dt1.Rows(i).Item("Bale_Bundle").ToString

                        .Rows(n).Cells(8).Value = Dt1.Rows(i).Item("Company_ShortName").ToString
                        .Rows(n).Cells(9).Value = Dt1.Rows(i).Item("Cloth_Name").ToString

                        vYrCode = Microsoft.VisualBasic.Right(Trim(Dt1.Rows(i).Item("Packing_Slip_Code").ToString), 5)
                        vBarCode = Microsoft.VisualBasic.Left(vYrCode, 2) & Trim(Val(Dt1.Rows(i).Item("Company_IdNo").ToString)) & Trim(UCase(Dt1.Rows(i).Item("Packing_Slip_No").ToString))

                        .Rows(n).Cells(10).Value = vBarCode

                    Next

                End If
                Dt1.Clear()


            End With

            Total_BaleSelection_Calculation()

            pnl_BaleSelection.Visible = True
            pnl_Back.Enabled = False
            dgv_BaleSelection.Focus()
            If dgv_BaleSelection.Rows.Count > 0 Then
                dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(0).Cells(0)
                dgv_BaleSelection.CurrentCell.Selected = True
            End If

        Catch ex As NullReferenceException
            MessageBox.Show("Select the ClothName for Bale Selection", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub dgv_BaleSelection_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_BaleSelection.CellClick
        Select_Bale(e.RowIndex)
    End Sub

    Private Sub Select_Bale(ByVal RwIndx As Integer)
        Dim i As Integer

        With dgv_BaleSelection

            If .RowCount > 0 And RwIndx >= 0 Then

                .Rows(RwIndx).Cells(5).Value = (Val(.Rows(RwIndx).Cells(5).Value) + 1) Mod 2

                If Val(.Rows(RwIndx).Cells(5).Value) = 0 Then
                    .Rows(RwIndx).Cells(5).Value = ""
                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Black
                    Next

                Else
                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Red
                    Next

                End If

            End If

            '-----------------------------
            Total_BaleSelection_Calculation()


        End With

    End Sub

    Private Sub dgv_BaleSelection_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_BaleSelection.KeyDown
        On Error Resume Next

        If e.KeyCode = Keys.Enter Or e.KeyCode = Keys.Space Then
            If dgv_BaleSelection.CurrentCell.RowIndex >= 0 Then
                Select_Bale(dgv_BaleSelection.CurrentCell.RowIndex)
                e.Handled = True
            End If
        End If

        If e.KeyCode = Keys.Delete Or e.KeyCode = Keys.Back Then
            If dgv_BaleSelection.CurrentCell.RowIndex >= 0 Then
                If Val(dgv_BaleSelection.Rows(dgv_BaleSelection.CurrentCell.RowIndex).Cells(5).Value) = 1 Then
                    e.Handled = True
                    Select_Bale(dgv_BaleSelection.CurrentCell.RowIndex)
                End If
            End If
        End If

    End Sub

    Private Sub btn_Close_BaleSelection_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_BaleSelection.Click
        Dim Cmd As New SqlClient.SqlCommand
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim I As Integer, J As Integer
        Dim n As Integer
        Dim sno As Integer
        Dim dgvDet_CurRow As Integer = 0
        Dim dgv_DetSlNo As Integer = 0
        Dim NoofBls As Integer
        Dim FsNo As Single, LsNo As Single
        Dim FsBaleNo As String, LsBaleNo As String
        Dim BlNo As String, PackSlpCodes As String
        Dim Tot_Pcs As Single, Tot_Mtrs As Single
        Dim vFor_OrdBy_BaleNo As String = ""
        Dim vMtrs As String = ""
        Dim vBALENOS_as_PCSNOS_STS As Boolean = False
        Dim vBALE_PCS_ORDBY As String
        Cmd.Connection = con

        dgvDet_CurRow = dgv_Details.CurrentCell.RowIndex
        dgv_DetSlNo = Val(dgv_Details.Rows(dgvDet_CurRow).Cells(10).Value)

        vBALENOS_as_PCSNOS_STS = False
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1267" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '---- BRT SPINNERS PRIVATE LIMITED (FABRIC DIVISION)
            If Trim(UCase(cbo_RollBundle.Text)) = "PCS" Or Trim(UCase(cbo_RollBundle.Text)) = "ROLL" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1428" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1438" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1474" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1487" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1489" Then '-----SATHY TEXTILES (SATHYAMANGALAM)Then
                vBALENOS_as_PCSNOS_STS = True
            End If
        End If

        With dgv_BaleDetails

LOOP1:
            For I = 0 To .RowCount - 1

                If Val(.Rows(I).Cells(0).Value) = Val(dgv_DetSlNo) Then

                    If I = .Rows.Count - 1 Then
                        For J = 0 To .ColumnCount - 1
                            .Rows(I).Cells(J).Value = ""
                        Next

                    Else
                        .Rows.RemoveAt(I)

                    End If

                    GoTo LOOP1

                End If

            Next I

            Cmd.CommandText = "truncate table " & Trim(Common_Procedures.EntryTempTable) & ""
            Cmd.ExecuteNonQuery()

            NoofBls = 0 : Tot_Pcs = 0 : Tot_Mtrs = 0 : BlNo = "" : PackSlpCodes = ""

            For I = 0 To dgv_BaleSelection.RowCount - 1

                If Val(dgv_BaleSelection.Rows(I).Cells(5).Value) = 1 Then

                    n = .Rows.Add()

                    sno = sno + 1
                    .Rows(n).Cells(0).Value = Val(dgv_DetSlNo)
                    .Rows(n).Cells(1).Value = dgv_BaleSelection.Rows(I).Cells(1).Value
                    .Rows(n).Cells(2).Value = Val(dgv_BaleSelection.Rows(I).Cells(2).Value)
                    .Rows(n).Cells(3).Value = Format(Val(dgv_BaleSelection.Rows(I).Cells(3).Value), "#########0.00")
                    .Rows(n).Cells(4).Value = Format(Val(dgv_BaleSelection.Rows(I).Cells(4).Value), "#########0.000")
                    .Rows(n).Cells(5).Value = dgv_BaleSelection.Rows(I).Cells(6).Value
                    .Rows(n).Cells(6).Value = dgv_BaleSelection.Rows(I).Cells(7).Value

                    vFor_OrdBy_BaleNo = Common_Procedures.get_FieldValue(con, "Packing_Slip_Head", "for_OrderBy", "(Packing_Slip_Code = '" & Trim(dgv_BaleSelection.Rows(I).Cells(6).Value) & "')")


                    If vBALENOS_as_PCSNOS_STS = True Then
                        Cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Name1, Name2, Meters1, Meters2) select a.Packing_Slip_Code, a.Pcs_NO, a.for_OrderBy, b.PieceNo_OrderBy from Packing_Slip_Details a, Weaver_ClothReceipt_Piece_Details b where a.Packing_Slip_Code = '" & Trim(dgv_BaleSelection.Rows(I).Cells(6).Value) & "' and a.Meters <> 0 and a.lot_code  = b.lot_code  and a.Pcs_NO = b.Piece_No"
                        Cmd.ExecuteNonQuery()
                    Else
                        Cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Name1, Name2, Meters1 , Meters2) values ('" & Trim(dgv_BaleSelection.Rows(I).Cells(6).Value) & "', '" & Trim(dgv_BaleSelection.Rows(I).Cells(1).Value) & "', " & Str(Val(vFor_OrdBy_BaleNo)) & " , 0 ) "
                        Cmd.ExecuteNonQuery()
                    End If
                    NoofBls = NoofBls + 1
                    Tot_Pcs = Val(Tot_Pcs) + Val(dgv_BaleSelection.Rows(I).Cells(2).Value)
                    Tot_Mtrs = Val(Tot_Mtrs) + Val(dgv_BaleSelection.Rows(I).Cells(3).Value)
                    PackSlpCodes = Trim(PackSlpCodes) & IIf(Trim(PackSlpCodes) = "", "~", "") & Trim(dgv_BaleSelection.Rows(I).Cells(6).Value) & "~"

                End If

            Next


            BlNo = ""
            FsNo = 0 : LsNo = 0
            FsBaleNo = "" : LsBaleNo = ""

            Da1 = New SqlClient.SqlDataAdapter("Select Name1 as Bale_Code, Name2 as Bale_No, Meters1 as fororderby_baleno , Meters2  as fororderby_pcsno  from " & Trim(Common_Procedures.EntryTempTable) & " where Name1 <> '' order by Meters1, Meters2 , Name2, Name1", con)
            Dt1 = New DataTable
            Da1.Fill(Dt1)

            If Dt1.Rows.Count > 0 Then

                If vBALENOS_as_PCSNOS_STS = True Then
                    FsNo = Val(Dt1.Rows(0).Item("fororderby_pcsno").ToString)
                    LsNo = Val(Dt1.Rows(0).Item("fororderby_pcsno").ToString)
                Else
                    FsNo = Val(Dt1.Rows(0).Item("fororderby_baleno").ToString)
                    LsNo = Val(Dt1.Rows(0).Item("fororderby_baleno").ToString)
                End If

                FsBaleNo = Trim(UCase(Dt1.Rows(0).Item("Bale_No").ToString))
                LsBaleNo = Trim(UCase(Dt1.Rows(0).Item("Bale_No").ToString))

                For I = 1 To Dt1.Rows.Count - 1
                    vBALE_PCS_ORDBY = 0

                    If vBALENOS_as_PCSNOS_STS = True Then
                        vBALE_PCS_ORDBY = Format(Val(Dt1.Rows(I).Item("fororderby_pcsno").ToString), "##########0.00")
                    Else
                        vBALE_PCS_ORDBY = Format(Val(Dt1.Rows(I).Item("fororderby_baleno").ToString), "##########0.00")
                    End If

                    If LsNo + 1 = Val(vBALE_PCS_ORDBY) Then
                        LsNo = Val(vBALE_PCS_ORDBY)
                        LsBaleNo = Trim(UCase(Dt1.Rows(I).Item("Bale_No").ToString))

                    Else
                        If FsNo = LsNo Then
                            BlNo = BlNo & Trim(FsBaleNo) & ","
                        Else
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                                BlNo = BlNo & Trim(FsBaleNo) & " to " & Trim(LsBaleNo) & ","
                            Else
                                BlNo = BlNo & Trim(FsBaleNo) & "-" & Trim(LsBaleNo) & ","
                            End If

                        End If
                        If vBALENOS_as_PCSNOS_STS = True Then
                            FsNo = Dt1.Rows(I).Item("fororderby_pcsno").ToString
                            LsNo = Dt1.Rows(I).Item("fororderby_pcsno").ToString
                        Else
                            FsNo = Dt1.Rows(I).Item("fororderby_baleno").ToString
                            LsNo = Dt1.Rows(I).Item("fororderby_baleno").ToString
                        End If

                        FsBaleNo = Trim(UCase(Dt1.Rows(I).Item("Bale_No").ToString))
                        LsBaleNo = Trim(UCase(Dt1.Rows(I).Item("Bale_No").ToString))

                    End If

                Next

                If FsNo = LsNo Then
                    BlNo = BlNo & Trim(FsBaleNo)

                Else
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                        BlNo = BlNo & Trim(FsBaleNo) & " to " & Trim(LsBaleNo)
                    Else
                        BlNo = BlNo & Trim(FsBaleNo) & "-" & Trim(LsBaleNo)
                    End If

                End If

            End If
            Dt1.Clear()

            If Trim(dgv_Details.Rows(dgvDet_CurRow).Cells(12).Value) <> "" Then
                dgv_Details.Rows(dgvDet_CurRow).Cells(4).Value = ""
                dgv_Details.Rows(dgvDet_CurRow).Cells(5).Value = ""
                dgv_Details.Rows(dgvDet_CurRow).Cells(6).Value = ""
                dgv_Details.Rows(dgvDet_CurRow).Cells(7).Value = ""
                dgv_Details.Rows(dgvDet_CurRow).Cells(12).Value = ""
            End If

            If Val(NoofBls) <> 0 And Val(Tot_Mtrs) <> 0 Then

                dgv_Details.Rows(dgvDet_CurRow).Cells(4).Value = NoofBls
                dgv_Details.Rows(dgvDet_CurRow).Cells(5).Value = BlNo
                If Val(Tot_Pcs) <> 0 Then
                    dgv_Details.Rows(dgvDet_CurRow).Cells(6).Value = Val(Tot_Pcs)
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1428" Then
                    vMtrs = 0
                    vMtrs = (Val(Tot_Mtrs) * 100 / (dgv_Details.Rows(dgvDet_CurRow).Cells(3).Value))
                    dgv_Details.Rows(dgvDet_CurRow).Cells(7).Value = Format(Val(vMtrs), "#########0.00")

                Else
                    dgv_Details.Rows(dgvDet_CurRow).Cells(7).Value = Format(Val(Tot_Mtrs), "#########0.00")

                End If

                dgv_Details.Rows(dgvDet_CurRow).Cells(12).Value = PackSlpCodes

            End If

            Add_NewRow_ToGrid()

            Total_Calculation()

        End With

        pnl_Back.Enabled = True
        pnl_BaleSelection.Visible = False
        If dgv_Details.Enabled And dgv_Details.Visible Then
            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                If dgv_Details.CurrentCell.RowIndex >= 0 Then
                    dgv_Details.CurrentCell = dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(6)
                    dgv_Details.CurrentCell.Selected = True
                End If
            End If
        End If

    End Sub

    Private Sub Add_NewRow_ToGrid()
        On Error Resume Next

        Dim i As Integer
        Dim n As Integer = -1

        With dgv_Details
            If .Visible Then

                If .CurrentCell.RowIndex = .Rows.Count - 1 Then
                    If Trim(UCase(cbo_Type.Text)) <> "ORDER" Then
                        n = .Rows.Add()
                        'MessageBox.Show("New Added Row = " & n & "  -  Current Row = " & .CurrentCell.RowIndex)

                        For i = 0 To .Columns.Count - 1
                            .Rows(n).Cells(i).Value = .Rows(.CurrentCell.RowIndex).Cells(i).Value
                            .Rows(.CurrentCell.RowIndex).Cells(i).Value = ""
                        Next

                        For i = 0 To .Rows.Count - 1
                            .Rows(i).Cells(0).Value = i + 1
                        Next

                        .CurrentCell = .Rows(n).Cells(.CurrentCell.ColumnIndex)
                        .CurrentCell.Selected = True

                    End If
                End If

            End If

        End With

    End Sub

    Public Sub Printing_Bale()
        Dim prtFrm As Single = 0
        Dim prtTo As Single = 0
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim Condt As String = ""
        Dim PpSzSTS As Boolean = False
        Dim ps As Printing.PaperSize
        Dim NewCode As String

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.*, b.* from Packing_Slip_Head a INNER JOIN Cloth_Head b ON a.Cloth_IdNo = b.Cloth_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count <= 0 Then

                MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub

            End If

            dt1.Dispose()
            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then
            Try

                If Print_PDF_Status = True Then
                    '--This is actual & correct 
                    PrintDocument2.DocumentName = "PackingSlip"
                    PrintDocument2.PrinterSettings.PrinterName = "doPDF v7"
                    PrintDocument2.PrinterSettings.PrintFileName = "c:\PackingSlip.pdf"
                    PrintDocument2.Print()

                Else

                    For I = 0 To PrintDocument2.PrinterSettings.PaperSizes.Count - 1
                        If PrintDocument2.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
                            ps = PrintDocument2.PrinterSettings.PaperSizes(I)
                            PrintDocument2.DefaultPageSettings.PaperSize = ps
                            PrintDocument2.DefaultPageSettings.Landscape = False
                            PpSzSTS = True
                            Exit For
                        End If
                    Next

                    If PpSzSTS = False Then
                        For I = 0 To PrintDocument2.PrinterSettings.PaperSizes.Count - 1
                            If PrintDocument2.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                                ps = PrintDocument2.PrinterSettings.PaperSizes(I)
                                PrintDocument2.DefaultPageSettings.PaperSize = ps
                                PrintDocument2.DefaultPageSettings.Landscape = False
                                Exit For
                            End If
                        Next
                    End If

                    PrintDialog1.PrinterSettings = PrintDocument2.PrinterSettings
                    If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                        PrintDocument2.PrinterSettings = PrintDialog1.PrinterSettings
                        PrintDocument2.Print()
                    End If

                End If

            Catch ex As Exception
                MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT SHOW PRINT PREVIEW...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                For I = 0 To PrintDocument2.PrinterSettings.PaperSizes.Count - 1
                    If PrintDocument2.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
                        ps = PrintDocument2.PrinterSettings.PaperSizes(I)
                        PrintDocument2.DefaultPageSettings.PaperSize = ps
                        PrintDocument2.DefaultPageSettings.Landscape = False
                        PpSzSTS = True
                        Exit For
                    End If
                Next

                If PpSzSTS = False Then
                    For I = 0 To PrintDocument2.PrinterSettings.PaperSizes.Count - 1
                        If PrintDocument2.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                            ps = PrintDocument2.PrinterSettings.PaperSizes(I)
                            PrintDocument2.DefaultPageSettings.PaperSize = ps
                            PrintDocument2.DefaultPageSettings.Landscape = False
                            Exit For
                        End If
                    Next
                End If

                ppd.Document = PrintDocument2

                ppd.WindowState = FormWindowState.Normal
                ppd.StartPosition = FormStartPosition.CenterScreen
                ppd.ClientSize = New Size(600, 600)

                ppd.ShowDialog()
                'If PageSetupDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                '    PrintDocument2.DefaultPageSettings = PageSetupDialog1.PageSettings
                '    ppd.ShowDialog()
                'End If

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If

        pnl_Back.Enabled = True
        pnl_Print.Visible = False

    End Sub

    Private Sub PrintDocument2_BeginPrint(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintEventArgs) Handles PrintDocument2.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim NewCode As String = ""
        Dim Total_mtrs As Single = 0
        Dim vLMNO As String = ""
        Dim vwgtmtr As String = 0
        Dim sno As Integer = 0
        prn_HdDt.Clear()
        prn_DetDt.Clear()

        prn_PageNo = 0
        prn_HdIndx = 0
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1087" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1007" Then '---- Kalaimagal Textiles (Palladam)
            prn_HdIndx = 0
        Else
            prn_HdIndx = 1
        End If


        prn_DetIndx = 0
        prn_HdMxIndx = 0
        prn_DetMxIndx1 = 0
        prn_DetMxIndx = 0
        prn_Count = 1
        Erase prn_DetAr
        Erase prn_HdAr
        prn_TotalPcs = 0
        prn_TotalMtrs = 0
        prn_TotaGrslWgt = 0
        prn_TotalWgt = 0

        prn_HdAr = New String(100, 30) {}

        prn_DetAr = New String(100, 50, 10) {}

        Erase prn_DetAr1
        prn_DetAr1 = New String(1000, 10) {}


        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try



            da1 = New SqlClient.SqlDataAdapter("select a.Packing_Slip_No, a.cloth_idno,a.Gross_Weight,a.Net_Weight, a.Total_Pcs as Pak_Pcs, a.Packing_Slip_Code, (case when a.Net_Weight <> 0 then a.Net_Weight else a.Total_Weight end) as Pak_Weight, a.Total_Meters as Pak_Mtrs,a.Bale_Bundle, tZ.*, c.*, d.*, tCDD.*,tCDH.*  from Packing_Slip_Head a INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno INNER JOIN ClothSales_Delivery_Head tCDH ON tCDH.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'  and '" & Trim(Pk_Condition) & "' + tCDH.ClothSales_Delivery_Code = a.Delivery_Code  INNER JOIN ClothSales_Delivery_Details tCDD ON tCDD.ClothSales_Delivery_Code =  '" & Trim(NewCode) & "' and '" & Trim(Pk_Condition) & "' + tCDD.ClothSales_Delivery_Code = a.Delivery_Code and tCDD.ClothSales_Delivery_SlNo = a.Delivery_DetailsSlNo INNER JOIN Cloth_Head c ON tCDD.ClothIdNo_ToPrint = c.Cloth_IdNo INNER JOIN Ledger_Head d ON d.Ledger_IdNo = tCDD.Ledger_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code", con)

            '********CMD BY LALITH 2025_06_05
            'da1 = New SqlClient.SqlDataAdapter("select a.Packing_Slip_No, a.cloth_idno, a.Total_Pcs as Pak_Pcs, a.Packing_Slip_Code, a.Total_Weight, a.Total_Meters as Pak_Mtrs, tZ.*, c.*, d.*, tCDD.*  from Packing_Slip_Head a INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno  INNER JOIN ClothSales_Delivery_Details tCDD ON tCDD.ClothSales_Delivery_Code =  '" & Trim(NewCode) & "' and '" & Trim(Pk_Condition) & "' + tCDD.ClothSales_Delivery_Code = a.Delivery_Code and tCDD.ClothSales_Delivery_SlNo = a.Delivery_DetailsSlNo INNER JOIN Cloth_Head c ON tCDD.ClothIdNo_ToPrint = c.Cloth_IdNo INNER JOIN Ledger_Head d ON d.Ledger_IdNo = tCDD.Ledger_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code", con)
            '********CMD BY LALITH 2025_06_05


            'da1 = New SqlClient.SqlDataAdapter("select a.Packing_Slip_No,a.cloth_idno,a.Total_Pcs as Pak_Pcs,a.Packing_Slip_Code , a.Total_Weight ,a.Total_Meters as Pak_Mtrs, tZ.*, c.*,d.*,E.*  from Packing_Slip_Head a INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno INNER JOIN Cloth_Head c ON a.Cloth_IdNo = c.Cloth_IdNo INNER JOIN Ledger_Head d ON a.Ledger_IdNo = d.Ledger_IdNo  INNER JOIN ClothSales_Delivery_Head e ON e.ClothSales_Delivery_Code =  '" & Trim(NewCode) & "'  Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)

            If prn_HdDt.Rows.Count > 0 Then

                For i = 0 To prn_HdDt.Rows.Count - 1

                    prn_HdMxIndx = prn_HdMxIndx + 1

                    prn_HdAr(prn_HdMxIndx, 1) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)

                    If Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString) <> "" Then
                        prn_HdAr(prn_HdMxIndx, 2) = Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString)
                    Else
                        prn_HdAr(prn_HdMxIndx, 2) = Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)
                    End If

                    prn_HdAr(prn_HdMxIndx, 3) = Val(prn_HdDt.Rows(i).Item("Pak_Pcs").ToString)
                    prn_HdAr(prn_HdMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")


                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1007" Then     '---RAJA
                        prn_HdAr(prn_HdMxIndx, 5) = Format(Val(prn_HdDt.Rows(i).Item("Gross_Weight").ToString), "#########0.00")

                    Else
                        prn_HdAr(prn_HdMxIndx, 5) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Weight").ToString), "#########0.00")
                    End If

                    If Val(prn_HdAr(prn_HdMxIndx, 1)) = 8116 Then
                        Debug.Print(prn_HdAr(prn_HdMxIndx, 1))
                    End If

                    If Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString) <> 0 Then
                        prn_HdAr(prn_HdMxIndx, 6) = Format(Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString), "#########0.00")

                    Else
                        prn_HdAr(prn_HdMxIndx, 6) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Weight").ToString), "#########0.00")
                    End If

                    ' ***************** WEIGHT COLUMN INSERTED IN SECOND TIME ***********************
                    ' ************************** FOR SAMANTH TEXTILE ********************************

                    prn_HdAr(prn_HdMxIndx, 10) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Weight").ToString), "#########0.00")

                    prn_HdAr(prn_HdMxIndx, 11) = Trim(prn_HdDt.Rows(i).Item("Bale_Bundle").ToString)

                    prn_DetMxIndx = 0

                    'da2 = New SqlClient.SqlDataAdapter("select a.* from Packing_Slip_Details a where a.Packing_Slip_Code = '" & Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString) & "' order by a.Sl_No", con)


                    da2 = New SqlClient.SqlDataAdapter("select a.*, b.Loom_Name from Packing_Slip_Details a LEFT OUTER JOIN Loom_Head b ON a.Loom_IdNo = b.Loom_IdNo where a.Packing_Slip_Code = '" & Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString) & "' order by a.Sl_No", con)

                    prn_DetDt = New DataTable
                    da2.Fill(prn_DetDt)

                    'If prn_DetDt.Rows.Count > 0 Then
                    '    For j = 0 To prn_DetDt.Rows.Count - 1
                    '        If Val(prn_DetDt.Rows(j).Item("Meters").ToString) <> 0 Then
                    '            prn_DetMxIndx = prn_DetMxIndx + 1
                    '            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                    '            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 0) = Trim(prn_DetDt.Rows(j).Item("Sl_No").ToString)
                    '            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 1) = Trim(prn_DetDt.Rows(j).Item("Lot_No").ToString)
                    '            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(j).Item("Pcs_No").ToString)
                    '            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3) = Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")

                    '            '  Total_mtrs = Total_mtrs + Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")
                    '            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.00")
                    '        End If
                    '    Next j
                    'End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1007" Then

                        If prn_DetDt.Rows.Count > 0 Then
                            For j = 0 To prn_DetDt.Rows.Count - 1
                                If Val(prn_DetDt.Rows(j).Item("Meters").ToString) <> 0 Then

                                    prn_DetMxIndx = prn_DetMxIndx + 1
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 0) = Trim(prn_DetDt.Rows(j).Item("Sl_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 1) = Trim(prn_DetDt.Rows(j).Item("Lot_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(j).Item("Pcs_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3) = Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.00")
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 6) = Trim(prn_HdDt.Rows(i).Item("Fold_Perc").ToString)

                                    vLMNO = ""
                                    If IsDBNull(prn_DetDt.Rows(j).Item("Loom_Name").ToString) = False Then
                                        If Trim(prn_DetDt.Rows(j).Item("Loom_Name").ToString) <> "" Then
                                            vLMNO = Trim(prn_DetDt.Rows(j).Item("Loom_Name").ToString)
                                        End If
                                    End If
                                    If Trim(vLMNO) = "" Then
                                        vLMNO = Trim(prn_DetDt.Rows(j).Item("Loom_No").ToString)
                                    End If
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 7) = Trim(vLMNO)

                                    'If InStr(1, Trim(UCase(vDUP_PACKSLIPNO)), Trim(UCase(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString))) = 0 Then
                                    '    prn_DetAr1(prn_DetMxIndx1, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                                    'End If

                                    prn_DetMxIndx1 = prn_DetMxIndx1 + 1
                                    prn_DetAr1(prn_DetMxIndx1, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                                    prn_DetAr1(prn_DetMxIndx1, 0) = prn_DetMxIndx1
                                    prn_DetAr1(prn_DetMxIndx1, 1) = Trim(prn_DetDt.Rows(j).Item("Lot_No").ToString)
                                    prn_DetAr1(prn_DetMxIndx1, 2) = Trim(prn_DetDt.Rows(j).Item("Pcs_No").ToString)
                                    prn_DetAr1(prn_DetMxIndx1, 3) = Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")
                                    prn_DetAr1(prn_DetMxIndx1, 4) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.000")
                                    prn_DetAr1(prn_DetMxIndx1, 6) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString) / Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.000")

                                    vLMNO = ""
                                    If IsDBNull(prn_DetDt.Rows(j).Item("Loom_Name").ToString) = False Then
                                        If Trim(prn_DetDt.Rows(j).Item("Loom_Name").ToString) <> "" Then
                                            vLMNO = Trim(prn_DetDt.Rows(j).Item("Loom_Name").ToString)
                                        End If
                                    End If
                                    If Trim(vLMNO) = "" Then
                                        vLMNO = Trim(prn_DetDt.Rows(j).Item("Loom_No").ToString)
                                    End If
                                    prn_DetAr1(prn_DetMxIndx1, 7) = Trim(vLMNO)

                                    prn_TotalPcs = Val(prn_TotalPcs) + 1
                                    prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00"), "##########0.00")
                                    prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.000"), "##########0.000")

                                End If
                            Next j

                        Else

                            prn_DetMxIndx = prn_DetMxIndx + 1
                            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 0) = 1
                            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 1) = ""
                            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 2) = ""
                            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")

                            If Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString) <> 0 Then
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString), "#########0.000")

                            Else
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Total_Weight").ToString), "#########0.000")

                            End If

                            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 6) = Trim(prn_HdDt.Rows(i).Item("Fold_Perc").ToString)
                            prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 7) = ""


                            prn_DetMxIndx1 = prn_DetMxIndx1 + 1
                            prn_DetAr1(prn_DetMxIndx1, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                            prn_DetAr1(prn_DetMxIndx1, 0) = prn_DetMxIndx1
                            prn_DetAr1(prn_DetMxIndx1, 1) = ""
                            prn_DetAr1(prn_DetMxIndx1, 2) = ""
                            prn_DetAr1(prn_DetMxIndx1, 3) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")
                            If Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString) <> 0 Then
                                prn_DetAr1(prn_DetMxIndx1, 4) = Format(Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString), "#########0.000")

                            Else
                                prn_DetAr1(prn_DetMxIndx1, 4) = Format(Val(prn_HdDt.Rows(i).Item("Total_Weight").ToString), "#########0.000")

                            End If

                            prn_DetAr1(prn_DetMxIndx1, 6) = Format(Val(prn_DetAr1(prn_DetMxIndx1, 4)) / Val(prn_DetAr1(prn_DetMxIndx1, 3)), "#########0.000")

                            prn_DetAr1(prn_DetMxIndx1, 7) = ""

                            prn_TotalPcs = Val(prn_TotalPcs) + Val(prn_HdDt.Rows(i).Item("Pak_Pcs").ToString)
                            prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetAr1(prn_DetMxIndx1, 3)), "#########0.00"), "##########0.00")
                            prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetAr1(prn_DetMxIndx1, 4)), "#########0.000"), "##########0.000")

                        End If


                    Else

                        If prn_DetDt.Rows.Count > 0 Then
                            For j = 0 To prn_DetDt.Rows.Count - 1
                                If Val(prn_DetDt.Rows(j).Item("Meters").ToString) <> 0 Then
                                    prn_DetMxIndx = prn_DetMxIndx + 1
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 0) = Trim(prn_DetDt.Rows(j).Item("Sl_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 1) = Trim(prn_DetDt.Rows(j).Item("Lot_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(j).Item("Pcs_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3) = Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")

                                    Total_mtrs = Total_mtrs + Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.00")


                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 6) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString) / Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.000")

                                    prn_TotalPcs = Val(prn_TotalPcs) + 1
                                    prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00"), "##########0.00")
                                    prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.000"), "##########0.000")

                                End If
                            Next j
                        End If

                    End If


                Next i

            Else
                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End If

            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub PrintDocument2_PrintPage(ByVal sender As System.Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument2.PrintPage

        vtot_pcs = 0
        vtot_wgt = 0
        lst_prnt = False

        If prn_HdDt.Rows.Count <= 0 Then Exit Sub
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1249" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1516" Then '---- VAIPAV TEXTILES PVT LTD (SOMANUR) AND ---- VIPIN TEXTILES (SOMANUR) 
            Common_Procedures.Printing_PackingSlip_Format2(PrintDocument1, e, prn_HdDt, prn_HdMxIndx, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx)

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1155" Then
            Common_Procedures.Printing_PackingSlip_Format_1155(PrintDocument2, e, prn_HdDt, prn_HdMxIndx, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx, vtot_wgt, vtot_pcs, lst_prnt)
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1608" Then
            Common_Procedures.Printing_PackingSlip_Format5_1608(PrintDocument2, e, prn_HdDt, prn_HdMxIndx, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx)


        ElseIf Common_Procedures.settings.CustomerCode = "1007" Then


            Dim vPrn_Roll_Packing_No = ""
            Dim vPrn_Roll_Packing_Date = ""
            Dim vSort_No As String = ""
            Dim vPRN_Invoice_DC_No As String, vPRN_Invoice_DC_Date As String
            Dim vPRN_ClothSales_DCNo As String, vPRN_ClothSales_DCDate As String
            Dim vPRN_Party_OrderNo As String, vPRN_Party_OrderDate As String
            Dim vPRN_ClothSales_Invoice_No As String, vPRN_ClothSales_Invoice_Date As String

            vPRN_Party_OrderNo = String.Empty    ' prn_HdDt.Rows(0).Item("Party_OrderNo").ToString ' --- cmd by gopi for multiple order no purpose
            vPRN_Party_OrderDate = String.Empty 'prn_HdDt.Rows(0).Item("Party_OrderDate").ToString

            vSort_No = String.Empty 'Trim(prn_HdDt.Rows(0).Item("sort_no").ToString)
            vCLONAME = Trim(prn_HdDt.Rows(0).Item("Cloth_Name").ToString)

            vPRN_Invoice_DC_No = prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString
            vPRN_Invoice_DC_Date = Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString



            Common_Procedures.Printing_BundlePrint_Format_with_weight_1007(PrintDocument3, e, prn_HdDt, prn_HdMxIndx, prn_DetDt, prn_DetMxIndx1, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx, vPRN_ClothSales_Invoice_No, vPRN_ClothSales_Invoice_Date, vPRN_Party_OrderNo, vPRN_Party_OrderDate, vPRN_ClothSales_DCNo, vPRN_ClothSales_DCDate, vPRN_PartyName, vPRN_PartyAdd1, vPRN_PartyAdd2, vPRN_PartyAdd3, vPRN_PartyAdd4, vPRN_PartyGSTIN, vPRN_Cloth_name, vPRN_FOLDINGPERC, vPRN_Pack_Type_Name, prn_TotalBales, prn_TotalPcs, prn_TotalMtrs, prn_TotalWgt, vPRN_Invoice_DC_No, vPRN_Invoice_DC_Date)




            'Printing_BundlePrint_Format_with_weight_1007(PrintDocument2, e)

        Else
            Common_Procedures.Printing_PackingSlip_Format1(PrintDocument2, e, prn_HdDt, prn_HdMxIndx, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx)

        End If
    End Sub

    Private Sub msk_date_KeyPress(sender As Object, e As System.Windows.Forms.KeyPressEventArgs) Handles msk_date.KeyPress
        If Trim(UCase(e.KeyChar)) = "D" Then
            msk_date.Text = Date.Today
            msk_date.SelectionStart = 0
        End If
    End Sub

    Private Sub msk_Date_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_date.KeyUp
        'If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
        '    msk_date.Text = Date.Today
        'End If
        If IsDate(msk_date.Text) = True Then
            If e.KeyCode = 107 Then
                msk_date.Text = DateAdd("D", 1, Convert.ToDateTime(msk_date.Text))
            ElseIf e.KeyCode = 109 Then
                msk_date.Text = DateAdd("D", -1, Convert.ToDateTime(msk_date.Text))
            End If
        End If
        If e.KeyCode = 46 Or e.KeyCode = 8 Then

            Common_Procedures.maskEdit_Date_ON_DelBackSpace(sender, e, vmskOldText, vmskSelStrt)
        End If
    End Sub

    Private Sub msk_Date_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles msk_date.LostFocus

        If IsDate(msk_date.Text) = True Then
            If Microsoft.VisualBasic.DateAndTime.Day(Convert.ToDateTime(msk_date.Text)) <= 31 Or Microsoft.VisualBasic.DateAndTime.Month(Convert.ToDateTime(msk_date.Text)) <= 31 Then
                If Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_date.Text)) <= 2050 And Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_date.Text)) >= 2000 Then
                    dtp_Date.Value = Convert.ToDateTime(msk_date.Text)
                End If
            End If

        End If
    End Sub

    Private Sub dtp_Date_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dtp_Date.KeyUp
        If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
            dtp_Date.Text = Date.Today
        End If
    End Sub
    Private Sub dtp_Date_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dtp_Date.TextChanged
        If IsDate(dtp_Date.Text) = True Then
            msk_date.Text = dtp_Date.Text
            msk_date.SelectionStart = 0
        End If
    End Sub
    Private Sub msk_Date_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_date.KeyDown
        vcbo_KeyDwnVal = e.KeyValue
        If e.KeyCode = 40 Then
            e.Handled = True : e.SuppressKeyPress = True
            cbo_PartyName.Focus()
        End If

        If e.KeyCode = 38 Then
            e.Handled = True : e.SuppressKeyPress = True
            If txt_Despatch_DateAndTime.Visible Then txt_Despatch_DateAndTime.Focus() Else txt_Note.Focus()
        End If


        vmskOldText = ""
        vmskSelStrt = -1
        If e.KeyCode = 46 Or e.KeyCode = 8 Then
            vmskOldText = msk_date.Text
            vmskSelStrt = msk_date.SelectionStart
        End If

    End Sub



    Private Sub msk_LrDate_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_LrDate.KeyUp
        If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
            msk_LrDate.Text = Date.Today
        End If
        If IsDate(msk_LrDate.Text) = True Then
            If e.KeyCode = 107 Then
                msk_LrDate.Text = DateAdd("D", 1, Convert.ToDateTime(msk_LrDate.Text))
            ElseIf e.KeyCode = 109 Then
                msk_LrDate.Text = DateAdd("D", -1, Convert.ToDateTime(msk_LrDate.Text))
            End If
        End If
        If e.KeyCode = 46 Or e.KeyCode = 8 Then

            Common_Procedures.maskEdit_Date_ON_DelBackSpace(sender, e, vmskLrText, vmskLrStrt)
        End If
    End Sub
    Private Sub msk_LrDate_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles msk_LrDate.LostFocus

        If IsDate(msk_LrDate.Text) = True Then
            If Microsoft.VisualBasic.DateAndTime.Day(Convert.ToDateTime(msk_LrDate.Text)) <= 31 Or Microsoft.VisualBasic.DateAndTime.Month(Convert.ToDateTime(msk_LrDate.Text)) <= 31 Then
                If Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_LrDate.Text)) <= 2050 And Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_LrDate.Text)) >= 2000 Then
                    dtp_LrDate.Value = Convert.ToDateTime(msk_LrDate.Text)
                End If
            End If

        End If
    End Sub

    Private Sub dtp_LrDate_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dtp_LrDate.KeyUp
        If e.Control = False And e.KeyValue = 17 And vcbo_KeyDwnVal = e.KeyValue Then
            dtp_LrDate.Text = Date.Today
        End If
    End Sub

    Private Sub dtp_LrDate_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dtp_LrDate.TextChanged
        If IsDate(dtp_LrDate.Text) = True Then
            msk_LrDate.Text = dtp_LrDate.Text
            msk_LrDate.SelectionStart = 0
        End If
    End Sub

    Private Sub msk_LrDate_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_LrDate.KeyDown
        vcbo_KeyDwnVal = e.KeyValue
        vmskLrText = ""
        vmskLrStrt = -1
        If e.KeyCode = 46 Or e.KeyCode = 8 Then
            vmskLrText = msk_LrDate.Text
            vmskLrStrt = msk_LrDate.SelectionStart
        End If

    End Sub

    Private Sub Amount_Calculation()
        Dim i As Integer
        For i = 0 To dgv_Details.Rows.Count - 1
            Amount_Calculation(i, 7)
        Next
    End Sub
    Private Sub Amount_Calculation(ByVal CurRow As Integer, ByVal CurCol As Integer)
        Dim fldmtr As Double = 0
        Dim fmt As Double = 0
        Dim CloID As Integer
        Dim ConsYarn As Single
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt2 As New DataTable
        Dim StkIn_For As String = ""
        Dim mtr_pcs As Single = 0
        Dim TotAmt As String = "0"
        Dim RNDOFF As String = "0"
        Dim vStrNetAmt As String = "0"
        Dim Led_IdNo As Integer = 0
        Dim InterStateStatus As Boolean = False

        On Error Resume Next

        With dgv_Details
            If .Visible Then

                If CurCol = 3 Or CurCol = 6 Or CurCol = 7 Or CurCol = 13 Then

                    If CurCol = 3 Or CurCol = 6 Or CurCol = 7 Or CurCol = 13 Then

                        If Val(.Rows(CurRow).Cells(3).Value) = 0 Or Val(.Rows(CurRow).Cells(3).Value) = 100 Then

                            If Common_Procedures.settings.Weaver_Zari_Kuri_Entries_Status = 1 Then

                                CloID = Common_Procedures.Cloth_NameToIdNo(con, .Rows(CurRow).Cells(1).Value)

                                StkIn_For = ""
                                mtr_pcs = 0

                                Da = New SqlClient.SqlDataAdapter("Select Stock_In , Meters_Pcs from Cloth_Head Where Cloth_IdNo = " & Str(Val(CloID)), con)
                                Dt2 = New DataTable
                                Da.Fill(Dt2)
                                If Dt2.Rows.Count > 0 Then
                                    StkIn_For = Dt2.Rows(0)("Stock_In").ToString
                                    mtr_pcs = Val(Dt2.Rows(0)("Meters_Pcs").ToString)
                                End If
                                Dt2.Clear()

                                If Trim(StkIn_For) = "PCS" Then
                                    .Rows(CurRow).Cells(7).Value = Format(Val(.Rows(CurRow).Cells(6).Value) * Val(mtr_pcs), "#########0.00")
                                End If
                            End If

                            .Rows(CurRow).Cells(18).Value = Val(.Rows(CurRow).Cells(7).Value) * Val(.Rows(CurRow).Cells(13).Value)

                        Else

                            fmt = ((100 - Val(.Rows(CurRow).Cells(3).Value)) / 100) * Val(.Rows(CurRow).Cells(7).Value)


                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1035" Then
                                fmt = Format(Math.Abs(Val(fmt)), "######0.00")
                                fmt = Common_Procedures.Meter_RoundOff(fmt)

                            End If

                            If (100 - Val(.Rows(CurRow).Cells(3).Value)) > 0 Then
                                fldmtr = Format(Val(.Rows(CurRow).Cells(7).Value) - Val(fmt), "#########0.00")
                            Else
                                fldmtr = Format(Val(.Rows(CurRow).Cells(7).Value) + Val(fmt), "#########0.00")
                            End If

                            .Rows(CurRow).Cells(18).Value = Val(fldmtr) * Val(.Rows(CurRow).Cells(13).Value)

                        End If
                    End If

                    Total_Calculation()

                End If

            End If
        End With
    End Sub

    Private Sub Printing_Bale_Delivery()
        Dim prtFrm As Single = 0
        Dim prtTo As Single = 0
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim Condt As String = ""
        Dim PpSzSTS As Boolean = False
        'Dim ps As Printing.PaperSize
        Dim NewCode As String = ""

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.*, b.* from Packing_Slip_Head a INNER JOIN Cloth_Head b ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = b.Cloth_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count <= 0 Then

                MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub

            End If

            dt1.Dispose()
            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 9X12", 900, 1200)
        PrintDocument4.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
        PrintDocument4.DefaultPageSettings.PaperSize = pkCustomSize1
        PrintDocument4.DefaultPageSettings.Landscape = False

        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then

            Try

                PrintDialog1.PrinterSettings = PrintDocument4.PrinterSettings
                If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                    PrintDocument4.PrinterSettings = PrintDialog1.PrinterSettings
                    PrintDocument4.Print()
                End If

            Catch ex As Exception
                MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT SHOW PRINT PREVIEW...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                ppd.Document = PrintDocument4

                ppd.WindowState = FormWindowState.Normal
                ppd.StartPosition = FormStartPosition.CenterScreen
                ppd.ClientSize = New Size(600, 600)

                ppd.ShowDialog()
                'If PageSetupDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                '    PrintDocument4.DefaultPageSettings = PageSetupDialog1.PageSettings
                '    ppd.ShowDialog()
                'End If

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If

        pnl_Back.Enabled = True
        pnl_Print.Visible = False
    End Sub

    Private Sub PrintDocument4_BeginPrint(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintEventArgs) Handles PrintDocument4.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim cmd As New SqlClient.SqlCommand
        Dim NewCode As String
        Dim i As Integer
        Dim OrdBy_FrmNo As Single = 0, OrdByToNo As Single = 0
        Dim LotSTS As Boolean = False
        Dim PrevBaleCd As String = ""
        Dim vSlNo As Integer = 0
        Dim vTotMtrs As Single = 0
        Dim vTotWgt As Single = 0

        prn_HdDt.Clear()
        prn_DetDt.Clear()
        prn_Prev_HeadIndx = -100
        prn_HeadIndx = 0
        prn_HdIndx = 0
        prn_HdMxIndx = 0
        prn_DetIndx = 0
        prn_DetSNo = 0
        prn_PageNo = 0
        prn_DetMxIndx = 0
        prn_NoofBaleDets = 0
        prn_Count = 0
        prn_TotBlWgt = 0
        prn_TotBlMtr = 0
        prn_TotBls = 0
        prn_BaleCode1 = ""
        prn_BaleCode2 = ""

        Erase prn_BLDetAr
        prn_BLDetAr = New String(1000, 10) {}

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.*, b.*, c.*, d.Ledger_Name as TransportName, e.Ledger_Name as Agent_Name from ClothSales_Delivery_Head a INNER JOIN Company_Head b ON a.Company_IdNo <> 0 and a.Company_IdNo = b.Company_IdNo INNER JOIN Ledger_Head c ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = c.Ledger_IdNo LEFT OUTER JOIN Ledger_Head d ON a.Transport_IdNo = d.Ledger_IdNo LEFT OUTER JOIN Ledger_Head e ON a.Agent_IdNo = e.Ledger_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)

            If prn_HdDt.Rows.Count > 0 Then

                da2 = New SqlClient.SqlDataAdapter("select a.*, b.*, tC.* from Packing_Slip_Head a LEFT OUTER JOIN Packing_Slip_Details b ON a.Company_IdNo = b.Company_IdNo and a.Packing_Slip_Code = b.Packing_Slip_Code INNER JOIN Cloth_Head tC ON tC.Cloth_IdNo <> 0 and a.Cloth_IdNo = tC.Cloth_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code, b.Sl_No", con)
                'da2 = New SqlClient.SqlDataAdapter("select a.*, b.*, c.*, tZ.*, tC.*, tP.* from Packing_Slip_Head a LEFT OUTER JOIN Packing_Slip_Details b ON a.Company_IdNo = b.Company_IdNo and a.Packing_Slip_Code = b.Packing_Slip_Code INNER JOIN ClothSales_Delivery_Head c ON c.ClothSales_Delivery_Code =  '" & Trim(NewCode) & "' and a.Delivery_Code = '" & Trim(Pk_Condition) & "' + c.ClothSales_Delivery_Code INNER JOIN Company_head tZ ON tZ.company_idno <> 0 and c.company_idno = tZ.Company_Idno INNER JOIN Cloth_Head tC ON tC.Cloth_IdNo <> 0 and a.Cloth_IdNo = tC.Cloth_IdNo LEFT OUTER JOIN Ledger_Head tP ON tP.Ledger_IdNo <> 0 and c.Ledger_IdNo = tP.Ledger_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code, b.Sl_No", con)
                prn_DetDt = New DataTable
                da2.Fill(prn_DetDt)

                If prn_DetDt.Rows.Count > 0 Then

                    PrevBaleCd = ""
                    vSlNo = 0
                    vTotMtrs = 0
                    vTotWgt = 0

                    For i = 0 To prn_DetDt.Rows.Count - 1

                        LotSTS = False
                        If IsDBNull(prn_DetDt.Rows(i).Item("Lot_No").ToString) = False Then
                            If Trim(prn_DetDt.Rows(i).Item("Lot_No").ToString) <> "" Then
                                LotSTS = True
                            End If
                        End If

                        prn_DetMxIndx = prn_DetMxIndx + 1
                        If Trim(UCase(PrevBaleCd)) <> Trim(UCase(prn_DetDt.Rows(i).Item("Packing_Slip_Code").ToString)) Then

                            If Trim(UCase(PrevBaleCd)) <> "" Then
                                prn_BLDetAr(prn_DetMxIndx, 1) = ""
                                prn_BLDetAr(prn_DetMxIndx, 2) = ""
                                prn_BLDetAr(prn_DetMxIndx, 3) = ""
                                prn_BLDetAr(prn_DetMxIndx, 4) = ""
                                prn_BLDetAr(prn_DetMxIndx, 5) = "BALETOTALLINE"

                                prn_DetMxIndx = prn_DetMxIndx + 1
                                prn_BLDetAr(prn_DetMxIndx, 1) = ""
                                prn_BLDetAr(prn_DetMxIndx, 2) = ""
                                prn_BLDetAr(prn_DetMxIndx, 3) = Format(Val(vTotMtrs), "#########0.00")
                                prn_BLDetAr(prn_DetMxIndx, 4) = Format(Val(vTotWgt), "#########0.000")
                                prn_BLDetAr(prn_DetMxIndx, 5) = "BALETOTAL"

                                prn_DetMxIndx = prn_DetMxIndx + 1
                                prn_BLDetAr(prn_DetMxIndx, 1) = ""
                                prn_BLDetAr(prn_DetMxIndx, 2) = ""
                                prn_BLDetAr(prn_DetMxIndx, 3) = ""
                                prn_BLDetAr(prn_DetMxIndx, 4) = ""
                                prn_BLDetAr(prn_DetMxIndx, 5) = "BALETOTALLINE"

                                'prn_BLDetAr(prn_DetMxIndx, 1) = ""
                                'prn_BLDetAr(prn_DetMxIndx, 2) = ""
                                'prn_BLDetAr(prn_DetMxIndx, 3) = ""
                                'prn_BLDetAr(prn_DetMxIndx, 4) = ""
                                'prn_BLDetAr(prn_DetMxIndx, 5) = "BLANKROW"
                            End If

                            prn_DetMxIndx = prn_DetMxIndx + 1
                            prn_BLDetAr(prn_DetMxIndx, 1) = Trim(prn_DetDt.Rows(i).Item("Packing_Slip_No").ToString)

                        End If

                        vSlNo = vSlNo + 1
                        prn_BLDetAr(prn_DetMxIndx, 0) = Trim(vSlNo)

                        If LotSTS = True Then
                            prn_BLDetAr(prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(i).Item("Lot_No").ToString) & "/" & Trim(prn_DetDt.Rows(i).Item("Pcs_No").ToString)
                            prn_BLDetAr(prn_DetMxIndx, 3) = Format(Val(prn_DetDt.Rows(i).Item("Meters").ToString), "#########0.00")
                            prn_BLDetAr(prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(i).Item("Weight").ToString), "#########0.000")
                        Else
                            prn_BLDetAr(prn_DetMxIndx, 2) = ""
                            prn_BLDetAr(prn_DetMxIndx, 3) = Format(Val(prn_DetDt.Rows(i).Item("Total_Meters").ToString), "#########0.00")
                            prn_BLDetAr(prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(i).Item("Total_Weight").ToString), "#########0.000")
                        End If

                        vTotMtrs = vTotMtrs + Val(prn_DetDt.Rows(i).Item("Total_Meters").ToString)
                        vTotWgt = vTotWgt + Val(prn_DetDt.Rows(i).Item("Total_Weight").ToString)

                        If Val(prn_BLDetAr(prn_DetMxIndx, 4)) = 0 Then prn_BLDetAr(prn_DetMxIndx, 4) = ""
                        prn_BLDetAr(prn_DetMxIndx, 5) = ""

                        PrevBaleCd = prn_DetDt.Rows(i).Item("Packing_Slip_Code").ToString

                    Next i

                    prn_DetMxIndx = prn_DetMxIndx + 1
                    prn_BLDetAr(prn_DetMxIndx, 1) = ""
                    prn_BLDetAr(prn_DetMxIndx, 2) = ""
                    prn_BLDetAr(prn_DetMxIndx, 3) = ""
                    prn_BLDetAr(prn_DetMxIndx, 4) = ""
                    prn_BLDetAr(prn_DetMxIndx, 5) = "BALETOTALLINE"

                    prn_DetMxIndx = prn_DetMxIndx + 1
                    prn_BLDetAr(prn_DetMxIndx, 1) = ""
                    prn_BLDetAr(prn_DetMxIndx, 2) = ""
                    prn_BLDetAr(prn_DetMxIndx, 3) = Format(Val(vTotMtrs), "#########0.00")
                    prn_BLDetAr(prn_DetMxIndx, 4) = Format(Val(vTotWgt), "#########0.000")
                    prn_BLDetAr(prn_DetMxIndx, 5) = "BALETOTAL"

                    prn_DetMxIndx = prn_DetMxIndx + 1
                    prn_BLDetAr(prn_DetMxIndx, 1) = ""
                    prn_BLDetAr(prn_DetMxIndx, 2) = ""
                    prn_BLDetAr(prn_DetMxIndx, 3) = ""
                    prn_BLDetAr(prn_DetMxIndx, 4) = ""
                    prn_BLDetAr(prn_DetMxIndx, 5) = "BALETOTALLINE"

                End If

            Else

                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End If

            da1.Dispose()
            da2.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub PrintDocument4_PrintPage(ByVal sender As System.Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument4.PrintPage
        If prn_HdDt.Rows.Count <= 0 Then Exit Sub
        Printing_Bale_Format2_PrePrint_Anuman(e)
    End Sub

    Private Sub Printing_Bale_Format2_PrePrint_Anuman(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim cmd As New SqlClient.SqlCommand
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim EntryCode As String
        Dim I As Integer = 0
        Dim NoofDets As Integer, NoofItems_PerPage As Integer
        Dim pFont As Font
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim CurY As Single, TxtHgt As Single
        Dim LnAr(15) As Single, ClArr(15) As Single
        Dim MilNm1 As String = "", MilNm2 As String = ""
        'Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        Dim PpSzSTS As Boolean = False
        Dim W1 As Single = 0
        Dim TotMtr1 As Single = 0, TotMtr2 As Single = 0
        Dim TotWgt1 As Single = 0, TotWgt2 As Single = 0
        Dim IncY As Single = 0



        Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 9X12", 900, 1200)
        PrintDocument4.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
        PrintDocument4.DefaultPageSettings.PaperSize = pkCustomSize1
        e.PageSettings.PaperSize = pkCustomSize1
        PrintDocument4.DefaultPageSettings.Landscape = False

        With PrintDocument4.DefaultPageSettings.Margins
            .Left = 0
            .Right = 0
            .Top = 0
            .Bottom = 0
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom

        End With

        pFont = New Font("Arial", 12, FontStyle.Bold)
        'pFont = New Font("Calibri", 11, FontStyle.Bold)

        With PrintDocument4.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With

        NoofItems_PerPage = 30

        Erase LnAr
        Erase ClArr
        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClArr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        'TxtHgt = e.Graphics.MeasureString("A", pFont).Height  '18.69
        TxtHgt = 19 ' e.Graphics.MeasureString("A", pFont).Height  '18.69

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            If prn_HdDt.Rows.Count > 0 Then

                If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then

                    Printing_Bale_Format2_PrePrint_Anuman_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClArr)

                    NoofDets = 0
                    TotMtr1 = 0 : TotMtr2 = 0
                    TotWgt1 = 0 : TotWgt2 = 0

                    If prn_DetMxIndx > 0 Then

                        CurY = TMargin + 380

                        Do While prn_NoofBaleDets < prn_DetMxIndx

                            If NoofDets >= NoofItems_PerPage Then

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued....", PageWidth - 10, CurY, 1, 0, pFont)

                                NoofDets = NoofDets + 1

                                CurY = TMargin + 990
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotMtr1), "#########0.00"), LMargin + 270, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotWgt1), "#########0.000"), LMargin + 370, CurY, 1, 0, pFont)
                                If Val(TotMtr2) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotMtr2), "#########0.00"), LMargin + 680, CurY, 1, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotWgt2), "#########0.000"), LMargin + 770, CurY, 1, 0, pFont)
                                End If

                                Printing_Bale_Format2_PrePrint_Anuman_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, False)

                                prn_DetIndx = prn_DetIndx + NoofItems_PerPage
                                prn_DetSNo = prn_DetSNo + NoofItems_PerPage

                                e.HasMorePages = True

                                Return

                            End If


                            prn_DetIndx = prn_DetIndx + 1

                            CurY = CurY + TxtHgt

                            If Val(prn_BLDetAr(prn_DetIndx, 3)) <> 0 Or Val(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 3)) <> 0 Then

                                prn_DetSNo = prn_DetSNo + 1

                                If Val(prn_BLDetAr(prn_DetIndx, 3)) <> 0 Or Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) = "BALETOTAL" Or Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) = "BLANKROW" Then

                                    IncY = 0
                                    If Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) = "BALETOTAL" Then
                                        IncY = 10
                                    End If

                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx, 0)), LMargin + 20, CurY - IncY, 0, 0, pFont)
                                    'Common_Procedures.Print_To_PrintDocument(e, Trim(Val(prn_DetSNo)), LMargin + 20, CurY-IncY, 0, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx, 1)), LMargin + 60, CurY - IncY, 0, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx, 2)), LMargin + 140, CurY - IncY, 0, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx, 3)), LMargin + 270, CurY - IncY, 1, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx, 4)), LMargin + 370, CurY - IncY, 1, 0, pFont)

                                    TotMtr1 = TotMtr1 + Val(prn_BLDetAr(prn_DetIndx, 3))
                                    TotWgt1 = TotWgt1 + Val(prn_BLDetAr(prn_DetIndx, 4))

                                    prn_TotBls = prn_TotBls + 1
                                    prn_TotBlMtr = prn_TotBlMtr + Val(prn_BLDetAr(prn_DetIndx, 3))
                                    prn_TotBlWgt = prn_TotBlWgt + Val(prn_BLDetAr(prn_DetIndx, 4))

                                    prn_NoofBaleDets = prn_NoofBaleDets + 1

                                    prn_BaleCode1 = Trim(prn_BLDetAr(prn_DetIndx, 1))

                                Else

                                    If Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) = "BALETOTALLINE" Then
                                        'CurY = CurY + TxtHgt
                                        e.Graphics.DrawLine(Pens.Black, LMargin + 5, CurY, LMargin + 380, CurY)
                                        prn_NoofBaleDets = prn_NoofBaleDets + 1
                                    End If

                                End If


                                If Val(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 3)) <> 0 Or Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) = "BALETOTAL" Or Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) = "BLANKROW" Then

                                    IncY = 0
                                    If Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) = "BALETOTAL" Then
                                        IncY = 10
                                    End If

                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 0)), LMargin + 410, CurY - IncY, 0, 0, pFont)
                                    'Common_Procedures.Print_To_PrintDocument(e, Trim(Val(prn_DetSNo + NoofItems_PerPage)), LMargin + 410, CurY-IncY, 0, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 1)), LMargin + 460, CurY - IncY, 0, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 2)), LMargin + 540, CurY - IncY, 0, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 3)), LMargin + 680, CurY - IncY, 1, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 4)), LMargin + 770, CurY - IncY, 1, 0, pFont)

                                    TotMtr2 = TotMtr2 + Val(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 3))
                                    TotWgt2 = TotWgt2 + Val(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 4))

                                    prn_TotBls = prn_TotBls + 1
                                    prn_TotBlMtr = prn_TotBlMtr + Val(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 3))
                                    prn_TotBlWgt = prn_TotBlWgt + Val(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 4))

                                    prn_NoofBaleDets = prn_NoofBaleDets + 1

                                    prn_BaleCode2 = Trim(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 1))

                                Else

                                    If Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) = "BALETOTALLINE" Then
                                        'CurY = CurY + TxtHgt
                                        e.Graphics.DrawLine(Pens.Black, LMargin + 400, CurY, LMargin + 775, CurY)
                                        prn_NoofBaleDets = prn_NoofBaleDets + 1
                                    End If

                                End If


                            Else

                                If Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) = "BALETOTALLINE" Then
                                    e.Graphics.DrawLine(Pens.Black, LMargin + 5, CurY, LMargin + 380, CurY)
                                    prn_NoofBaleDets = prn_NoofBaleDets + 1
                                End If
                                If Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) = "BALETOTALLINE" Then
                                    e.Graphics.DrawLine(Pens.Black, LMargin + 400, CurY, LMargin + 775, CurY)
                                    prn_NoofBaleDets = prn_NoofBaleDets + 1
                                End If

                                If Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) = "BLANKROW" Then
                                    prn_NoofBaleDets = prn_NoofBaleDets + 1
                                End If
                                If Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) = "BLANKROW" Then
                                    prn_NoofBaleDets = prn_NoofBaleDets + 1
                                End If
                                If Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) <> "BLANKROW" And Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) <> "BLANKROW" And Trim(UCase(prn_BLDetAr(prn_DetIndx, 5))) <> "BALETOTALLINE" And Trim(UCase(prn_BLDetAr(prn_DetIndx + NoofItems_PerPage, 5))) <> "BALETOTALLINE" Then
                                    prn_NoofBaleDets = prn_NoofBaleDets + 1
                                End If

                            End If

                            NoofDets = NoofDets + 1

                        Loop

                    End If

                    CurY = TMargin + 990
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotMtr1), "#########0.00"), LMargin + 270, CurY, 1, 0, pFont)
                    If Val(TotWgt1) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotWgt1), "#########0.000"), LMargin + 370, CurY, 1, 0, pFont)
                    End If
                    If Val(TotMtr2) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotMtr2), "#########0.00"), LMargin + 680, CurY, 1, 0, pFont)
                        If Val(TotWgt2) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(TotWgt2), "#########0.000"), LMargin + 770, CurY, 1, 0, pFont)
                        End If
                    End If

                    Printing_Bale_Format2_PrePrint_Anuman_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, True)

                End If

            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        prn_HeadIndx = prn_HeadIndx + 1

        'If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
        '    e.HasMorePages = True
        'Else
        e.HasMorePages = False
        'End If

    End Sub

    Private Sub Printing_Bale_Format2_PrePrint_Anuman_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim CurX As Single = 0


        PageNo = PageNo + 1

        'da2 = New SqlClient.SqlDataAdapter("select a.*, b.*, c.*, tZ.*, tC.*, tP.* from Packing_Slip_Head a LEFT OUTER JOIN Packing_Slip_Details b ON a.Company_IdNo = b.Company_IdNo and a.Packing_Slip_Code = b.Packing_Slip_Code INNER JOIN ClothSales_Delivery_Head c ON c.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and c.ClothSales_Delivery_Code =  '" & Trim(EntryCode) & "' and a.Delivery_Code = '" & Trim(Pk_Condition) & "' + c.ClothSales_Delivery_Code INNER JOIN Company_head tZ ON tZ.company_idno <> 0 and c.company_idno = tZ.Company_Idno INNER JOIN Cloth_Head tC ON tC.Cloth_IdNo <> 0 and a.Cloth_IdNo = tC.Cloth_IdNo LEFT OUTER JOIN Ledger_Head tP ON tP.Ledger_IdNo <> 0 and c.Ledger_IdNo = tP.Ledger_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code, b.Sl_No", con)
        'dt2 = New DataTable
        'da2.Fill(dt2)
        'If dt2.Rows.Count > NoofItems_PerPage Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        'End If
        'dt2.Clear()

        Try

            CurX = LMargin + 60 ' 40  '150
            CurY = TMargin + 140 ' 122 ' 100

            p1Font = New Font("Arial", 13, FontStyle.Bold)
            'p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "M/s." & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_MainName").ToString, CurX, CurY, 0, 0, p1Font)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString, CurX, CurY, 0, 0, pFont)
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
                CurY = CurY + TxtHgt
                Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString, CurX, CurY, 0, 0, pFont)
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
                CurY = CurY + TxtHgt
                Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString, CurX, CurY, 0, 0, pFont)
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
                CurY = CurY + TxtHgt
                Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString, CurX, CurY, 0, 0, pFont)
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_TinNo").ToString) <> "" Then
                CurY = CurY + TxtHgt
                Common_Procedures.Print_To_PrintDocument(e, " Tin No : " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_TinNo").ToString, CurX, CurY, 0, 0, pFont)
            End If


            CurX = LMargin + 580
            CurY = TMargin + 140
            p1Font = New Font("Arial", 14, FontStyle.Bold)
            'p1Font = New Font("Calibri", 14, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("ClothSales_Delivery_No").ToString, CurX, CurY, 0, 0, pFont)

            CurY = TMargin + 170
            Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy"), CurX, CurY, 0, 0, pFont)

            CurY = TMargin + 215
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Party_OrderNo").ToString, CurX, CurY, 0, 0, pFont)


            If prn_DetDt.Rows.Count > 0 Then
                CurX = LMargin + 60
                CurY = TMargin + 260
                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(0).Item("Cloth_Name").ToString, CurX, CurY, 0, 0, pFont)


                CurX = LMargin + 540
                CurY = TMargin + 260
                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(0).Item("Weave").ToString, CurX, CurY, 0, 0, pFont)

            End If

            CurX = LMargin + 120
            CurY = TMargin + 300
            If Common_Procedures.Ledger_IdNoToName(con, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Agent_IdNo").ToString)) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.Ledger_IdNoToName(con, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Agent_IdNo").ToString)), CurX, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, " DIRECT", CurX, CurY, 0, 0, pFont)
            End If

            CurY = TMargin + 330
            If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Transport_idNo").ToString) <> 0 Then
                Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.Ledger_IdNoToName(con, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Transport_idNo").ToString)), CurX, CurY, 0, 0, pFont)
            End If


            CurX = LMargin + 540
            CurY = TMargin + 300
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Despatch_To").ToString, CurX, CurY, 0, 0, pFont)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Delivery_Address1").ToString, CurX, CurY, 0, 0, pFont)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Delivery_Address2").ToString, CurX, CurY, 0, 0, pFont)


        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub Printing_Bale_Format2_PrePrint_Anuman_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim CurX As Single = 0

        Try

            If is_LastPage = True Then

                CurX = LMargin + 120
                CurY = TMargin + 1050
                Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotBls), CurX, CurY, 0, 0, pFont)
                'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Bales").ToString, CurX, CurY, 0, 0, pFont)

                CurY = TMargin + 1080
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotBlMtr), "###########0.00"), CurX, CurY, 0, 0, pFont)
                'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, CurX, CurY, 0, 0, pFont)

                CurY = TMargin + 1120
                If Val(prn_TotBlWgt) <> 0 Then
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotBlWgt), "###########0.00"), CurX, CurY, 0, 0, pFont)
                End If

            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub set_PaperSize_For_PrintDocument1()
        Dim I As Integer = 0
        Dim PpSzSTS As Boolean = False
        Dim ps As Printing.PaperSize

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1242" Then
            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = False
                    Exit For
                End If
            Next


        ElseIf Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_Custom8X6_As_Default_PaperSize) = 1 Or Prnt_HalfSheet_STS = True Then

            Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
            PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
            PrintDocument1.DefaultPageSettings.Landscape = False

        ElseIf Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_A4_As_Default_PaperSize) = 1 Or Val(Common_Procedures.settings.Printing_For_FullSheet_Set_A4_As_Default_PaperSize) = 1 Or Val(vPrnt_2Copy_In_SinglePage) = 1 Then

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = False
                    Exit For
                End If
            Next

        Else

            PpSzSTS = False

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                If ps.Width = 800 And ps.Height = 600 Then
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = False
                    PpSzSTS = True
                    Exit For
                End If
            Next

            If PpSzSTS = False Then

                For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                    If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
                        ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                        PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                        PrintDocument1.DefaultPageSettings.PaperSize = ps
                        PrintDocument1.DefaultPageSettings.Landscape = False
                        PpSzSTS = True
                        Exit For
                    End If
                Next

                If PpSzSTS = False Then
                    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                            PrintDocument1.DefaultPageSettings.PaperSize = ps
                            PrintDocument1.DefaultPageSettings.Landscape = False
                            Exit For
                        End If
                    Next
                End If

            End If

        End If

    End Sub

    Private Sub cbo_RollBundle_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_RollBundle.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_RollBundle, txt_EWay_Bill_No, cbo_DeliveryTo, "", "", "", "")
    End Sub

    Private Sub cbo_RollBundle_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_RollBundle.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_RollBundle, cbo_DeliveryTo, "", "", "", "")
    End Sub

    Private Sub cbo_Vechile_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Vechile.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "ClothSales_Delivery_Head", "Vechile_No", "", "")
    End Sub

    Private Sub cbo_Vechile_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Vechile.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Vechile, txt_Freight, txt_Note, "ClothSales_Delivery_Head", "Vechile_No", "", "")
    End Sub

    Private Sub cbo_Vechile_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Vechile.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Vechile, txt_Note, "ClothSales_Delivery_Head", "Vechile_No", "", "", False)
    End Sub

    Private Sub btn_Print_Bundle_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Print_Bundle.Click
        EMAIL_Status = False
        WHATSAPP_Status = False
        vPACKING_LIST_PRINT_WITHOUT_WGT_STS = False
        If Common_Procedures.settings.CustomerCode = "1186" Then
            Printing_Packing_slip()
        ElseIf Common_Procedures.settings.CustomerCode = "1428" Then
            vPrnt_PackSlip_Wgt = False
            Printing_Packing_slip()
        ElseIf Common_Procedures.settings.CustomerCode = "1520" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1569" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1608" Then
            Printing_Delivery_cum_PackingList()
        ElseIf Common_Procedures.settings.CustomerCode = "1578" Then
            Printing_Bundle_1578()





        Else
            Printing_Bundle()
        End If
        btn_print_Close_Click(sender, e)
    End Sub
 
    Public Sub Printing_Bundle()
        Dim prtFrm As Single = 0
        Dim prtTo As Single = 0
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim Condt As String = ""
        Dim PpSzSTS As Boolean = False
        Dim ps As Printing.PaperSize
        Dim NewCode As String
        Dim Def_PrntrNm As String = ""
        Dim vFILNm As String = ""
        Dim vFLPATH As String = ""
        Dim vPDFFLPATH_and_NAME As String = ""
        Dim vPRNTRNAME As String
        Dim vPARTYNM As String = ""

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            vPARTYNM = ""

            If Common_Procedures.settings.CustomerCode = "1186" Then
                da1 = New SqlClient.SqlDataAdapter("select a.*,c.* from ClothSales_Delivery_Piece_Details a INNER JOIN cloth_head c on c.cloth_idno =a.cloth_idno Where a.ClothSales_Delivery_Code  = '" & Trim(NewCode) & "'", con)
                dt1 = New DataTable
                da1.Fill(dt1)

                If dt1.Rows.Count <= 0 Then
                    MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    Exit Sub

                End If

                dt1.Dispose()
                da1.Dispose()

            Else

                da1 = New SqlClient.SqlDataAdapter("select a.*, b.* from Packing_Slip_Head a INNER JOIN Cloth_Head b ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = b.Cloth_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'", con)
                dt1 = New DataTable
                da1.Fill(dt1)

                If dt1.Rows.Count <= 0 Then

                    MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    Exit Sub

                End If

                dt1.Dispose()
                da1.Dispose()

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "--1155--" Then

            Dim EntryCode As String

            EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

            prn_HdDt.Clear()
            prn_DetDt.Clear()

            prn_PageNo = 0
            prn_HdIndx = 1
            prn_DetIndx = 0
            prn_HdMxIndx = 0
            prn_DetMxIndx = 0
            prn_Count = 1

            Erase prn_DetAr
            Erase prn_HdAr

            prn_HdAr = New String(100, 10) {}

            prn_DetAr = New String(100, 50, 10) {}

            Common_Procedures.Printing_PackingSlip_Format1155_Excel(con, "", 0, "", EntryCode, Pk_Condition, 0, 0, prn_HdDt, prn_DetDt, prn_HdMxIndx, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx)

            Exit Sub

        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then

            For I = 0 To PrintDocument5.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument5.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument5.PrinterSettings.PaperSizes(I)
                    PrintDocument5.DefaultPageSettings.PaperSize = ps
                    PrintDocument5.DefaultPageSettings.Landscape = True
                    Exit For
                End If
            Next

        Else

            For I = 0 To PrintDocument5.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument5.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument5.PrinterSettings.PaperSizes(I)
                    PrintDocument5.DefaultPageSettings.PaperSize = ps
                    PrintDocument5.DefaultPageSettings.Landscape = False
                    Exit For
                End If
            Next

        End If

        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then

            Try

                If Print_PDF_Status = True Then

                    vFLPATH = ""
                    vPRNTRNAME = Common_Procedures.get_PDF_PrinterName(EMAIL_Status, WHATSAPP_Status, vFLPATH)

                    If Trim(vPRNTRNAME) = "" Then
                        Exit Sub
                    End If

                    Def_PrntrNm = PrintDocument5.PrinterSettings.PrinterName

                    vPARTYNM = Common_Procedures.Replace_SpecialCharacters_With_UnderScore(cbo_PartyName.Text)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SPINNERS PRIVATE LIMITED (FABRIC DIVISION)
                        vFILNm = Trim("PackingList_" & Trim(lbl_DcNo.Text) & "_" & Trim(vPARTYNM) & ".pdf")
                    Else
                        vFILNm = Trim("PackingList_" & Trim(lbl_DcNo.Text) & ".pdf")
                    End If

                    vFILNm = StrConv(vFILNm, vbProperCase)
                    vPDFFLPATH_and_NAME = Trim(vFLPATH) & "\" & Trim(vFILNm)
                    vEMAIL_Attachment_FileName = Trim(vPDFFLPATH_and_NAME)

                    PrintDocument5.DocumentName = Trim(vFILNm)
                    PrintDocument5.PrinterSettings.PrinterName = Trim(vPRNTRNAME)    ' "Microsoft Print to PDF"
                    'PrintDocument5.PrinterSettings.PrinterName = "doPDF v7"
                    PrintDocument5.PrinterSettings.PrintToFile = True
                    PrintDocument5.PrinterSettings.PrintFileName = Trim(vPDFFLPATH_and_NAME)
                    PrintDocument5.Print()

                    'Debug.Print(PrintDocument5.PrinterSettings.PrintFileName)

                    PrintDocument5.PrinterSettings.PrinterName = Trim(Def_PrntrNm)
                    Print_PDF_Status = False

                    'PrintDocument5.DocumentName = "BundleSlip"
                    'PrintDocument5.PrinterSettings.PrinterName = "doPDF v7"
                    'PrintDocument5.PrinterSettings.PrintFileName = "c:\BundleSlip.pdf"
                    'PrintDocument5.Print()

                Else

                    If Val(Common_Procedures.settings.Printing_Show_PrintDialogue) = 1 Then
                        PrintDialog1.PrinterSettings = PrintDocument5.PrinterSettings
                        If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                            PrintDocument5.PrinterSettings = PrintDialog1.PrinterSettings
                            PrintDocument5.Print()
                        End If

                    Else
                        PrintDocument5.Print()

                    End If

                End If

            Catch ex As Exception
                MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT SHOW PRINT PREVIEW...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                ppd.Document = PrintDocument5

                ppd.WindowState = FormWindowState.Maximized
                ppd.StartPosition = FormStartPosition.CenterScreen
                ppd.PrintPreviewControl.AutoZoom = True
                ppd.PrintPreviewControl.Zoom = 1.0

                ppd.ShowDialog()

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If



        pnl_Back.Enabled = True
        pnl_Print.Visible = False

    End Sub

    Private Sub PrintDocument5_BeginPrint(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintEventArgs) Handles PrintDocument5.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim DT1 As New DataTable
        Dim NewCode As String = ""
        Dim BalCode As String = ""
        Dim vLMNO As String = ""
        Dim sno As Integer = 0
        Dim SQL_ORBY_COND = ""


        prn_HdDt.Clear()
        prn_DetDt.Clear()

        prn_PageNo = 0
        prn_HdIndx = 0
        prn_DetIndx = 0
        prn_HdMxIndx = 0
        prn_DetMxIndx = 0
        prn_Count = 1
        prn_TotalBales = 0
        prn_TotalPcs = 0
        prn_TotalMtrs = 0
        prn_TotalWgt = 0
        vprn_TotAmt = 0
        prn_TotaGrslWgt = 0
        prn_PL_Tot_Mtr = ""
        prn_PL_Tot_GrsWgt = ""
        prn_PL_Tot_NetWgt = ""
        vCLONAME = ""
        Total_mtrs = 0
        Total_Wgt = 0


        Erase prn_DetAr

        Erase prn_HdAr

        prn_HdAr = New String(1000, 1000) {}

        prn_DetAr = New String(1000, 1000, 11) {}

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            ' --- CODE BY GOPI 2025-02-22  FOR MANI OMEGA - ( MULTIPLE QUALITY PACKING LIST PRINT )

            If Trim(Common_Procedures.settings.CustomerCode) = "1464" Then
                SQL_ORBY_COND = " tC.Cloth_Name,a.Packing_Slip_No"
            Else
                SQL_ORBY_COND = " a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code"
            End If

            da1 = New SqlClient.SqlDataAdapter("select a.Packing_Slip_No, a.cloth_idno, a.Total_Pcs as Pak_Pcs, a.Packing_Slip_Code, a.Bale_Transfer_Code,a.gross_weight, a.Net_Weight, a.Total_Weight, a.Total_Meters as Pak_Mtrs, tCSOH.ClothSales_Order_Date as ClothSales_Order_Party_OrderDate, tCSOH.Party_OrderNo as ClothSales_Order_Party_OrderNo , tZ.*, tC.*, tL.*, tCDH.*, tE.* from Packing_Slip_Head a INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno INNER JOIN ClothSales_Delivery_Head tCDH ON tCDH.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'  and '" & Trim(Pk_Condition) & "' + tCDH.ClothSales_Delivery_Code = a.Delivery_Code INNER JOIN ClothSales_Delivery_Details tE ON tE.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'  and '" & Trim(Pk_Condition) & "' + tE.ClothSales_Delivery_Code = a.Delivery_Code and tE.ClothSales_Delivery_SlNo = a.Delivery_DetailsSlNo  INNER JOIN Ledger_Head tL ON tE.Ledger_IdNo = tL.Ledger_IdNo INNER JOIN Cloth_Head tC ON tC.Cloth_IdNo = tE.ClothIdNo_ToPrint Left OUTER JOIN ClothSales_Order_Head tCSOH ON tE.ClothSales_Order_Code = tCSOH.ClothSales_Order_Code Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by " & SQL_ORBY_COND & " ", con)

            ' --- COMMAD BY GOPI 2025-02-22

            'da1 = New SqlClient.SqlDataAdapter("select a.Packing_Slip_No, a.cloth_idno, a.Total_Pcs as Pak_Pcs, a.Packing_Slip_Code, a.Bale_Transfer_Code,a.gross_weight, a.Net_Weight, a.Total_Weight, a.Total_Meters as Pak_Mtrs, tZ.*, tC.*, tL.*, tCDH.*, tE.* from Packing_Slip_Head a INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno INNER JOIN ClothSales_Delivery_Head tCDH ON tCDH.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'  and '" & Trim(Pk_Condition) & "' + tCDH.ClothSales_Delivery_Code = a.Delivery_Code INNER JOIN ClothSales_Delivery_Details tE ON tE.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'  and '" & Trim(Pk_Condition) & "' + tE.ClothSales_Delivery_Code = a.Delivery_Code and tE.ClothSales_Delivery_SlNo = a.Delivery_DetailsSlNo  INNER JOIN Ledger_Head tL ON tE.Ledger_IdNo = tL.Ledger_IdNo INNER JOIN Cloth_Head tC ON tC.Cloth_IdNo = tE.ClothIdNo_ToPrint Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "' Order by a.Packing_Slip_Date, a.for_OrderBy, a.Packing_Slip_No, a.Packing_Slip_Code", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)



            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1007" Then

                If prn_HdDt.Rows.Count > 0 Then
                    For i = 0 To prn_HdDt.Rows.Count - 1

                        If Trim(UCase(vCLONAME)) <> Trim(UCase(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)) Then
                            sno = 0
                        End If

                        sno = sno + 1
                        prn_HdMxIndx = prn_HdMxIndx + 1

                        vCLONAME = Trim(UCase(prn_HdDt.Rows(i).Item("Cloth_Name").ToString))

                        prn_HdAr(prn_HdMxIndx, 0) = sno
                        prn_HdAr(prn_HdMxIndx, 1) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                        If Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString) <> "" Then
                            prn_HdAr(prn_HdMxIndx, 2) = Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString)
                        Else
                            prn_HdAr(prn_HdMxIndx, 2) = Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)
                        End If
                        prn_HdAr(prn_HdMxIndx, 3) = Val(prn_HdDt.Rows(i).Item("Pak_Pcs").ToString)
                        prn_HdAr(prn_HdMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")

                        prn_HdAr(prn_HdMxIndx, 5) = Format(Val(prn_HdDt.Rows(i).Item("Gross_Weight").ToString), "#########0.00")
                        If Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString) <> 0 Then
                            prn_HdAr(prn_HdMxIndx, 6) = Format(Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString), "#########0.00")
                        Else
                            prn_HdAr(prn_HdMxIndx, 6) = Format(Val(prn_HdDt.Rows(i).Item("Total_Weight").ToString), "#########0.00")
                        End If
                        prn_HdAr(prn_HdMxIndx, 7) = Val(sno)
                        prn_HdAr(prn_HdMxIndx, 8) = Trim(prn_HdDt.Rows(i).Item("Fold_Perc").ToString)

                        prn_HdAr(prn_HdMxIndx, 9) = Trim(prn_HdDt.Rows(i).Item("sort_no").ToString)

                        prn_HdAr(prn_HdMxIndx, 10) = Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)


                        If Trim(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderNo").ToString) <> "" Then
                            prn_HdAr(prn_HdMxIndx, 12) = Trim(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderNo").ToString)
                        Else
                            prn_HdAr(prn_HdMxIndx, 12) = Trim(prn_HdDt.Rows(i).Item("Party_OrderNo").ToString)
                        End If

                        If Trim(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderDate").ToString) <> "" Then
                            prn_HdAr(prn_HdMxIndx, 13) = Trim(Format(Convert.ToDateTime(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderDate").ToString), "dd-MM-yyyy").ToString)

                        Else
                            prn_HdAr(prn_HdMxIndx, 13) = Trim(prn_HdDt.Rows(i).Item("Party_OrderDate").ToString)
                        End If

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then '---- MANI OMEGA FABRICS (THIRUCHENKODU)
                            '-- COMM0N DC AND INVOICE PRINT PURPOSE , MUTIPLE CLOTH NAME PUPOSE
                            prn_HdAr(prn_HdMxIndx, 11) = Trim(prn_HdDt.Rows(i).Item("sort_no").ToString)

                            prn_HdAr(prn_HdMxIndx, 14) = Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)

                        End If




                        prn_TotalBales = prn_TotalBales + 1

                        prn_TotaGrslWgt = Format(Val(prn_TotaGrslWgt) + Format(Val(prn_HdDt.Rows(i).Item("Gross_Weight").ToString), "#########0.000"), "##########0.000")
                        'prn_DetMxIndx = 0


                        If Trim(prn_HdDt.Rows(i).Item("Bale_Transfer_Code").ToString) <> "" Then

                            BalCode = ""
                            da2 = New SqlClient.SqlDataAdapter("select a.* from Packing_Slip_Head a where a.Delivery_Code = 'BLTRF-" & Trim(prn_HdDt.Rows(i).Item("Bale_Transfer_Code").ToString) & "' and '" & Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString) & "' LIKE '%\\' + a.Packing_Slip_Code + '//%' ", con)
                            DT1 = New DataTable
                            da2.Fill(DT1)
                            If DT1.Rows.Count > 0 Then
                                BalCode = Trim(DT1.Rows(0).Item("Packing_Slip_Code").ToString)
                            End If
                            DT1.Clear()

                        Else

                            BalCode = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString)

                        End If

                        da2 = New SqlClient.SqlDataAdapter("select a.*,b.* from Packing_Slip_Details a LEFT OUTER JOIN Roll_Packing_Details b On A.Packing_Slip_Code = B.Roll_Code where a.Packing_Slip_Code = '" & Trim(BalCode) & "' order by a.Sl_No", con)
                        'da2 = New SqlClient.SqlDataAdapter("select a.* from Packing_Slip_Details a where a.Packing_Slip_Code = '" & Trim(BalCode) & "' order by a.Sl_No", con)

                        'da2 = New SqlClient.SqlDataAdapter("Select a.* , B.* from Packing_Slip_Details a LEFT OUTER JOIN Roll_Packing_Details b On A.Packing_Slip_Code = B.Roll_Code Where a.Packing_Slip_Code = '" & Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString) & "' order by a.Sl_No", con)


                        prn_DetDt = New DataTable
                        da2.Fill(prn_DetDt)

                        If prn_DetDt.Rows.Count > 0 Then

                            For j = 0 To prn_DetDt.Rows.Count - 1

                                If Val(prn_DetDt.Rows(j).Item("Meters").ToString) <> 0 Then
                                    prn_DetMxIndx = prn_DetMxIndx + 1

                                    prn_DetAr(1, prn_DetMxIndx, 0) = Trim(prn_DetDt.Rows(j).Item("Sl_No").ToString)
                                    prn_DetAr(1, prn_DetMxIndx, 1) = Trim(prn_DetDt.Rows(j).Item("Lot_No").ToString)
                                    prn_DetAr(1, prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(j).Item("Pcs_No").ToString)
                                    prn_DetAr(1, prn_DetMxIndx, 3) = Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")



                                    'prn_DetAr(1, prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.00")
                                    'prn_DetAr(1, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)

                                    prn_DetAr(1, prn_DetMxIndx, 4) = Trim(prn_DetDt.Rows(j).Item("Party_PieceNo").ToString)
                                    prn_DetAr(1, prn_DetMxIndx, 5) = Trim(prn_DetDt.Rows(j).Item("Buyer_RefNo").ToString)


                                    vLMNO = ""
                                    prn_DetAr(1, prn_DetMxIndx, 6) = (prn_DetDt.Rows(j).Item("Loom_IdNo").ToString)

                                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1007" Then
                                        prn_DetAr(1, prn_DetMxIndx, 7) = Trim(prn_DetDt.Rows(j).Item("Points").ToString)
                                    Else

                                        If Trim(vLMNO) = "" Then
                                            vLMNO = Trim(prn_DetDt.Rows(j).Item("Loom_No").ToString)
                                        End If
                                        prn_DetAr(1, prn_DetMxIndx, 7) = Trim(vLMNO)

                                    End If


                                    prn_DetAr(1, prn_DetMxIndx, 8) = Trim(prn_DetDt.Rows(j).Item("Point_Per_PassMeter").ToString)
                                    prn_DetAr(1, prn_DetMxIndx, 9) = Trim(prn_DetDt.Rows(j).Item("Grade").ToString)
                                    prn_DetAr(1, prn_DetMxIndx, 10) = Trim(prn_DetDt.Rows(j).Item("Weight").ToString)
                                    prn_DetAr(1, prn_DetMxIndx, 11) = (prn_DetDt.Rows(j).Item("Loom_No").ToString)

                                    prn_TotalPcs = prn_TotalPcs + 1
                                    Total_mtrs = Total_mtrs + Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")
                                    Total_Wgt = Total_Wgt + Val(prn_HdDt.Rows(i).Item("Total_Weight").ToString)

                                    prn_HdAr(prn_HdMxIndx, 5) = Val(prn_TotalPcs)
                                    prn_HdAr(prn_HdMxIndx, 6) = Val(Total_mtrs)
                                    prn_HdAr(prn_HdMxIndx, 7) = Val(Total_Wgt)
                                    prn_HdAr(prn_HdMxIndx, 8) = Val(prn_TotalBales)


                                End If

                            Next j

                        Else

                            If Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString) <> 0 Then

                                prn_DetMxIndx = prn_DetMxIndx + 1
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 0) = ""
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 1) = ""
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 2) = ""
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")

                                If Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString) <> 0 Then
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString), "#########0.00")
                                Else
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Total_Weight").ToString), "#########0.00")
                                End If

                                prn_TotalPcs = Val(prn_TotalPcs) + Val(prn_HdDt.Rows(i).Item("Pak_Pcs").ToString)
                                prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3)), "#########0.00"), "##########0.00")
                                prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4)), "#########0.000"), "##########0.000")

                            End If

                        End If

                    Next i

                Else
                    MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

                End If

            Else

                If prn_HdDt.Rows.Count > 0 Then
                    For i = 0 To prn_HdDt.Rows.Count - 1

                        If Trim(UCase(vCLONAME)) <> Trim(UCase(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)) Then
                            sno = 0
                        End If

                        sno = sno + 1
                        prn_HdMxIndx = prn_HdMxIndx + 1

                        vCLONAME = Trim(UCase(prn_HdDt.Rows(i).Item("Cloth_Name").ToString))

                        prn_HdAr(prn_HdMxIndx, 0) = sno
                        prn_HdAr(prn_HdMxIndx, 1) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                        If Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString) <> "" Then
                            prn_HdAr(prn_HdMxIndx, 2) = Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString)
                        Else
                            prn_HdAr(prn_HdMxIndx, 2) = Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)
                        End If
                        prn_HdAr(prn_HdMxIndx, 3) = Val(prn_HdDt.Rows(i).Item("Pak_Pcs").ToString)
                        prn_HdAr(prn_HdMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")

                        prn_HdAr(prn_HdMxIndx, 5) = Format(Val(prn_HdDt.Rows(i).Item("Gross_Weight").ToString), "#########0.00")
                        If Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString) <> 0 Then
                            prn_HdAr(prn_HdMxIndx, 6) = Format(Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString), "#########0.00")
                        Else
                            prn_HdAr(prn_HdMxIndx, 6) = Format(Val(prn_HdDt.Rows(i).Item("Total_Weight").ToString), "#########0.00")
                        End If
                        prn_HdAr(prn_HdMxIndx, 7) = Val(sno)
                        prn_HdAr(prn_HdMxIndx, 8) = Trim(prn_HdDt.Rows(i).Item("Fold_Perc").ToString)

                        prn_HdAr(prn_HdMxIndx, 9) = Trim(prn_HdDt.Rows(i).Item("sort_no").ToString)

                        prn_HdAr(prn_HdMxIndx, 10) = Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)


                        If Trim(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderNo").ToString) <> "" Then
                            prn_HdAr(prn_HdMxIndx, 12) = Trim(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderNo").ToString)
                        Else
                            prn_HdAr(prn_HdMxIndx, 12) = Trim(prn_HdDt.Rows(i).Item("Party_OrderNo").ToString)
                        End If

                        If Trim(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderDate").ToString) <> "" Then
                            prn_HdAr(prn_HdMxIndx, 13) = Trim(Format(Convert.ToDateTime(prn_HdDt.Rows(i).Item("ClothSales_Order_Party_OrderDate").ToString), "dd-MM-yyyy").ToString)

                        Else
                            prn_HdAr(prn_HdMxIndx, 13) = Trim(prn_HdDt.Rows(i).Item("Party_OrderDate").ToString)
                        End If

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then '---- MANI OMEGA FABRICS (THIRUCHENKODU)
                            '-- COMM0N DC AND INVOICE PRINT PURPOSE , MUTIPLE CLOTH NAME PUPOSE
                            prn_HdAr(prn_HdMxIndx, 11) = Trim(prn_HdDt.Rows(i).Item("sort_no").ToString)

                            prn_HdAr(prn_HdMxIndx, 14) = Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)

                        End If




                        prn_TotalBales = prn_TotalBales + 1

                        prn_TotaGrslWgt = Format(Val(prn_TotaGrslWgt) + Format(Val(prn_HdDt.Rows(i).Item("Gross_Weight").ToString), "#########0.000"), "##########0.000")
                        prn_DetMxIndx = 0


                        If Trim(prn_HdDt.Rows(i).Item("Bale_Transfer_Code").ToString) <> "" Then

                            BalCode = ""
                            da2 = New SqlClient.SqlDataAdapter("select a.* from Packing_Slip_Head a where a.Delivery_Code = 'BLTRF-" & Trim(prn_HdDt.Rows(i).Item("Bale_Transfer_Code").ToString) & "' and '" & Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString) & "' LIKE '%\\' + a.Packing_Slip_Code + '//%' ", con)
                            DT1 = New DataTable
                            da2.Fill(DT1)
                            If DT1.Rows.Count > 0 Then
                                BalCode = Trim(DT1.Rows(0).Item("Packing_Slip_Code").ToString)
                            End If
                            DT1.Clear()

                        Else

                            BalCode = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString)

                        End If

                        da2 = New SqlClient.SqlDataAdapter("select a.*,b.* from Packing_Slip_Details a LEFT OUTER JOIN Roll_Packing_Details b On A.Packing_Slip_Code = B.Roll_Code where a.Packing_Slip_Code = '" & Trim(BalCode) & "' order by a.Sl_No", con)
                        'da2 = New SqlClient.SqlDataAdapter("select a.* from Packing_Slip_Details a where a.Packing_Slip_Code = '" & Trim(BalCode) & "' order by a.Sl_No", con)

                        'da2 = New SqlClient.SqlDataAdapter("Select a.* , B.* from Packing_Slip_Details a LEFT OUTER JOIN Roll_Packing_Details b On A.Packing_Slip_Code = B.Roll_Code Where a.Packing_Slip_Code = '" & Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString) & "' order by a.Sl_No", con)


                        prn_DetDt = New DataTable
                        da2.Fill(prn_DetDt)

                        If prn_DetDt.Rows.Count > 0 Then

                            For j = 0 To prn_DetDt.Rows.Count - 1

                                If Val(prn_DetDt.Rows(j).Item("Meters").ToString) <> 0 Then
                                    prn_DetMxIndx = prn_DetMxIndx + 1
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 0) = Trim(prn_DetDt.Rows(j).Item("Sl_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 1) = Trim(prn_DetDt.Rows(j).Item("Lot_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(j).Item("Pcs_No").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3) = Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.00")

                                    vLMNO = ""
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 6) = (prn_DetDt.Rows(j).Item("Loom_IdNo").ToString)

                                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1007" Then
                                        prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 7) = Trim(prn_DetDt.Rows(j).Item("Points").ToString)
                                    Else

                                        If Trim(vLMNO) = "" Then
                                            vLMNO = Trim(prn_DetDt.Rows(j).Item("Loom_No").ToString)
                                        End If
                                        prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 7) = Trim(vLMNO)

                                    End If


                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 8) = Trim(prn_DetDt.Rows(j).Item("Point_Per_PassMeter").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 9) = Trim(prn_DetDt.Rows(j).Item("Grade").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 10) = Trim(prn_DetDt.Rows(j).Item("Weight").ToString)
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 11) = (prn_DetDt.Rows(j).Item("Loom_No").ToString)



                                    prn_TotalPcs = Val(prn_TotalPcs) + 1
                                    prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00"), "##########0.00")
                                    prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.000"), "##########0.000")


                                End If

                            Next j

                        Else

                            If Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString) <> 0 Then

                                prn_DetMxIndx = prn_DetMxIndx + 1
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 5) = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_No").ToString)
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 0) = ""
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 1) = ""
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 2) = ""
                                prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3) = Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")

                                If Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString) <> 0 Then
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Net_Weight").ToString), "#########0.00")
                                Else
                                    prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4) = Format(Val(prn_HdDt.Rows(i).Item("Total_Weight").ToString), "#########0.00")
                                End If

                                prn_TotalPcs = Val(prn_TotalPcs) + Val(prn_HdDt.Rows(i).Item("Pak_Pcs").ToString)
                                prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 3)), "#########0.00"), "##########0.00")
                                prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetAr(prn_HdMxIndx, prn_DetMxIndx, 4)), "#########0.000"), "##########0.000")

                            End If

                        End If

                    Next i

                Else
                    MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

                End If

            End If






            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub PrintDocument5_PrintPage(ByVal sender As System.Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument5.PrintPage
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim DT1 As New DataTable
        Dim EntryCode As String
        Dim prn_NoofBmDets As String
        Dim vPartyCityName As String
        Dim vPACKINGSLIPDATE As String
        Dim vFOLDING As String

        If prn_HdDt.Rows.Count <= 0 Then Exit Sub

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1155" Then
            Dim vPRN_ClothSales_Invoice_No As String, vPRN_ClothSales_Invoice_Date As String, vPRN_Party_OrderNo As String, vPRN_Party_OrderDate As String, vPRN_Cloth_name As String, vPRN_Pack_Type_Name As String, vPRN_FOLDINGPERC As String
            Dim vPRN_PartyName As String, vPRN_PartyAdd1 As String, vPRN_PartyAdd2 As String, vPRN_PartyAdd3 As String, vPRN_PartyAdd4 As String, vPRN_PartyGSTIN As String
            Dim vPRN_ClothSales_DCNo As String, vPRN_ClothSales_DCDate As String

            vPRN_ClothSales_Invoice_No = ""
            vPRN_ClothSales_Invoice_Date = ""
            da1 = New SqlClient.SqlDataAdapter("select ClothSales_Invoice_No, ClothSales_Invoice_Date from ClothSales_Invoice_Details Where ClothSales_Delivery_Code = '" & Trim(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Code").ToString) & "' Order by ClothSales_Invoice_Date, for_OrderBy, ClothSales_Invoice_No", con)
            DT1 = New DataTable
            da1.Fill(DT1)
            If DT1.Rows.Count > 0 Then
                vPRN_ClothSales_Invoice_No = DT1.Rows(0).Item("ClothSales_Invoice_No").ToString
                vPRN_ClothSales_Invoice_Date = Format(Convert.ToDateTime(DT1.Rows(0).Item("ClothSales_Invoice_Date").ToString), "dd-MM-yyyy").ToString
            End If
            DT1.Clear()


            vPRN_Party_OrderNo = prn_HdDt.Rows(0).Item("Party_OrderNo").ToString
            vPRN_Party_OrderDate = prn_HdDt.Rows(0).Item("Party_OrderDate").ToString
            vPRN_ClothSales_DCNo = prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString
            vPRN_ClothSales_DCDate = Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString

            vPRN_PartyName = prn_HdDt.Rows(0).Item("Ledger_Name").ToString
            vPRN_PartyAdd1 = prn_HdDt.Rows(0).Item("Ledger_Address1").ToString
            vPRN_PartyAdd2 = prn_HdDt.Rows(0).Item("Ledger_Address2").ToString
            vPRN_PartyAdd3 = prn_HdDt.Rows(0).Item("Ledger_Address3").ToString
            vPRN_PartyAdd4 = prn_HdDt.Rows(0).Item("Ledger_Address4").ToString
            vPRN_PartyGSTIN = prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString

            vPRN_Cloth_name = prn_HdAr(1, 2)
            vPRN_FOLDINGPERC = prn_HdAr(1, 8)
            vPRN_Pack_Type_Name = prn_HdDt.Rows(0).Item("Packing_Type").ToString

            Common_Procedures.Printing_BundlePrint_Format_1155(PrintDocument5, e, prn_HdDt, prn_HdMxIndx, prn_DetDt, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx, vPRN_ClothSales_Invoice_No, vPRN_ClothSales_Invoice_Date, vPRN_Party_OrderNo, vPRN_Party_OrderDate, vPRN_ClothSales_DCNo, vPRN_ClothSales_DCDate, vPRN_PartyName, vPRN_PartyAdd1, vPRN_PartyAdd2, vPRN_PartyAdd3, vPRN_PartyAdd4, vPRN_PartyGSTIN, vPRN_Cloth_name, vPRN_FOLDINGPERC, vPRN_Pack_Type_Name, prn_TotalBales, prn_TotalPcs, prn_TotalMtrs)

        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1464" Then

            Dim vPrn_Roll_Packing_No = ""
            Dim vPrn_Roll_Packing_Date = ""
            Dim vSort_No As String = ""

            Dim vPRN_Party_OrderNo As String, vPRN_Party_OrderDate As String
            Dim vPRN_ClothSales_DCNo As String, vPRN_ClothSales_DCDate As String

            vPRN_Party_OrderNo = String.Empty    ' prn_HdDt.Rows(0).Item("Party_OrderNo").ToString ' --- cmd by gopi for multiple order no purpose
            vPRN_Party_OrderDate = String.Empty 'prn_HdDt.Rows(0).Item("Party_OrderDate").ToString

            vSort_No = String.Empty 'Trim(prn_HdDt.Rows(0).Item("sort_no").ToString)
            vCLONAME = Trim(prn_HdDt.Rows(0).Item("Cloth_Name").ToString)

            vPRN_ClothSales_DCNo = prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString
            vPRN_ClothSales_DCDate = Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString

            Common_Procedures.Printing_Format_PackingList_1464(PrintDocument5, e, prn_DetDt, prn_HdMxIndx, prn_HdDt, prn_HdAr, prn_PageNo, prn_HdIndx, prn_Count, prn_DetAr, Val(prn_PL_Tot_Rls), Val(prn_PL_Tot_Pcs), prn_PL_Tot_Mtr, prn_DetIndx, prn_DetMxIndx1, prn_PL_Tot_GrsWgt, prn_PL_Tot_NetWgt, prn_HdDt2, Val(prn_TotalPcs), "", "", vPRN_Party_OrderNo, vPRN_Party_OrderDate, vSort_No:=vSort_No, vCLONAME, vPRN_ClothSales_DCNo, vPRN_ClothSales_DCDate, "", "")

        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1007" Then




            Dim vPrn_Roll_Packing_No = ""
            Dim vPrn_Roll_Packing_Date = ""
            Dim vSort_No As String = ""
            Dim vPRN_Invoice_DC_No As String, vPRN_Invoice_DC_Date As String
            Dim vPRN_ClothSales_DCNo As String, vPRN_ClothSales_DCDate As String
            Dim vPRN_Party_OrderNo As String, vPRN_Party_OrderDate As String
            Dim vPRN_ClothSales_Invoice_No As String, vPRN_ClothSales_Invoice_Date As String

            vPRN_Party_OrderNo = String.Empty    ' prn_HdDt.Rows(0).Item("Party_OrderNo").ToString ' --- cmd by gopi for multiple order no purpose
            vPRN_Party_OrderDate = String.Empty 'prn_HdDt.Rows(0).Item("Party_OrderDate").ToString

            vSort_No = String.Empty 'Trim(prn_HdDt.Rows(0).Item("sort_no").ToString)
            vCLONAME = Trim(prn_HdDt.Rows(0).Item("Cloth_Name").ToString)

            vPRN_Invoice_DC_No = prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString
            vPRN_Invoice_DC_Date = Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString



            Common_Procedures.Printing_PackingSlip_Format1007(PrintDocument1, e, con, prn_HdDt, prn_HdMxIndx, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx, vPrn_Roll_Packing_No, vPrn_Roll_Packing_Date, vPrn_Roll_Packing_Po_No, vPrn_Roll_Packing_Po_Date, vSort_No, vCLONAME, vPRN_Invoice_DC_No, vPRN_Invoice_DC_Date, vPRN_ClothSales_Invoice_No, vPRN_ClothSales_Invoice_Date, vPRN_ClothSales_DCNo, vPRN_ClothSales_DCDate)


        Else

            Printing_BundlePrint_Format_1(PrintDocument5, e)

        End If


    End Sub


    Private Sub Printing_BundlePrint_Format_1(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim NoofDets As Integer, NoofItems_PerPage As Integer
        Dim pFont As Font, P1fONT As Font
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim CurY As Single, TxtHgt As Single
        Dim LnAr(20) As Single, ClArr(20) As Single
        Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        Dim PpSzSTS As Boolean = False
        Dim LM As Single = 0, TM As Single = 0
        Dim PgWt As Single = 0, PrWt As Single = 0
        Dim PgHt As Single = 0, PrHt As Single = 0

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then
            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = True
                    Exit For
                End If
            Next

        Else

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = False
                    Exit For
                End If
            Next

        End If

        With PrintDocument1.DefaultPageSettings.Margins
            If PrintDocument1.DefaultPageSettings.Landscape = True Then
                .Left = 5
                .Right = 30
                .Top = 40
                .Bottom = 30
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            Else
                .Left = 10
                .Right = 50
                .Top = 35
                .Bottom = 40
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            End If
        End With

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'With PrintDocument1.DefaultPageSettings.PaperSize
        '    PrintWidth = (.Width / 2) - RMargin - LMargin
        '    PrintHeight = (.Height / 2) - TMargin - BMargin
        '    PageWidth = (.Width / 2) - RMargin
        '    PageHeight = (.Height / 2) - BMargin
        'End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        pFont = New Font("Calibri", 11, FontStyle.Regular)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
            NoofItems_PerPage = 18
        Else
            NoofItems_PerPage = 28
        End If

        Erase ClArr
        Erase LnAr
        ClArr = New Single(20) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        LnAr = New Single(20) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)

            ClArr(1) = 65 : ClArr(2) = 60 : ClArr(3) = 60 : ClArr(4) = 60 : ClArr(5) = 60 : ClArr(6) = 60 : ClArr(7) = 60 : ClArr(8) = 60 : ClArr(9) = 60 : ClArr(10) = 60 : ClArr(11) = 60 : ClArr(12) = 60 : ClArr(13) = 60 : ClArr(14) = 60 : ClArr(15) = 60 : ClArr(16) = 60 : ClArr(17) = 65
            ClArr(18) = PageWidth - (LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) + ClArr(13) + ClArr(14) + ClArr(15) + ClArr(16) + ClArr(17))

        Else

            ClArr(1) = 110 : ClArr(2) = 64 : ClArr(3) = 64 : ClArr(4) = 64 : ClArr(5) = 64 : ClArr(6) = 64 : ClArr(7) = 64 : ClArr(8) = 64 : ClArr(9) = 64 : ClArr(10) = 63
            ClArr(11) = PageWidth - (LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10))

            'ClArr(1) = 65 : ClArr(2) = 70 : ClArr(3) = 70 : ClArr(4) = 70 : ClArr(5) = 70 : ClArr(6) = 70 : ClArr(7) = 69 : ClArr(8) = 68 : ClArr(9) = 67 : ClArr(10) = 65
            'ClArr(11) = PageWidth - (LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10))

        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
            TxtHgt = 18 ' e.Graphics.MeasureString("A", pFont).Height  ' 20
        Else
            TxtHgt = 19 ' e.Graphics.MeasureString("A", pFont).Height  ' 20
        End If

        Try

            If prn_HdDt.Rows.Count > 0 Then

                If prn_HdMxIndx > 0 Then

                    Erase LnAr
                    LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

                    Printing_BundlePrint_Format_1_PageHeader(PrintDocument1, e, prn_HdDt, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClArr, prn_HdIndx)
                    CurY = CurY - 10

                    NoofDets = 0
                    Do While prn_HdIndx < prn_HdMxIndx

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) - 10, CurY, 1, 0, pFont)
                            NoofDets = NoofDets + 1

                            Printing_BundlePrint_Format_1_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, False)

                            e.HasMorePages = True

                            NoofDets = 0
                            prn_Count = prn_Count + 1

                            Return

                        End If

                        prn_HdIndx = prn_HdIndx + 1

                        If Val(prn_HdAr(prn_HdIndx, 4)) <> 0 Then

                            CurY = CurY + TxtHgt

                            P1fONT = New Font("Calibri", 10, FontStyle.Regular)

                            Common_Procedures.Print_To_PrintDocument(e, Microsoft.VisualBasic.Left(Trim(prn_HdAr(prn_HdIndx, 1)), 17), LMargin + 5, CurY, 0, ClArr(1) - 5, P1fONT,, True)

                            If Val(prn_DetAr(prn_HdIndx, 1, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 1, 3)), LMargin + ClArr(1) + ClArr(2) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_DetAr(prn_HdIndx, 2, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 2, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_DetAr(prn_HdIndx, 3, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 3, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_DetAr(prn_HdIndx, 4, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 4, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_DetAr(prn_HdIndx, 5, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 5, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_DetAr(prn_HdIndx, 6, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 6, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_DetAr(prn_HdIndx, 7, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 7, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_DetAr(prn_HdIndx, 8, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 8, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) - 2, CurY, 1, 0, P1fONT)
                            End If


                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '--------ARULJOTHI

                                If Val(prn_DetAr(prn_HdIndx, 9, 3)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 9, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) - 2, CurY, 1, 0, P1fONT)
                                End If

                                If Val(prn_DetAr(prn_HdIndx, 10, 3)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 10, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) - 2, CurY, 1, 0, P1fONT)
                                End If

                                If Val(prn_DetAr(prn_HdIndx, 11, 3)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 11, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) - 2, CurY, 1, 0, P1fONT)
                                End If

                                If Val(prn_DetAr(prn_HdIndx, 12, 3)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 12, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) + ClArr(13) - 2, CurY, 1, 0, P1fONT)
                                End If

                                If Val(prn_DetAr(prn_HdIndx, 13, 3)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 13, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) + ClArr(13) + ClArr(14) - 2, CurY, 1, 0, P1fONT)
                                End If

                                If Val(prn_DetAr(prn_HdIndx, 14, 3)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 14, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) + ClArr(13) + ClArr(14) + ClArr(15) - 2, CurY, 1, 0, P1fONT)
                                End If

                                If Val(prn_DetAr(prn_HdIndx, 15, 3)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 15, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) + ClArr(13) + ClArr(14) + ClArr(15) + ClArr(16) - 2, CurY, 1, 0, P1fONT)
                                End If

                                If Val(prn_HdAr(prn_HdIndx, 4)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(Val(prn_HdAr(prn_HdIndx, 3))), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) + ClArr(13) + ClArr(14) + ClArr(15) + ClArr(16) + ClArr(17) - 2, CurY, 1, 0, P1fONT)
                                End If

                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdAr(prn_HdIndx, 4)), "#########0.00"), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) + ClArr(12) + ClArr(13) + ClArr(14) + ClArr(15) + ClArr(16) + ClArr(17) + ClArr(18) - 2, CurY, 1, 0, pFont)

                            Else

                                If Val(prn_HdAr(prn_HdIndx, 4)) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Trim(Val(prn_HdAr(prn_HdIndx, 3))), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) - 2, CurY, 1, 0, P1fONT)
                                End If

                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdAr(prn_HdIndx, 4)), "#########0.00"), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) - 2, CurY, 1, 0, pFont)

                            End If

                            NoofDets = NoofDets + 1

                        End If

                    Loop

                    Printing_BundlePrint_Format_1_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, True)

                End If

            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        e.HasMorePages = False

    End Sub

    Private Sub Printing_BundlePrint_Format_1_PageHeader(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdDt As DataTable, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal prn_HdIndx As Integer)
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim dt3 As New DataTable
        Dim dt4 As New DataTable
        Dim p1Font As Font
        Dim strHeight As Single
        Dim Cmp_Add As String = ""
        Dim C1 As Single, W1, W2 As Single, S1, S2 As Single
        Dim Cmp_Name, Desc As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_EMail As String

        PageNo = PageNo + 1

        CurY = TMargin + 30

        'da2 = New SqlClient.SqlDataAdapter("select a.*, b.Ledger_Name, c.Ledger_Name, d.Company_Description as Transport_Name from ClothSales_Invoice_Head a  INNER JOIN Ledger_Head b ON b.Ledger_IdNo = a.Ledger_Idno LEFT OUTER JOIN Ledger_Head c ON c.Ledger_IdNo = a.Transport_IdNo LEFT OUTER JOIN Company_Head d ON d.Company_IdNo = a.Company_IdNo where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Invoice_Code = '" & Trim(EntryCode) & "' Order by a.For_OrderBy", con)
        'da2.Fill(dt2)
        'If dt2.Rows.Count > NoofItems_PerPage Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        'End If
        'dt2.Clear()


        prn_Count = prn_Count + 1


        Dim vPACKTYPE As String = ""
        vPACKTYPE = prn_HdDt.Rows(0).Item("Packing_Type").ToString
        If Trim(vPACKTYPE) = "" Then
            vPACKTYPE = "BALE"
        End If

        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, Trim(UCase(vPACKTYPE)) & " PACKING DETAILS", LMargin, CurY - TxtHgt - 5, 2, PrintWidth, p1Font)

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY
        Desc = ""
        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_EMail = ""

        Desc = prn_HdDt.Rows(0).Item("Company_Description").ToString
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString

        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE : " & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_TinNo = "GST NO.: " & prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_EMail = "MAIL ID : " & prn_HdDt.Rows(0).Item("Company_EMail").ToString
        End If

        If PrintDocument1.DefaultPageSettings.Landscape = False Then
            CurY = CurY + TxtHgt
        End If
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1249" Then
            e.Graphics.DrawImage(DirectCast(Global.Textile.My.Resources.Resources.Company_Logo_Vaipav, Drawing.Image), LMargin + 20, CurY - 5, 100, 90)
        End If

        p1Font = New Font("Calibri", 18, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height


        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Desc, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_EMail, LMargin, CurY, 2, PrintWidth, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6)
        W1 = e.Graphics.MeasureString("INVOICE DATE  : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO     :    ", pFont).Width
        W2 = e.Graphics.MeasureString("Despatch To   : ", pFont).Width
        S2 = e.Graphics.MeasureString("Sent Through  : ", pFont).Width


        CurY = CurY + 5
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_Name").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 14, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        'CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, "Agent Name", LMargin + C1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("Party_OrderDate").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "ORDER DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, " GST : " & prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        End If
        'Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No.", LMargin + C1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("JJ_FormNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        Try

            CurY = CurY + 5
            Common_Procedures.Print_To_PrintDocument(e, "QUALITY", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + W1, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdAr(prn_HdMxIndx, 2), LMargin + W1 + 25, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(2) = CurY



            CurY = CurY + TxtHgt - 10
            Common_Procedures.Print_To_PrintDocument(e, Trim(UCase(vPACKTYPE)) & " NO", LMargin, CurY, 2, ClAr(1), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-1", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-2", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-3", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-4", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-5", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-6", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-7", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-8", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
                Common_Procedures.Print_To_PrintDocument(e, "PCS-9", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "PCS-10", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, 2, +ClAr(11), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "PCS-11", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11), CurY, 2, +ClAr(12), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "PCS-12", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12), CurY, 2, +ClAr(13), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "PCS-13", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13), CurY, 2, +ClAr(14), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "PCS-14", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14), CurY, 2, +ClAr(15), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "PCS-15", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15), CurY, 2, +ClAr(16), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "TOT PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16), CurY, 2, +ClAr(17), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), CurY, 2, +ClAr(18), pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "TOT PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, +ClAr(10), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, 2, +ClAr(11), pFont)
            End If

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub Printing_BundlePrint_Format_1_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal prn_HdIndx As Integer, ByVal is_LastPage As Boolean)
        Dim I As Integer
        Dim p1Font As Font

        Try

            For I = NoofDets + 1 To NoofItems_PerPage
                CurY = CurY + TxtHgt
            Next

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(5) = CurY

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(2))

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, PageWidth, CurY, PageWidth, LnAr(2))

            Else
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(2))
                e.Graphics.DrawLine(Pens.Black, PageWidth, CurY, PageWidth, LnAr(2))

            End If


            If is_LastPage = True Then

                CurY = CurY + TxtHgt - 10

                Dim vPACKTYPE As String = ""
                vPACKTYPE = prn_HdDt.Rows(0).Item("Packing_Type").ToString
                If Trim(vPACKTYPE) = "" Then
                    vPACKTYPE = "BALES"
                Else
                    vPACKTYPE = Trim(vPACKTYPE) & "S"
                End If

                Common_Procedures.Print_To_PrintDocument(e, "TOTAL " & Trim(UCase(vPACKTYPE)), LMargin + ClAr(1) + ClAr(2) - 15, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotalBales), LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 1, 0, pFont)

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
                    Common_Procedures.Print_To_PrintDocument(e, "TOTAL PIECES & METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) - 15, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotalPcs), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), CurY, 1, 0, pFont)

                    'Common_Procedures.Print_To_PrintDocument(e, "TOTAL METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17) - 15, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalMtrs), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17) + ClAr(18) - 2, CurY, 1, 0, pFont)

                Else

                    Common_Procedures.Print_To_PrintDocument(e, "TOTAL PIECES", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 15, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotalPcs), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "TOTAL METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 15, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalMtrs), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) - 2, CurY, 1, 0, pFont)

                End If


                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY + 24, LMargin + ClAr(1) + ClAr(2), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(5))

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-1267-" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
                    e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(5))

                    e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16), LnAr(5))
                    e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), LnAr(5))

                Else
                    e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) + ClAr(12) + ClAr(13) + ClAr(14) + ClAr(15) + ClAr(16) + ClAr(17), LnAr(5))
                End If

                CurY = CurY + TxtHgt + 5
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                LnAr(6) = CurY
            End If
            CurY = CurY + TxtHgt - 10

            p1Font = New Font("Calibri", 12, FontStyle.Bold)

            Common_Procedures.Print_To_PrintDocument(e, "For " & Trim(prn_HdDt.Rows(0).Item("Company_Name").ToString), PageWidth - 15, CurY, 1, 0, p1Font)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 12, FontStyle.Bold)

            Common_Procedures.Print_To_PrintDocument(e, "AUTHORISED SIGNATORY ", PageWidth - 5, CurY, 1, 0, pFont)
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)


        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub Send_SMS()
        Dim i As Integer = 0
        Dim smstxt As String = ""
        Dim PhNo As String = "", AgPNo As String = ""
        Dim Led_IdNo As Integer = 0, Agnt_IdNo As Integer = 0
        Dim SMS_SenderID As String = ""
        Dim SMS_Key As String = ""
        Dim SMS_RouteID As String = ""
        Dim SMS_Type As String = ""
        Dim BlNos As String = ""
        Dim CloID As Integer = 0
        Dim CloDesc As String = ""


        Try

            Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_PartyName.Text)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTTILES (SOMANUR)
                PhNo = "9366635141,7373532551,9344415141,9366655141"
                ' Agnt_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Agent.Text)

            Else

                PhNo = Common_Procedures.get_FieldValue(con, "Ledger_Head", "MobileNo_Frsms", "(Ledger_IdNo = " & Str(Val(Led_IdNo)) & ")")
                Agnt_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Agent.Text)
                AgPNo = ""
                If Val(Agnt_IdNo) <> 0 Then
                    AgPNo = Common_Procedures.get_FieldValue(con, "Ledger_Head", "Ledger_PhoneNo", "(Ledger_IdNo = " & Str(Val(Agnt_IdNo)) & ")")
                End If

                If Trim(AgPNo) <> "" Then
                    PhNo = Trim(PhNo) & IIf(Trim(PhNo) <> "", ",", "") & Trim(AgPNo)
                End If

            End If

            smstxt = "Dc No : " & Trim(lbl_DcNo.Text) & vbCrLf
            smstxt = smstxt & " Date : " & Trim(msk_date.Text) & vbCrLf
            smstxt = smstxt & " Party : " & Trim(cbo_PartyName.Text) & vbCrLf

            If Trim(cbo_Agent.Text) <> "" Then
                smstxt = smstxt & " Agent : " & Trim(cbo_Agent.Text) & vbCrLf
            End If

            If Trim(cbo_Transport.Text) <> "" Then
                smstxt = smstxt & " Transport : " & Trim(cbo_Transport.Text) & vbCrLf
            End If
            smstxt = smstxt & vbCrLf

            If dgv_Details.RowCount > 0 Then

                CloID = Common_Procedures.Cloth_NameToIdNo(con, Trim(dgv_Details.Rows(0).Cells(1).Value))

                CloDesc = Common_Procedures.get_FieldValue(con, "Cloth_Head", "Cloth_Description", "(Cloth_IdNo = " & Str(Val(CloID)) & ")")

                If Trim(CloDesc) <> "" Then
                    smstxt = smstxt & " Quality : " & Trim(CloDesc) & vbCrLf
                Else
                    smstxt = smstxt & " Quality : " & Trim(dgv_Details.Rows(0).Cells(1).Value) & vbCrLf
                End If

            End If

            If dgv_Details_Total.RowCount > 0 Then
                smstxt = smstxt & " No.Of Bales : " & Val((dgv_Details_Total.Rows(0).Cells(4).Value)) & vbCrLf
                BlNos = ""
                For i = 0 To dgv_Details.Rows.Count - 1
                    If Val(dgv_Details.Rows(i).Cells(7).Value()) <> 0 Then
                        BlNos = BlNos & IIf(Trim(BlNos) <> "", ", ", "") & Trim(dgv_Details.Rows(i).Cells(4).Value)
                    End If
                Next
                smstxt = smstxt & " Bales No.s : " & Trim(BlNos) & vbCrLf
                smstxt = smstxt & " Meters : " & Val(dgv_Details_Total.Rows(0).Cells(7).Value()) & vbCrLf
            End If

            smstxt = smstxt & " " & vbCrLf
            smstxt = smstxt & " Thanks! " & vbCrLf
            smstxt = smstxt & Common_Procedures.Company_IdNoToName(con, Val(lbl_Company.Tag))

            SMS_SenderID = ""
            SMS_Key = ""
            SMS_RouteID = ""
            SMS_Type = ""

            Common_Procedures.get_SMS_Provider_Details(con, Val(lbl_Company.Tag), SMS_SenderID, SMS_Key, SMS_RouteID, SMS_Type)

            Sms_Entry.vSmsPhoneNo = Trim(PhNo)
            Sms_Entry.vSmsMessage = Trim(smstxt)

            Sms_Entry.SMSProvider_SenderID = SMS_SenderID
            Sms_Entry.SMSProvider_Key = SMS_Key
            Sms_Entry.SMSProvider_RouteID = SMS_RouteID
            Sms_Entry.SMSProvider_Type = SMS_Type

            Dim f1 As New Sms_Entry
            f1.MdiParent = MDIParent1
            f1.Show()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT SEND SMS...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub btn_SMS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_SMS.Click
        Send_SMS()
    End Sub

    Private Sub cbo_Godown_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Godown.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Ledger_Head", "Ledger_Name", "(Ledger_Type = 'GODOWN')", "(Ledger_IdNo = 0)")
    End Sub

    Private Sub cbo_Godown_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Godown.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Godown, txt_DelvAdd2, Nothing, "Ledger_Head", "Ledger_Name", "(Ledger_Type = 'GODOWN')", "(Ledger_IdNo = 0)")
        If e.KeyCode = 40 And cbo_Godown.DroppedDown = False Or (e.Control = True And e.KeyCode = 40) Then
            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
            Else
                cbo_Transport.Focus()
            End If
        End If
    End Sub

    Private Sub cbo_Godown_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Godown.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Godown, Nothing, "Ledger_Head", "Ledger_Name", "(Ledger_Type = 'GODOWN')", "(Ledger_IdNo = 0)")
        If Asc(e.KeyChar) = 13 Then
            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
            Else
                cbo_Transport.Focus()
            End If
        End If
    End Sub

    Private Sub cbo_Godown_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Godown.KeyUp
        If e.Control = True And e.KeyCode = 17 Then

            Dim f As New Ledger_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_Godown.Name
            Common_Procedures.Master_Return.Master_Type = ""
            Common_Procedures.Master_Return.Return_Value = ""

            f.MdiParent = MDIParent1
            f.Show()
        End If
    End Sub

    Private Sub Printing_Delivery_Format3(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim ItmNm1 As String, ItmNm2 As String
        'Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        'Dim PpSzSTS As Boolean = False
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0
        Dim TpMargin As Single = 0
        Dim cnt As Integer = 0
        Dim Tot_Mtr As Integer = 0, Tot_Rt As Integer = 0
        Dim vAmt As String = 0
        Dim fldmtr As String = 0 'Double = 0
        Dim fmt As Double = 0
        Dim CurRow As Integer = 0
        Dim sno As Integer = 0
        Dim p1Font As Font

        set_PaperSize_For_PrintDocument1()

        'If Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_Custom8X6_As_Default_PaperSize) = 1 Then
        '    Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
        '    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.Landscape = False

        'ElseIf Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_A4_As_Default_PaperSize) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next

        'ElseIf Val(vPrnt_2Copy_In_SinglePage) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next



        'Else

        '    PpSzSTS = False

        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '        'Debug.Print(ps.PaperName)
        '        If ps.Width = 800 And ps.Height = 600 Then
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            PpSzSTS = True
        '            Exit For
        '        End If
        '    Next

        '    If PpSzSTS = False Then

        '        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
        '                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                PpSzSTS = True
        '                Exit For
        '            End If
        '        Next

        '        If PpSzSTS = False Then
        '            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                    PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                    Exit For
        '                End If
        '            Next
        '        End If

        '    End If

        'End If

        PrntCnt = 1
        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            If PrntCnt2ndPageSTS = False Then
                PrntCnt = 2
            End If
        End If

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10
            .Right = 50
            .Top = 10
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        Else
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        End If
        'pFont = New Font("Calibri", 11, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With

        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            NoofItems_PerPage = 4
            TxtHgt = 15


        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            NoofItems_PerPage = 30
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1423" Then
            NoofItems_PerPage = 30
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1234" Then
            NoofItems_PerPage = 3
            TxtHgt = 14

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL) Then 
            NoofItems_PerPage = 3
            TxtHgt = 14.75 '17.5 '20
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then
            NoofItems_PerPage = 30
            TxtHgt = 17
        Else

            NoofItems_PerPage = 4
            TxtHgt = 15 '17.5 '20
        End If

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            NoofItems_PerPage = NoofItems_PerPage - 1
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        '    NoofItems_PerPage = 4
        'Else
        '    NoofItems_PerPage = 5
        'End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60 : ClAr(7) = 70 : ClAr(8) = 60
            ClAr(9) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8))
        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60
            ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))
        Else
            ClAr(1) = Val(35) : ClAr(2) = 280 : ClAr(3) = 100 : ClAr(4) = 80 : ClAr(5) = 100
            ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))
        End If


        '16 '18

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        PrntCnt2ndPageSTS = False
        TpMargin = TMargin
        If Trim(Common_Procedures.settings.CustomerCode) = "1037" And vPrnt_2Copy_In_SinglePage = 1 Then
            PCnt = PCnt + 1
            PrntCnt = PrntCnt + 1
        End If

        For PCnt = 1 To PrntCnt

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 Then
                    prn_PageNo1 = prn_PageNo

                    prn_DetIndx1 = prn_DetIndx
                    prn_DetSNo1 = prn_DetSNo
                    prn_NoofBmDets1 = prn_NoofBmDets
                    TpMargin = TMargin


                Else

                    prn_PageNo = prn_PageNo1
                    prn_NoofBmDets = prn_NoofBmDets1
                    prn_DetIndx = prn_DetIndx1
                    prn_DetSNo = prn_DetSNo1

                    TpMargin = 560 + TMargin  ' 600 + TMargin

                End If

            End If

            Try
                If prn_HdDt.Rows.Count > 0 Then

                    Printing_Delivery_Format3_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                    NoofDets = 0

                    CurY = CurY - 10

                    If prn_DetDt.Rows.Count > 0 Then

                        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                            If NoofDets >= NoofItems_PerPage Then
                                If PCnt = 2 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then

                                    NoofDets = NoofDets + 1

                                    CurY = CurY + TxtHgt

                                    Common_Procedures.Print_To_PrintDocument(e, "Continued....", PageWidth - 10, CurY, 1, 0, pFont)


                                    Printing_Delivery_Format3_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                    prn_DetIndx = prn_DetIndx + NoofItems_PerPage

                                    e.HasMorePages = True

                                    Return

                                End If

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued...", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, pFont)

                                NoofDets = NoofDets + 1

                                Printing_Delivery_Format3_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True
                                Return

                            End If


                            ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Description").ToString)
                            If Trim(ItmNm1) = "" Then
                                ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Name").ToString)
                            End If
                            ItmNm2 = ""
                            If Len(ItmNm1) > 40 Then
                                For I = 40 To 1 Step -1
                                    If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                                Next I
                                If I = 0 Then I = 40
                                ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                                ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                            End If

                            CurY = CurY + TxtHgt
                            sno = sno + 1
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetDt.Rows(prn_DetIndx).Item("Sl_No").ToString), LMargin + 15, CurY, 0, 0, pFont)
                            'Common_Procedures.Print_To_PrintDocument(e, sno, LMargin + 15, CurY, 0, 0, pFont)


                            'If Trim(Common_Procedures.settings.CustomerCode) = "1234" Then

                            '    Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            'End If
                            Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Item_HSN_Code").ToString, LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Pcs").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Or Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            'CurRow = dgv_Details.CurrentCell.RowIndex
                            'If Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 0 Or Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 100 Then
                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")

                            'Else

                            '    fmt = ((100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) / 100) * Val(dgv_Details.Rows(CurRow).Cells(7).Value)

                            '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1035" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1152" Then
                            '        fmt = Format(Math.Abs(Val(fmt)), "######0.00")
                            '        fmt = Common_Procedures.Meter_RoundOff(fmt)
                            '    End If

                            '    If (100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) > 0 Then
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) - Val(fmt), "#########0.00")
                            '    Else
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) + Val(fmt), "#########0.00")
                            '    End If

                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(fldmtr) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")


                            'End If




                            vAmt = Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString) * Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString)
                            vprn_TotAmt = Val(vprn_TotAmt) + Val(vAmt)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(vAmt), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 0 And Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 100 Then
                                    CurY = CurY + TxtHgt
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) & " CM  Folding ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                    NoofDets = NoofDets + 1
                                End If
                            End If

                            NoofDets = NoofDets + 1

                            If Trim(ItmNm2) <> "" Then
                                CurY = CurY + TxtHgt - 5
                                Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm2), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If

                            prn_DetIndx = prn_DetIndx + 1

                        Loop

                    End If

                    Printing_Delivery_Format3_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                End If


            Catch ex As Exception
                MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then
                    If prn_DetDt.Rows.Count > prn_NoofBmDets Then
                        PrntCnt2ndPageSTS = True
                        e.HasMorePages = True
                        cnt = 6
                        Return
                    End If
                End If
            End If

            PrntCnt2ndPageSTS = False

        Next PCnt


LOOP2:

        prn_Count = prn_Count + 1


        e.HasMorePages = False

        If Val(prn_TotCopies) > 1 Then
            If prn_Count < Val(prn_TotCopies) Then

                prn_DetIndx = 0
                'prn_DetSNo = 0
                prn_PageNo = 0
                prn_DetIndx = 0
                prn_NoofBmDets = 0
                vprn_TotAmt = 0

                e.HasMorePages = True
                Return

            End If

        End If
    End Sub

    Private Sub Printing_Delivery_Format3_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2, da3 As New SqlClient.SqlDataAdapter
        Dim dt2, dt3 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_Email As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single, strWidth As Single = 0
        Dim C1 As Single
        Dim W1, w2 As Single
        Dim S1, S2 As Single
        Dim vprn_BlNos As String = ""
        Dim Gst_dt As Date
        Dim Entry_dt As Date
        Dim CurX As Single = 0
        Dim vPackType As String = ""
        Dim suppRefNo As String = ""
        Dim payment As String = ""
        PageNo = PageNo + 1

        CurY = TMargin

        da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, d.ClothType_name from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        da2.Fill(dt2)

        If dt2.Rows.Count > NoofItems_PerPage Then
            Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        End If
        dt2.Clear()

        suppRefNo = ""
        payment = ""
        da3 = New SqlClient.SqlDataAdapter("select a.*, b.Clothsales_Order_no,b.payment_terms from ClothSales_Delivery_Details a INNER JOIN Clothsales_Order_Head b ON a.Clothsales_Order_Code = b.Clothsales_Order_Code  where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "'", con)
        dt3 = New DataTable
        da3.Fill(dt3)
        If dt3.Rows.Count > 0 Then
            suppRefNo = dt3.Rows(0).Item("ClothSales_Order_No").ToString
            payment = dt3.Rows(0).Item("payment_terms").ToString
        End If
        dt3.Clear()

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_Cap = "GSTIN : "
            Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        CurY = CurY + TxtHgt - 10

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            p1Font = New Font("Calibri", 16, FontStyle.Bold)
        Else
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
        End If

        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

            If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                If Not imageData Is Nothing Then
                    Using ms As New MemoryStream(imageData, 0, imageData.Length)
                        ms.Write(imageData, 0, imageData.Length)

                        If imageData.Length > 0 Then

                            '.BackgroundImage = Image.FromStream(ms)

                            ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)
                            e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 10, CurY + 5, 110, 100)

                        End If

                    End Using

                End If

            End If

        End If
        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

        Gst_dt = #7/1/2017#
        Entry_dt = dtp_Date.Value

        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt - 13  ' 10

        Else

            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_GSTIN_Cap), p1Font).Width
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_StateNm & "     " & Cmp_GSTIN_Cap & Cmp_GSTIN_No), pFont).Width
            If PrintWidth > strWidth Then
                CurX = LMargin + (PrintWidth - strWidth) / 2
            Else
                CurX = LMargin
            End If

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateCap, CurX, CurY, 0, 0, p1Font)
            strWidth = e.Graphics.MeasureString(Cmp_StateCap, p1Font).Width
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateNm, CurX, CurY, 0, 0, pFont)

            strWidth = e.Graphics.MeasureString(Cmp_StateNm, pFont).Width
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, "     " & Cmp_GSTIN_Cap, CurX, CurY, 0, PrintWidth, p1Font)
            strWidth = e.Graphics.MeasureString("     " & Cmp_GSTIN_Cap, p1Font).Width
            CurX = CurX + strWidth

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, CurX, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Trim(Cmp_PhNo & "   " & Cmp_Email), LMargin, CurY, 2, PrintWidth, pFont)

            CurY = CurY + TxtHgt - 1

        End If

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL)
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY TO JOBWORK", LMargin, CurY, 2, PrintWidth, p1Font)

            CurY = CurY + TxtHgt + 5
            p1Font = New Font("Calibri", 10, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "( NOT FOR SALE )", LMargin + 10, CurY, 0, 0, p1Font)
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "HSN/SAC CODE : 998821 ( Textile manufactring service )", PageWidth - 10, CurY, 1, 0, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        Else
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY CHALLAN", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3)
        W1 = e.Graphics.MeasureString("ORDER NO : ", pFont).Width
        w2 = e.Graphics.MeasureString("DELIVERY.At : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO  :  ", pFont).Width
        S2 = e.Graphics.MeasureString("TRANSPORT :  ", pFont).Width

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_MAInName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 11, FontStyle.Bold)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
        '    If payment <> "" Then
        '        Common_Procedures.Print_To_PrintDocument(e, "PAYMENT TERMS", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, payment, LMargin + C1 + W1 + 70, CurY, 0, 0, p1Font)
        '    End If
        'End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SIZING (SOMANUR)
            If Trim(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) <> "" Then
                If IsDate(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DESPATCH DATE & TIME", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
                End If
            End If

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            If suppRefNo <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, "SUPPLIER REF.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, suppRefNo & "        PAYMENT TERMS       :   " & payment, LMargin + C1 + W1 + 70, CurY, 0, 0, pFont)
            End If

        End If

        CurY = CurY + TxtHgt
        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            If Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, " TIN NO : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, pFont)
            End If

        Else
            If Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString) <> "" Then
                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN NO : " & Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, p1Font)
            End If

        End If


        If prn_HdDt.Rows(0).Item("Party_OrderNo").ToString <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString & "   P.O DATE    :   " & prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '---- BRT SIZING (SOMANUR)
        '    Common_Procedures.Print_To_PrintDocument(e, "PARTY ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, suppRefNo, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
        'End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then

            'CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "THROUGH  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Through_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

            'If Trim(prn_HdDt.Rows(0).Item("Vechile_No").ToString) <> "" Then

            '    CurY = CurY + TxtHgt

            '    S3 = e.Graphics.MeasureString("THROUGH     :   " & prn_HdDt.Rows(0).Item("Through_Name").ToString, pFont).Width + 30

            '    Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + S3 + 70, CurY, 0, 0, pFont)

            'End If

        End If


        Common_Procedures.Print_To_PrintDocument(e, "AGENT", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "DESP.TO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_To").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then
            Common_Procedures.Print_To_PrintDocument(e, "LR.NO  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If
        '  Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "DELIVERY .At", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString), LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "TRANSPORT ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("TransportName").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        'CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, "AGENT ", LMargin + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("EwayBill_No").ToString) <> "" Then

            Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No.", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("EwayBill_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'vprn_BlNos = ""
        'For i = 0 To prn_DetDt.Rows.Count - 1
        '    If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
        '        vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
        '    End If
        'Next
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress3").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)



        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString) <> "" Then

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If




        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString) <> "" Then
            p1Font = New Font("Calibri", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " GSTIN : " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, p1Font)

        End If

        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        'Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & vprn_BlNos, LMargin + C1 + 10, CurY, 0, 0, pFont)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1333" Then
            CurY = CurY + TxtHgt + 5

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1420" Then

            CurY = CurY + TxtHgt

        End If
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        pFont = New Font("Calibri", 10, FontStyle.Bold)
        CurY = CurY + 5

        Common_Procedures.Print_To_PrintDocument(e, "SNO", LMargin, CurY, 2, ClAr(1), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "CLOTH NAME", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "HSN CODE", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & "S", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Or Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
            Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "FOLD%", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)

        Else
            Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)

        End If

        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then

            Common_Procedures.Print_To_PrintDocument(e, "RATE", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)

            Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
            'Else
            '    Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY

    End Sub

    Private Sub Printing_Delivery_Format3_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim vPackType As String = ""
        Dim BLNo1 As String = ""
        Dim BLNo2 As String = ""
        Dim BLNo3 As String = ""
        Dim BLNo4 As String = ""
        Dim BLNo5 As String = ""

        Dim vBalLen As Integer

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY

        CurY = CurY + 5
        If is_LastPage = True Then
            Common_Procedures.Print_To_PrintDocument(e, " TOTAL", LMargin + ClAr(1) + 30, CurY, 2, ClAr(4), pFont)
            Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(0).Item("Total_Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Pcs").ToString), "#########0"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(6) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(3))

        CurY = CurY + 10


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then ' cyber   

            vBalLen = 120

        Else

            vBalLen = 60

        End If


        vprn_BlNos = ""
        For i = 0 To prn_DetDt.Rows.Count - 1
            If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
                vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
            End If
        Next

        BLNo1 = Trim(vprn_BlNos)
        BLNo2 = ""



        If Len(BLNo1) > Val(vBalLen) Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo1), i, 1) = " " Or Mid$(Trim(BLNo1), i, 1) = "," Or Mid$(Trim(BLNo1), i, 1) = "." Or Mid$(Trim(BLNo1), i, 1) = "-" Or Mid$(Trim(BLNo1), i, 1) = "/" Or Mid$(Trim(BLNo1), i, 1) = "_" Or Mid$(Trim(BLNo1), i, 1) = "(" Or Mid$(Trim(BLNo1), i, 1) = ")" Or Mid$(Trim(BLNo1), i, 1) = "\" Or Mid$(Trim(BLNo1), i, 1) = "[" Or Mid$(Trim(BLNo1), i, 1) = "]" Or Mid$(Trim(BLNo1), i, 1) = "{" Or Mid$(Trim(BLNo1), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - i)
            BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), i)
        End If


        If Len(BLNo2) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo2), i, 1) = " " Or Mid$(Trim(BLNo2), i, 1) = "," Or Mid$(Trim(BLNo2), i, 1) = "." Or Mid$(Trim(BLNo2), i, 1) = "-" Or Mid$(Trim(BLNo2), i, 1) = "/" Or Mid$(Trim(BLNo2), i, 1) = "_" Or Mid$(Trim(BLNo2), i, 1) = "(" Or Mid$(Trim(BLNo2), i, 1) = ")" Or Mid$(Trim(BLNo2), i, 1) = "\" Or Mid$(Trim(BLNo2), i, 1) = "[" Or Mid$(Trim(BLNo2), i, 1) = "]" Or Mid$(Trim(BLNo2), i, 1) = "{" Or Mid$(Trim(BLNo2), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo3 = Microsoft.VisualBasic.Right(Trim(BLNo2), Len(BLNo2) - i)
            BLNo2 = Microsoft.VisualBasic.Left(Trim(BLNo2), i)
        End If


        If Len(BLNo3) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo3), i, 1) = " " Or Mid$(Trim(BLNo3), i, 1) = "," Or Mid$(Trim(BLNo3), i, 1) = "." Or Mid$(Trim(BLNo3), i, 1) = "-" Or Mid$(Trim(BLNo3), i, 1) = "/" Or Mid$(Trim(BLNo3), i, 1) = "_" Or Mid$(Trim(BLNo3), i, 1) = "(" Or Mid$(Trim(BLNo3), i, 1) = ")" Or Mid$(Trim(BLNo3), i, 1) = "\" Or Mid$(Trim(BLNo3), i, 1) = "[" Or Mid$(Trim(BLNo3), i, 1) = "]" Or Mid$(Trim(BLNo3), i, 1) = "{" Or Mid$(Trim(BLNo3), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo4 = Microsoft.VisualBasic.Right(Trim(BLNo3), Len(BLNo3) - i)
            BLNo3 = Microsoft.VisualBasic.Left(Trim(BLNo3), i)
        End If


        If Len(BLNo4) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo4), i, 1) = " " Or Mid$(Trim(BLNo4), i, 1) = "," Or Mid$(Trim(BLNo4), i, 1) = "." Or Mid$(Trim(BLNo4), i, 1) = "-" Or Mid$(Trim(BLNo4), i, 1) = "/" Or Mid$(Trim(BLNo4), i, 1) = "_" Or Mid$(Trim(BLNo4), i, 1) = "(" Or Mid$(Trim(BLNo4), i, 1) = ")" Or Mid$(Trim(BLNo4), i, 1) = "\" Or Mid$(Trim(BLNo4), i, 1) = "[" Or Mid$(Trim(BLNo4), i, 1) = "]" Or Mid$(Trim(BLNo4), i, 1) = "{" Or Mid$(Trim(BLNo4), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo5 = Microsoft.VisualBasic.Right(Trim(BLNo4), Len(BLNo4) - i)
            BLNo4 = Microsoft.VisualBasic.Left(Trim(BLNo4), i)
        End If


        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & BLNo1, LMargin + 10, CurY, 0, 0, pFont)

        'p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
        '    '  p1Font = New Font("CALIBRI", 10, FontStyle.Bold)


        '    If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

        '        'Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 1, 0, p1Font)

        '        Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt
        '        Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(7) + ClAr(1), CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt

        '        Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '    ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

        '        'Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, 0, p1Font)
        '        Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt
        '        Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '    End If


        'End If
        'If Common_Procedures.settings.CustomerCode = "1186" Then

        '    Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        '    p1Font = New Font("Calibri", 12, FontStyle.Bold)
        '    Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)
        '    CurY = CurY + TxtHgt
        'End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
            If Val(vprn_TotAmt) <> 0 Then
                p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
                If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) = 0 Then
                    Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
                End If
            End If
        End If


        If Trim(BLNo2) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo2, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo3) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo3, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo4) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo4, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo5) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo5, LMargin + 10, CurY, 0, 0, pFont)
        End If


        If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

            p1Font = New Font("CALIBRI", 10, FontStyle.Bold)

            CurY = CurY + TxtHgt

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)

                If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                End If


            End If
        End If



        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            CurY = CurY + TxtHgt + 15

        Else

            CurY = CurY + TxtHgt

        End If





        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "NOTE : " & prn_HdDt.Rows(0).Item("Note").ToString, LMargin + 10, CurY, 0, 0, pFont)
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1186" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
            Dim VNetAmt As String = 0
            VNetAmt = Format(Val(prn_HdDt.Rows(0).Item("Net_Amount").ToString), "##########0")
            Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(VNetAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
        End If

        If Trim(BLNo2) = "" Then
            CurY = CurY + TxtHgt - 5
        End If
        CurY = CurY + TxtHgt + 5
        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "(NOT FOR SALE ONLY JOBWORK PROCESS)", LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Common_Procedures.User.IdNo <> 1 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + 20, CurY, 0, 0, pFont)
        End If


        If Common_Procedures.settings.CustomerCode = "1420" Or Common_Procedures.settings.CustomerCode = "1423" Then
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
        End If


        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        p1Font = New Font("Calibri", 12, FontStyle.Bold)

        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            CurY = CurY + TxtHgt + 25
        Else
            CurY = CurY + TxtHgt
        End If
        Common_Procedures.Print_To_PrintDocument(e, "Prepared By", LMargin + 20, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 170, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 320, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 250, CurY, 0, 0, pFont)
        End If

        If Trim(Common_Procedures.settings.CustomerCode) <> "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If
        If Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signature", PageWidth - 15, CurY, 1, 0, pFont)

        End If
        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub txt_Despatch_DateAndTime_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Despatch_DateAndTime.GotFocus
        If New_Entry = True And Trim(txt_Despatch_DateAndTime.Text) = "" Then
            txt_Despatch_DateAndTime.Text = Format(Now, "dd-MM-yyyy hh:mm tt")
        End If
    End Sub


    Private Sub txt_Despatch_DateAndTime_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_Despatch_DateAndTime.KeyDown
        If e.KeyValue = 38 Then
            txt_Note.Focus()
        End If

        If e.KeyValue = 40 Then
            If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                save_record()
            Else
                msk_date.Focus()
            End If
        End If
    End Sub

    Private Sub txt_Despatch_DateAndTime_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Despatch_DateAndTime.KeyPress
        If Trim(UCase(e.KeyChar)) = "D" Or Trim(UCase(e.KeyChar)) = "T" Then
            txt_Despatch_DateAndTime.Text = Format(Now, "dd-MM-yyyy hh:mm tt")
            txt_Despatch_DateAndTime.SelectionStart = 0
            e.Handled = True
        End If
        If Asc(e.KeyChar) = 13 Then
            If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                save_record()
            Else
                msk_date.Focus()
            End If
        End If
    End Sub

    Private Sub btn_PDF_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_PDF.Click
        Common_Procedures.Print_OR_Preview_Status = 1
        Print_PDF_Status = True
        print_record()

        'Print_PDF_Status = False
    End Sub

    Private Sub btn_UserModification_Click(sender As System.Object, e As System.EventArgs) Handles btn_UserModification.Click
        If Val(Common_Procedures.User.IdNo) = 1 Then
            Dim f1 As New User_Modifications
            f1.Entry_Name = Me.Name
            f1.Entry_PkValue = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)
            f1.ShowDialog()
        End If
    End Sub
    Private Sub cbo_DeliveryTo_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_DeliveryTo.GotFocus
        Con = New SqlClient.SqlConnection(Common_Procedures.Connection_String)
        Con.Open()
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, Con, "Ledger_AlaisHead", "Ledger_DisplayName", " ( (Ledger_Type = '' and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14 ) ) or Show_In_All_Entry = 1) ", "(Ledger_IdNo = 0)")
    End Sub

    Private Sub cbo_DeliveryTo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_DeliveryTo.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_DeliveryTo, Nothing, Nothing, "Ledger_AlaisHead", "Ledger_DisplayName", " ( (Ledger_Type = '' and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14 ) ) or Show_In_All_Entry = 1) ", "(Ledger_IdNo = 0)")

        If (e.KeyValue = 38 And cbo_DeliveryTo.DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
            If cbo_RollBundle.Visible And cbo_RollBundle.Enabled Then
                cbo_RollBundle.Focus()

            ElseIf txt_EWay_Bill_No.Visible And txt_EWay_Bill_No.Enabled Then
                txt_EWay_Bill_No.Focus()

            Else
                cbo_DespTo.Focus()

            End If


        ElseIf (e.KeyValue = 40 And cbo_DeliveryTo.DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then

            If txt_DelvAdd1.Visible And txt_DelvAdd1.Enabled Then
                txt_DelvAdd1.Focus()

            ElseIf cbo_Godown.Visible And cbo_Godown.Enabled Then
                cbo_Godown.Focus()

            ElseIf dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)

            Else
                If cbo_Transport.Visible And cbo_Transport.Enabled Then
                    cbo_Transport.Focus()
                Else
                    txt_Note.Focus()
                End If
            End If

        End If
    End Sub

    Private Sub cbo_DeliveryTo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_DeliveryTo.KeyPress
        Con = New SqlClient.SqlConnection(Common_Procedures.Connection_String)
        Con.Open()
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_DeliveryTo, Nothing, "Ledger_AlaisHead", "Ledger_DisplayName", "( (Ledger_Type = '' and ( AccountsGroup_IdNo = 10 or AccountsGroup_IdNo = 14 ) ) or Show_In_All_Entry = 1)", "(Ledger_IdNo = 0)")
        If Asc(e.KeyChar) = 13 Then

            If txt_DelvAdd1.Visible And txt_DelvAdd1.Enabled Then
                txt_DelvAdd1.Focus()

            ElseIf cbo_Godown.Visible And cbo_Godown.Enabled Then
                cbo_Godown.Focus()

            ElseIf dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)

            Else
                If cbo_Transport.Visible And cbo_Transport.Enabled Then
                    cbo_Transport.Focus()
                Else
                    txt_Note.Focus()
                End If
            End If

        End If
    End Sub

    Private Sub cbo_DeliveryTo_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_DeliveryTo.KeyUp
        If e.Control = False And e.KeyValue = 17 Then
            Common_Procedures.MDI_LedType = ""
            Dim f As New Ledger_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_DeliveryTo.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()
        End If
    End Sub

    Private Sub btn_PieceSelection_Click(sender As Object, e As EventArgs) Handles btn_PieceSelection.Click
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer, j As Integer, n As Integer, SNo As Integer
        Dim CloIdNo As Integer, CloTypIdNo As Integer
        Dim NewCode As String
        Dim CompIDCondt As String
        Dim vStkOf_IdNo As Integer = 0
        Dim Clo_GrpIdNos As String
        Dim Clo_UndIdNo As Integer
        Dim CloID_Cond As String = ""
        Dim PcsMtrs As Double = 0
        Dim vLmIdNo As Long = 0
        Dim vLmNo As String = ""
        Dim vGod_ID As Integer = 0
        Dim CloTyp_Selc_STS As Boolean = False
        Dim Fld_Perc As String = 0
        Dim vEntBaleNo As String = ""
        Dim dgvDet_CurRow As Integer
        Dim dgvDet_DetSlNo As Integer
        Dim vCTCnt As Integer
        Dim K As Integer
        Dim vSelcCodeCondt As String = ""
        Dim vMtrsColCondt As String = ""
        Dim vMtrsColNm As String = ""
        Dim vByrOfrMtrsColNm As String = ""
        Dim vByrOfrCodeColNm As String = ""
        Dim vBarCodeColNm As String = ""

        If IsNothing(dgv_Details.CurrentCell) Then Exit Sub

        dgvDet_CurRow = dgv_Details.CurrentCell.RowIndex
        dgvDet_DetSlNo = Val(dgv_Details.Rows(dgvDet_CurRow).Cells(10).Value)

        If Val(dgvDet_DetSlNo) = 0 Then
            Set_Max_Delivery_DetailsSlNo(dgvDet_CurRow, 10)
        End If

        dgvDet_DetSlNo = Val(dgv_Details.Rows(dgvDet_CurRow).Cells(10).Value)
        If Val(dgvDet_DetSlNo) = 0 Then
            MessageBox.Show("Invalid Cloth Delivery Details.SlNo", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If dgv_Details.Enabled And dgv_Details.Visible Then
                If dgv_Details.Rows.Count > 0 Then
                    dgv_Details.Focus()
                    dgv_Details.CurrentCell = dgv_Details.Rows(dgvDet_DetSlNo).Cells(7)
                    dgv_Details.CurrentCell.Selected = True
                End If
            End If
            Exit Sub
        End If


        If vStkOf_IdNo = 0 Then vStkOf_IdNo = Common_Procedures.CommonLedger.OwnSort_Ac

        vGod_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Godown.Text)
        If cbo_Godown.Visible = True Then
            If vGod_ID = 0 Then
                MessageBox.Show("Invalid Fabric Godown Name", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If cbo_Godown.Enabled And cbo_Godown.Visible Then cbo_Godown.Focus()
                Exit Sub
            End If
        End If
        If vGod_ID = 0 Then vGod_ID = Common_Procedures.CommonLedger.Godown_Ac


        CloIdNo = Common_Procedures.Cloth_NameToIdNo(con, dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(1).Value)
        If CloIdNo = 0 Then
            MessageBox.Show("Invalid Cloth Name", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If dgv_Details.Enabled And dgv_Details.Visible Then
                If dgv_Details.Rows.Count > 0 Then
                    dgv_Details.Focus()
                    dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
                    If cbo_Grid_ClothName.Visible And cbo_Grid_ClothName.Enabled Then cbo_Grid_ClothName.Focus()
                    'dgv_Details.CurrentCell.Selected = True
                    Exit Sub
                End If
            End If
            Exit Sub
        End If


        CloTypIdNo = Common_Procedures.ClothType_NameToIdNo(con, dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(2).Value)
        If CloTypIdNo = 0 Then
            MessageBox.Show("Invalid Cloth Type ", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If dgv_Details.Enabled And dgv_Details.Visible Then
                If dgv_Details.Rows.Count > 0 Then
                    dgv_Details.Focus()
                    dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(2)
                    If cbo_Grid_Clothtype.Visible And cbo_Grid_Clothtype.Enabled Then cbo_Grid_Clothtype.Focus()
                    Exit Sub
                End If
            End If
            Exit Sub
        End If

        Fld_Perc = dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(3).Value
        If Val(Fld_Perc) = 0 Then Fld_Perc = 100
        If Val(Fld_Perc) = 0 Then
            MessageBox.Show("Invalid Folding", "DOES NOT SELECT BALE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If dgv_Details.Enabled And dgv_Details.Visible Then
                If dgv_Details.Rows.Count > 0 Then
                    dgv_Details.Focus()
                    dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(3)
                    dgv_Details.CurrentCell.Selected = True
                End If
            End If
            Exit Sub
        End If





        CompIDCondt = "(a.company_idno = " & Str(Val(lbl_Company.Tag)) & ")"
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1204" Then '----KRG TEXTILE MILLS (PALLADAM)
            If Common_Procedures.settings.EntrySelection_Combine_AllCompany = 1 Then
                CompIDCondt = ""
                If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                    CompIDCondt = "(Company_Type <> 'UNACCOUNT')"
                End If
            End If
        End If

        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Clo_UndIdNo = CloIdNo

        Da = New SqlClient.SqlDataAdapter("select * from Cloth_head where Cloth_idno = " & Str(Val(Clo_UndIdNo)), con)
        Dt1 = New DataTable
        Da.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) = False Then
                If Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) <> 0 Then Clo_UndIdNo = Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString)
            End If
        End If
        Dt1.Clear()

        Da = New SqlClient.SqlDataAdapter("select * from Cloth_head where Cloth_StockUnder_IdNo = " & Str(Val(Clo_UndIdNo)), con)
        Dt1 = New DataTable
        Da.Fill(Dt1)

        Clo_GrpIdNos = ""
        If Dt1.Rows.Count > 0 Then
            For i = 0 To Dt1.Rows.Count - 1
                Clo_GrpIdNos = Trim(Clo_GrpIdNos) & IIf(Trim(Clo_GrpIdNos) <> "", ", ", "") & Trim(Val(Dt1.Rows(i).Item("Cloth_IdNo")))
            Next
        End If
        If Trim(Clo_GrpIdNos) <> "" Then
            Clo_GrpIdNos = "(" & Clo_GrpIdNos & ")"
        Else
            Clo_GrpIdNos = "(" & Trim(Val(CloIdNo)) & ")"
        End If

        CloID_Cond = "(a.Cloth_idno = " & Str(CloIdNo) & " or a.Cloth_idno IN " & Trim(Clo_GrpIdNos) & ")"

        If cbo_Godown.Visible = True Then
            CloID_Cond = CloID_Cond & IIf(CloID_Cond <> "", " and ", " ") & "(a.WareHouse_idno = " & Str(vGod_ID) & ")"
        End If

        If vStkOf_IdNo = 4 Or vStkOf_IdNo = 5 Then
            CloID_Cond = CloID_Cond & IIf(CloID_Cond <> "", " and ", " ") & "(a.StockOff_IdNo = 4 or a.StockOff_IdNo = 5)"
        Else
            CloID_Cond = CloID_Cond & IIf(CloID_Cond <> "", " and ", " ") & "(a.StockOff_IdNo = " & Str(vStkOf_IdNo) & ")"
        End If

        If pnl_Pieces_BaleNo_Entry_Details.Visible = False And Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" And Trim(UCase(cbo_RollBundle.Text)) = "BALE" And Trim(dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(14).Value) <> "" Then

            With dgv_PieceDetails

                dgv_Pieces_BaleNo_Entry_Details.Rows.Clear()

                SNo = 0
                For i = 0 To .Rows.Count - 1

                    If Val(UCase(.Rows(i).Cells(0).Value)) = Val(dgvDet_DetSlNo) Then

                        If Val(.Rows(i).Cells(4).Value) <> 0 And Trim(.Rows(i).Cells(8).Value) <> "" And Trim(.Rows(i).Cells(2).Value) <> "" And Trim(.Rows(i).Cells(3).Value) <> "" Then

                            SNo = SNo + 1
                            n = dgv_Pieces_BaleNo_Entry_Details.Rows.Add()
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(0).Value = SNo
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(1).Value = dgv_PieceDetails.Rows(i).Cells(1).Value
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(2).Value = dgv_PieceDetails.Rows(i).Cells(2).Value
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(3).Value = dgv_PieceDetails.Rows(i).Cells(3).Value
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(4).Value = dgv_PieceDetails.Rows(i).Cells(4).Value
                            If Val(dgv_PieceDetails.Rows(i).Cells(5).Value) <> 0 Then
                                dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(5).Value = dgv_PieceDetails.Rows(i).Cells(5).Value
                            End If
                            If Val(dgv_PieceDetails.Rows(i).Cells(6).Value) <> 0 Then
                                dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(6).Value = dgv_PieceDetails.Rows(i).Cells(6).Value
                            End If
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(7).Value = dgv_PieceDetails.Rows(i).Cells(7).Value
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(8).Value = dgv_PieceDetails.Rows(i).Cells(8).Value
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(9).Value = dgv_PieceDetails.Rows(i).Cells(9).Value
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(10).Value = dgv_PieceDetails.Rows(i).Cells(10).Value
                            dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(11).Value = dgv_PieceDetails.Rows(i).Cells(11).Value


                        End If

                    End If

                Next i

            End With


            pnl_Pieces_BaleNo_Entry_Details.Visible = True
            pnl_Back.Enabled = False
            pnl_PieceSelection.Visible = False
            If dgv_Pieces_BaleNo_Entry_Details.Enabled And dgv_Pieces_BaleNo_Entry_Details.Visible And dgv_Pieces_BaleNo_Entry_Details.Rows.Count > 0 Then

                dgv_Pieces_BaleNo_Entry_Details.Focus()
                If dgv_Pieces_BaleNo_Entry_Details.CurrentCell.RowIndex >= 0 Then
                    dgv_Pieces_BaleNo_Entry_Details.CurrentCell = dgv_Pieces_BaleNo_Entry_Details.Rows(0).Cells(11)
                    dgv_Pieces_BaleNo_Entry_Details.CurrentCell.Selected = True
                End If



            Else

                btn_Pieces_BaleNo_Entry_Details_PieceSelection.Focus()

            End If


        Else

            With dgv_PieceSelection

                chk_PieceSelection_SelectAll_Pieces.Checked = False

                .Rows.Clear()
                SNo = 0

                For K = 1 To 2

                    For vCTCnt = 1 To 5

                        CloTyp_Selc_STS = False

                        If vCTCnt = 1 Then
                            If CloTypIdNo = vCTCnt Then
                                CloTyp_Selc_STS = True
                            End If

                        ElseIf vCTCnt = 2 Then
                            If CloTypIdNo = 1 Or CloTypIdNo = vCTCnt Then
                                CloTyp_Selc_STS = True
                            End If

                        ElseIf vCTCnt = 3 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTTILES (SOMANUR)
                                If CloTypIdNo = 1 Or CloTypIdNo = vCTCnt Then
                                    CloTyp_Selc_STS = True
                                End If
                            Else
                                If CloTypIdNo = vCTCnt Then
                                    CloTyp_Selc_STS = True
                                End If
                            End If

                        ElseIf vCTCnt = 4 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTTILES (SOMANUR)
                                If CloTypIdNo = 1 Or CloTypIdNo = vCTCnt Then
                                    CloTyp_Selc_STS = True
                                End If
                            Else
                                If CloTypIdNo = vCTCnt Then
                                    CloTyp_Selc_STS = True
                                End If
                            End If

                        ElseIf vCTCnt = 5 Then
                            If CloTypIdNo = vCTCnt Then
                                CloTyp_Selc_STS = True
                            End If

                        End If


                        If CloTyp_Selc_STS = True Then

                            If K = 1 Then
                                vSelcCodeCondt = " ( a.PackingSlip_Code_Type" & Trim(Val(vCTCnt)) & " = '" & Trim(NewCode) & "' ) "
                            Else
                                vSelcCodeCondt = " ( a.PackingSlip_Code_Type" & Trim(Val(vCTCnt)) & " = '' ) "
                            End If

                            vMtrsColCondt = " (a.Type" & Trim(Val(vCTCnt)) & "_Meters <> 0) "
                            vMtrsColNm = "Type" & Trim(Val(vCTCnt)) & "_Meters"

                            vByrOfrMtrsColNm = "BuyerOffer_Passed_Meters_Type" & Trim(Val(vCTCnt))
                            vByrOfrCodeColNm = "BuyerOffer_Code_Type" & Trim(Val(vCTCnt))

                            vBarCodeColNm = "Checked_Pcs_Barcode_Type" & Trim(Val(vCTCnt))

                            Da = New SqlClient.SqlDataAdapter("select a.*, c.Ledger_Name, d.cloth_name from Weaver_ClothReceipt_Piece_Details a " &
                                                                " INNER JOIN Company_Head tZ ON a.company_idno = tZ.company_idno " &
                                                                " LEFT OUTER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo " &
                                                                " LEFT OUTER JOIN Cloth_Head d ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = d.Cloth_IdNo " &
                                                                " Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & vMtrsColCondt & " and " & vSelcCodeCondt & " and " & CloID_Cond & IIf(CloID_Cond <> "", " and ", " ") & "  a.Folding = " & Str(Val(Fld_Perc)) &
                                                                "Order by sl_no ASC,a.Weaver_ClothReceipt_Date, a.for_orderby, a.Weaver_ClothReceipt_No, a.PieceNo_OrderBy ", con)
                            Dt1 = New DataTable
                            Da.Fill(Dt1)

                            If Dt1.Rows.Count > 0 Then

                                For i = 0 To Dt1.Rows.Count - 1

                                    n = .Rows.Add()

                                    SNo = SNo + 1

                                    .Rows(n).Cells(0).Value = Val(SNo)

                                    .Rows(n).Cells(1).Value = Dt1.Rows(i).Item("Lot_No").ToString
                                    .Rows(n).Cells(2).Value = Dt1.Rows(i).Item("Piece_No").ToString
                                    .Rows(n).Cells(3).Value = Common_Procedures.ClothType.Type1

                                    If Trim(Dt1.Rows(i).Item(vByrOfrCodeColNm).ToString) <> "" And Val(Dt1.Rows(i).Item(vByrOfrMtrsColNm).ToString) <> 0 Then
                                        PcsMtrs = Val(Dt1.Rows(i).Item(vByrOfrMtrsColNm).ToString)
                                    Else
                                        PcsMtrs = Val(Dt1.Rows(i).Item(vMtrsColNm).ToString)
                                    End If

                                    .Rows(n).Cells(4).Value = Format(Val(PcsMtrs), "#########0.00")

                                    If Val(Dt1.Rows(i).Item("Weight_Meter").ToString) <> 0 Then
                                        .Rows(n).Cells(5).Value = Format(Val(PcsMtrs) * Val(Dt1.Rows(i).Item("Weight_Meter").ToString), "#########0.000")
                                        .Rows(n).Cells(6).Value = Format(Val(Dt1.Rows(i).Item("Weight_Meter").ToString), "#########0.000")
                                    End If
                                    .Rows(n).Cells(7).Value = Dt1.Rows(i).Item("Ledger_Name").ToString

                                    If K = 1 Then
                                        .Rows(n).Cells(8).Value = "1"
                                    Else
                                        .Rows(n).Cells(8).Value = ""
                                    End If

                                    .Rows(n).Cells(9).Value = Dt1.Rows(i).Item("Lot_Code").ToString
                                    .Rows(n).Cells(10).Value = Dt1.Rows(i).Item("Cloth_Name").ToString

                                    vLmIdNo = 0
                                    If IsDBNull(Dt1.Rows(i).Item("Loom_IdNo").ToString) = False Then
                                        vLmIdNo = Val(Dt1.Rows(i).Item("Loom_IdNo").ToString)
                                    End If

                                    vLmNo = ""
                                    If vLmIdNo <> 0 Then
                                        vLmNo = Common_Procedures.Loom_IdNoToName(con, vLmIdNo)

                                    Else
                                        If IsDBNull(Dt1.Rows(i).Item("Loom_No").ToString) = False Then
                                            vLmNo = Dt1.Rows(i).Item("Loom_No").ToString
                                        End If

                                    End If

                                    .Rows(n).Cells(11).Value = vLmNo
                                    .Rows(n).Cells(12).Value = Dt1.Rows(i).Item(vBarCodeColNm).ToString

                                    vEntBaleNo = get_Piece_BaleNo_from_PieceSelectionDetails_Grid(dgvDet_DetSlNo, .Rows(n).Cells(9).Value, .Rows(n).Cells(2).Value, .Rows(n).Cells(3).Value)

                                    .Rows(n).Cells(13).Value = vEntBaleNo

                                    If K = 1 Then

                                        For j = 0 To .ColumnCount - 1
                                            .Rows(i).Cells(j).Style.ForeColor = Color.Red
                                        Next j

                                    End If

                                Next i

                            End If
                            Dt1.Clear()

                        End If

                    Next vCTCnt

                Next K


            End With

            pnl_PieceSelection.Visible = True
            pnl_Pieces_BaleNo_Entry_Details.Visible = False
            pnl_Back.Enabled = False
            If dgv_PieceSelection.Rows.Count > 0 Then
                dgv_PieceSelection.Focus()
                dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(0).Cells(0)
                dgv_PieceSelection.CurrentCell.Selected = True
            Else
                txt_PieceSelection_LotNo.Focus()
            End If



        End If




    End Sub

    Private Sub dgv_PieceSelection_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_PieceSelection.CellClick
        Select_PieceSelection_Grid(e.RowIndex)
    End Sub

    Private Sub dgv_PieceSelection_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_PieceSelection.KeyDown
        Dim n As Integer

        On Error Resume Next

        If e.KeyCode = Keys.Enter Or e.KeyCode = Keys.Space Then

            If dgv_PieceSelection.CurrentCell.RowIndex >= 0 Then

                n = dgv_PieceSelection.CurrentCell.RowIndex

                Select_PieceSelection_Grid(n)

                e.Handled = True

            End If

        End If
    End Sub

    Private Sub Select_PieceSelection_Grid(ByVal RwIndx As Integer)
        Dim i As Integer

        With dgv_PieceSelection

            If .RowCount > 0 And RwIndx >= 0 Then

                .Rows(RwIndx).Cells(8).Value = (Val(.Rows(RwIndx).Cells(8).Value) + 1) Mod 2

                If Val(.Rows(RwIndx).Cells(8).Value) = 1 Then

                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Red
                    Next

                Else

                    .Rows(RwIndx).Cells(8).Value = ""

                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Blue
                    Next

                End If

            End If

        End With

    End Sub

    Private Sub chk_PieceSelection_SelectAll_Pieces_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk_PieceSelection_SelectAll_Pieces.CheckedChanged
        Dim i As Integer
        Dim J As Integer
        Dim v1stVisiRow As Integer = 0

        With dgv_PieceSelection

            For i = 0 To .Rows.Count - 1
                If .Rows(i).Visible = True Then
                    .Rows(i).Cells(8).Value = ""
                    For J = 0 To .ColumnCount - 1
                        .Rows(i).Cells(J).Style.ForeColor = Color.Black
                    Next J
                End If
            Next i

            v1stVisiRow = -1
            If chk_PieceSelection_SelectAll_Pieces.Checked = True Then
                For i = 0 To .Rows.Count - 1
                    If .Rows(i).Visible = True Then
                        Select_PieceSelection_Grid(i)
                        If v1stVisiRow = -1 Then v1stVisiRow = i
                    End If
                Next i
            End If

            If .Rows.Count > 0 Then

                If v1stVisiRow >= 0 Then
                    .Focus()
                    .CurrentCell = .Rows(v1stVisiRow).Cells(0)
                    .CurrentCell.Selected = True
                Else
                    txt_PieceSelection_LotNo.Focus()
                End If

            End If

        End With

    End Sub

    Private Sub btn_Close_PieceSelection_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_PieceSelection.Click
        Close_Piece_Selection()
    End Sub

    Private Sub Close_Piece_Selection()
        Dim n As Integer = 0
        Dim sno As Integer = 0
        Dim i As Integer = 0
        Dim dgvDet_CurRow As Integer = 0
        Dim dgvDet_DetSlNo As Integer = 0
        Dim Tot_Pcs As Integer = 0
        Dim Tot_Mtrs As String = 0
        Dim vPcs_Selc_LtCds_PcsNos As String = ""


        dgvDet_CurRow = dgv_Details.CurrentCell.RowIndex
        dgvDet_DetSlNo = Val(dgv_Details.Rows(dgvDet_CurRow).Cells(10).Value)

        dgv_Pieces_BaleNo_Entry_Details.Rows.Clear()

LOOP1:
        For i = 0 To dgv_PieceDetails.RowCount - 1

            If Val(dgv_PieceDetails.Rows(i).Cells(0).Value) = Val(dgvDet_DetSlNo) Then

                If i = dgv_PieceDetails.Rows.Count - 1 Then
                    For J = 0 To dgv_PieceDetails.ColumnCount - 1
                        dgv_PieceDetails.Rows(i).Cells(J).Value = ""
                    Next

                Else
                    dgv_PieceDetails.Rows.RemoveAt(i)

                End If

                GoTo LOOP1

            End If

        Next i


        sno = 0
        Tot_Pcs = 0
        Tot_Mtrs = 0
        vPcs_Selc_LtCds_PcsNos = ""

        For i = 0 To dgv_PieceSelection.RowCount - 1

            If Val(dgv_PieceSelection.Rows(i).Cells(8).Value) = 1 Then

                n = dgv_PieceDetails.Rows.Add()

                dgv_PieceDetails.Rows(n).Cells(0).Value = Val(dgvDet_DetSlNo)
                dgv_PieceDetails.Rows(n).Cells(1).Value = dgv_PieceSelection.Rows(i).Cells(1).Value
                dgv_PieceDetails.Rows(n).Cells(2).Value = dgv_PieceSelection.Rows(i).Cells(2).Value
                dgv_PieceDetails.Rows(n).Cells(3).Value = dgv_PieceSelection.Rows(i).Cells(3).Value
                dgv_PieceDetails.Rows(n).Cells(4).Value = dgv_PieceSelection.Rows(i).Cells(4).Value
                If Val(dgv_PieceSelection.Rows(i).Cells(5).Value) <> 0 Then
                    dgv_PieceDetails.Rows(n).Cells(5).Value = dgv_PieceSelection.Rows(i).Cells(5).Value
                End If
                If Val(dgv_PieceSelection.Rows(i).Cells(6).Value) <> 0 Then
                    dgv_PieceDetails.Rows(n).Cells(6).Value = dgv_PieceSelection.Rows(i).Cells(6).Value
                End If
                dgv_PieceDetails.Rows(n).Cells(7).Value = dgv_PieceSelection.Rows(i).Cells(7).Value
                dgv_PieceDetails.Rows(n).Cells(8).Value = dgv_PieceSelection.Rows(i).Cells(9).Value
                dgv_PieceDetails.Rows(n).Cells(9).Value = dgv_PieceSelection.Rows(i).Cells(10).Value
                dgv_PieceDetails.Rows(n).Cells(10).Value = dgv_PieceSelection.Rows(i).Cells(11).Value
                dgv_PieceDetails.Rows(n).Cells(11).Value = dgv_PieceSelection.Rows(i).Cells(13).Value


                Tot_Pcs = Tot_Pcs + 1
                Tot_Mtrs = Val(Tot_Mtrs) + Val(dgv_PieceSelection.Rows(i).Cells(4).Value)
                vPcs_Selc_LtCds_PcsNos = Trim(vPcs_Selc_LtCds_PcsNos) & IIf(Trim(vPcs_Selc_LtCds_PcsNos) = "", "~", "") & Trim(dgv_PieceSelection.Rows(i).Cells(9).Value) & "|" & Trim(dgv_PieceSelection.Rows(i).Cells(2).Value) & "~"

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" And Trim(UCase(cbo_RollBundle.Text)) = "BALE" Then

                    sno = sno + 1
                    n = dgv_Pieces_BaleNo_Entry_Details.Rows.Add()
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(0).Value = sno
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(1).Value = dgv_PieceSelection.Rows(i).Cells(1).Value
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(2).Value = dgv_PieceSelection.Rows(i).Cells(2).Value
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(3).Value = dgv_PieceSelection.Rows(i).Cells(3).Value
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(4).Value = dgv_PieceSelection.Rows(i).Cells(4).Value
                    If Val(dgv_PieceSelection.Rows(i).Cells(5).Value) <> 0 Then
                        dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(5).Value = dgv_PieceSelection.Rows(i).Cells(5).Value
                    End If
                    If Val(dgv_PieceSelection.Rows(i).Cells(6).Value) <> 0 Then
                        dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(6).Value = dgv_PieceSelection.Rows(i).Cells(6).Value
                    End If
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(7).Value = dgv_PieceSelection.Rows(i).Cells(7).Value
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(8).Value = dgv_PieceSelection.Rows(i).Cells(9).Value
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(9).Value = dgv_PieceSelection.Rows(i).Cells(10).Value
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(10).Value = dgv_PieceSelection.Rows(i).Cells(11).Value
                    dgv_Pieces_BaleNo_Entry_Details.Rows(n).Cells(11).Value = dgv_PieceSelection.Rows(i).Cells(13).Value

                End If


            End If

        Next i

        If Trim(dgv_Details.Rows(dgvDet_CurRow).Cells(14).Value) <> "" Then
            dgv_Details.Rows(dgvDet_CurRow).Cells(6).Value = ""
            dgv_Details.Rows(dgvDet_CurRow).Cells(7).Value = ""
            dgv_Details.Rows(dgvDet_CurRow).Cells(14).Value = ""
        End If

        If Val(Tot_Pcs) <> 0 And Val(Tot_Mtrs) <> 0 Then

            If Val(Tot_Pcs) <> 0 Then
                dgv_Details.Rows(dgvDet_CurRow).Cells(6).Value = Val(Tot_Pcs)
            End If
            If Val(Tot_Mtrs) <> 0 Then
                dgv_Details.Rows(dgvDet_CurRow).Cells(7).Value = Format(Val(Tot_Mtrs), "#########0.00")
            End If

            dgv_Details.Rows(dgvDet_CurRow).Cells(14).Value = vPcs_Selc_LtCds_PcsNos

        End If

        Total_Calculation()

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" And Trim(UCase(cbo_RollBundle.Text)) = "BALE" And Val(Tot_Mtrs) <> 0 Then

            pnl_Back.Enabled = False
            pnl_Pieces_BaleNo_Entry_Details.Visible = True
            pnl_PieceSelection.Visible = False
            If dgv_Pieces_BaleNo_Entry_Details.Enabled And dgv_Pieces_BaleNo_Entry_Details.Visible Then
                If dgv_Pieces_BaleNo_Entry_Details.Rows.Count > 0 Then
                    dgv_Pieces_BaleNo_Entry_Details.Focus()
                    If dgv_Pieces_BaleNo_Entry_Details.CurrentCell.RowIndex >= 0 Then
                        dgv_Pieces_BaleNo_Entry_Details.CurrentCell = dgv_Pieces_BaleNo_Entry_Details.Rows(0).Cells(11)
                        dgv_Pieces_BaleNo_Entry_Details.CurrentCell.Selected = True
                    End If
                End If

            Else

                btn_Pieces_BaleNo_Entry_Details_PieceSelection.Focus()

            End If

        Else

            pnl_Back.Enabled = True
            pnl_PieceSelection.Visible = False
            If dgv_Details.Enabled And dgv_Details.Visible Then
                If dgv_Details.Rows.Count > 0 Then
                    dgv_Details.Focus()
                    If dgv_Details.CurrentCell.RowIndex >= 0 Then
                        dgv_Details.CurrentCell = dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(7)
                        dgv_Details.CurrentCell.Selected = True
                    End If
                End If

            ElseIf cbo_Transport.Enabled And cbo_Transport.Visible Then
                cbo_Transport.Focus()

            ElseIf txt_Note.Enabled And txt_Note.Visible Then
                txt_Note.Focus()

            Else
                msk_date.Focus()

            End If

        End If

    End Sub

    Private Sub txt_PieceSelection_PcsNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_PieceSelection_PcsNo.KeyDown
        If e.KeyValue = 40 Then
            txt_PieceSelection_Meters.Focus()

            'If dgv_PieceSelection.Rows.Count > 0 Then
            '    dgv_PieceSelection.Focus()
            '    dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(0).Cells(0)
            '    dgv_PieceSelection.CurrentCell.Selected = True

            'End If

        End If
        If (e.KeyValue = 38) Then txt_PieceSelection_LotNo.Focus()

    End Sub

    Private Sub txt_PieceSelection_PcsNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_PieceSelection_PcsNo.KeyPress

        If Asc(e.KeyChar) = 13 Then

            If Trim(txt_PieceSelection_PcsNo.Text) <> "" Or Trim(txt_PieceSelection_PcsNo.Text) <> "" Then
                btn_PieceSelection_SelectPiece_Click(sender, e)


            Else

                txt_PieceSelection_Meters.Focus()
                'If dgv_PieceSelection.Rows.Count > 0 Then
                '    dgv_PieceSelection.Focus()
                '    dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(0).Cells(0)
                '    dgv_PieceSelection.CurrentCell.Selected = True
                'End If

            End If

        End If

    End Sub

    Private Sub txt_PieceSelection_LotNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_PieceSelection_LotNo.KeyDown
        If (e.KeyValue = 40) Then
            txt_PieceSelection_PcsNo.Focus()
        End If
    End Sub

    Private Sub txt_PieceSelection_LotNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_PieceSelection_LotNo.KeyPress
        If Asc(e.KeyChar) = 13 Then
            txt_PieceSelection_PcsNo.Focus()
        End If
    End Sub

    Private Sub btn_PieceSelection_SelectPiece_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_PieceSelection_SelectPiece.Click
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim LtNo As String
        Dim PcsNo As String
        Dim i As Integer



        If Trim(txt_PieceSelection_LotNo.Text) <> "" Or Trim(txt_PieceSelection_PcsNo.Text) <> "" Then

            LtNo = Trim(txt_PieceSelection_LotNo.Text)
            PcsNo = Trim(txt_PieceSelection_PcsNo.Text)

            For i = 0 To dgv_PieceSelection.Rows.Count - 1

                If dgv_PieceSelection.Rows(i).Visible = True Then

                    If Trim(txt_PieceSelection_LotNo.Text) <> "" And Trim(txt_PieceSelection_PcsNo.Text) <> "" Then

                        If Trim(UCase(LtNo)) = Trim(UCase(dgv_PieceSelection.Rows(i).Cells(1).Value)) And Trim(UCase(PcsNo)) = Trim(UCase(dgv_PieceSelection.Rows(i).Cells(2).Value)) Then
                            Call Select_PieceSelection_Grid(i)
                            dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(i).Cells(0)
                            If i >= 9 Then dgv_PieceSelection.FirstDisplayedScrollingRowIndex = i - 8
                            Exit For
                        End If

                    ElseIf Trim(txt_PieceSelection_LotNo.Text) <> "" Then

                        If Trim(UCase(LtNo)) = Trim(UCase(dgv_PieceSelection.Rows(i).Cells(1).Value)) Then
                            Call Select_PieceSelection_Grid(i)
                            dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(i).Cells(0)
                            If i >= 9 Then dgv_PieceSelection.FirstDisplayedScrollingRowIndex = i - 8
                            Exit For
                        End If

                    ElseIf Trim(txt_PieceSelection_PcsNo.Text) <> "" Then

                        If Trim(UCase(PcsNo)) = Trim(UCase(dgv_PieceSelection.Rows(i).Cells(2).Value)) Then
                            Call Select_PieceSelection_Grid(i)
                            dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(i).Cells(0)
                            If i >= 9 Then dgv_PieceSelection.FirstDisplayedScrollingRowIndex = i - 8
                            Exit For
                        End If

                    End If

                End If

            Next i

            txt_PieceSelection_LotNo.Text = ""
            txt_PieceSelection_PcsNo.Text = ""

            If txt_PieceSelection_LotNo.Enabled = True Then txt_PieceSelection_LotNo.Focus()

        End If
    End Sub

    Private Sub btn_PieceSelection_Show_Piece_by_Meters_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_PieceSelection_Show_Piece_by_Meters.Click
        Dim vFirstRowNo As Integer = -1
        Dim i As Integer

        If Val(txt_PieceSelection_Meters.Text) <> 0 Then

            For i = 0 To dgv_PieceSelection.Rows.Count - 1
                dgv_PieceSelection.Rows(i).Visible = False
            Next

            vFirstRowNo = -1
            For i = 0 To dgv_PieceSelection.Rows.Count - 1
                If Val(dgv_PieceSelection.Rows(i).Cells(4).Value) = Val(txt_PieceSelection_Meters.Text) Then
                    dgv_PieceSelection.Rows(i).Visible = True
                    If vFirstRowNo = -1 Then vFirstRowNo = i
                End If
            Next

            If vFirstRowNo >= 0 Then
                dgv_PieceSelection.Focus()
                dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(vFirstRowNo).Cells(0)
                dgv_PieceSelection.CurrentCell.Selected = True
            Else
                txt_PieceSelection_Meters.SelectAll()
                If txt_PieceSelection_Meters.Enabled = True Then txt_PieceSelection_Meters.Focus()
            End If

        Else

            btn_PieceSelection_Show_AllPiece_Click(sender, e)

        End If

    End Sub

    Private Sub btn_PieceSelection_Show_AllPiece_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_PieceSelection_Show_AllPiece.Click
        Dim i As Integer = 0
        Dim CurRow As Integer = 0

        Try

            For i = 0 To dgv_PieceSelection.Rows.Count - 1
                dgv_PieceSelection.Rows(i).Visible = True
            Next
            txt_PieceSelection_Meters.Text = ""

        Catch ex As Exception
            '---
        End Try
    End Sub

    Private Sub txt_PieceSelection_Meters_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_PieceSelection_Meters.KeyDown
        If e.KeyValue = 40 Then
            If dgv_PieceSelection.Rows.Count > 0 Then
                dgv_PieceSelection.Focus()
                dgv_PieceSelection.CurrentCell = dgv_PieceSelection.Rows(0).Cells(0)
                dgv_PieceSelection.CurrentCell.Selected = True
            Else
                txt_PieceSelection_LotNo.Focus()
            End If
        End If
        If (e.KeyValue = 38) Then txt_PieceSelection_PcsNo.Focus()
    End Sub

    Private Sub txt_PieceSelection_Meters_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_PieceSelection_Meters.KeyPress
        If Asc(e.KeyChar) = 13 Then

            btn_PieceSelection_Show_Piece_by_Meters_Click(sender, e)

        End If
    End Sub

    Private Sub btn_Pieces_BaleNo_Entry_Details_PieceSelection_Click(sender As Object, e As EventArgs) Handles btn_Pieces_BaleNo_Entry_Details_PieceSelection.Click


        vPcsSelc_STatus = True
        Close_Pieces_BaleNo_Entry_Details()
        vPcsSelc_STatus = False

        btn_PieceSelection_Click(sender, e)

    End Sub

    Private Sub btn_Pieces_BaleNo_Entry_Details_PieceSelection_GotFocus(sender As Object, e As EventArgs) Handles btn_Pieces_BaleNo_Entry_Details_PieceSelection.GotFocus
        btn_Pieces_BaleNo_Entry_Details_PieceSelection.BackColor = Color.Lime
        btn_Pieces_BaleNo_Entry_Details_PieceSelection.ForeColor = Color.Blue
    End Sub
    Private Sub btn_Pieces_BaleNo_Entry_Details_PieceSelection_LostFocus(sender As Object, e As EventArgs) Handles btn_Pieces_BaleNo_Entry_Details_PieceSelection.LostFocus
        btn_Pieces_BaleNo_Entry_Details_PieceSelection.BackColor = Color.FromArgb(41, 57, 85)
        btn_Pieces_BaleNo_Entry_Details_PieceSelection.ForeColor = Color.White
    End Sub

    Private Sub btn_Close_Pieces_BaleNo_Entry_Details_Click(sender As Object, e As EventArgs) Handles btn_Close_Pieces_BaleNo_Entry_Details.Click
        vPcsSelc_STatus = False
        Close_Pieces_BaleNo_Entry_Details()
    End Sub

    Private Sub Close_Pieces_BaleNo_Entry_Details()
        Dim Cmd As New SqlClient.SqlCommand
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim n As Integer = 0
        Dim sno As Integer = 0
        Dim i As Integer = 0
        Dim dgvDet_CurRow As Integer = 0
        Dim dgvDet_DetSlNo As Integer = 0
        Dim Tot_Pcs As Integer = 0, NoofBls As Integer
        Dim Tot_Mtrs As String = 0
        Dim vPcs_Selc_LtCds_PcsNos As String = ""
        Dim FsNo As Single, LsNo As Single
        Dim FsBaleNo As String, LsBaleNo As String
        Dim BlNos As String
        Dim vFor_OrdBy_BaleNo As String = ""
        Dim vDup_BlNos As String = ""


        dgvDet_CurRow = dgv_Details.CurrentCell.RowIndex
        dgvDet_DetSlNo = Val(dgv_Details.Rows(dgvDet_CurRow).Cells(10).Value)


LOOP1:

        For i = 0 To dgv_PieceDetails.RowCount - 1

            If Val(dgv_PieceDetails.Rows(i).Cells(0).Value) = Val(dgvDet_DetSlNo) Then

                If i = dgv_PieceDetails.Rows.Count - 1 Then
                    For J = 0 To dgv_PieceDetails.ColumnCount - 1
                        dgv_PieceDetails.Rows(i).Cells(J).Value = ""
                    Next

                Else
                    dgv_PieceDetails.Rows.RemoveAt(i)

                End If

                GoTo LOOP1

            End If

        Next i


        sno = 0
        Tot_Pcs = 0
        Tot_Mtrs = 0
        vPcs_Selc_LtCds_PcsNos = ""



        Cmd.Connection = con

        Cmd.CommandText = "truncate table " & Trim(Common_Procedures.EntryTempTable) & ""
        Cmd.ExecuteNonQuery()

        NoofBls = 0 : Tot_Pcs = 0 : Tot_Mtrs = 0 : BlNos = ""
        vDup_BlNos = ""


        For i = 0 To dgv_Pieces_BaleNo_Entry_Details.RowCount - 1

            n = dgv_PieceDetails.Rows.Add()

            dgv_PieceDetails.Rows(n).Cells(0).Value = Val(dgvDet_DetSlNo)
            dgv_PieceDetails.Rows(n).Cells(1).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(1).Value
            dgv_PieceDetails.Rows(n).Cells(2).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(2).Value
            dgv_PieceDetails.Rows(n).Cells(3).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(3).Value
            dgv_PieceDetails.Rows(n).Cells(4).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(4).Value
            dgv_PieceDetails.Rows(n).Cells(5).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(5).Value
            dgv_PieceDetails.Rows(n).Cells(6).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(6).Value
            dgv_PieceDetails.Rows(n).Cells(7).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(7).Value
            dgv_PieceDetails.Rows(n).Cells(8).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(8).Value
            dgv_PieceDetails.Rows(n).Cells(9).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(9).Value
            dgv_PieceDetails.Rows(n).Cells(10).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(10).Value
            dgv_PieceDetails.Rows(n).Cells(11).Value = dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(11).Value


            vFor_OrdBy_BaleNo = Common_Procedures.OrderBy_CodeToValue(dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(11).Value)



            If InStr(1, Trim(UCase(vDup_BlNos)), "~" & Trim(UCase(dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(11).Value)) & "~") = 0 Then

                Cmd.CommandText = "Insert into " & Trim(Common_Procedures.EntryTempTable) & "(Name1, Meters1) values ('" & Trim(dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(11).Value) & "', " & Str(Val(vFor_OrdBy_BaleNo)) & " ) "
                Cmd.ExecuteNonQuery()

                NoofBls = NoofBls + 1
                vDup_BlNos = Trim(vDup_BlNos) & "~" & Trim(dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(11).Value) & "~"
            End If

            Tot_Pcs = Tot_Pcs + 1
            Tot_Mtrs = Val(Tot_Mtrs) + Val(dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(4).Value)
            vPcs_Selc_LtCds_PcsNos = Trim(vPcs_Selc_LtCds_PcsNos) & IIf(Trim(vPcs_Selc_LtCds_PcsNos) = "", "~", "") & Trim(dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(8).Value) & "|" & Trim(dgv_Pieces_BaleNo_Entry_Details.Rows(i).Cells(2).Value) & "~"

        Next i

        BlNos = ""
        FsNo = 0 : LsNo = 0
        FsBaleNo = "" : LsBaleNo = ""

        Da1 = New SqlClient.SqlDataAdapter("Select Name1 as Bale_No, Meters1 as fororderby_baleno from " & Trim(Common_Procedures.EntryTempTable) & " where Name1 <> '' order by Meters1, Name1", con)
        Dt1 = New DataTable
        Da1.Fill(Dt1)

        If Dt1.Rows.Count > 0 Then

            FsNo = Val(Dt1.Rows(0).Item("fororderby_baleno").ToString)
            LsNo = Val(Dt1.Rows(0).Item("fororderby_baleno").ToString)

            FsBaleNo = Trim(UCase(Dt1.Rows(0).Item("Bale_No").ToString))
            LsBaleNo = Trim(UCase(Dt1.Rows(0).Item("Bale_No").ToString))

            For i = 1 To Dt1.Rows.Count - 1
                If LsNo + 1 = Val(Dt1.Rows(i).Item("fororderby_baleno").ToString) Then
                    LsNo = Val(Dt1.Rows(i).Item("fororderby_baleno").ToString)
                    LsBaleNo = Trim(UCase(Dt1.Rows(i).Item("Bale_No").ToString))

                Else
                    If FsNo = LsNo Then
                        BlNos = BlNos & Trim(FsBaleNo) & ","
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                            BlNos = BlNos & Trim(FsBaleNo) & " to " & Trim(LsBaleNo) & ","
                        Else
                            BlNos = BlNos & Trim(FsBaleNo) & "-" & Trim(LsBaleNo) & ","
                        End If

                    End If
                    FsNo = Dt1.Rows(i).Item("fororderby_baleno").ToString
                    LsNo = Dt1.Rows(i).Item("fororderby_baleno").ToString

                    FsBaleNo = Trim(UCase(Dt1.Rows(i).Item("Bale_No").ToString))
                    LsBaleNo = Trim(UCase(Dt1.Rows(i).Item("Bale_No").ToString))

                End If

            Next

            If FsNo = LsNo Then
                BlNos = BlNos & Trim(FsBaleNo)

            Else

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                    BlNos = BlNos & Trim(FsBaleNo) & " to " & Trim(LsBaleNo)
                Else
                    BlNos = BlNos & Trim(FsBaleNo) & "-" & Trim(LsBaleNo)
                End If

            End If


        End If
        Dt1.Clear()


        If Trim(dgv_Details.Rows(dgvDet_CurRow).Cells(14).Value) <> "" Then
            dgv_Details.Rows(dgvDet_CurRow).Cells(4).Value = ""
            dgv_Details.Rows(dgvDet_CurRow).Cells(5).Value = ""
            dgv_Details.Rows(dgvDet_CurRow).Cells(6).Value = ""
            dgv_Details.Rows(dgvDet_CurRow).Cells(7).Value = ""
            dgv_Details.Rows(dgvDet_CurRow).Cells(14).Value = ""
        End If

        If Val(Tot_Pcs) <> 0 And Val(Tot_Mtrs) <> 0 Then

            If NoofBls <> 0 Then
                dgv_Details.Rows(dgvDet_CurRow).Cells(4).Value = NoofBls
            End If
            dgv_Details.Rows(dgvDet_CurRow).Cells(5).Value = BlNos

            If Val(Tot_Pcs) <> 0 Then
                dgv_Details.Rows(dgvDet_CurRow).Cells(6).Value = Val(Tot_Pcs)
            End If
            If Val(Tot_Mtrs) <> 0 Then
                dgv_Details.Rows(dgvDet_CurRow).Cells(7).Value = Format(Val(Tot_Mtrs), "#########0.00")
            End If

            dgv_Details.Rows(dgvDet_CurRow).Cells(14).Value = vPcs_Selc_LtCds_PcsNos

        End If

        Total_Calculation()

        If vPcsSelc_STatus = False Then

            pnl_Back.Enabled = True
            pnl_Pieces_BaleNo_Entry_Details.Visible = False
            pnl_PieceSelection.Visible = False

            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                If dgv_Details.CurrentCell.RowIndex >= 0 Then
                    dgv_Details.CurrentCell = dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(7)
                    dgv_Details.CurrentCell.Selected = True
                End If

            ElseIf cbo_Transport.Enabled And cbo_Transport.Visible Then
                cbo_Transport.Focus()

            ElseIf txt_Note.Enabled And txt_Note.Visible Then
                txt_Note.Focus()

            Else
                msk_date.Focus()

            End If

        End If

        vPcsSelc_STatus = False

    End Sub

    Private Sub dgv_Pieces_BaleNo_Entry_Details_CellEnter(sender As Object, e As DataGridViewCellEventArgs) Handles dgv_Pieces_BaleNo_Entry_Details.CellEnter
        dgv_ActCtrlName = dgv_Pieces_BaleNo_Entry_Details.Name
    End Sub

    Private Sub dgv_Pieces_BaleNo_Entry_Details_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgv_Pieces_BaleNo_Entry_Details.EditingControlShowing
        dgtxt_Pieces_BaleNo_EntryDetails = CType(dgv_Pieces_BaleNo_Entry_Details.EditingControl, DataGridViewTextBoxEditingControl)
    End Sub

    Private Sub dgv_Pieces_BaleNo_Entry_Details_LostFocus(sender As Object, e As EventArgs) Handles dgv_Pieces_BaleNo_Entry_Details.LostFocus
        On Error Resume Next
        If Not IsNothing(dgv_Pieces_BaleNo_Entry_Details.CurrentCell) Then dgv_Pieces_BaleNo_Entry_Details.CurrentCell.Selected = False
    End Sub

    Private Sub dgtxt_Pieces_BaleNo_EntryDetails_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgtxt_Pieces_BaleNo_EntryDetails.Enter
        dgv_ActCtrlName = dgv_Pieces_BaleNo_Entry_Details.Name
        dgv_Pieces_BaleNo_Entry_Details.EditingControl.BackColor = Color.Lime
        dgv_Pieces_BaleNo_Entry_Details.EditingControl.ForeColor = Color.Blue
        dgtxt_Pieces_BaleNo_EntryDetails.SelectAll()
    End Sub

    Private Sub dgtxt_Pieces_BaleNo_EntryDetails_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles dgtxt_Pieces_BaleNo_EntryDetails.KeyPress
        On Error Resume Next
        Dim i As Integer
        Dim n As Integer = -1

        With dgv_Pieces_BaleNo_Entry_Details

            If .Visible Then

                'If .CurrentCell.ColumnIndex = 11 Then
                '    If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
                '        e.Handled = True
                '    End If
                'End If

            End If

        End With

    End Sub

    Private Sub dgtxt_Pieces_BaleNo_EntryDetails_TextChanged(sender As Object, e As EventArgs) Handles dgtxt_Pieces_BaleNo_EntryDetails.TextChanged
        Try
            With dgv_Pieces_BaleNo_Entry_Details

                If .Visible Then

                    If IsNothing(dgv_Pieces_BaleNo_Entry_Details.CurrentCell) Then Exit Sub

                    If .Rows.Count > 0 Then
                        .Rows(.CurrentCell.RowIndex).Cells.Item(.CurrentCell.ColumnIndex).Value = Trim(dgtxt_Pieces_BaleNo_EntryDetails.Text)
                    End If

                End If

            End With

        Catch ex As NullReferenceException
            '---MessageBox.Show(ex.Message, "ERROR WHILE DETAILS TEXTBOX TEXTCHANGE....", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Catch ex As ObjectDisposedException
            '---MessageBox.Show(ex.Message, "ERROR WHILE DETAILS TEXTBOX TEXTCHANGE....", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "ERROR WHILE DETAILS TEXTBOX TEXTCHANGE....", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Function get_Piece_BaleNo_from_PieceSelectionDetails_Grid(ByVal dgvDet_DetSlNo As Integer, ByVal vLotCd As String, ByVal vPcsNo As String, ByVal vPcsTypName As String) As String
        Dim vEntBaleNo As String = ""
        Dim vPcsTyp_ID As Integer = 0

        vEntBaleNo = ""

        With dgv_PieceDetails

            For i = 0 To .Rows.Count - 1

                If Val(.Rows(i).Cells(4).Value) <> 0 Then


                    If Val(UCase(.Rows(i).Cells(0).Value)) = Val(dgvDet_DetSlNo) And Trim(UCase(.Rows(i).Cells(8).Value)) = Trim(UCase(vLotCd)) And Trim(UCase(.Rows(i).Cells(2).Value)) = Trim(UCase(vPcsNo)) And Trim(UCase(.Rows(i).Cells(3).Value)) = Trim(UCase(vPcsTypName)) Then

                        vEntBaleNo = Trim(.Rows(i).Cells(11).Value)

                        Exit For

                    End If

                End If

            Next i

        End With

        If Trim(vEntBaleNo) = "" Then

            Dim da2 As New SqlClient.SqlDataAdapter
            Dim dt2 As New DataTable
            Dim NewCode As String

            NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

            vPcsTyp_ID = Common_Procedures.ClothType_NameToIdNo(con, vPcsTypName)

            da2 = New SqlClient.SqlDataAdapter("Select a.* from ClothSales_Delivery_Piece_Details a Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' and a.Clothsale_Delivery_Slno = " & Str(Val(dgvDet_DetSlNo)) & "  and a.Lot_Code = '" & Trim(vLotCd) & "' and a.Piece_No = '" & Trim(vPcsNo) & "' and a.PieceType_IdNo = " & Str(Val(vPcsTyp_ID)) & " and a.Bale_No <> '' Order by a.Clothsale_Delivery_Slno, a.sl_no", con)
            dt2 = New DataTable
            da2.Fill(dt2)

            If dt2.Rows.Count > 0 Then
                If IsDBNull(dt2.Rows(0).Item("Bale_No").ToString) = False Then
                    vEntBaleNo = dt2.Rows(0).Item("Bale_No").ToString
                End If
            End If

            dt2.Clear()

        End If


        Return vEntBaleNo


    End Function


    Private Sub Printing_Format_DC_1186(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim ItmNm1 As String, ItmNm2 As String
        'Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        'Dim PpSzSTS As Boolean = False
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0
        Dim TpMargin As Single = 0
        Dim cnt As Integer = 0
        Dim Tot_Mtr As Integer = 0, Tot_Rt As Integer = 0
        Dim vAmt As String = 0
        Dim fldmtr As String = 0 'Double = 0
        Dim fmt As Double = 0
        Dim CurRow As Integer = 0
        Dim packtype As String = ""

        set_PaperSize_For_PrintDocument1()


        PrntCnt = 1
        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            If PrntCnt2ndPageSTS = False Then
                PrntCnt = 2
            End If
        End If

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10
            .Right = 50
            .Top = 30
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        Else
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        End If
        'pFont = New Font("Calibri", 11, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With

        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            NoofItems_PerPage = 4

        Else

            NoofItems_PerPage = 16
        End If

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            NoofItems_PerPage = NoofItems_PerPage - 1
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        '    NoofItems_PerPage = 4
        'Else
        '    NoofItems_PerPage = 5
        'End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        packtype = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(packtype) = "" Then packtype = "BALE"
        If Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            If Trim(packtype) = "ROLL" Then
                ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 0 : ClAr(5) = 80 : ClAr(6) = 60 : ClAr(7) = 80 : ClAr(8) = 80
                ClAr(9) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8))
            Else
                ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60 : ClAr(7) = 70 : ClAr(8) = 60
                ClAr(9) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8))

            End If
        Else
            ClAr(1) = Val(35) : ClAr(2) = 280 : ClAr(3) = 100 : ClAr(4) = 80 : ClAr(5) = 100
            ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))
        End If


        TxtHgt = 16 '18

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        PrntCnt2ndPageSTS = False
        TpMargin = TMargin
        If Trim(Common_Procedures.settings.CustomerCode) = "1037" And vPrnt_2Copy_In_SinglePage = 1 Then
            PCnt = PCnt + 1
            PrntCnt = PrntCnt + 1
        End If

        For PCnt = 1 To PrntCnt

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 Then
                    prn_PageNo1 = prn_PageNo

                    prn_DetIndx1 = prn_DetIndx
                    prn_DetSNo1 = prn_DetSNo
                    prn_NoofBmDets1 = prn_NoofBmDets
                    TpMargin = TMargin

                Else

                    prn_PageNo = prn_PageNo1
                    prn_NoofBmDets = prn_NoofBmDets1
                    prn_DetIndx = prn_DetIndx1
                    prn_DetSNo = prn_DetSNo1

                    TpMargin = 560 + TMargin  ' 600 + TMargin

                End If

            End If

            Try

                If prn_HdDt.Rows.Count > 0 Then

                    Printing_Format_DC_1186_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                    NoofDets = 0

                    CurY = CurY - 10

                    If prn_DetDt.Rows.Count > 0 Then

                        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                            If NoofDets >= NoofItems_PerPage Then

                                If PCnt = 2 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then

                                    NoofDets = NoofDets + 1

                                    CurY = CurY + TxtHgt

                                    Common_Procedures.Print_To_PrintDocument(e, "Continued....", PageWidth - 10, CurY, 1, 0, pFont)


                                    Printing_Format_DC_1186_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                    prn_DetIndx = prn_DetIndx + NoofItems_PerPage

                                    e.HasMorePages = True

                                    Return

                                End If

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued...", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, pFont)

                                NoofDets = NoofDets + 1

                                Printing_Format_DC_1186_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True
                                Return

                            End If


                            ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Description").ToString)
                            If Trim(ItmNm1) = "" Then
                                ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Name").ToString)
                            End If
                            ItmNm2 = ""
                            If Len(ItmNm1) > 40 Then
                                For I = 40 To 1 Step -1
                                    If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                                Next I
                                If I = 0 Then I = 40
                                ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                                ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                            End If

                            CurY = CurY + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetDt.Rows(prn_DetIndx).Item("Sl_No").ToString), LMargin + 15, CurY, 0, 0, pFont)


                            Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Item_HSN_Code").ToString, LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)

                            If ClAr(4) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                            End If

                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Pcs").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            'CurRow = dgv_Details.CurrentCell.RowIndex
                            'If Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 0 Or Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 100 Then
                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")

                            'Else

                            '    fmt = ((100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) / 100) * Val(dgv_Details.Rows(CurRow).Cells(7).Value)

                            '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1035" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1152" Then
                            '        fmt = Format(Math.Abs(Val(fmt)), "######0.00")
                            '        fmt = Common_Procedures.Meter_RoundOff(fmt)
                            '    End If

                            '    If (100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) > 0 Then
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) - Val(fmt), "#########0.00")
                            '    Else
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) + Val(fmt), "#########0.00")
                            '    End If

                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(fldmtr) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")


                            'End If


                            vAmt = Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString) * Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString)
                            vprn_TotAmt = Val(vprn_TotAmt) + Val(vAmt)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(vAmt), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 0 And Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 100 Then
                                    CurY = CurY + TxtHgt
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) & " CM  Folding ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                    NoofDets = NoofDets + 1
                                End If
                            End If

                            NoofDets = NoofDets + 1

                            If Trim(ItmNm2) <> "" Then
                                CurY = CurY + TxtHgt - 5
                                Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm2), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If

                            prn_DetIndx = prn_DetIndx + 1

                        Loop

                    End If

                    Printing_Format_DC_1186_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                End If


            Catch ex As Exception
                MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then
                    If prn_DetDt.Rows.Count > prn_NoofBmDets Then
                        PrntCnt2ndPageSTS = True
                        e.HasMorePages = True
                        cnt = 6
                        Return
                    End If
                End If
            End If

            PrntCnt2ndPageSTS = False

        Next PCnt


LOOP2:

        prn_Count = prn_Count + 1


        e.HasMorePages = False

        If Val(prn_TotCopies) > 1 Then
            If prn_Count < Val(prn_TotCopies) Then

                prn_DetIndx = 0
                'prn_DetSNo = 0
                prn_PageNo = 0
                prn_DetIndx = 0
                prn_NoofBmDets = 0
                vprn_TotAmt = 0

                e.HasMorePages = True
                Return

            End If

        End If
    End Sub

    Private Sub Printing_Format_DC_1186_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2, da3 As New SqlClient.SqlDataAdapter
        Dim dt2, dt3 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_Email As String, Cmp_Add3 As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single, strWidth As Single = 0
        Dim C1 As Single
        Dim W1, w2 As Single
        Dim S1, S2 As Single
        Dim vprn_BlNos As String = ""
        Dim Gst_dt As Date
        Dim Entry_dt As Date
        Dim CurX As Single = 0
        Dim vPackType As String = ""
        Dim suppRefNo As String = ""
        Dim payment As String = ""
        PageNo = PageNo + 1
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "DELIVERY CHALLAN", LMargin, CurY + 10, 2, PrintWidth, p1Font)
        CurY = TMargin

        da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, d.ClothType_name from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        da2.Fill(dt2)

        If dt2.Rows.Count > NoofItems_PerPage Then
            Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        End If
        dt2.Clear()

        suppRefNo = ""
        payment = ""
        da3 = New SqlClient.SqlDataAdapter("select a.*, b.Clothsales_Order_no,b.payment_terms from ClothSales_Delivery_Details a INNER JOIN Clothsales_Order_Head b ON a.Clothsales_Order_Code = b.Clothsales_Order_Code  where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "'", con)
        dt3 = New DataTable
        da3.Fill(dt3)
        If dt3.Rows.Count > 0 Then
            suppRefNo = dt3.Rows(0).Item("ClothSales_Order_No").ToString
            payment = dt3.Rows(0).Item("payment_terms").ToString
        End If
        dt3.Clear()

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""

        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString


        If InStr(1, Trim(UCase(Cmp_Name)), "UNITED") > 0 And InStr(1, Trim(UCase(Cmp_Name)), "WEAVES") > 0 Then
            Cmp_Add1 = "Regd. Off : " & prn_HdDt.Rows(0).Item("Company_Address1").ToString
            Cmp_Add2 = "Factory : " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Else
            Cmp_Add1 = "" & prn_HdDt.Rows(0).Item("Company_Address1").ToString
            Cmp_Add2 = "" & prn_HdDt.Rows(0).Item("Company_Address2").ToString

        End If

        'Cmp_Add1 = "Regd. Off : " & prn_HdDt.Rows(0).Item("Company_Address1").ToString
        'Cmp_Add2 = "Factory : " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add3 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_PanNo").ToString) <> "" Then
            Cmp_CstNo = "PAN NO.: " & prn_HdDt.Rows(0).Item("Company_PanNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_Cap = "GSTIN : "
            Cmp_GSTIN_No = Cmp_GSTIN_Cap & prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        CurY = CurY + TxtHgt - 10

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            p1Font = New Font("Calibri", 16, FontStyle.Bold)
        Else
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" Then
            If InStr(1, Trim(UCase(Cmp_Name)), "UNITED") > 0 And InStr(1, Trim(UCase(Cmp_Name)), "WEAVES") > 0 Then
                e.Graphics.DrawImage(DirectCast(Global.Textile.My.Resources.Resources.united_weaves_logo_png, Drawing.Image), PageWidth - 150, CurY, 120, 100)
            End If
        End If


        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin + 10, CurY, 0, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin + 10, CurY, 0, PrintWidth, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add3, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        ' Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No & "  / " & Cmp_CstNo, LMargin + 10, CurY, 0, PrintWidth, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Email, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(12) = CurY
        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 10, FontStyle.Bold)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
        Common_Procedures.Print_To_PrintDocument(e, "DC No. : " & prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DATE : " & Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy"), LMargin + ClAr(1) + 90, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "PO No . : " & (prn_HdDt.Rows(0).Item("Party_OrderNo").ToString), LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "PO Date . : " & prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, p1Font)


        CurY = CurY + strHeight
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + 80, CurY, LMargin + ClAr(1) + 80, LnAr(12))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(12))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(12))
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY
        CurY = CurY + 15
        C1 = ClAr(1) + ClAr(2) + ClAr(3) + (ClAr(4) / 2)
        W1 = e.Graphics.MeasureString("ORDER NO : ", pFont).Width
        w2 = e.Graphics.MeasureString("DELIVERY.At : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO  :  ", pFont).Width
        S2 = e.Graphics.MeasureString("TRANSPORT :  ", pFont).Width

        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "BILLED TO  :", LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DELIVERY TO : ", LMargin + C1 + 10, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "M/s." & prn_HdDt.Rows(0).Item("Ledger_MAInName").ToString, LMargin + S1 + 10, CurY, 0, 0, p1Font)
        'Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "M/s. " & Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString), LMargin + C1 + 30, CurY, 0, 0, p1Font)


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        'Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)

        'If prn_HdDt.Rows(0).Item("Party_OrderNo").ToString <> "" Then
        '    Common_Procedures.Print_To_PrintDocument(e, "P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString & "   P.O DATE    :   " & prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        'End If

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress2").ToString, LMargin + C1 + 30, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)


        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress3").ToString, LMargin + C1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString, LMargin + C1 + 30, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("Ledger_State_Name").ToString) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "STATE :  " & prn_HdDt.Rows(0).Item("Ledger_State_Name").ToString & "  CODE : " & prn_HdDt.Rows(0).Item("Ledger_State_Code").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        End If
        Common_Procedures.Print_To_PrintDocument(e, " STATE :   " & prn_HdDt.Rows(0).Item("DeliveryTo_State_Name").ToString & "     CODE : " & prn_HdDt.Rows(0).Item("DeliveryTo_State_Code").ToString, LMargin + C1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            If Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, " TIN NO : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, pFont)
            End If

        Else
            If Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString) <> "" Then
                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN NO : " & Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, p1Font)
            End If

        End If
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString) <> "" Then
            p1Font = New Font("Calibri", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " GSTIN : " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString, LMargin + C1 + 30, CurY, 0, 0, p1Font)
        End If


        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '---- BRT SIZING (SOMANUR)
        '    Common_Procedures.Print_To_PrintDocument(e, "PARTY ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, suppRefNo, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
        'End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then

            'CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "THROUGH  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Through_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)



        End If


        Common_Procedures.Print_To_PrintDocument(e, "AGENT", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "DESP.TO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_To").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then
            Common_Procedures.Print_To_PrintDocument(e, "LR.NO  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If

        CurY = CurY + TxtHgt

        If Trim(prn_HdDt.Rows(0).Item("EwayBill_No").ToString) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No.", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("EwayBill_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If

        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        'Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & vprn_BlNos, LMargin + C1 + 10, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        pFont = New Font("Calibri", 10, FontStyle.Bold)
        CurY = CurY + 5

        Common_Procedures.Print_To_PrintDocument(e, "SNO", LMargin, CurY, 2, ClAr(1), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "CLOTH NAME", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "HSN CODE", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
        If Trim(vPackType) <> "ROLL" Then
            Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & "S", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
        End If

        If Trim(vPackType) = "ROLL" Then
            Common_Procedures.Print_To_PrintDocument(e, "ROLL/PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, "FOLD%", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "QTY In ", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)






        Common_Procedures.Print_To_PrintDocument(e, "RATE /", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)

        Common_Procedures.Print_To_PrintDocument(e, "AMOUNT(Rs)", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
        CurY = CurY + 15
        Common_Procedures.Print_To_PrintDocument(e, " MTRS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
        Common_Procedures.Print_To_PrintDocument(e, " MTR", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY

    End Sub

    Private Sub Printing_Format_DC_1186_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim vPackType As String = ""
        Dim BLNo1 As String = ""
        Dim BLNo2 As String = ""
        Dim len1 As Single = 0
        Dim BankNm1 As String = ""
        Dim BankNm2 As String = ""
        Dim BankNm3 As String = ""
        Dim BankNm4 As String = ""
        Dim BInc As Integer
        Dim BnkDetAr() As String
        Dim CurY1 As Single = 0
        Dim D1 As Single = 0
        ' W1 = e.Graphics.MeasureString("No.of Beams  : ", pFont).Width
        D1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5)
        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next
        Erase BnkDetAr
        If Trim(prn_HdDt.Rows(0).Item("Company_Bank_Ac_Details").ToString) <> "" Then
            BnkDetAr = Split(Trim(prn_HdDt.Rows(0).Item("Company_Bank_Ac_Details").ToString), ",")

            BInc = -1

            BInc = BInc + 1
            If UBound(BnkDetAr) >= BInc Then
                BankNm1 = Trim(BnkDetAr(BInc))
            End If

            BInc = BInc + 1
            If UBound(BnkDetAr) >= BInc Then
                BankNm2 = Trim(BnkDetAr(BInc))
            End If

            BInc = BInc + 1
            If UBound(BnkDetAr) >= BInc Then
                BankNm3 = Trim(BnkDetAr(BInc))
            End If

            BInc = BInc + 1
            If UBound(BnkDetAr) >= BInc Then
                BankNm4 = Trim(BnkDetAr(BInc))
            End If

        End If
        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY

        CurY = CurY + 5
        If is_LastPage = True Then
            Common_Procedures.Print_To_PrintDocument(e, " TOTAL", LMargin + ClAr(1) + 30, CurY, 2, ClAr(4), pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(0).Item("Total_Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Pcs").ToString), "#########0"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(vprn_TotAmt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(6) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(3))

        CurY = CurY + 10


        vprn_BlNos = ""
        For i = 0 To prn_DetDt.Rows.Count - 1
            If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
                vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
            End If
        Next

        BLNo1 = Trim(vprn_BlNos)
        BLNo2 = ""

        If Len(BLNo1) > 75 Then
            For i = 75 To 1 Step -1
                If Mid$(Trim(BLNo1), i, 1) = " " Or Mid$(Trim(BLNo1), i, 1) = "," Or Mid$(Trim(BLNo1), i, 1) = "." Or Mid$(Trim(BLNo1), i, 1) = "-" Or Mid$(Trim(BLNo1), i, 1) = "/" Or Mid$(Trim(BLNo1), i, 1) = "_" Or Mid$(Trim(BLNo1), i, 1) = "(" Or Mid$(Trim(BLNo1), i, 1) = ")" Or Mid$(Trim(BLNo1), i, 1) = "\" Or Mid$(Trim(BLNo1), i, 1) = "[" Or Mid$(Trim(BLNo1), i, 1) = "]" Or Mid$(Trim(BLNo1), i, 1) = "{" Or Mid$(Trim(BLNo1), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = 75
            BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - i)
            BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), i)
        End If


        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        If Trim(vPackType) <> "ROLL" Then
            Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & BLNo1, LMargin + 10, CurY, 0, 0, pFont)

        End If

        p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1186" Then '-----KALAIMAGAL TEXTILES(PALLDAM)


            Common_Procedures.Print_To_PrintDocument(e, "VALUE : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo2, LMargin + 10, CurY, 0, 0, pFont)

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "NOTE : " & prn_HdDt.Rows(0).Item("Note").ToString, LMargin + 10, CurY, 0, 0, pFont)

        End If
        'End If



        If Common_Procedures.User.IdNo <> 1 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + 20, CurY, 0, 0, pFont)
        End If
        ''----




        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(12) = CurY
        p1Font = New Font("Calibri", 9, FontStyle.Underline Or FontStyle.Bold)
        len1 = e.Graphics.MeasureString("Due Days / Date  : ", pFont).Width
        CurY = CurY + TxtHgt - 10
        Common_Procedures.Print_To_PrintDocument(e, "INWARD / OUTWARD  : ", LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "BANK DETAILS", LMargin + D1, CurY, 0, 0, p1Font)
        CurY = CurY + TxtHgt + 5
        pFont = New Font("Calibri", 9, FontStyle.Regular)
        Common_Procedures.Print_To_PrintDocument(e, "Ref No   ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":  " & prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + len1 + 10, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "BANK NAME      :  " & BankNm1, LMargin + D1, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt + 5
        Common_Procedures.Print_To_PrintDocument(e, "Entry  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":  _________________________ ", LMargin + len1 + 10, CurY, 0, 0, pFont)


        Common_Procedures.Print_To_PrintDocument(e, "ACCOUNT NO    :  " & BankNm2, LMargin + D1, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt + 5

        Common_Procedures.Print_To_PrintDocument(e, "Date ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":  _________________________ ", LMargin + len1 + 10, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "BRANCH NAME :  " & BankNm3, LMargin + D1, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt + 5

        Common_Procedures.Print_To_PrintDocument(e, "Time   ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":  _________________________ ", LMargin + len1 + 10, CurY, 0, 0, pFont)


        Common_Procedures.Print_To_PrintDocument(e, "IFSC CODE          :  " & BankNm4, LMargin + D1, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        CurY = CurY + 5
        p1Font = New Font("Calibri", 12, FontStyle.Underline)
        Common_Procedures.Print_To_PrintDocument(e, "Term & Conditions : ", LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "Goods Description : ", LMargin + D1, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt + 10
        Common_Procedures.Print_To_PrintDocument(e, "1. Overdue Interest will be charged at 24% from The invoice date ", LMargin + 10, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "1. Uncalendered Grey Fabrics ", LMargin + D1, CurY, 0, 0, pFont)



        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "2. Our risk & responsibility ceases on goods leaving our factory", LMargin + 10, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "3. Goods are supplied under our firm conditions.", LMargin + 10, CurY, 0, 0, pFont)

        e.Graphics.DrawLine(Pens.Black, LMargin + D1 - 10, CurY, PageWidth, CurY)
        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "4. Subject to Tirupur jurisdiction ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "Tax Is Payable On Reverse Charge : YES / NO", LMargin + D1 + 10, CurY, 0, 0, pFont)



        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "5. E.O & E .", LMargin + 10, CurY, 0, 0, pFont)



        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        e.Graphics.DrawLine(Pens.Black, LMargin + D1 - 10, CurY, LMargin + D1 - 10, LnAr(12))


        CurY = CurY + 5
        Common_Procedures.Print_To_PrintDocument(e, "Certified that particulars given above are true and correct and the amount indicated represents the price actually charged and that ", LMargin + 10, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "there is no flow of additional consideration directly or indirectly from the buyer.", LMargin + 10, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(10) = CurY




        '----


        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        If Common_Procedures.settings.CustomerCode = "1186" Then

            Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)
            CurY = CurY + TxtHgt
        End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "Prepared By", LMargin + 20, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 170, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 320, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 250, CurY, 0, 0, pFont)
        End If

        If Trim(Common_Procedures.settings.CustomerCode) <> "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If
        If Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signature", PageWidth - 15, CurY, 1, 0, pFont)

        End If
        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub PrintDocument6_BeginPrint(sender As Object, e As PrintEventArgs) Handles PrintDocument6.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim DT1 As New DataTable
        Dim da3 As New SqlClient.SqlDataAdapter
        Dim da4 As New SqlClient.SqlDataAdapter
        Dim dt3 As New DataTable
        Dim NewCode As String = ""
        Dim BalCode As String = ""
        Dim i, j, k, s As Integer
        Dim Sno As Integer = 0
        Dim vCLONAME As String

        s = 0
        prn_HdDt.Clear()
        prn_DetDt.Clear()

        vPrnDet.clear()
        prn_PageNo = 0
        prn_HdIndx = 0
        prn_DetIndx = 0
        prn_HdMxIndx = 0
        prn_DetMxIndx = 0
        prn_Count = 1
        prn_TotalBales = 0
        prn_TotalPcs = 0
        prn_TotalMtrs = 0
        prn_TotalWgt = 0
        vprn_TotAmt = 0

        Erase prn_DetAr1

        Erase prn_HdAr

        prn_HdAr = New String(1000, 1000) {}

        prn_DetAr1 = New String(1000, 20) {}

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.*,tZ.*, tL.*, Csh.State_Name as Company_State_Name, Csh.State_Code as Company_State_Code from ClothSales_Delivery_Head a  INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno   INNER JOIN Ledger_Head tL ON a.Ledger_IdNo = tL.Ledger_IdNo LEFT OUTER JOIN State_Head Csh ON tZ.Company_State_IdNo = Csh.State_IdNo Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            'da1 = New SqlClient.SqlDataAdapter("select a.*,c.*,tZ.*, tL.* from ClothSales_Delivery_Head a inner JOIN ClothSales_Delivery_Piece_details cd on cd.ClothSales_Delivery_Code =a.ClothSales_Delivery_Code inner JOIN cloth_head c on c.cloth_idno =cd.cloth_idno INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno   INNER JOIN Ledger_Head tL ON a.Ledger_IdNo = tL.Ledger_IdNo Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)

            vCLONAME = ""
            If prn_HdDt.Rows.Count > 0 Then

                For i = 0 To prn_HdDt.Rows.Count - 1

                    prn_HdMxIndx = prn_HdMxIndx + 1

                    prn_HdAr(prn_HdMxIndx, 1) = "" 'Trim(prn_HdDt.Rows(i).Item("lot_no").ToString)
                    'If Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString) <> "" Then
                    '    'prn_HdAr(prn_HdMxIndx, 2) = Trim(prn_HdDt.Rows(i).Item("Cloth_Description").ToString)
                    'Else
                    prn_HdAr(prn_HdMxIndx, 2) = "" 'Trim(prn_HdDt.Rows(i).Item("Cloth_Name").ToString)
                    'End If
                    prn_HdAr(prn_HdMxIndx, 3) = 0 'Val(prn_HdDt.Rows(i).Item("Pak_Pcs").ToString)
                    prn_HdAr(prn_HdMxIndx, 4) = 0 'Format(Val(prn_HdDt.Rows(i).Item("Pak_Mtrs").ToString), "#########0.00")

                    prn_TotalBales = prn_TotalBales + 1

                    prn_DetMxIndx = 0

                    'If Trim(prn_HdDt.Rows(i).Item("Bale_Transfer_Code").ToString) <> "" Then
                    '    BalCode = ""
                    'Else
                    '    BalCode = Trim(prn_HdDt.Rows(i).Item("Packing_Slip_Code").ToString)
                    'End If

                    'da2 = New SqlClient.SqlDataAdapter("select a.*,c.* from ClothSales_Delivery_Piece_Details a INNER JOIN cloth_head c on c.cloth_idno =a.cloth_idno Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' order by a.Sl_No ASC, a.piece_no", con)

                    'Old
                    'da2 = New SqlClient.SqlDataAdapter("select a.*,c.* from ClothSales_Delivery_Piece_Details a INNER JOIN cloth_head c on c.cloth_idno =a.cloth_idno Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' order by a.bale_no ,a.Sl_No ASC ", con)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1428" Then
                        da2 = New SqlClient.SqlDataAdapter("select a.*, b.*  , a.Pcs_No piece_no , a.Packing_Slip_No as Bale_No from Packing_Slip_Details a INNER JOIN Cloth_Head b ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = b.Cloth_IdNo inner join Packing_Slip_Head c on a.Packing_Slip_Code = c.Packing_Slip_Code  Where c.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'", con)
                        prn_DetDt = New DataTable
                        da2.Fill(prn_DetDt)
                        'Folding or Pinning Per - 1428
                        da4 = New SqlClient.SqlDataAdapter("select a.ClothSales_Delivery_No , b.Fold_Perc from ClothSales_Delivery_Head a  INNER JOIN Company_head tZ ON a.company_idno = tZ.Company_Idno  inner join ClothSales_Delivery_Details b on a.ClothSales_Delivery_Code = b.ClothSales_Delivery_Code Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
                        vPrnDet = New DataTable
                        da4.Fill(vPrnDet)

                    Else

                        da2 = New SqlClient.SqlDataAdapter("select a.*, c.* from ClothSales_Delivery_Piece_Details a INNER JOIN cloth_head c on c.cloth_idno = a.cloth_idno Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' order by c.cloth_name, a.Lot_code, a.Lot_no, a.bale_no, a.Sl_No, a.Piece_No ASC ", con)
                        prn_DetDt = New DataTable
                        da2.Fill(prn_DetDt)

                    End If

                    If prn_DetDt.Rows.Count > 0 Then

                        For j = 0 To prn_DetDt.Rows.Count - 1

                            If Val(prn_DetDt.Rows(j).Item("Meters").ToString) <> 0 Then

                                If Trim(UCase(vCLONAME)) <> Trim(UCase(prn_DetDt.Rows(j).Item("Cloth_name").ToString)) Then
                                    Sno = 0
                                End If

                                prn_DetMxIndx = prn_DetMxIndx + 1
                                Sno = Sno + 1
                                prn_DetAr1(prn_DetMxIndx, 0) = Val(Sno) 'Trim(prn_DetDt.Rows(j).Item("Sl_No").ToString)
                                prn_DetAr1(prn_DetMxIndx, 1) = Trim(prn_DetDt.Rows(j).Item("Lot_No").ToString)
                                prn_DetAr1(prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(j).Item("piece_no").ToString)
                                prn_DetAr1(prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00")
                                prn_DetAr1(prn_DetMxIndx, 5) = Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.00")




                                prn_TotalPcs = Val(prn_TotalPcs) + 1
                                'prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetDt.Rows(j).Item("Meters").ToString), "#########0.00"), "##########0.00")
                                'prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetDt.Rows(j).Item("Weight").ToString), "#########0.000"), "##########0.000")
                                ''If Trim(prn_DetDt.Rows(j).Item("bale_No").ToString) <> Trim(prn_DetDt.Rows(j - 1).Item("bale_No").ToString) Then
                                prn_DetAr1(prn_DetMxIndx, 3) = Trim(prn_DetDt.Rows(j).Item("bale_No").ToString)

                                prn_DetAr1(prn_DetMxIndx, 7) = Trim(prn_DetDt.Rows(j).Item("loom_no").ToString)
                                prn_DetAr1(prn_DetMxIndx, 8) = Trim(prn_DetDt.Rows(j).Item("Weight_Meter").ToString)

                                prn_DetAr1(prn_DetMxIndx, 9) = Trim(prn_DetDt.Rows(j).Item("Cloth_name").ToString)
                                prn_DetAr1(prn_DetMxIndx, 10) = Trim(prn_DetDt.Rows(j).Item("weave").ToString)

                                vCLONAME = Trim(prn_DetDt.Rows(j).Item("Cloth_name").ToString)

                                da3 = New SqlClient.SqlDataAdapter("select sum(a.weight) as wgt ,a.bale_no from ClothSales_Delivery_Piece_Details a  Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' group by a.bale_no ", con)
                                dt3 = New DataTable
                                da3.Fill(dt3)

                                For k = s To dt3.Rows.Count - 1

                                    If Trim(prn_DetDt.Rows(j).Item("Bale_no").ToString) = Trim(dt3.Rows(k).Item("Bale_no").ToString) Then
                                        prn_DetAr1(prn_DetMxIndx, 6) = Trim(dt3.Rows(k).Item("wgt").ToString)
                                        'Common_Procedures.Print_To_PrintDocument(e, Trim(dt3.Rows(k).Item("wgt").ToString), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) - 10, CurY, 1, 0, pFont)
                                        s = s + 1
                                    Else
                                        s = k
                                    End If

                                    Exit For

                                Next

                            End If

                        Next j

                    End If

                Next i

            Else
                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End If

            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub PrintDocument6_PrintPage(sender As Object, e As PrintPageEventArgs) Handles PrintDocument6.PrintPage
        If prn_HdDt.Rows.Count <= 0 Then Exit Sub

        If Common_Procedures.settings.CustomerCode = "1428" Then
            Printing_Format_Bale_1428(PrintDocument6, e)
        ElseIf Common_Procedures.settings.CustomerCode = "1520" Then 'Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1569" Then
            Printing_Format_Delivery_cum_PackingList_1520(PrintDocument6, e)
        ElseIf Common_Procedures.settings.CustomerCode = "1186" Then
            Printing_Format_Bale_1186(PrintDocument6, e)
        End If

    End Sub


    Private Sub Printing_Format_Bale_1186(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim NoofDets As Integer, NoofItems_PerPage As Integer
        Dim pFont As Font, P1fONT As Font
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim CurY As Single, TxtHgt As Single
        Dim LnAr(20) As Single, ClArr(20) As Single
        Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        Dim PpSzSTS As Boolean = False
        Dim LM As Single = 0, TM As Single = 0
        Dim PgWt As Single = 0, PrWt As Single = 0
        Dim PgHt As Single = 0, PrHt As Single = 0
        Dim bale_no As String = ""
        Dim da3 As New SqlClient.SqlDataAdapter
        Dim dt3 As New DataTable
        Dim i, j, k, s As Integer
        Dim NewCode As String = ""

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = True
                    Exit For
                End If
            Next

        Else

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = False
                    Exit For
                End If
            Next

        End If

        With PrintDocument1.DefaultPageSettings.Margins
            If PrintDocument1.DefaultPageSettings.Landscape = True Then
                .Left = 5
                .Right = 30
                .Top = 40
                .Bottom = 30
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            Else
                .Left = 10
                .Right = 50
                .Top = 35
                .Bottom = 40
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            End If
        End With

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'With PrintDocument1.DefaultPageSettings.PaperSize
        '    PrintWidth = (.Width / 2) - RMargin - LMargin
        '    PrintHeight = (.Height / 2) - TMargin - BMargin
        '    PageWidth = (.Width / 2) - RMargin
        '    PageHeight = (.Height / 2) - BMargin
        'End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias
        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        pFont = New Font("Calibri", 10, FontStyle.Regular)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
            NoofItems_PerPage = 18
        Else
            NoofItems_PerPage = 29
        End If

        Erase ClArr
        Erase LnAr
        ClArr = New Single(20) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        LnAr = New Single(20) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}


        ClArr(1) = 70 : ClArr(2) = 200 : ClArr(3) = 150 : ClArr(4) = 80 : ClArr(5) = 80
        ClArr(6) = PageWidth - (ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5))

        TxtHgt = 17 ' e.Graphics.MeasureString("A", pFont).Height  ' 20

        Try

            If prn_DetDt.Rows.Count > 0 Then

                If prn_HdMxIndx > 0 Then

                    Erase LnAr
                    LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

                    Printing_Format_Bale_1186_PageHeader(PrintDocument1, e, prn_HdDt, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClArr, prn_HdIndx)
                    CurY = CurY - 10

                    NoofDets = 0
                    Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) - 10, CurY, 1, 0, pFont)
                            NoofDets = NoofDets + 1

                            Printing_Format_Bale_1186_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, False)

                            e.HasMorePages = True

                            Return

                        End If

                        prn_DetIndx = prn_DetIndx + 1

                        If NoofDets > 0 And prn_DetIndx > 0 And Trim(UCase(prn_DetAr1(prn_DetIndx, 9))) <> Trim(UCase(prn_DetAr1(prn_DetIndx - 1, 9))) Then

                            Printing_Format_Bale_1186_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, True)

                            prn_DetIndx = prn_DetIndx - 1

                            prn_TotalMtrs = 0
                            prn_TotalWgt = 0

                            e.HasMorePages = True

                            Return

                        End If

                        If Trim(prn_DetAr1(prn_DetIndx, 3)) <> Trim(prn_DetAr1(prn_DetIndx - 1, 3)) Then
                            CurY = CurY + 5
                        End If

                        CurY = CurY + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 0), LMargin + 10, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 2), LMargin + ClArr(1) + 10, CurY, 0, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 4), LMargin + ClArr(1) + ClArr(2) + ClArr(3) - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 5), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) - 10, CurY, 1, 0, pFont)

                        If Trim(prn_DetAr1(prn_DetIndx, 3)) <> Trim(prn_DetAr1(prn_DetIndx - 1, 3)) Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 3), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + 10, CurY, 0, 0, pFont)
                        End If
                        If Trim(cbo_RollBundle.Text) = "BALE" Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 6), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) - 10, CurY, 1, 0, pFont)
                        End If

                        prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetAr1(prn_DetIndx, 4)), "#########0.00"), "##########0.00")
                        prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetAr1(prn_DetIndx, 5)), "#########0.000"), "##########0.000")

                        NoofDets = NoofDets + 1

                    Loop

                    Printing_Format_Bale_1186_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, True)

                End If

            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        e.HasMorePages = False

    End Sub

    Private Sub Printing_Format_Bale_1186_PageHeader(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdDt As DataTable, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal prn_HdIndx As Integer)
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim dt3 As New DataTable
        Dim dt4 As New DataTable
        Dim p1Font As Font
        Dim strHeight As Single
        Dim Cmp_Add As String = ""
        Dim C1 As Single, W1, W2 As Single, S1, S2 As Single
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String, Cmp_Add3 As String, City As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_PanNo As String
        Dim Cmp_State As String, Cmp_StateCode As String, Cmp_GSTIN_No As String, Cmp_EMail As String

        PageNo = PageNo + 1

        CurY = TMargin + 30

        'da2 = New SqlClient.SqlDataAdapter("select a.*, b.Ledger_Name, c.Ledger_Name, d.Company_Description as Transport_Name from ClothSales_Invoice_Head a  INNER JOIN Ledger_Head b ON b.Ledger_IdNo = a.Ledger_Idno LEFT OUTER JOIN Ledger_Head c ON c.Ledger_IdNo = a.Transport_IdNo LEFT OUTER JOIN Company_Head d ON d.Company_IdNo = a.Company_IdNo where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Invoice_Code = '" & Trim(EntryCode) & "' Order by a.For_OrderBy", con)
        'da2.Fill(dt2)
        'If dt2.Rows.Count > NoofItems_PerPage Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        'End If
        'dt2.Clear()

        prn_Count = prn_Count + 1

        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        'Common_Procedures.Print_To_PrintDocument(e, "BALE PACKING DETAILS", LMargin, CurY - TxtHgt - 5, 2, PrintWidth, p1Font)

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY
        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = "" : Cmp_Add3 = "" : City = ""

        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_PanNo = ""
        Cmp_State = "" : Cmp_StateCode = "" : Cmp_GSTIN_No = "" : Cmp_EMail = ""

        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString

        'Cmp_Add1 = "Regd. Off : " & prn_HdDt.Rows(0).Item("Company_Address1").ToString
        'Cmp_Add2 = "Factory : " & prn_HdDt.Rows(0).Item("Company_Address2").ToString

        If InStr(1, Trim(UCase(Cmp_Name)), "UNITED") > 0 And InStr(1, Trim(UCase(Cmp_Name)), "WEAVES") > 0 Then
            Cmp_Add1 = "Regd. Off : " & prn_HdDt.Rows(0).Item("Company_Address1").ToString
            Cmp_Add2 = "Factory : " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Else
            Cmp_Add1 = "" & prn_HdDt.Rows(0).Item("Company_Address1").ToString
            Cmp_Add2 = "" & prn_HdDt.Rows(0).Item("Company_Address2").ToString

        End If
        Cmp_Add3 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_PanNo").ToString) <> "" Then
            Cmp_CstNo = "PAN NO.: " & prn_HdDt.Rows(0).Item("Company_PanNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_EMail = "EMAIL ID : " & prn_HdDt.Rows(0).Item("Company_EMail").ToString
        End If

        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_No = "GSTIN :" & prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_City").ToString) <> "" Then
            City = "" & prn_HdDt.Rows(0).Item("Company_City").ToString
        End If
        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 18, FontStyle.Bold)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" Then
            If InStr(1, Trim(UCase(Cmp_Name)), "UNITED") > 0 And InStr(1, Trim(UCase(Cmp_Name)), "WEAVES") > 0 Then
                e.Graphics.DrawImage(DirectCast(Global.Textile.My.Resources.Resources.united_weaves_logo_png, Drawing.Image), PageWidth - 150, CurY, 120, 100)
            End If
        End If


        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin + 10, CurY, 0, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin + 10, CurY, 0, PrintWidth, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add3 & "," & City, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt

        'Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No & "  /  " & Cmp_CstNo, LMargin + 10, CurY, 0, PrintWidth, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_EMail, LMargin + 10, CurY, 0, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 12
        p1Font = New Font("Calibri", 16, FontStyle.Bold)
        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        CurY = CurY + TxtHgt - 12
        If Common_Procedures.settings.CustomerCode = "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "PACKING LIST", LMargin, CurY, 2, PrintWidth, p1Font)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "PIECE DELIVERY", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + TxtHgt + 12
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3)
        W1 = e.Graphics.MeasureString("INVOICE DATE  : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO     :    ", pFont).Width
        W2 = e.Graphics.MeasureString("Despatch To   : ", pFont).Width
        S2 = e.Graphics.MeasureString("Sent Through  : ", pFont).Width


        CurY = CurY + 5
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_mainName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 14, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "PARTY P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, "Agent Name", LMargin + C1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("Party_OrderDate").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "PARTY P.O DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, " GST : " & prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        End If
        Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("JJ_FormNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO ", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        Try



            CurY = CurY + 5
            Common_Procedures.Print_To_PrintDocument(e, "QUALITY", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + W1, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx + 1, 9), LMargin + W1 + 25, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "WEAVE :  " & prn_DetAr1(prn_DetIndx + 1, 10), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + 40, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx + 1).Item("Cloth_name").ToString, LMargin + W1 + 25, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "WEAVE :  " & prn_DetDt.Rows(prn_DetIndx + 1).Item("weave").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + 40, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(2) = CurY

            CurY = CurY + TxtHgt - 10
            Common_Procedures.Print_To_PrintDocument(e, "SL NO", LMargin, CurY, 2, ClAr(1), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS/ROLL NO", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS MTRS", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS WGT", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "BALE NO", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "BALE WGT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub Printing_Format_Bale_1186_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal prn_HdIndx As Integer, ByVal is_LastPage As Boolean)
        Dim I As Integer
        Dim p1Font As Font
        Dim Cmp_Name As String

        Try

            For I = NoofDets + 1 To NoofItems_PerPage
                CurY = CurY + TxtHgt
            Next

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(5) = CurY

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(2))

            e.Graphics.DrawLine(Pens.Black, PageWidth, CurY, PageWidth, LnAr(2))

            If is_LastPage = True Then

                CurY = CurY + TxtHgt - 10

                Common_Procedures.Print_To_PrintDocument(e, "TOTAL : ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalMtrs), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 2, CurY, 1, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalWgt), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 2, CurY, 1, 0, pFont)

                'Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotalPcs), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 10, CurY, 0, 0, pFont)

                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY + 24, LMargin + ClAr(1), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY + 24, LMargin + ClAr(1) + ClAr(2), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(5))

                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(5))



            End If
            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(6) = CurY
            If Common_Procedures.settings.CustomerCode = "1186" Then
                CurY = CurY + TxtHgt - 10
                Dim len1 As Integer = 0

                p1Font = New Font("Calibri", 9, FontStyle.Underline Or FontStyle.Bold)
                len1 = e.Graphics.MeasureString(" Date     : ", pFont).Width
                CurY = CurY + TxtHgt - 10
                Common_Procedures.Print_To_PrintDocument(e, "INWARD / OUTWARD  : ", LMargin + 10, CurY, 0, 0, p1Font)
                CurY = CurY + TxtHgt + 5
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
                Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 5, CurY, 1, 0, p1Font)

                pFont = New Font("Calibri", 9, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "Ref No   ", LMargin + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":  " & prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + len1 + 10, CurY, 0, 0, pFont)

                CurY = CurY + TxtHgt + 5
                Common_Procedures.Print_To_PrintDocument(e, "Entry  ", LMargin + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":  __________________", LMargin + len1 + 10, CurY, 0, 0, pFont)


                CurY = CurY + TxtHgt + 5

                Common_Procedures.Print_To_PrintDocument(e, "Date ", LMargin + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":  __________________ ", LMargin + len1 + 10, CurY, 0, 0, pFont)
                CurY = CurY + TxtHgt + 5

                Common_Procedures.Print_To_PrintDocument(e, "Time   ", LMargin + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":  __________________ ", LMargin + len1 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "Prepared by", LMargin + len1 + ClAr(1) + ClAr(2) + ClAr(3) + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 5, CurY, 1, 0, pFont)

                CurY = CurY + TxtHgt + 10
            End If


            'e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            'p1Font = New Font("Calibri", 12, FontStyle.Bold)
            'Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
            'Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 5, CurY, 1, 0, p1Font)

            'CurY = CurY + TxtHgt + 5

            'CurY = CurY + TxtHgt + 5
            'CurY = CurY + TxtHgt + 5

            'Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 10, CurY, 0, 0, pFont)

            'Common_Procedures.Print_To_PrintDocument(e, "Prepared by", LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
            'If Val(Common_Procedures.User.IdNo) <> 1 Then
            '    Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
            'End If




            'Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 5, CurY, 1, 0, pFont)


            'CurY = CurY + TxtHgt + 5

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(6))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(6))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(6))
            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)


        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub
    Public Sub Printing_Packing_slip()
        Dim prtFrm As Single = 0
        Dim prtTo As Single = 0
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim Condt As String = ""
        Dim PpSzSTS As Boolean = False
        Dim ps As Printing.PaperSize
        Dim NewCode As String
        Dim vBALESTS As Boolean = False, vPCSSTS As Boolean = False

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            vBALESTS = True : vPCSSTS = True

            'If Common_Procedures.settings.CustomerCode = "1186" Then
            da1 = New SqlClient.SqlDataAdapter("select a.*,c.* from ClothSales_Delivery_Piece_Details a INNER JOIN cloth_head c on c.cloth_idno =a.cloth_idno Where a.ClothSales_Delivery_Code  = '" & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count <= 0 Then

                vPCSSTS = False
                'MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                'Exit Sub

            End If

            dt1.Dispose()
            da1.Dispose()
            ' Else

            da1 = New SqlClient.SqlDataAdapter("select a.*, b.* from Packing_Slip_Head a INNER JOIN Cloth_Head b ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = b.Cloth_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count <= 0 Then
                vBALESTS = False
                'MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                'Exit Sub

            End If

            dt1.Dispose()
            da1.Dispose()
            'End If

            'If vBALESTS = False And vPCSSTS = False Then
            '    MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            '    Exit Sub
            'End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            For I = 0 To PrintDocument6.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument6.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument6.PrinterSettings.PaperSizes(I)
                    PrintDocument6.DefaultPageSettings.PaperSize = ps
                    PrintDocument6.DefaultPageSettings.Landscape = True
                    Exit For
                End If
            Next
        Else
            For I = 0 To PrintDocument6.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument6.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument6.PrinterSettings.PaperSizes(I)
                    PrintDocument6.DefaultPageSettings.PaperSize = ps
                    PrintDocument6.DefaultPageSettings.Landscape = False
                    Exit For
                End If
            Next
        End If

        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then
            Try

                If Print_PDF_Status = True Then
                    PrintDocument6.DocumentName = "BundleSlip"
                    PrintDocument6.PrinterSettings.PrinterName = "doPDF v7"
                    PrintDocument6.PrinterSettings.PrintFileName = "c:\BundleSlip.pdf"
                    PrintDocument6.Print()

                Else

                    If Val(Common_Procedures.settings.Printing_Show_PrintDialogue) = 1 Then
                        PrintDialog1.PrinterSettings = PrintDocument6.PrinterSettings
                        If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                            PrintDocument6.PrinterSettings = PrintDialog1.PrinterSettings
                            PrintDocument6.Print()
                        End If

                    Else
                        PrintDocument6.Print()

                    End If

                End If

            Catch ex As Exception
                MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT SHOW PRINT PREVIEW...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                ppd.Document = PrintDocument6

                ppd.WindowState = FormWindowState.Maximized
                ppd.StartPosition = FormStartPosition.CenterScreen
                ppd.PrintPreviewControl.AutoZoom = True
                ppd.PrintPreviewControl.Zoom = 1.0

                ppd.ShowDialog()

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If

        pnl_Back.Enabled = True
        pnl_Print.Visible = False

    End Sub


    Private Sub Total_BaleMeters_Calculation()
        Dim Sno As Integer
        Dim TotPcs As Single
        Dim TotBals As Single
        Dim TotMtrs As Single

        If NoCalc_Status = True Then Exit Sub

        Sno = 0
        TotPcs = 0 : TotBals = 0 : TotMtrs = 0

        With dgv_BaleSelection
            For i = 0 To .RowCount - 1
                Sno = Sno + 1
                .Rows(i).Cells(0).Value = Sno
                If Val(.Rows(i).Cells(7).Value) <> 0 Then

                    TotBals = TotBals + Val(.Rows(i).Cells(4).Value())
                    TotPcs = TotPcs + Val(.Rows(i).Cells(6).Value())
                    TotMtrs = TotMtrs + Val(.Rows(i).Cells(7).Value())

                End If

            Next i

        End With


        With dgv_Details_Total
            If .RowCount = 0 Then .Rows.Add()
            .Rows(0).Cells(4).Value = Val(TotBals)
            .Rows(0).Cells(6).Value = Val(TotPcs)
            .Rows(0).Cells(7).Value = Format(Val(TotMtrs), "########0.00")
        End With


    End Sub

    Private Sub Total_BaleSelection_Calculation()
        Dim vTOTBLS As Integer
        Dim vTOTMTRS As String
        Dim vTOTSELCBLS As Integer
        Dim vTOTSELCMTRS As String

        If FrmLdSTS = True Then Exit Sub

        vTOTBLS = 0
        vTOTMTRS = 0
        vTOTSELCBLS = 0
        vTOTSELCMTRS = 0

        For i = 0 To dgv_BaleSelection.Rows.Count - 1

            If Trim(dgv_BaleSelection.Rows(i).Cells(1).Value) <> "" And Val(dgv_BaleSelection.Rows(i).Cells(3).Value) <> 0 Then
                If dgv_BaleSelection.Rows(i).Visible = True Then
                    vTOTBLS = vTOTBLS + 1
                    vTOTMTRS = Format(Val(vTOTMTRS) + Val(dgv_BaleSelection.Rows(i).Cells(3).Value), "##########0.00")
                End If

                If Val(dgv_BaleSelection.Rows(i).Cells(5).Value) = 1 Then
                    vTOTSELCBLS = vTOTSELCBLS + 1
                    vTOTSELCMTRS = Format(Val(vTOTSELCMTRS) + Val(dgv_BaleSelection.Rows(i).Cells(3).Value), "##########0.00")
                End If

            End If

        Next

        lbl_BaleSelection_TotalBales.Text = vTOTBLS
        lbl_BaleSelection_TotalMeters.Text = Format(Val(vTOTMTRS), "##########0.00")
        lbl_BaleSelection_TotalSelected_Bales.Text = vTOTSELCBLS
        lbl_BaleSelection_TotalSelected_Meters.Text = Format(Val(vTOTSELCMTRS), "##########0.00")

    End Sub

    Private Sub chk_BaleSelection_SelectAllPcs_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chk_BaleSelection_SelectAllPcs.CheckedChanged
        Dim i As Integer
        Dim J As Integer
        Dim v1stVisiRow As Integer = 0

        With dgv_BaleSelection

            For i = 0 To .Rows.Count - 1
                If .Rows(i).Visible = True Then
                    .Rows(i).Cells(5).Value = ""
                    For J = 0 To .ColumnCount - 1
                        .Rows(i).Cells(J).Style.ForeColor = Color.Black
                    Next J
                End If
            Next i

            v1stVisiRow = -1
            If chk_BaleSelection_SelectAllPcs.Checked = True Then
                For i = 0 To .Rows.Count - 1
                    If .Rows(i).Visible = True Then
                        Select_Bale(i)
                        If v1stVisiRow = -1 Then v1stVisiRow = i
                    End If
                Next i
            End If

            Total_BaleSelection_Calculation()

            If .Rows.Count > 0 Then

                If v1stVisiRow >= 0 Then
                    .Focus()
                    .CurrentCell = .Rows(v1stVisiRow).Cells(0)
                    .CurrentCell.Selected = True
                Else
                    txt_BaleSelection_BaleNo.Focus()
                End If

            End If

        End With

    End Sub

    Private Sub btn_BaleSelection_Select_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_BaleSelection_Select.Click
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim vBALENo As String
        Dim i As Integer
        Dim vBarCode As String = ""
        Dim vYrCode As String = ""
        Dim vPcsTyp As String = ""

        If Trim(txt_BaleSelection_BarCode.Text) <> "" Then

            For i = 0 To dgv_BaleSelection.Rows.Count - 1

                If dgv_BaleSelection.Rows(i).Visible = True Then

                    vBarCode = dgv_BaleSelection.Rows(i).Cells(10).Value

                    'If Trim(vBarCode) = "" Then

                    '    Da1 = New SqlClient.SqlDataAdapter("select a.* from Weaver_ClothReceipt_Piece_Details a, Weaver_Piece_Checking_Head b where a.Lot_Code = '" & Trim(dgv_BaleSelection.Rows(i).Cells(9).Value) & "' and a.Piece_No = '" & Trim(dgv_BaleSelection.Rows(i).Cells(2).Value) & "' and a.Weaver_Piece_Checking_Code = b.Weaver_Piece_Checking_Code ORDER BY Lot_No, PieceNo_OrderBy ASC", con)
                    '    Dt1 = New DataTable
                    '    Da1.Fill(Dt1)
                    '    If Dt1.Rows.Count > 0 Then
                    '        vYrCode = Microsoft.VisualBasic.Right(Trim(Dt1.Rows(0).Item("Lot_Code").ToString), 5)
                    '        vPcsTyp = Common_Procedures.ClothType_NameToIdNo(con, dgv_BaleSelection.Rows(i).Cells(3).Value)
                    '        vBarCode = Microsoft.VisualBasic.Left(vYrCode, 2) & Trim(Val(Dt1.Rows(0).Item("Company_IdNo").ToString)) & Trim(UCase(Dt1.Rows(0).Item("Lot_No").ToString)) & Trim(UCase(Dt1.Rows(prn_DetIndx).Item("Piece_No").ToString)) & Trim(Val(vPcsTyp))
                    '    End If
                    '    Dt1.Clear()

                    'End If

                    If Trim(UCase(vBarCode)) = Trim(UCase(txt_BaleSelection_BarCode.Text)) And Val(dgv_BaleSelection.Rows(i).Cells(5).Value) = 0 Then
                        Call Select_Bale(i)
                        dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(i).Cells(0)
                        If i >= 9 Then dgv_BaleSelection.FirstDisplayedScrollingRowIndex = i - 8
                        Exit For
                    End If

                End If

            Next

            txt_BaleSelection_BarCode.Text = ""
            txt_BaleSelection_BaleNo.Text = ""
            If txt_BaleSelection_BarCode.Enabled = True Then txt_BaleSelection_BarCode.Focus()

        ElseIf Trim(txt_BaleSelection_BaleNo.Text) <> "" Then

            vBALENo = Trim(txt_BaleSelection_BaleNo.Text)

            For i = 0 To dgv_BaleSelection.Rows.Count - 1
                If dgv_BaleSelection.Rows(i).Visible = True Then
                    If Trim(UCase(vBALENo)) = Trim(UCase(dgv_BaleSelection.Rows(i).Cells(1).Value)) Then
                        Call Select_Bale(i)
                        dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(i).Cells(0)
                        If i >= 9 Then dgv_BaleSelection.FirstDisplayedScrollingRowIndex = i - 8
                        Exit For
                    End If
                End If
            Next

            txt_BaleSelection_BaleNo.Text = ""
            txt_BaleSelection_BarCode.Text = ""
            If txt_BaleSelection_BaleNo.Enabled = True Then txt_BaleSelection_BaleNo.Focus()

        End If

        Total_BaleSelection_Calculation()

    End Sub

    Private Sub btn_BaleSelection_ShowAll_Bales_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_BaleSelection_ShowAll_Bales.Click
        Dim i As Integer = 0


        Try
            For i = 0 To dgv_BaleSelection.Rows.Count - 1
                dgv_BaleSelection.Rows(i).Visible = True
            Next
            txt_BaleSelection_MetersEqualTo.Text = ""
            txt_BaleSelection_MetersFrom.Text = ""
            txt_BaleSelection_MetersTo.Text = ""
            cbo_BaleSelection_FabricName.Text = ""
            cbo_BaleSelection_CompanyName.Text = ""
            txt_BaleSelection_BaleNo.Text = ""
            txt_BaleSelection_BarCode.Text = ""

            Total_BaleSelection_Calculation()

        Catch ex As Exception
            '---

        End Try
    End Sub

    Private Sub btn_BaleSelection_Show_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_BaleSelection_Show.Click
        Dim vFirstRowNo As Integer = -1
        Dim i As Integer
        Dim vSHOWSTS As Boolean = False
        Dim vCHKSTS As Boolean = False

        If Trim(cbo_BaleSelection_CompanyName.Text) <> "" Or Trim(cbo_BaleSelection_FabricName.Text) <> "" Or Val(txt_BaleSelection_MetersEqualTo.Text) <> 0 Or (Val(txt_BaleSelection_MetersFrom.Text) <> 0 And Val(txt_BaleSelection_MetersTo.Text) <> 0) Then

            For i = 0 To dgv_BaleSelection.Rows.Count - 1
                dgv_BaleSelection.Rows(i).Visible = False
            Next

            vFirstRowNo = -1

            For i = 0 To dgv_BaleSelection.Rows.Count - 1

                vSHOWSTS = False

                vCHKSTS = True

                If Trim(cbo_BaleSelection_CompanyName.Text) <> "" And vCHKSTS = True Then
                    If Trim(UCase(dgv_BaleSelection.Rows(i).Cells(8).Value)) = Trim(UCase(cbo_BaleSelection_CompanyName.Text)) Then
                        vSHOWSTS = True
                    Else
                        vCHKSTS = False
                    End If
                End If

                If Trim(cbo_BaleSelection_FabricName.Text) <> "" And vCHKSTS = True Then
                    vSHOWSTS = False
                    If Trim(UCase(dgv_BaleSelection.Rows(i).Cells(9).Value)) = Trim(UCase(cbo_BaleSelection_FabricName.Text)) Then
                        vSHOWSTS = True
                    Else
                        vCHKSTS = False
                    End If
                End If

                If Val(txt_BaleSelection_MetersEqualTo.Text) <> 0 And vCHKSTS = True Then
                    vSHOWSTS = False
                    If Val(dgv_BaleSelection.Rows(i).Cells(3).Value) = Val(txt_BaleSelection_MetersEqualTo.Text) Then
                        vSHOWSTS = True
                    Else
                        vCHKSTS = False
                    End If
                End If

                If Val(txt_BaleSelection_MetersFrom.Text) <> 0 And Val(txt_BaleSelection_MetersTo.Text) <> 0 And vCHKSTS = True Then
                    vSHOWSTS = False
                    If Val(dgv_BaleSelection.Rows(i).Cells(3).Value) >= Val(txt_BaleSelection_MetersFrom.Text) And Val(dgv_BaleSelection.Rows(i).Cells(3).Value) <= Val(txt_BaleSelection_MetersTo.Text) Then
                        vSHOWSTS = True
                    Else
                        vCHKSTS = False
                    End If
                End If

                If vSHOWSTS = True Then
                    dgv_BaleSelection.Rows(i).Visible = True
                    If vFirstRowNo = -1 Then vFirstRowNo = i
                End If

            Next


            If dgv_BaleSelection.Rows.Count > 0 Then
                If vFirstRowNo >= 0 Then
                    dgv_BaleSelection.Focus()
                    dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(vFirstRowNo).Cells(0)
                    dgv_BaleSelection.CurrentCell.Selected = True
                End If
            End If




            If Trim(cbo_BaleSelection_CompanyName.Text) <> "" Then
                cbo_BaleSelection_CompanyName.SelectAll()
                If cbo_BaleSelection_CompanyName.Enabled = True Then cbo_BaleSelection_CompanyName.Focus()
                cbo_BaleSelection_CompanyName.SelectAll()

            ElseIf Trim(cbo_BaleSelection_FabricName.Text) <> "" Then
                cbo_BaleSelection_FabricName.SelectAll()
                If cbo_BaleSelection_FabricName.Enabled = True Then cbo_BaleSelection_FabricName.Focus()
                cbo_BaleSelection_FabricName.SelectAll()

            ElseIf Val(txt_BaleSelection_MetersEqualTo.Text) <> 0 Then
                txt_BaleSelection_MetersEqualTo.SelectAll()
                If txt_BaleSelection_MetersEqualTo.Enabled = True Then txt_BaleSelection_MetersEqualTo.Focus()
                txt_BaleSelection_MetersEqualTo.SelectAll()

            ElseIf Val(txt_BaleSelection_MetersFrom.Text) <> 0 Then
                txt_BaleSelection_MetersFrom.SelectAll()
                If txt_BaleSelection_MetersFrom.Enabled = True Then txt_BaleSelection_MetersFrom.Focus()
                txt_BaleSelection_MetersFrom.SelectAll()

            End If



            'ElseIf Trim(cbo_BaleSelection_CompanyName.Text) <> "" Then


            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        dgv_BaleSelection.Rows(i).Visible = False
            '    Next

            '    vFirstRowNo = -1
            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        If Trim(cbo_BaleSelection_FabricName.Text) <> "" Then
            '            If Trim(UCase(dgv_BaleSelection.Rows(i).Cells(8).Value)) = Trim(UCase(cbo_BaleSelection_CompanyName.Text)) And Trim(UCase(dgv_BaleSelection.Rows(i).Cells(9).Value)) = Trim(UCase(cbo_BaleSelection_FabricName.Text)) Then
            '                dgv_BaleSelection.Rows(i).Visible = True
            '                If vFirstRowNo = -1 Then vFirstRowNo = i
            '            End If

            '        Else
            '            If Trim(UCase(dgv_BaleSelection.Rows(i).Cells(8).Value)) = Trim(UCase(cbo_BaleSelection_CompanyName.Text)) Then
            '                dgv_BaleSelection.Rows(i).Visible = True
            '                If vFirstRowNo = -1 Then vFirstRowNo = i
            '            End If

            '        End If

            '    Next

            '    If vFirstRowNo >= 0 Then
            '        dgv_BaleSelection.Focus()
            '        dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(vFirstRowNo).Cells(0)
            '        dgv_BaleSelection.CurrentCell.Selected = True
            '    End If

            '    cbo_BaleSelection_CompanyName.SelectAll()
            '    If cbo_BaleSelection_CompanyName.Enabled = True Then cbo_BaleSelection_CompanyName.Focus()
            '    cbo_BaleSelection_CompanyName.SelectAll()

            'ElseIf Trim(cbo_BaleSelection_FabricName.Text) <> "" Then

            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        dgv_BaleSelection.Rows(i).Visible = False
            '    Next

            '    vFirstRowNo = -1
            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        If Trim(UCase(dgv_BaleSelection.Rows(i).Cells(9).Value)) = Trim(UCase(cbo_BaleSelection_FabricName.Text)) Then
            '            dgv_BaleSelection.Rows(i).Visible = True
            '            If vFirstRowNo = -1 Then vFirstRowNo = i
            '        End If
            '    Next

            '    If vFirstRowNo >= 0 Then
            '        dgv_BaleSelection.Focus()
            '        dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(vFirstRowNo).Cells(0)
            '        dgv_BaleSelection.CurrentCell.Selected = True
            '    End If

            '    cbo_BaleSelection_FabricName.SelectAll()
            '    If cbo_BaleSelection_FabricName.Enabled = True Then cbo_BaleSelection_FabricName.Focus()
            '    cbo_BaleSelection_FabricName.SelectAll()

            'ElseIf Val(txt_BaleSelection_MetersEqualTo.Text) <> 0 Then

            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        dgv_BaleSelection.Rows(i).Visible = False
            '    Next

            '    vFirstRowNo = -1
            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        If Val(dgv_BaleSelection.Rows(i).Cells(3).Value) = Val(txt_BaleSelection_MetersEqualTo.Text) Then
            '            dgv_BaleSelection.Rows(i).Visible = True
            '            If vFirstRowNo = -1 Then vFirstRowNo = i
            '        End If
            '    Next

            '    If vFirstRowNo >= 0 Then
            '        dgv_BaleSelection.Focus()
            '        dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(vFirstRowNo).Cells(0)
            '        dgv_BaleSelection.CurrentCell.Selected = True

            '    End If

            '    txt_BaleSelection_MetersEqualTo.SelectAll()
            '    If txt_BaleSelection_MetersEqualTo.Enabled = True Then txt_BaleSelection_MetersEqualTo.Focus()
            '    txt_BaleSelection_MetersEqualTo.SelectAll()

            'ElseIf Val(txt_BaleSelection_MetersFrom.Text) <> 0 And Val(txt_BaleSelection_MetersTo.Text) <> 0 Then

            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        dgv_BaleSelection.Rows(i).Visible = False
            '    Next

            '    vFirstRowNo = -1
            '    For i = 0 To dgv_BaleSelection.Rows.Count - 1
            '        If Val(dgv_BaleSelection.Rows(i).Cells(3).Value) >= Val(txt_BaleSelection_MetersFrom.Text) And Val(dgv_BaleSelection.Rows(i).Cells(3).Value) <= Val(txt_BaleSelection_MetersTo.Text) Then
            '            dgv_BaleSelection.Rows(i).Visible = True
            '            If vFirstRowNo = -1 Then vFirstRowNo = i
            '        End If
            '    Next

            '    If vFirstRowNo >= 0 Then
            '        dgv_BaleSelection.Focus()
            '        dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(vFirstRowNo).Cells(0)
            '        dgv_BaleSelection.CurrentCell.Selected = True

            '    End If

            '    txt_BaleSelection_MetersFrom.SelectAll()
            '    If txt_BaleSelection_MetersFrom.Enabled = True Then txt_BaleSelection_MetersFrom.Focus()
            '    txt_BaleSelection_MetersFrom.SelectAll()


        Else

            btn_BaleSelection_ShowAll_Bales_Click(sender, e)

        End If

        Total_BaleSelection_Calculation()

    End Sub

    Private Sub txt_BaleSelection_BaleNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_BaleSelection_BaleNo.KeyDown
        If e.KeyValue = 40 Then
            txt_BaleSelection_BarCode.Focus()
            txt_BaleSelection_BarCode.SelectAll()
            'If dgv_BaleSelection.Rows.Count > 0 Then
            '    dgv_BaleSelection.Focus()
            '    dgv_BaleSelection.CurrentCell = dgv_Selection.Rows(0).Cells(0)
            '    dgv_BaleSelection.CurrentCell.Selected = True
            'End If
        End If
        If e.KeyValue = 38 Then
            'txt_BaleSelection_BaleNo.Focus()
            'txt_BaleSelection_BaleNo.SelectAll()
        End If
    End Sub

    Private Sub txt_BaleSelection_BaleNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_BaleSelection_BaleNo.KeyPress
        If Asc(e.KeyChar) = 13 Then
            If Trim(txt_BaleSelection_BaleNo.Text) <> "" Then
                btn_BaleSelection_Select_Click(sender, e)
            End If
        End If
    End Sub


    Private Sub txt_BaleSelection_BarCode_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_BaleSelection_BarCode.KeyDown
        If e.KeyValue = 40 Then
            cbo_BaleSelection_CompanyName.Focus()
            cbo_BaleSelection_CompanyName.SelectAll()
            'If dgv_BaleSelection.Rows.Count > 0 Then
            '    dgv_BaleSelection.Focus()
            '    dgv_BaleSelection.CurrentCell = dgv_Selection.Rows(0).Cells(0)
            '    dgv_BaleSelection.CurrentCell.Selected = True
            'End If
        End If
        If e.KeyValue = 38 Then
            txt_BaleSelection_BaleNo.Focus()
            txt_BaleSelection_BaleNo.SelectAll()
        End If
    End Sub

    Private Sub txt_BaleSelection_BarCode_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_BaleSelection_BarCode.KeyPress
        If Asc(e.KeyChar) = 13 Then
            If Trim(txt_BaleSelection_BarCode.Text) <> "" Then
                btn_BaleSelection_Select_Click(sender, e)
            End If
        End If
    End Sub

    Private Sub cbo_BaleSelection_CompanyName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_BaleSelection_CompanyName.GotFocus
        Dim CompCondt As String
        CompCondt = "(Close_Status = 0)"
        If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
            CompCondt = "(Company_Type <> 'UNACCOUNT' and Close_Status = 0)"
        End If
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Company_Head", "Company_ShortName", CompCondt, "(Company_IdNo = 0)")
    End Sub

    Private Sub cbo_BaleSelection_CompanyName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_BaleSelection_CompanyName.KeyDown
        Dim CompCondt As String
        CompCondt = "(Close_Status = 0)"
        If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
            CompCondt = "(Company_Type <> 'UNACCOUNT' and Close_Status = 0)"
        End If
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, sender, txt_BaleSelection_BarCode, cbo_BaleSelection_FabricName, "Company_Head", "Company_ShortName", CompCondt, "(Company_IdNo = 0)")
    End Sub

    Private Sub cbo_BaleSelection_CompanyName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_BaleSelection_CompanyName.KeyPress
        Dim CompCondt As String
        CompCondt = "(Close_Status = 0)"
        If Trim(UCase(Common_Procedures.User.Type)) <> "UNACCOUNT" Then
            CompCondt = "(Company_Type <> 'UNACCOUNT' and Close_Status = 0)"
        End If
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, sender, Nothing, "Company_Head", "Company_ShortName", CompCondt, "(Company_IdNo = 0)")
        If Asc(e.KeyChar) = 13 Then
            btn_BaleSelection_Show_Click(sender, e)
        End If
    End Sub

    Private Sub cbo_BaleSelection_FabricName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_BaleSelection_FabricName.GotFocus
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Clo_ID As Integer
        Dim Clo_UndIdNo As Integer

        Clo_ID = 0
        Clo_UndIdNo = 0

        If Not IsNothing(dgv_Details.CurrentCell) Then
            Clo_ID = Common_Procedures.Cloth_NameToIdNo(con, dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(1).Value)

            Clo_UndIdNo = Clo_ID

            Da = New SqlClient.SqlDataAdapter("select * from Cloth_head where Cloth_idno = " & Str(Val(Clo_UndIdNo)), con)
            Dt1 = New DataTable
            Da.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) = False Then
                    If Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) <> 0 Then Clo_UndIdNo = Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString)
                End If
            End If
            Dt1.Clear()

        End If

        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Cloth_Head", "Cloth_Name", "((Cloth_IdNo = " & Str(Val(Clo_ID)) & " or Cloth_StockUnder_IdNo = " & Str(Val(Clo_UndIdNo)) & ") and Close_Status = 0)", "(Cloth_IdNo = 0)")
    End Sub

    Private Sub cbo_BaleSelection_FabricName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_BaleSelection_FabricName.KeyDown
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Clo_ID As Integer
        Dim Clo_UndIdNo As Integer

        Clo_ID = 0
        Clo_UndIdNo = 0

        If Not IsNothing(dgv_Details.CurrentCell) Then
            Clo_ID = Common_Procedures.Cloth_NameToIdNo(con, dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(1).Value)

            Clo_UndIdNo = Clo_ID

            Da = New SqlClient.SqlDataAdapter("select * from Cloth_head where Cloth_idno = " & Str(Val(Clo_UndIdNo)), con)
            Dt1 = New DataTable
            Da.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) = False Then
                    If Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) <> 0 Then Clo_UndIdNo = Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString)
                End If
            End If
            Dt1.Clear()

        End If

        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, sender, txt_BaleSelection_BarCode, txt_BaleSelection_MetersEqualTo, "Cloth_Head", "Cloth_Name", "((Cloth_IdNo = " & Str(Val(Clo_ID)) & " or Cloth_StockUnder_IdNo = " & Str(Val(Clo_UndIdNo)) & ") and Close_Status = 0)", "(Cloth_IdNo = 0)")
    End Sub

    Private Sub cbo_BaleSelection_FabricName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_BaleSelection_FabricName.KeyPress
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Clo_ID As Integer
        Dim Clo_UndIdNo As Integer

        Clo_ID = 0
        Clo_UndIdNo = 0

        If Not IsNothing(dgv_Details.CurrentCell) Then
            Clo_ID = Common_Procedures.Cloth_NameToIdNo(con, dgv_Details.Rows(dgv_Details.CurrentCell.RowIndex).Cells(1).Value)

            Clo_UndIdNo = Clo_ID

            Da = New SqlClient.SqlDataAdapter("select * from Cloth_head where Cloth_idno = " & Str(Val(Clo_UndIdNo)), con)
            Dt1 = New DataTable
            Da.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) = False Then
                    If Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString) <> 0 Then Clo_UndIdNo = Val(Dt1.Rows(0).Item("Cloth_StockUnder_IdNo").ToString)
                End If
            End If
            Dt1.Clear()

        End If

        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, sender, Nothing, "Cloth_Head", "Cloth_Name", "((Cloth_IdNo = " & Str(Val(Clo_ID)) & " or Cloth_StockUnder_IdNo = " & Str(Val(Clo_UndIdNo)) & ") and Close_Status = 0)", "(Cloth_IdNo = 0)")
        If Asc(e.KeyChar) = 13 Then
            btn_BaleSelection_Show_Click(sender, e)
        End If
    End Sub

    Private Sub txt_BaleSelection_MetersEqualTo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_BaleSelection_MetersEqualTo.KeyDown
        If e.KeyValue = 40 Then
            txt_BaleSelection_MetersFrom.Focus()
            'If dgv_Selection.Rows.Count > 0 Then
            '    dgv_Selection.Focus()
            '    dgv_Selection.CurrentCell = dgv_Selection.Rows(0).Cells(0)
            '    dgv_Selection.CurrentCell.Selected = True
            'End If
        End If
        If (e.KeyValue = 38) Then cbo_BaleSelection_FabricName.Focus()
    End Sub

    Private Sub txt_BaleSelection_MetersEqualTo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_BaleSelection_MetersEqualTo.KeyPress
        If Asc(e.KeyChar) = 13 Then
            btn_BaleSelection_Show_Click(sender, e)
        End If
    End Sub

    Private Sub txt_BaleSelection_MetersFrom_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_BaleSelection_MetersFrom.KeyDown
        If e.KeyValue = 40 Then
            txt_BaleSelection_MetersTo.Focus()
        End If
        If e.KeyValue = 38 Then txt_BaleSelection_MetersEqualTo.Focus()
    End Sub

    Private Sub txt_BaleSelection_MetersFrom_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_BaleSelection_MetersFrom.KeyPress
        If Asc(e.KeyChar) = 13 Then
            txt_BaleSelection_MetersTo.Focus()
        End If
    End Sub

    Private Sub txt_BaleSelection_MetersTo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_BaleSelection_MetersTo.KeyDown
        If e.KeyValue = 40 Then
            If dgv_BaleSelection.Rows.Count > 0 Then
                dgv_BaleSelection.Focus()
                dgv_BaleSelection.CurrentCell = dgv_BaleSelection.Rows(0).Cells(0)
                dgv_BaleSelection.CurrentCell.Selected = True
            Else
                txt_BaleSelection_BaleNo.Focus()
            End If
        End If
        If e.KeyValue = 38 Then txt_BaleSelection_MetersFrom.Focus()
    End Sub

    Private Sub cbo_ClothName_ToPrint_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_ClothName_ToPrint.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Cloth_Head", "Cloth_Name", "(Close_Status = 0)", "(Cloth_IdNo = 0)")
    End Sub

    Private Sub cbo_ClothName_ToPrint_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_ClothName_ToPrint.KeyDown

        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, sender, Nothing, Nothing, "Cloth_Head", "Cloth_Name", "(Close_Status = 0)", "(Cloth_IdNo = 0)")

    End Sub

    Private Sub cbo_ClothName_ToPrint_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_ClothName_ToPrint.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, sender, Nothing, "Cloth_Head", "Cloth_Name", "(Close_Status = 0)", "(Cloth_IdNo = 0)")

        If Asc(e.KeyChar) = 13 Then

            e.Handled = True

            btn_Close_ClothName_ToPrint_Click(sender, e)

        End If
    End Sub

    Private Sub cbo_ClothName_ToPrint_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_ClothName_ToPrint.KeyUp
        If e.Control = False And e.KeyValue = 17 Then
            Dim f As New Cloth_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = sender.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()
        End If
    End Sub

    Private Sub btn_ClothName_ToPrint_Selection_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_ClothName_ToPrint_Selection.Click
        If Not IsNothing(dgv_Details.CurrentCell) Then
            GetPcs_Print_ClothName_Details()
        Else
            MessageBox.Show("Select the Sl.No. and then click this button to set the printing cloth name", "DOES NOT SELECT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
        End If
    End Sub

    Private Sub GetPcs_Print_ClothName_Details()
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim Led_ID As Integer = 0
        Dim Clt_Id As Integer = 0
        Dim n As Integer = 0
        Dim sno As Integer = 0

        If Not IsNothing(dgv_Details.CurrentCell) Then

            lbl_ClothName_ToPrint_SlNo.Text = "Sl. No. : " & dgv_Details.Rows(dgv_Details.CurrentRow.Index).Cells(0).Value
            lbl_ClothName_Selected.Text = dgv_Details.Rows(dgv_Details.CurrentRow.Index).Cells(1).Value
            cbo_ClothName_ToPrint.Text = dgv_Details.Rows(dgv_Details.CurrentRow.Index).Cells(15).Value

            pnl_Back.Enabled = False
            pnl_ClothName_ToPrint.Visible = True
            If cbo_ClothName_ToPrint.Visible And cbo_ClothName_ToPrint.Enabled Then cbo_ClothName_ToPrint.Focus()

        End If



    End Sub

    Private Sub btn_Close_ClothName_ToPrint_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_ClothName_ToPrint.Click

        If Not IsNothing(dgv_Details.CurrentCell) Then
            dgv_Details.CurrentRow.Cells(15).Value = Trim(cbo_ClothName_ToPrint.Text)
        End If

        pnl_Back.Enabled = True
        pnl_ClothName_ToPrint.Visible = False
        lbl_ClothName_ToPrint_SlNo.Text = ""
        lbl_ClothName_Selected.Text = ""
        cbo_ClothName_ToPrint.Text = ""

        If Not IsNothing(dgv_Details.CurrentCell) Then
            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.CurrentRow.Cells(2)

            Else
                cbo_Transport.Focus()

            End If
        End If


    End Sub

    '-------------------------------------


    Private Sub Printing_Format_Bale_1428(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim NoofDets As Integer, NoofItems_PerPage As Integer
        Dim pFont As Font, P1fONT As Font
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim CurY As Single, TxtHgt As Single
        Dim LnAr(20) As Single, ClArr(20) As Single
        Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        Dim PpSzSTS As Boolean = False
        Dim LM As Single = 0, TM As Single = 0
        Dim PgWt As Single = 0, PrWt As Single = 0
        Dim PgHt As Single = 0, PrHt As Single = 0
        Dim bale_no As String = ""
        Dim da3 As New SqlClient.SqlDataAdapter
        Dim dt3 As New DataTable
        Dim i, j, k, s As Integer
        Dim NewCode As String = ""
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            For i = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(i).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(i)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = True
                    Exit For
                End If
            Next

        Else

            For i = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(i).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(i)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.Landscape = False
                    Exit For
                End If
            Next

        End If

        With PrintDocument1.DefaultPageSettings.Margins
            If PrintDocument1.DefaultPageSettings.Landscape = True Then
                .Left = 5
                .Right = 30
                .Top = 40
                .Bottom = 30
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            Else
                .Left = 10
                .Right = 50
                .Top = 35
                .Bottom = 40
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            End If
        End With

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'With PrintDocument1.DefaultPageSettings.PaperSize
        '    PrintWidth = (.Width / 2) - RMargin - LMargin
        '    PrintHeight = (.Height / 2) - TMargin - BMargin
        '    PageWidth = (.Width / 2) - RMargin
        '    PageHeight = (.Height / 2) - BMargin
        'End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias
        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        pFont = New Font("Calibri", 10, FontStyle.Regular)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '------ARULJOTHI EXPORTS PVT LTD (SOMANUR)
            NoofItems_PerPage = 18
        Else
            NoofItems_PerPage = 29
        End If

        Erase ClArr
        Erase LnAr
        ClArr = New Single(20) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        LnAr = New Single(20) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}


        ClArr(1) = 70 : ClArr(2) = 120 : ClArr(3) = 180 : ClArr(4) = 110 : ClArr(5) = 100
        ClArr(6) = PageWidth - (ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5))



        TxtHgt = 17 ' e.Graphics.MeasureString("A", pFont).Height  ' 20


        Try

            If prn_DetDt.Rows.Count > 0 Then

                If prn_HdMxIndx > 0 Then

                    Erase LnAr
                    LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

                    Printing_Format_Bale_1428_PageHeader(PrintDocument1, e, prn_HdDt, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClArr, prn_HdIndx)
                    CurY = CurY - 10

                    NoofDets = 0
                    Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) - 10, CurY, 1, 0, pFont)
                            NoofDets = NoofDets + 1

                            Printing_Format_Bale_1428_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, False)

                            ' prn_DetIndx = prn_DetIndx + NoofItems_PerPage

                            e.HasMorePages = True

                            Return

                        End If


                        prn_DetIndx = prn_DetIndx + 1
                        If Trim(prn_DetAr1(prn_DetIndx, 3)) <> Trim(prn_DetAr1(prn_DetIndx - 1, 3)) Then
                            CurY = CurY + 5
                            'bale_no = Trim(prn_DetAr1(prn_DetIndx, 6))  'prn_DetAr1(prn_DetMxIndx, 6)
                        End If
                        CurY = CurY + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 0), LMargin + 10, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 7), LMargin + ClArr(1) + 10, CurY, 0, 0, pFont)
                        '   Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 2), LMargin + ClArr(1) + ClArr(2) + ClArr(3) - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 2), LMargin + ClArr(1) + ClArr(2) + 10, CurY, 0, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 4), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) - 10, CurY, 1, 0, pFont)

                        If vPrnt_PackSlip_Wgt = True Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 5), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) - 10, CurY, 1, 0, pFont)


                            'If Trim(prn_DetAr1(prn_DetIndx, 3)) <> Trim(prn_DetAr1(prn_DetIndx - 1, 3)) Then
                            '    Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 3), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + 10, CurY, 0, 0, pFont)

                            'End If

                            'If Trim(cbo_RollBundle.Text) = "BALE" Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetAr1(prn_DetIndx, 8), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + 10, CurY, 0, 0, pFont)


                            'End If

                        End If




                        NoofDets = NoofDets + 1


                    Loop

                    Printing_Format_Bale_1428_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, True)

                End If

            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        e.HasMorePages = False

    End Sub

    Private Sub Printing_Format_Bale_1428_PageHeader(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdDt As DataTable, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal prn_HdIndx As Integer)
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim dt3 As New DataTable
        Dim dt4 As New DataTable
        Dim p1Font As Font
        Dim strHeight As Single
        Dim Cmp_Add As String = ""
        Dim C1 As Single, W1, W2 As Single, S1, S2 As Single
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String, Cmp_Add3 As String, City As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_PanNo As String
        Dim Cmp_State As String, Cmp_StateCode As String, Cmp_GSTIN_No As String, Cmp_EMail As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String

        Dim Desc As String, Cmp_PanCap As String
        Dim Cmp_GSTIN_Cap As String

        PageNo = PageNo + 1

        CurY = TMargin + 30

        'da2 = New SqlClient.SqlDataAdapter("select a.*, b.Ledger_Name, c.Ledger_Name, d.Company_Description as Transport_Name from ClothSales_Invoice_Head a  INNER JOIN Ledger_Head b ON b.Ledger_IdNo = a.Ledger_Idno LEFT OUTER JOIN Ledger_Head c ON c.Ledger_IdNo = a.Transport_IdNo LEFT OUTER JOIN Company_Head d ON d.Company_IdNo = a.Company_IdNo where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Invoice_Code = '" & Trim(EntryCode) & "' Order by a.For_OrderBy", con)
        'da2.Fill(dt2)
        'If dt2.Rows.Count > NoofItems_PerPage Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        'End If
        'dt2.Clear()

        prn_Count = prn_Count + 1

        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        'Common_Procedures.Print_To_PrintDocument(e, "BALE PACKING DETAILS", LMargin, CurY - TxtHgt - 5, 2, PrintWidth, p1Font)

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY
        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = "" : Cmp_Add3 = "" : City = ""

        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_PanNo = ""
        Cmp_State = "" : Cmp_StateCode = "" : Cmp_GSTIN_No = "" : Cmp_EMail = ""


        Desc = ""
        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_PanNo = "" : Cmp_EMail = "" : Cmp_PanCap = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""

        Desc = prn_HdDt.Rows(0).Item("Company_Description").ToString
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString

        If Trim(prn_HdDt.Rows(0).Item("Company_Factory_Address1").ToString) <> "" Or Trim(prn_HdDt.Rows(0).Item("Company_Factory_Address2").ToString) <> "" Or Trim(prn_HdDt.Rows(0).Item("Company_Factory_Address3").ToString) <> "" Or Trim(prn_HdDt.Rows(0).Item("Company_Factory_Address4").ToString) <> "" Then
            Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
            Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Factory_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Factory_Address2").ToString & " " & prn_HdDt.Rows(0).Item("Company_Factory_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Factory_Address4").ToString

        Else
            Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString

        End If

        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "Phone : " & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO : " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO : " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_PanNo").ToString) <> "" Then
            Cmp_PanCap = "PAN : "
            Cmp_PanNo = prn_HdDt.Rows(0).Item("Company_PanNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_EMail = "Email : " & prn_HdDt.Rows(0).Item("Company_EMail").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        'If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
        '    Cmp_GSTIN_No = "GSTIN : "
        '    Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        'End If

        CurY = CurY + TxtHgt - 5
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height




        'Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString

        ''Cmp_Add1 = "Regd. Off : " & prn_HdDt.Rows(0).Item("Company_Address1").ToString
        ''Cmp_Add2 = "Factory : " & prn_HdDt.Rows(0).Item("Company_Address2").ToString

        'If InStr(1, Trim(UCase(Cmp_Name)), "UNITED") > 0 And InStr(1, Trim(UCase(Cmp_Name)), "WEAVES") > 0 Then
        '    Cmp_Add1 = "Regd. Off : " & prn_HdDt.Rows(0).Item("Company_Address1").ToString
        '    Cmp_Add2 = "Factory : " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        'Else
        '    Cmp_Add1 = "" & prn_HdDt.Rows(0).Item("Company_Address1").ToString
        '    Cmp_Add2 = "" & prn_HdDt.Rows(0).Item("Company_Address2").ToString

        'End If
        'Cmp_Add3 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        'If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
        '    Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        'End If
        'If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
        '    Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        'End If
        'If Trim(prn_HdDt.Rows(0).Item("Company_PanNo").ToString) <> "" Then
        '    Cmp_CstNo = "PAN NO.: " & prn_HdDt.Rows(0).Item("Company_PanNo").ToString
        'End If
        'If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
        '    Cmp_EMail = "EMAIL ID : " & prn_HdDt.Rows(0).Item("Company_EMail").ToString
        'End If

        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_No = "GSTIN :" & prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        'If Trim(prn_HdDt.Rows(0).Item("Company_City").ToString) <> "" Then
        '    City = "" & prn_HdDt.Rows(0).Item("Company_City").ToString
        'End If
        'CurY = CurY + TxtHgt - 10
        'p1Font = New Font("Calibri", 18, FontStyle.Bold)

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1186" Then
        '    If InStr(1, Trim(UCase(Cmp_Name)), "UNITED") > 0 And InStr(1, Trim(UCase(Cmp_Name)), "WEAVES") > 0 Then
        '        e.Graphics.DrawImage(DirectCast(Global.Textile.My.Resources.Resources.united_weaves_logo_png, Drawing.Image), PageWidth - 150, CurY, 120, 100)
        '    End If
        'End If

        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)

        ' Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin + 10, CurY, 0, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin + 10, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin + 10, CurY, 0, PrintWidth, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

        If Trim(Cmp_Add3) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add3 & "," & City, LMargin + 10, CurY, 2, PrintWidth, pFont)
        End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, LMargin + 10, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Cmp_EMail, LMargin + 10, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 12
        p1Font = New Font("Calibri", 16, FontStyle.Bold)
        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        CurY = CurY + TxtHgt - 12

        'If Common_Procedures.settings.CustomerCode = "1186" Then
        '    Common_Procedures.Print_To_PrintDocument(e, "PACKING LIST", LMargin, CurY, 2, PrintWidth, p1Font)
        'Else
        '    Common_Procedures.Print_To_PrintDocument(e, "PIECE DELIVERY", LMargin, CurY, 2, PrintWidth, p1Font)
        'End If
        Common_Procedures.Print_To_PrintDocument(e, "DELIVERY CHALLAN CUM PACKING LIST", LMargin, CurY, 2, PrintWidth, p1Font)

        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + TxtHgt + 12
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3)
        W1 = e.Graphics.MeasureString("INVOICE DATE  : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO     :    ", pFont).Width
        W2 = e.Graphics.MeasureString("Despatch To   : ", pFont).Width
        S2 = e.Graphics.MeasureString("Sent Through  : ", pFont).Width


        CurY = CurY + 5
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_mainName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 14, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "PARTY P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, "Agent Name", LMargin + C1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("Party_OrderDate").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "PARTY P.O DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, " GST : " & prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        End If
        Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("JJ_FormNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO ", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        Try

            CurY = CurY + 5
            Common_Procedures.Print_To_PrintDocument(e, "QUALITY", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + W1, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(0).Item("Cloth_name").ToString, LMargin + W1 + 25, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "WEAVE :  " & prn_DetDt.Rows(0).Item("weave").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + 40, CurY, 0, 0, pFont)

            Common_Procedures.Print_To_PrintDocument(e, "Pinning :  " & vPrnDet.Rows(0).Item("Fold_Perc").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 40, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(2) = CurY

            CurY = CurY + TxtHgt - 10
            Common_Procedures.Print_To_PrintDocument(e, "SL NO", LMargin, CurY, 2, ClAr(1), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "LOOM NO", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PIECE No", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)

            If vPrnt_PackSlip_Wgt = True Then
                Common_Procedures.Print_To_PrintDocument(e, "NET WGT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "GMS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
            End If


            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub Printing_Format_Bale_1428_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal prn_HdIndx As Integer, ByVal is_LastPage As Boolean)
        Dim I As Integer
        Dim p1Font As Font
        Dim Cmp_Name As String
        Try

            For I = NoofDets + 1 To NoofItems_PerPage
                CurY = CurY + TxtHgt
            Next

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(5) = CurY

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(2))

            e.Graphics.DrawLine(Pens.Black, PageWidth, CurY, PageWidth, LnAr(2))


            If is_LastPage = True Then

                CurY = CurY + TxtHgt - 10

                Common_Procedures.Print_To_PrintDocument(e, "TOTAL : ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalMtrs), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 2, CurY, 1, 0, pFont)

                If vPrnt_PackSlip_Wgt = True Then
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalWgt), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 2, CurY, 1, 0, pFont)

                    If Val(prn_TotalWgt) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, Format((Val(prn_TotalWgt) / Val(prn_TotalWgt)), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 0, 0, pFont)
                    End If

                End If

                Common_Procedures.Print_To_PrintDocument(e, "TOTAL PCS : ", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 70, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotalPcs), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 25, CurY, 1, 0, pFont)

                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY + 24, LMargin + ClAr(1), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY + 24, LMargin + ClAr(1) + ClAr(2), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(5))

                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(5))



            End If
            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(6) = CurY
            'If Common_Procedures.settings.CustomerCode = "1186" Then
            CurY = CurY + TxtHgt - 10
            Dim len1 As Integer = 0

            p1Font = New Font("Calibri", 9, FontStyle.Underline Or FontStyle.Bold)
            len1 = e.Graphics.MeasureString(" Date     : ", pFont).Width
            CurY = CurY + TxtHgt - 10
            Common_Procedures.Print_To_PrintDocument(e, "GOODS DESCRIPTION : ", LMargin + 10, CurY, 0, 0, p1Font)
            CurY = CurY + TxtHgt + 5
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 5, CurY, 1, 0, p1Font)


            'pFont = New Font("Calibri", 9, FontStyle.Regular)
            'Common_Procedures.Print_To_PrintDocument(e, "Ref No   ", LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, ":  " & prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + len1 + 10, CurY, 0, 0, pFont)

            Common_Procedures.Print_To_PrintDocument(e, "1. Uncalendered Grey Fabrics ", LMargin + 10, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt + 5
            'Common_Procedures.Print_To_PrintDocument(e, "Entry  ", LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, ":  __________________", LMargin + len1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "2. Goods Not for Sale. Goods Sent after Job Work Completion", LMargin + 10, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt + 5

            'Common_Procedures.Print_To_PrintDocument(e, "Date ", LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, ":  __________________ ", LMargin + len1 + 10, CurY, 0, 0, pFont)
            CurY = CurY + TxtHgt + 5

            'Common_Procedures.Print_To_PrintDocument(e, "Time   ", LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, ":  __________________ ", LMargin + len1 + 10, CurY, 0, 0, pFont)

            ' Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)

            Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + len1 + ClAr(1) + ClAr(2) + ClAr(3) + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 5, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 10
            'End If


            'e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            'p1Font = New Font("Calibri", 12, FontStyle.Bold)
            'Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
            'Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 5, CurY, 1, 0, p1Font)

            'CurY = CurY + TxtHgt + 5

            'CurY = CurY + TxtHgt + 5
            'CurY = CurY + TxtHgt + 5

            'Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 10, CurY, 0, 0, pFont)

            'Common_Procedures.Print_To_PrintDocument(e, "Prepared by", LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
            'If Val(Common_Procedures.User.IdNo) <> 1 Then
            '    Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
            'End If




            'Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 5, CurY, 1, 0, pFont)


            'CurY = CurY + TxtHgt + 5

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            ' e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(6))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(6))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(6))
            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)


        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub btn_BaleDetails_Click(sender As Object, e As EventArgs) Handles btn_BaleDetails.Click

        dgv_BaleDetails.Left = lbl_DcNo.Left
        dgv_BaleDetails.Top = btn_BaleDetails.Top

        If dgv_BaleDetails.Visible = True Then
            dgv_BaleDetails.Visible = False
        Else
            dgv_BaleDetails.Visible = True
            dgv_BaleDetails.BringToFront()
        End If

    End Sub

    Private Sub Set_Max_Delivery_DetailsSlNo(ByVal RowNo As Integer, ByVal DetSlNo_ColNo As Integer)
        Dim MaxSlNo As Integer = 0
        Dim i As Integer

        MaxSlNo = 0
        With dgv_Details
            For i = 0 To .Rows.Count - 1
                If Val(.Rows(i).Cells(DetSlNo_ColNo).Value) > Val(MaxSlNo) Then
                    MaxSlNo = Val(.Rows(i).Cells(DetSlNo_ColNo).Value)
                End If
            Next
            .Rows(RowNo).Cells(DetSlNo_ColNo).Value = Val(MaxSlNo) + 1
        End With

    End Sub

    Private Sub Show_ClothInvoice_Selection()
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Dt2 As New DataTable
        Dim i As Integer, j As Integer, n As Integer, SNo As Integer
        Dim LedIdNo As Integer
        Dim NewCode As String
        Dim CompIDCondt As String
        Dim Ent_Pcs As Single = 0
        Dim Ent_Mtrs As Single = 0, Ent_Amt As Single = 0, Ent_Rate As Single = 0


        If Trim(UCase(cbo_Type.Text)) <> "INVOICE" Then
            Exit Sub
        End If

        LedIdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_PartyName.Text)

        If LedIdNo = 0 Then
            MessageBox.Show("Invalid Party Name", "DOES NOT SELECT CLOTH SALES DELIVERY...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If cbo_PartyName.Enabled And cbo_PartyName.Visible Then cbo_PartyName.Focus()
            Exit Sub
        End If

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        CompIDCondt = "(a.company_idno = " & Str(Val(lbl_Company.Tag)) & ")"
        If Val(Common_Procedures.settings.EntrySelection_Combine_AllCompany) = 1 Then
            CompIDCondt = ""
        End If

        With dgv_InvoiceSelection

            .Rows.Clear()

            SNo = 0

            Da = New SqlClient.SqlDataAdapter("select tCID.*, tCIH.net_amount, isnull(tCIH.Delivery_Against_Invoice_Code,'') as Delivery_Against_Invoice_Code, tQ.Cloth_Name, tCTYP.ClothType_Name, tAG.Ledger_Name as AgentName, isnull(tCSDD.ClothSales_Delivery_SlNo,0) as ENT_ClothSales_Delivery_SlNo from ClothSales_Invoice_Details tCID INNER JOIN ClothSales_Invoice_Head tCIH ON tCIH.ClothSales_Invoice_Code = tCID.ClothSales_Invoice_Code INNER JOIN Cloth_Head tQ ON tCID.Cloth_IdNo = tQ.Cloth_IdNo LEFT OUTER JOIN ClothType_Head tCTYP ON tCID.ClothType_IdNo = tCTYP.ClothType_IdNo LEFT OUTER JOIN lEDGER_Head tAG ON tCIH.Agent_IdNo = tAG.Ledger_IdNo LEFT OUTER JOIN ClothSales_Delivery_Details tCSDD ON tCSDD.ClothSales_Invoice_Code = tCID.ClothSales_Invoice_Code and tCSDD.ClothSales_Invoice_SlNo = tCID.ClothSales_Invoice_SlNo " &
                                                " Where " & CompIDCondt & IIf(Trim(CompIDCondt) <> "", " and ", "") & " tCIH.ledger_Idno = " & Str(Val(LedIdNo)) & " and isnull(tCIH.Delivery_Against_Invoice_Status,0) = 1 and ( isnull(tCIH.Delivery_Against_Invoice_Code,'') = '' or isnull(tCIH.Delivery_Against_Invoice_Code,'') = '" & Trim(Pk_Condition) & Trim(NewCode) & "' ) order by tCIH.Delivery_Against_Invoice_Code Desc, tCIH.ClothSales_Invoice_Date, tCIH.for_orderby, tCIH.ClothSales_Invoice_No, tCID.Sl_No", con)
            Dt1 = New DataTable
            Da.Fill(Dt1)

            If Dt1.Rows.Count > 0 Then

                For i = 0 To Dt1.Rows.Count - 1

                    n = .Rows.Add()

                    SNo = SNo + 1

                    .Rows(n).Cells(0).Value = Val(SNo)
                    .Rows(n).Cells(1).Value = Dt1.Rows(i).Item("ClothSales_Invoice_No").ToString
                    .Rows(n).Cells(2).Value = Format(Convert.ToDateTime(Dt1.Rows(i).Item("ClothSales_Invoice_Date").ToString), "dd-MM-yyyy")
                    .Rows(n).Cells(3).Value = Dt1.Rows(i).Item("AgentName").ToString
                    .Rows(n).Cells(4).Value = Dt1.Rows(i).Item("Cloth_Name").ToString

                    .Rows(n).Cells(5).Value = Dt1.Rows(i).Item("ClothType_Name").ToString
                    .Rows(n).Cells(6).Value = Val(Dt1.Rows(i).Item("Fold_Perc").ToString)
                    .Rows(n).Cells(7).Value = Val(Dt1.Rows(i).Item("Bales").ToString)
                    .Rows(n).Cells(8).Value = Dt1.Rows(i).Item("Bales_Nos").ToString

                    .Rows(n).Cells(9).Value = Val(Dt1.Rows(i).Item("Pcs").ToString)
                    .Rows(n).Cells(10).Value = Format(Val(Dt1.Rows(i).Item("Meters").ToString), "########0.00")
                    .Rows(n).Cells(11).Value = Common_Procedures.Currency_Format(Val(Dt1.Rows(i).Item("Net_Amount").ToString))

                    .Rows(n).Cells(12).Value = ""
                    If Trim(Dt1.Rows(i).Item("Delivery_Against_Invoice_Code").ToString) <> "" Then
                        .Rows(n).Cells(12).Value = "1"
                        For j = 0 To .ColumnCount - 1
                            .Rows(n).Cells(j).Style.ForeColor = Color.Red
                        Next
                    End If

                    .Rows(n).Cells(13).Value = Dt1.Rows(i).Item("ClothSales_Invoice_Code").ToString
                    .Rows(n).Cells(14).Value = Dt1.Rows(i).Item("ClothSales_Invoice_SlNo").ToString
                    .Rows(n).Cells(15).Value = Format(Val(Dt1.Rows(i).Item("Rate").ToString), "########0.00")
                    .Rows(n).Cells(16).Value = Dt1.Rows(i).Item("ENT_ClothSales_Delivery_SlNo").ToString


                Next

            End If
            Dt1.Clear()

        End With

        pnl_InvoiceSelection.Visible = True
        pnl_Back.Enabled = False
        If dgv_InvoiceSelection.Enabled And dgv_InvoiceSelection.Visible Then
            dgv_InvoiceSelection.Focus()
            If dgv_InvoiceSelection.Rows.Count > 0 Then
                dgv_InvoiceSelection.CurrentCell = dgv_InvoiceSelection.Rows(0).Cells(0)
                dgv_InvoiceSelection.CurrentCell.Selected = True
            End If
        End If

    End Sub

    Private Sub dgv_InvoiceSelection_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_InvoiceSelection.CellClick
        Select_Invoice(e.RowIndex)
    End Sub

    Private Sub dgv_InvoiceSelection_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_InvoiceSelection.KeyDown

        Try
            If e.KeyCode = Keys.Enter Or e.KeyCode = Keys.Space Then
                If dgv_InvoiceSelection.CurrentCell.RowIndex >= 0 Then

                    Select_Invoice(dgv_InvoiceSelection.CurrentCell.RowIndex)

                    e.Handled = True

                End If
            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "ERROR WHILE INVOICE SELECTION KEYDOWN...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try


    End Sub

    Private Sub Select_Invoice(ByVal RwIndx As Integer)
        Dim i As Integer = 0
        Dim j As Integer = 0
        Dim vINVCODE As String

        Try

            With dgv_InvoiceSelection

                If .RowCount > 0 And RwIndx >= 0 Then

                    vINVCODE = .Rows(RwIndx).Cells(13).Value

                    For i = 0 To .Rows.Count - 1

                        If Trim(UCase(vINVCODE)) = Trim(UCase(.Rows(i).Cells(13).Value)) Then

                            .Rows(i).Cells(12).Value = (Val(.Rows(i).Cells(12).Value) + 1) Mod 2

                            If Val(.Rows(i).Cells(12).Value) = 1 Then
                                For j = 0 To .ColumnCount - 1
                                    .Rows(i).Cells(j).Style.ForeColor = Color.Red
                                Next

                            Else
                                For j = 0 To .Columns.Count - 1
                                    .Rows(i).Cells(j).Style.ForeColor = Color.Black
                                Next

                            End If

                        End If
                    Next i


                End If

            End With

        Catch ex As Exception
            MessageBox.Show(ex.Message, "ERROR WHILE SELECT INVOICE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub btn_Close_InvoiceSelection_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_InvoiceSelection.Click
        Try
            Close_ClothInvoice_Selection()
        Catch ex As Exception
            MessageBox.Show(ex.Message, "ERROR WHILE CLOSE SELECTION...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
        End Try
    End Sub

    Private Sub Close_ClothInvoice_Selection()
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim n As Integer = 0
        Dim SNo As Integer = 0
        Dim i As Integer = 0
        Dim j As Integer = 0
        Dim vINVCODE As String
        Dim vDUPINVCODE As String

        Try

            dgv_Details.Rows.Clear()
            vINVCODE = ""
            vDUPINVCODE = ""
            lbl_InvoiceNo.Text = ""

            For i = 0 To dgv_InvoiceSelection.RowCount - 1

                If Val(dgv_InvoiceSelection.Rows(i).Cells(12).Value) = 1 Then

                    If InStr(1, Trim(UCase(vDUPINVCODE)), "~" & Trim(UCase(dgv_InvoiceSelection.Rows(i).Cells(13).Value & "~"))) = 0 Then
                        lbl_InvoiceNo.Text = Trim(lbl_InvoiceNo.Text) & IIf(Trim(lbl_InvoiceNo.Text) <> "", ", ", "") & dgv_InvoiceSelection.Rows(i).Cells(1).Value
                        vDUPINVCODE = Trim(vDUPINVCODE) & "~" & dgv_InvoiceSelection.Rows(i).Cells(13).Value & "~"
                        If Trim(vINVCODE) = "" Then
                            vINVCODE = dgv_InvoiceSelection.Rows(i).Cells(13).Value
                        End If
                    End If

                    n = dgv_Details.Rows.Add()

                    dgv_Details.Rows(n).Cells(0).Value = Val(SNo)
                    dgv_Details.Rows(n).Cells(1).Value = dgv_InvoiceSelection.Rows(i).Cells(4).Value
                    dgv_Details.Rows(n).Cells(2).Value = dgv_InvoiceSelection.Rows(i).Cells(5).Value
                    dgv_Details.Rows(n).Cells(3).Value = dgv_InvoiceSelection.Rows(i).Cells(6).Value
                    dgv_Details.Rows(n).Cells(4).Value = dgv_InvoiceSelection.Rows(i).Cells(7).Value
                    dgv_Details.Rows(n).Cells(5).Value = dgv_InvoiceSelection.Rows(i).Cells(8).Value
                    dgv_Details.Rows(n).Cells(6).Value = dgv_InvoiceSelection.Rows(i).Cells(9).Value
                    dgv_Details.Rows(n).Cells(7).Value = Format(Val(dgv_InvoiceSelection.Rows(i).Cells(10).Value), "########0.00")
                    dgv_Details.Rows(n).Cells(8).Value = ""
                    dgv_Details.Rows(n).Cells(9).Value = 0

                    dgv_Details.Rows(n).Cells(10).Value = dgv_InvoiceSelection.Rows(i).Cells(16).Value
                    If Val(dgv_Details.Rows(n).Cells(10).Value) = 0 Then
                        Set_Max_Delivery_DetailsSlNo(n, 10)
                    End If

                    dgv_Details.Rows(n).Cells(11).Value = 0
                    dgv_Details.Rows(n).Cells(12).Value = ""
                    dgv_Details.Rows(n).Cells(13).Value = Format(Val(dgv_InvoiceSelection.Rows(i).Cells(15).Value), "#######0.00")
                    dgv_Details.Rows(n).Cells(14).Value = ""
                    dgv_Details.Rows(n).Cells(15).Value = ""
                    dgv_Details.Rows(n).Cells(16).Value = dgv_InvoiceSelection.Rows(i).Cells(13).Value
                    dgv_Details.Rows(n).Cells(17).Value = dgv_InvoiceSelection.Rows(i).Cells(14).Value

                End If

            Next

            Total_Calculation()

            Da1 = New SqlClient.SqlDataAdapter("Select a.* from ClothSales_Invoice_Head a where a.ClothSales_Invoice_Code = '" & Trim(vINVCODE) & "'", con)
            Dt1 = New DataTable
            Da1.Fill(Dt1)

            If Dt1.Rows.Count > 0 Then
                txt_OrderNo.Text = Dt1.Rows(0).Item("Party_OrderNo").ToString
                txt_Order_Date.Text = Dt1.Rows(0).Item("Party_OrderDate").ToString

                cbo_Agent.Text = Common_Procedures.Ledger_IdNoToName(con, Val(Dt1.Rows(0).Item("Agent_IdNo").ToString))
                cbo_Transport.Text = Common_Procedures.Ledger_IdNoToName(con, Val(Dt1.Rows(0).Item("Transport_IdNo").ToString))
                cbo_DeliveryTo.Text = Common_Procedures.Ledger_IdNoToName(con, Val(Dt1.Rows(0).Item("DeliveryTo_idno").ToString))
                cbo_DespTo.Text = Dt1.Rows(0).Item("Despatch_To").ToString
                cbo_Through.Text = Dt1.Rows(0).Item("Through_Name").ToString

                txt_LrNo.Text = Dt1.Rows(0).Item("Lr_No").ToString
                msk_LrDate.Text = Dt1.Rows(0).Item("Lr_Date").ToString

                txt_OrderNo.Text = Dt1.Rows(0).Item("Party_OrderNo").ToString
                txt_Order_Date.Text = Dt1.Rows(0).Item("Party_OrderDate").ToString

                txt_DelvAdd1.Text = Dt1.Rows(0).Item("Delivery_Address1").ToString
                txt_DelvAdd2.Text = Dt1.Rows(0).Item("Delivery_Address2").ToString

                cbo_RollBundle.Text = Dt1.Rows(0).Item("Packing_Type").ToString

                cbo_Vechile.Text = Dt1.Rows(0).Item("Vechile_No").ToString
                'cbo_Godown.Text = Common_Procedures.Ledger_IdNoToName(con, Val(Dt1.Rows(0).Item("WareHouse_IdNo").ToString))
                txt_EWay_Bill_No.Text = Dt1.Rows(0).Item("Electronic_Reference_No").ToString

            End If

            Dt1.Clear()
            Da1.Dispose()
            Dt1.Dispose()




            pnl_Back.Enabled = True
            pnl_InvoiceSelection.Visible = False
            If txt_OrderNo.Enabled And txt_OrderNo.Visible Then txt_OrderNo.Focus() Else cbo_Through.Focus()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "ERROR WHILE CLOSE INVOICE SELECTION...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub
    Private Sub btn_EWayBIll_Generation_Click(sender As Object, e As EventArgs) Handles btn_EWayBIll_Generation.Click

        btn_GENERATEEWB.Enabled = True
        Grp_EWB.Visible = True
        Grp_EWB.BringToFront()
        Grp_EWB.Left = (Me.Width - pnl_Back.Width) / 2 + 160
        Grp_EWB.Top = (Me.Height - pnl_Back.Height) / 2 + 150

    End Sub

    Private Sub btn_Close_EWB_Click(sender As Object, e As EventArgs) Handles btn_Close_EWB.Click
        Grp_EWB.Visible = False
    End Sub
    Private Sub btn_CheckConnectivity_Click(sender As Object, e As EventArgs) Handles btn_CheckConnectivity.Click
        con = New SqlClient.SqlConnection(Common_Procedures.Connection_String)
        con.Open()

        'Dim einv As New eInvoice(Val(lbl_Company.Tag))
        'einv.GetAuthToken(rtbEWBResponse)

        Dim ewb As New EWB(Val(lbl_Company.Tag))
        EWB.GetAuthToken(rtbEWBResponse)
    End Sub

    Private Sub btn_GENERATEEWB_Click(sender As Object, e As EventArgs) Handles btn_GENERATEEWB.Click

        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable

        con = New SqlClient.SqlConnection(Common_Procedures.Connection_String)
        con.Open()

        '   Dim NewCode As String = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)
        Dim NewCode As String = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Dim da As New SqlClient.SqlDataAdapter("Select EwayBill_No from ClothSales_Delivery_Head where ClothSales_Delivery_Code = '" & NewCode & "'", con)
        Dim dt As New DataTable

        da.Fill(dt)

        If dt.Rows.Count = 0 Then
            MessageBox.Show("Please Save the Invoice before proceeding to generate EWB", "Please SAVE", MessageBoxButtons.OKCancel)
            dt.Clear()
            Exit Sub
        End If

        If Not IsDBNull(dt.Rows(0).Item(0)) Then
            If Len(Trim(dt.Rows(0).Item(0))) > 0 Then
                MessageBox.Show("EWB has been generated for this invoice already", "Redundant Request", MessageBoxButtons.OKCancel)
                dt.Clear()
                Exit Sub
            End If
        End If

        dt.Clear()

        Dim CMD As New SqlClient.SqlCommand
        CMD.Connection = con



        CMD.CommandText = "Delete from EWB_Head Where InvCode = '" & NewCode & "'"
        CMD.ExecuteNonQuery()


        CMD.CommandText = "Insert into EWB_Head ([SupplyType]  ,[SubSupplyType]  , [SubSupplyDesc]  ,[DocType]  ,	[EWBGenDocNo]                           ,[EWBDocDate]        ,      [FromGSTIN]       , [FromTradeName]  ,                      [FromAddress1]   ,          [FromAddress2]            , [FromPlace]     ,[FromPINCode]     ,   [FromStateCode] ,    [ActualFromStateCode] ,     [ToGSTIN]       ,[ToTradeName],                                                                 [ToAddress1]                                                                        ,                                                                           [ToAddress2]                                                                     ,                                          [ToPlace]                                           ,                                               [ToPINCode]                          ,   [ToStateCode] ,                         [ActualToStateCode]                                                        ,[TransactionType],         [OtherValue]    ,	[Total_value]           ,	[CGST_Value] ,  [SGST_Value]  , [IGST_Value]     ,	[CessValue],[CessNonAdvolValue],    [TransporterID]    ,[TransporterName]   ,[TransportDOCNo]       ,[TransportDOCDate]    ,    [TotalInvValue]    ,    [TransMode]                                                               ,[Distance]   , [VehicleNo]      ,[VehicleType]   ,        [InvCode],                     [ShippedToGSTIN],          [ShippedToTradeName] )    " &
                        "SELECT               'O'              , '1'             ,   'Bill Of Supply'              ,    'BIL'    , a.ClothSales_Delivery_No ,a.ClothSales_Delivery_Date          , C.Company_GSTINNo,      C.Company_Name   ,C.Company_Address1+C.Company_Address2,c.Company_Address3+C.Company_Address4,C.Company_City , C.Company_PinCode   ,   FS.State_Code           ,FS.State_Code    ,L.Ledger_GSTINNo,    L.Ledger_MainName, (case when a.DeliveryTo_IdNo <> 0 then tDELV.Ledger_Address1+tDELV.Ledger_Address2 else  L.Ledger_Address1+L.Ledger_Address2 end) as deliveryaddress1,  (case when a.DeliveryTo_IdNo <> 0 then tDELV.Ledger_Address3+tDELV.Ledger_Address4 else  L.Ledger_Address3+L.Ledger_Address4 end) as deliveryaddress2, (case when a.DeliveryTo_IdNo <> 0 then tDELV.City_Town else  L.City_Town end) as city_town_name, (case when a.DeliveryTo_IdNo <> 0 then tDELV.Pincode else  L.Pincode end) as pincodee, TS.State_Code, (case when a.DeliveryTo_IdNo <> 0 then TDCS.State_Code else TS.State_Code end) as actual_StateCode,            1     ,      a.RoundOff_Amount  , A.Total_Taxable_Amount    , A.CGST_Amount  ,  A.SGST_Amount , A.IGST_Amount    ,   0         ,0                   , t.Ledger_GSTINNo  ,        t.Ledger_Name ,     Null as LR_No        ,Null as LR_Date     ,    a.Net_Amount       , '1'  AS TrMode , (CASE WHEN a.DeliveryTo_IdNo <> 0 THEN  tDELV.Distance ELSE L.Distance END), a.Vechile_No,         'R',         '" & Trim(NewCode) & "', tDELV.Ledger_GSTINNo as ShippedTo_GSTIN, tDELV.Ledger_MainName as ShippedTo_LedgerName   " &
                        "from ClothSales_Delivery_Head a  " &
                        "inner Join Company_Head C on a.Company_IdNo = C.Company_IdNo  " &
                        "Inner Join Ledger_Head L ON a.Ledger_IdNo = L.Ledger_IdNo  " &
                        "Left Outer Join Ledger_Head tDELV on (case  when a.DeliveryTo_IdNo <> 0 then a.DeliveryTo_IdNo else a.Ledger_IdNo end) = tDELV.Ledger_IdNo  " &
                        "left Outer Join Ledger_Head T on a.Transport_IdNo = T.Ledger_IdNo  " &
                        "Left Outer Join State_Head FS On C.Company_State_IdNo = fs.State_IdNo  " &
                        "left Outer Join State_Head TS on L.Ledger_State_IdNo = TS.State_IdNo  " &
                        "left Outer Join State_Head TDCS on tDELV.Ledger_State_IdNo = TDCS.State_IdNo  where a.ClothSales_Delivery_Code ='" & Trim(NewCode) & "'"
        CMD.ExecuteNonQuery()


        'vSgst = 

        'CMD.CommandText = " Update EWB_Head Set CGST_Value = ( (Total_value * 5 / 100 ) / 2 ) , SGST_Value = ( (Total_value * 5 / 100 ) / 2 ) , TotalInvValue = ( Total_value + SGST_Value + CGST_Value )  where InvCode = '" & Trim(NewCode) & "' "
        'CMD.ExecuteNonQuery()


        'CMD.CommandText = " Update EWB_Head Set TotalInvValue = ( Total_value + SGST_Value + CGST_Value )  where InvCode = '" & Trim(NewCode) & "' "
        'CMD.ExecuteNonQuery()

        Dim vCgst_Amt As String = 0
        Dim vSgst_Amt As String = 0
        Dim vIgst_AMt As String = 0

        CMD.CommandText = "Delete from EWB_Details Where InvCode = '" & NewCode & "'"
        CMD.ExecuteNonQuery()

        Dim dt1 As New DataTable

        da = New SqlClient.SqlDataAdapter(" Select  I.Cloth_Name,  IG.ItemGroup_Name  , IG.Item_HSN_Code,( Case When Lh.Ledger_GSTINNo <> '' Then (IG.Item_GST_Percentage ) else 0 end ) , sum(SD.Meters * SD.RATE) As TaxableAmt,sum(SD.Meters) as Qty, 1 , 'MTR' AS Units , tz.Company_State_IdNo , Lh.Ledger_State_Idno   " &
                                          " from ClothSales_Delivery_Details SD Inner Join ClothSales_Delivery_Head a On a.ClothSales_Delivery_Code = sd.ClothSales_Delivery_Code Inner Join Cloth_Head I On SD.Cloth_IdNo = I.Cloth_IdNo Inner Join ItemGroup_Head IG on I.ItemGroup_IdNo = IG.ItemGroup_IdNo " &
                                          " INNER Join Ledger_Head Lh ON Lh.Ledger_Idno = a.DeliveryTo_IdNo INNER JOIN Company_Head tz On tz.Company_Idno = a.Company_Idno  Where SD.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' Group By " &
                                          " I.Cloth_Name,IG.ItemGroup_Name,IG.Item_HSN_Code,IG.ItemGroup_Name ,IG.Item_HSN_Code,IG.Item_GST_Percentage, Lh.Ledger_Type , Lh.Ledger_GSTINNo , tz.Company_State_IdNo , Lh.Ledger_State_Idno", con)
        dt1 = New DataTable
        da.Fill(dt1)


        For I = 0 To dt1.Rows.Count - 1



            '    If dt1.Rows(I).Item("Company_State_IdNo") = dt1.Rows(I).Item("Ledger_State_Idno") Then

            '        If Val(dt1.Rows(I).Item(3).ToString) <> 0 Then
            '            vCgst_Amt = ((dt1.Rows(I).Item(4) * Val(dt1.Rows(I).Item(3).ToString) / 100) / 2)
            '            vSgst_Amt = vCgst_Amt
            '            vIgst_AMt = 0
            '        Else
            '            vCgst_Amt = 0
            '            vSgst_Amt = 0
            '            vIgst_AMt = 0
            '        End If
            '    Else
            '        If Val(dt1.Rows(I).Item(3).ToString) <> 0 Then
            '            vIgst_AMt = (dt1.Rows(I).Item(4) * Val(dt1.Rows(I).Item(3).ToString) / 100)
            '            vCgst_Amt = 0
            '            vSgst_Amt = 0
            '        Else
            '            vIgst_AMt = 0
            '            vCgst_Amt = 0
            '            vSgst_Amt = 0
            '        End If

            '    End If

            CMD.CommandText = "Insert into EWB_Details ([SlNo]                               , [Product_Name]           ,   	[Product_Description]     ,	        [HSNCode]                 ,     	[Quantity]             ,     [QuantityUnit] ,                 Tax_Perc              ,	[CessRate]         ,	[CessNonAdvol]  ,	[TaxableAmount]               , InvCode      ) " &
                              " values                 (" & dt1.Rows(I).Item(6).ToString & ",'" & dt1.Rows(I).Item(0) & "', '" & dt1.Rows(I).Item(1) & "', '" & dt1.Rows(I).Item(2) & "', " & dt1.Rows(I).Item(5).ToString & ",         'MTR'          ," & dt1.Rows(I).Item(3).ToString & ", 0                  , 0                   ," & dt1.Rows(I).Item(4) & ",'" & NewCode & "'   ) "

            CMD.ExecuteNonQuery()

        Next




        '    da1 = New SqlClient.SqlDataAdapter(" Select  * from EWB_Details Ewd  Where Ewd.InvCode = '" & Trim(NewCode) & "' and (Ewd.Cgst_Value <> 0 or Ewd.Sgst_Value <> 0 or Ewd.Igst_Value <> 0) ", con)
        'dt2 = New DataTable
        'da1.Fill(dt2)

        'If dt2.Rows.Count > 0 Then

        '    If dt2.Rows(0).Item("Igst_Value") <> 0 Then

        '        CMD.CommandText = " Update EWB_Head Set IGST_Value = (select sum(Ed.Igst_Value) from EWB_Details Ed  where Ed.InvCode = '" & Trim(NewCode) & "' and Ed.Igst_Value <> 0) "
        '        CMD.ExecuteNonQuery()
        '    Else
        '        CMD.CommandText = " Update EWB_Head Set CGST_Value = (select sum(Ed.Cgst_Value) from EWB_Details Ed  where Ed.InvCode = '" & Trim(NewCode) & "' and Ed.Cgst_Value <> 0 ) "
        '        CMD.ExecuteNonQuery()

        '        CMD.CommandText = " Update EWB_Head Set SGST_Value = (select sum(Ed.Sgst_Value) from EWB_Details Ed where Ed.InvCode = '" & Trim(NewCode) & "' and Ed.Sgst_Value <> 0) "
        '        CMD.ExecuteNonQuery()
        '    End If

        'End If
        'dt2.Clear()


        btn_GENERATEEWB.Enabled = False

        Dim ewb As New EWB(Val(lbl_Company.Tag))
        EWB.GenerateEWB(NewCode, con, rtbEWBResponse, txt_EWBNo, "ClothSales_Delivery_Head", "EwayBill_No", "ClothSales_Delivery_Code", Pk_Condition)


    End Sub

    Private Sub btn_PRINTEWB_Click(sender As Object, e As EventArgs) Handles btn_PRINTEWB.Click
        Dim ewb As New EWB(Val(lbl_Company.Tag))
        ewb.PrintEWB(txt_Eway_Bill_No.Text, rtbEWBResponse, 0)
    End Sub

    Private Sub btn_CancelEWB_1_Click(sender As Object, e As EventArgs) Handles btn_CancelEWB_1.Click
        'Dim NewCode As String = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Dim NewCode As String = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)
        Dim c As Integer = MsgBox("Are You Sure To Cancel This EWB ? ", vbYesNo)

        If c = vbNo Then Exit Sub

        con = New SqlClient.SqlConnection(Common_Procedures.Connection_String)
        con.Open()

        Dim ewb As New EWB(Val(lbl_Company.Tag))

        EWB.CancelEWB(txt_EWay_Bill_No.Text, NewCode, con, rtbEWBResponse, txt_EWBNo, "ClothSales_Delivery_Head", "EwayBill_No", "ClothSales_Delivery_Code")

    End Sub
    Private Sub txt_EWBNo_TextChanged(sender As Object, e As EventArgs) Handles txt_EWBNo.TextChanged
        txt_Eway_Bill_No.Text = txt_EWBNo.Text
    End Sub

    Private Sub btn_Detail_PRINTEWB_Click(sender As Object, e As EventArgs) Handles btn_Detail_PRINTEWB.Click
        Dim ewb As New EWB(Val(lbl_Company.Tag))
        ewb.PrintEWB(txt_Eway_Bill_No.Text, rtbEWBResponse, 1)
    End Sub
    Private Sub txt_EWay_Bill_No_TextChanged(sender As Object, e As EventArgs) Handles txt_EWay_Bill_No.TextChanged
        txt_EWBNo.Text = txt_EWay_Bill_No.Text
    End Sub
    Private Sub Get_GST_Percentage_From_ClothGroup(ByVal ClothName As String, ByRef HSN_Code As String, ByRef GST_PerCent As Single)
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim vClothIdNo As Integer = 0

        vClothIdNo = Common_Procedures.Cloth_NameToIdNo(con, ClothName)

        Try

            HSN_Code = ""
            GST_PerCent = 0

            da = New SqlClient.SqlDataAdapter("select a.* from ItemGroup_Head a INNER JOIN Cloth_Head b ON a.ItemGroup_IdNo = b.ItemGroup_IdNo Where b.Cloth_idno = " & Val(vClothIdNo), con)
            dt = New DataTable
            da.Fill(dt)

            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0).Item("Item_HSN_Code").ToString) = False Then
                    HSN_Code = Trim(dt.Rows(0).Item("Item_HSN_Code").ToString)
                End If
                If IsDBNull(dt.Rows(0).Item("Item_GST_Percentage").ToString) = False Then
                    GST_PerCent = Val(dt.Rows(0).Item("Item_GST_Percentage").ToString)
                End If

            End If

            dt.Clear()

        Catch ex As Exception
            '---MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try
    End Sub
    Private Sub GST_Calculation()
        Dim Ledger_State_Code As String = ""
        Dim Company_State_Code As String = ""
        Dim CGST_Per As Single = 0, SGST_Per As Single = 0, IGST_Per As Single = 0, GST_Per As Single = 0
        Dim HSN_Code As String = ""
        Dim Tot_Amount As Double = 0
        Dim Led_IdNo As Integer = 0
        Dim InterStateStatus As Boolean = False
        Dim VIGST_AMOUNT As Double = 0
        Dim VCGST_AMOUNT As Double = 0
        Dim VSGST_AMOUNT As Double = 0
        Dim TaxPerc As String = 0

        Try

            If FrmLdSTS = True Or NoCalc_Status = True Then Exit Sub

            IGST_AMOUNT = 0
            CGST_AMOUNT = 0
            SGST_AMOUNT = 0

            With dgv_Details

                If dgv_Details.Rows.Count > 0 Then

                    For i = 0 To dgv_Details.Rows.Count - 1

                        '.Rows(i).Cells(19).Value = ""
                        '.Rows(i).Cells(20).Value = ""

                        If Trim(.Rows(i).Cells(1).Value) <> "" Then

                            HSN_Code = ""
                            GST_Per = 0
                            Get_GST_Percentage_From_ClothGroup(Trim(.Rows(i).Cells(1).Value), HSN_Code, GST_Per)

                            .Rows(i).Cells(19).Value = Trim(HSN_Code)
                            .Rows(i).Cells(20).Value = Format(Val(GST_Per), "########0.00")

                            Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_PartyName.Text)

                            InterStateStatus = Common_Procedures.Is_InterState_Party(con, Val(lbl_Company.Tag), Led_IdNo)

                            If InterStateStatus = True Then

                                VIGST_AMOUNT = Format(Val(.Rows(i).Cells(18).Value) * Val(GST_Per) / 100, "#############0.00")
                                If Val(VIGST_AMOUNT) = 0 Then VIGST_AMOUNT = 0

                            Else

                                TAxPerc = Val(GST_Per) / 2

                                VCGST_AMOUNT = Format(Val(.Rows(i).Cells(18).Value) * Val(TAxPerc) / 100, "#############0.00")
                                If Val(VCGST_AMOUNT) = 0 Then VCGST_AMOUNT = 0

                                VSGST_AMOUNT = Format(Val(.Rows(i).Cells(18).Value) * Val(TAxPerc) / 100, "#############0.00")
                                If Val(VSGST_AMOUNT) = 0 Then VSGST_AMOUNT = 0
                            End If

                            If Val(.Rows(i).Cells(18).Value) <> 0 Then
                                IGST_AMOUNT = IGST_AMOUNT + Val(VIGST_AMOUNT)
                                CGST_AMOUNT = CGST_AMOUNT + Val(VCGST_AMOUNT)
                                SGST_AMOUNT = SGST_AMOUNT + Val(VSGST_AMOUNT)
                            End If

                        End If

                    Next i
                End If



            End With


        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT SAVE", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
        Exit Sub

        End Try
    End Sub

    Private Sub NetAmount_Calculation()
        Dim TotAmt As String = 0
        Dim AssVal As String = 0
        Dim vNet_Amt As String = 0
        Dim vGST_Amt As String = 0
        Dim vStrNetAmt As String = 0
        Dim TaxRndoff As String = 0
        Dim vTOT_SalAmt As String = 0
        Dim Led_ID As String = 0

        If FrmLdSTS = True Or NoCalc_Status = True Then Exit Sub

        With dgv_Details_Total
            If .Rows.Count > 0 Then
                TotAmt = Format(Val(.Rows(0).Cells(8).Value), "###########0.00")
            End If
        End With

        '------NET AMOUNT 
        NET_AMOUNT = Format(Val(TotAmt) + Val(IGST_AMOUNT) + Val(CGST_AMOUNT) + Val(SGST_AMOUNT), "##########0.00")

        TaxRndoff = Format(Val(NET_AMOUNT), "############0")
        vStrNetAmt = Format(Val(TaxRndoff), "##########0.00")

        '-----ROUND OFF
        ROUND_OFF_AMOUNT = Format(Val(vStrNetAmt) - Val(NET_AMOUNT), "###########0.00")
        NET_AMOUNT = Format(Val(NET_AMOUNT), "############0")

    End Sub

    Private Sub btn_PackingList_Excel_Click(sender As Object, e As EventArgs) Handles btn_PackingList_Excel.Click
        EMAIL_Status = False
        WHATSAPP_Status = False

        Dim EntryCode As String

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        prn_HdDt.Clear()
        prn_DetDt.Clear()

        prn_PageNo = 0
        prn_HdIndx = 1
        prn_DetIndx = 0
        prn_HdMxIndx = 0
        prn_DetMxIndx = 0
        prn_Count = 1

        Erase prn_DetAr
        Erase prn_HdAr

        prn_HdAr = New String(100, 10) {}

        prn_DetAr = New String(100, 50, 10) {}

        Common_Procedures.Printing_PackingSlip_Format1155_Excel(con, "", 0, "", EntryCode, Pk_Condition, 0, 0, prn_HdDt, prn_DetDt, prn_HdMxIndx, prn_DetMxIndx, prn_HdAr, prn_DetAr, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx)

        btn_print_Close_Click(sender, e)

    End Sub

    Public Sub Printing_Delivery_cum_PackingList()
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim NewCode As String
        Dim ps As Printing.PaperSize
        Dim PpSzSTS As Boolean = False
        Dim Def_PrntrNm As String = ""
        Dim vFILNm As String = ""
        Dim vFLPATH As String = ""
        Dim vPDFFLPATH_and_NAME As String = ""
        Dim vPRNTRNAME As String
        Dim vPARTYNM As String = ""

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        Try

            vPARTYNM = ""
            da1 = New SqlClient.SqlDataAdapter("select * from ClothSales_Delivery_Head Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count <= 0 Then

                If EMAIL_Status = False And WHATSAPP_Status = False Then
                    MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                End If
                Exit Sub

            Else
                vPARTYNM = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("Ledger_IdNo").ToString))

            End If

            dt1.Dispose()
            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        For I = 0 To PrintDocument3.PrinterSettings.PaperSizes.Count - 1
            If PrintDocument3.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                ps = PrintDocument3.PrinterSettings.PaperSizes(I)
                PrintDocument3.PrinterSettings.DefaultPageSettings.PaperSize = ps
                PrintDocument3.DefaultPageSettings.PaperSize = ps
                PrintDocument3.DefaultPageSettings.Landscape = False
                Exit For
            End If
        Next

        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then

            If Print_PDF_Status = True Then

                vFLPATH = ""
                vPRNTRNAME = Common_Procedures.get_PDF_PrinterName(EMAIL_Status, WHATSAPP_Status, vFLPATH)

                If Trim(vPRNTRNAME) = "" Then
                    Exit Sub
                End If

                Def_PrntrNm = PrintDocument3.PrinterSettings.PrinterName

                vPARTYNM = Common_Procedures.Replace_SpecialCharacters_With_UnderScore(vPARTYNM)

                vFILNm = Trim("Delivery_cum_PackingList_" & Trim(lbl_DcNo.Text) & ".pdf")

                vFILNm = StrConv(vFILNm, vbProperCase)
                vPDFFLPATH_and_NAME = Trim(vFLPATH) & "\" & Trim(vFILNm)
                vEMAIL_Attachment_FileName = Trim(vPDFFLPATH_and_NAME)

                PrintDocument3.DocumentName = Trim(vFILNm)
                PrintDocument3.PrinterSettings.PrinterName = Trim(vPRNTRNAME)    ' "Microsoft Print to PDF"
                'PrintDocument3.PrinterSettings.PrinterName = "doPDF v7"
                PrintDocument3.PrinterSettings.PrintToFile = True
                PrintDocument3.PrinterSettings.PrintFileName = Trim(vPDFFLPATH_and_NAME)
                PrintDocument3.Print()

                'Debug.Print(PrintDocument3.PrinterSettings.PrintFileName)

                PrintDocument3.PrinterSettings.PrinterName = Trim(Def_PrntrNm)
                Print_PDF_Status = False

                'PrintDocument3.DocumentName = "Delivery"
                'PrintDocument3.PrinterSettings.PrinterName = "doPDF v7"
                'PrintDocument3.PrinterSettings.PrintFileName = "c:\Delivery.pdf"
                'PrintDocument3.Print()

            Else

                Try
                    If Val(Common_Procedures.settings.Printing_Show_PrintDialogue) = 1 Then
                        PrintDialog1.PrinterSettings = PrintDocument3.PrinterSettings
                        If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                            PrintDocument3.PrinterSettings = PrintDialog1.PrinterSettings
                            PrintDocument3.Print()
                        End If

                    Else

                        PrintDocument3.Print()

                    End If

                Catch ex As Exception

                    MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

                End Try

            End If

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                For I = 0 To PrintDocument3.PrinterSettings.PaperSizes.Count - 1
                    If PrintDocument3.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                        ps = PrintDocument3.PrinterSettings.PaperSizes(I)
                        PrintDocument3.PrinterSettings.DefaultPageSettings.PaperSize = ps
                        PrintDocument3.DefaultPageSettings.PaperSize = ps
                        PrintDocument3.DefaultPageSettings.Landscape = False
                        Exit For
                    End If
                Next

                ppd.Document = PrintDocument3

                ppd.WindowState = FormWindowState.Maximized
                ppd.StartPosition = FormStartPosition.CenterScreen
                ppd.ClientSize = New Size(800, 900)

                ppd.ShowDialog()

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If

        Print_PDF_Status = False

    End Sub

    Private Sub PrintDocument3_BeginPrint(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintEventArgs) Handles PrintDocument3.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim NewCode As String
        Dim Mtr_Rate As Integer = 0
        Dim BalCode As String = ""
        Dim i, j, k, s As Integer
        Dim Sno As Integer = 0
        Dim vCLONAME As String


        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        prn_HdDt.Clear()
        prn_DetDt.Clear()
        prn_DetDt2.Clear()
        prn_DetIndx = 0
        prn_DetSNo = 0
        prn_PageNo = 0
        vprn_TotAmt = 0

        prn_HdIndx = 0
        prn_DetIndx = 0
        prn_HdMxIndx = 0
        prn_DetMxIndx = 0
        prn_Count = 1
        prn_TotalBales = 0
        prn_TotalPcs = 0
        prn_TotalMtrs = 0
        prn_TotalWgt = 0
        vprn_TotAmt = 0
        prn_NoofBmDets = 0
        prn_NoofBaleDets = 0

        Erase prn_DetAr1

        Erase prn_HdAr

        prn_HdAr = New String(1000, 1000) {}

        prn_DetAr1 = New String(1000, 20) {}

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.*, b.*, c.*,f.*, d.Ledger_Name as TransportName ,e.Ledger_Name as Agent_Name,Csh.State_Name as Company_State_Name, Csh.State_Code as Company_State_Code, Lsh.State_Name as Ledger_State_Name, Lsh.State_Code as Ledger_State_Code ,f.Ledger_MainName as DeliveryTo_LedgerName, f.Ledger_Address1 as DeliveryTo_LedgerAddress1, f.Ledger_Address2 as DeliveryTo_LedgerAddress2, f.Ledger_Address3 as DeliveryTo_LedgerAddress3, f.Ledger_Address4 as DeliveryTo_LedgerAddress4, f.Ledger_GSTinNo as DeliveryTo_LedgerGSTinNo, f.Ledger_pHONENo as DeliveryTo_LedgerPhoneNo, f.Pan_No as DeliveryTo_PanNo,Dsh.State_Name as DeliveryTo_State_Name, Dsh.State_Code as DeliveryTo_State_Code from ClothSales_Delivery_Head a INNER JOIN Company_Head b ON a.Company_IdNo = b.Company_IdNo LEFT OUTER JOIN State_Head Csh ON b.Company_State_IdNo = Csh.State_IdNo INNER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_IdNo LEFT OUTER JOIN State_Head Lsh ON c.Ledger_State_IdNo = Lsh.State_IdNo Left outer JOIN Ledger_Head d ON a.Transport_IdNo = d.Ledger_IdNo Left outer JOIN Ledger_Head e ON a.Agent_IdNo = e.Ledger_IdNo LEFT OUTER JOIN Ledger_Head f ON  a.DeliveryTo_IdNo = f.Ledger_IdNo  LEFT OUTER JOIN State_Head Dsh ON f.Ledger_State_IdNo = Dsh.State_IdNo where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)

            If prn_HdDt.Rows.Count > 0 Then

                da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name,b.sort_no, b.Cloth_Description, d.ClothType_name , e.* from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.ClothIdNo_ToPrint = b.Cloth_idno INNER JOIN ItemGroup_Head e ON e.ItemGroup_IdNo = b.ItemGroup_IdNo LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' Order by a.Sl_No", con)
                prn_DetDt = New DataTable
                da2.Fill(prn_DetDt)

                For i = 0 To prn_HdDt.Rows.Count - 1

                    prn_HdMxIndx = prn_HdMxIndx + 1

                    prn_HdAr(prn_HdMxIndx, 1) = ""
                    prn_HdAr(prn_HdMxIndx, 2) = ""
                    prn_HdAr(prn_HdMxIndx, 3) = 0
                    prn_HdAr(prn_HdMxIndx, 4) = 0
                    prn_TotalBales = 0
                    prn_DetMxIndx = 0
                    Sno = 0
                    vCLONAME = ""


                    If Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString)) = "ROLL" Or Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString)) = "PCS" Or Common_Procedures.settings.CustomerCode = "1520" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1569" Then
                        da2 = New SqlClient.SqlDataAdapter("select a.*, b.*, a.Pcs_No piece_no , a.Packing_Slip_No as Bale_No from Packing_Slip_Details a INNER JOIN Cloth_Head b ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = b.Cloth_IdNo inner join Packing_Slip_Head c on a.Packing_Slip_Code = c.Packing_Slip_Code  Where c.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'", con)
                    Else
                        da2 = New SqlClient.SqlDataAdapter("select b.*, '' as Lot_No,  a.Packing_Slip_No as piece_no, a.Packing_Slip_No as piece_no, a.Packing_Slip_No as Bale_No , a.Total_Meters as Meters, a.Total_Weight as Weight , '' as loom_no, 0 as Weight_Meter from Packing_Slip_Head a INNER JOIN Cloth_Head b ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = b.Cloth_IdNo Where a.Delivery_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "'", con)
                    End If
                    prn_DetDt2 = New DataTable
                    da2.Fill(prn_DetDt2)
                    If prn_DetDt2.Rows.Count > 0 Then

                        For j = 0 To prn_DetDt2.Rows.Count - 1

                            If Val(prn_DetDt2.Rows(j).Item("Meters").ToString) <> 0 Then

                                'If Trim(UCase(vCLONAME)) <> Trim(UCase(prn_DetDt2.Rows(j).Item("Cloth_name").ToString)) Then
                                '    Sno = 0
                                'End If

                                prn_DetMxIndx = prn_DetMxIndx + 1
                                Sno = Sno + 1
                                prn_DetAr1(prn_DetMxIndx, 0) = Val(Sno)
                                prn_DetAr1(prn_DetMxIndx, 1) = Trim(prn_DetDt2.Rows(j).Item("Lot_No").ToString)
                                prn_DetAr1(prn_DetMxIndx, 2) = Trim(prn_DetDt2.Rows(j).Item("piece_no").ToString)
                                prn_DetAr1(prn_DetMxIndx, 3) = Trim(prn_DetDt2.Rows(j).Item("bale_No").ToString)
                                prn_DetAr1(prn_DetMxIndx, 4) = Format(Val(prn_DetDt2.Rows(j).Item("Meters").ToString), "#########0.00")
                                prn_DetAr1(prn_DetMxIndx, 5) = Format(Val(prn_DetDt2.Rows(j).Item("Weight").ToString), "#########0.000")
                                prn_DetAr1(prn_DetMxIndx, 6) = ""
                                prn_DetAr1(prn_DetMxIndx, 7) = Trim(prn_DetDt2.Rows(j).Item("loom_no").ToString)
                                prn_DetAr1(prn_DetMxIndx, 8) = Trim(prn_DetDt2.Rows(j).Item("Weight_Meter").ToString)

                                prn_DetAr1(prn_DetMxIndx, 9) = Trim(prn_DetDt2.Rows(j).Item("Cloth_name").ToString)
                                prn_DetAr1(prn_DetMxIndx, 10) = Trim(prn_DetDt2.Rows(j).Item("weave").ToString)

                                prn_DetAr1(prn_DetMxIndx, 11) = Trim(prn_DetDt2.Rows(j).Item("sort_no").ToString)

                                vCLONAME = Trim(prn_DetDt2.Rows(j).Item("Cloth_name").ToString)

                                prn_TotalPcs = Val(prn_TotalPcs) + 1
                                prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetDt2.Rows(j).Item("Meters").ToString), "#########0.00"), "##########0.00")
                                prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetDt2.Rows(j).Item("Weight").ToString), "#########0.000"), "##########0.000")


                            End If

                        Next j

                    End If



                    da2 = New SqlClient.SqlDataAdapter("select a.*, c.* from ClothSales_Delivery_Piece_Details a INNER JOIN cloth_head c on c.cloth_idno = a.cloth_idno Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' order by c.cloth_name, a.Lot_code, a.Lot_no, a.bale_no, a.Sl_No, a.Piece_No ASC ", con)
                    prn_DetDt2 = New DataTable
                    da2.Fill(prn_DetDt2)
                    If prn_DetDt2.Rows.Count > 0 Then

                        For j = 0 To prn_DetDt2.Rows.Count - 1

                            If Val(prn_DetDt2.Rows(j).Item("Meters").ToString) <> 0 Then

                                'If Trim(UCase(vCLONAME)) <> Trim(UCase(prn_DetDt2.Rows(j).Item("Cloth_name").ToString)) Then
                                '    Sno = 0
                                'End If

                                prn_DetMxIndx = prn_DetMxIndx + 1
                                Sno = Sno + 1
                                prn_DetAr1(prn_DetMxIndx, 0) = Val(Sno)
                                prn_DetAr1(prn_DetMxIndx, 1) = Trim(prn_DetDt2.Rows(j).Item("Lot_No").ToString)
                                prn_DetAr1(prn_DetMxIndx, 2) = Trim(prn_DetDt2.Rows(j).Item("piece_no").ToString)
                                prn_DetAr1(prn_DetMxIndx, 3) = Trim(prn_DetDt2.Rows(j).Item("bale_No").ToString)
                                prn_DetAr1(prn_DetMxIndx, 4) = Format(Val(prn_DetDt2.Rows(j).Item("Meters").ToString), "#########0.00")
                                prn_DetAr1(prn_DetMxIndx, 5) = Format(Val(prn_DetDt2.Rows(j).Item("Weight").ToString), "#########0.000")
                                prn_DetAr1(prn_DetMxIndx, 6) = ""
                                prn_DetAr1(prn_DetMxIndx, 7) = Trim(prn_DetDt2.Rows(j).Item("loom_no").ToString)
                                prn_DetAr1(prn_DetMxIndx, 8) = Trim(prn_DetDt2.Rows(j).Item("Weight_Meter").ToString)

                                prn_DetAr1(prn_DetMxIndx, 9) = Trim(prn_DetDt2.Rows(j).Item("Cloth_name").ToString)
                                prn_DetAr1(prn_DetMxIndx, 10) = Trim(prn_DetDt2.Rows(j).Item("weave").ToString)

                                prn_DetAr1(prn_DetMxIndx, 11) = Trim(prn_DetDt2.Rows(j).Item("sort_no").ToString)


                                vCLONAME = Trim(prn_DetDt2.Rows(j).Item("Cloth_name").ToString)

                                prn_TotalPcs = Val(prn_TotalPcs) + 1
                                prn_TotalMtrs = Format(Val(prn_TotalMtrs) + Format(Val(prn_DetDt2.Rows(j).Item("Meters").ToString), "#########0.00"), "##########0.00")
                                prn_TotalWgt = Format(Val(prn_TotalWgt) + Format(Val(prn_DetDt2.Rows(j).Item("Weight").ToString), "#########0.000"), "##########0.000")

                            End If

                        Next j

                    End If

                Next i

            Else

                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End If

            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub PrintDocument3_PrintPage(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument3.PrintPage

        If prn_HdDt.Rows.Count <= 0 Then Exit Sub

        If Trim(Common_Procedures.settings.CustomerCode) = "1569" Then ' --- SARATHY EXPORT FABRICS

            Dim vPrn_Roll_Packing_No = ""
            Dim vPrn_Roll_Packing_Date = ""
            Dim vSort_No As String = ""

            Dim vPRN_Party_OrderNo As String, vPRN_Party_OrderDate As String
            Dim vPRN_ClothSales_DCNo As String, vPRN_ClothSales_DCDate As String

            vPRN_Party_OrderNo = prn_HdDt.Rows(0).Item("Party_OrderNo").ToString
            vPRN_Party_OrderDate = prn_HdDt.Rows(0).Item("Party_OrderDate").ToString

            'vSort_No = Trim(prn_DetDt2.Rows(0).Item("sort_no").ToString)
            'vCLONAME = Trim(prn_DetDt2.Rows(0).Item("Cloth_Name").ToString)

            'prn_DetAr1(prn_DetMxIndx, 11) = Trim(prn_DetDt2.Rows(j).Item("sort_no").ToString)

            vPRN_ClothSales_DCNo = prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString
            vPRN_ClothSales_DCDate = Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString


            'prn_TotalPcs
            'prn_TotalMtrs
            'prn_TotalWgt

            Common_Procedures.Printing_Format_PackingList_1569(PrintDocument3, e, prn_DetDt, prn_HdMxIndx, prn_HdDt, prn_HdAr, prn_PageNo, prn_HdIndx, prn_Count, prn_DetAr1, prn_DetIndx, prn_DetMxIndx, Val(prn_TotalPcs), Val(prn_TotalMtrs), prn_PL_Tot_GrsWgt, Val(prn_TotalWgt), prn_HdDt2, "", "", vPRN_Party_OrderNo, vPRN_Party_OrderDate, vSort_No:=vSort_No, vCLONAME, vPRN_ClothSales_DCNo, vPRN_ClothSales_DCDate, "", "")

        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1608" Then ' --- SAMANTH TEXTILES

            Dim vPrn_Roll_Packing_No = ""
            Dim vPrn_Roll_Packing_Date = ""
            Dim vSort_No As String = ""

            Dim vPRN_Party_OrderNo As String, vPRN_Party_OrderDate As String
            Dim vPRN_ClothSales_DCNo As String, vPRN_ClothSales_DCDate As String

            vPRN_Party_OrderNo = prn_HdDt.Rows(0).Item("Party_OrderNo").ToString
            vPRN_Party_OrderDate = prn_HdDt.Rows(0).Item("Party_OrderDate").ToString

            'vSort_No = Trim(prn_DetDt2.Rows(0).Item("sort_no").ToString)
            'vCLONAME = Trim(prn_DetDt2.Rows(0).Item("Cloth_Name").ToString)

            'prn_DetAr1(prn_DetMxIndx, 11) = Trim(prn_DetDt2.Rows(j).Item("sort_no").ToString)

            vPRN_ClothSales_DCNo = prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString
            vPRN_ClothSales_DCDate = Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString


            'prn_TotalPcs
            'prn_TotalMtrs
            'prn_TotalWgt

            Common_Procedures.Printing_Format_PackingList_1608(PrintDocument3, e, prn_DetDt, prn_HdMxIndx, prn_HdDt, prn_HdAr, prn_PageNo, prn_HdIndx, prn_Count, prn_DetAr1, prn_DetIndx, prn_DetMxIndx, Val(prn_TotalPcs), Val(prn_TotalMtrs), prn_PL_Tot_GrsWgt, Val(prn_TotalWgt), prn_HdDt2, "", "", vPRN_Party_OrderNo, vPRN_Party_OrderDate, vSort_No:=vSort_No, vCLONAME, vPRN_ClothSales_DCNo, vPRN_ClothSales_DCDate, "", "", Show_Weight_Column_STS:=vPACKING_LIST_PRINT_WITHOUT_WGT_STS)


        Else

            Printing_Format_Delivery_cum_PackingList_1520(PrintDocument3, e)

        End If

    End Sub


    Private Sub Printing_Format_Delivery_cum_PackingList_1520(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim ItmNm1 As String, ItmNm2 As String
        'Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        'Dim PpSzSTS As Boolean = False
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0
        Dim TpMargin As Single = 0
        Dim cnt As Integer = 0
        Dim Tot_Mtr As Integer = 0, Tot_Rt As Integer = 0
        Dim vAmt As String = 0
        Dim fldmtr As String = 0 'Double = 0
        Dim fmt As Double = 0
        Dim CurRow As Integer = 0
        Dim sno As Integer = 0
        Dim p1Font As Font

        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                PrintDocument1.DefaultPageSettings.PaperSize = ps
                Exit For
            End If
        Next

        PrntCnt = 1

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10
            .Right = 50
            .Top = 10
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 9, FontStyle.Regular)
        p1Font = New Font("Calibri", 10, FontStyle.Bold)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With

        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        'If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
        '    NoofItems_PerPage = 4
        '    TxtHgt = 15
        'ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Or Common_Procedures.settings.CustomerCode = "1423" Then
        NoofItems_PerPage = 30
        TxtHgt = 16
        'ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Then '---ALLWIN FABS(MARIA INTERNATIONAL) Then 
        '    NoofItems_PerPage = 3
        '    TxtHgt = 14.75 '17.5 '20
        'Else

        '    NoofItems_PerPage = 4
        '    TxtHgt = 15 '17.5 '20
        'End If

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            NoofItems_PerPage = NoofItems_PerPage - 1
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = 65 : ClAr(2) = 80 : ClAr(3) = 110 : ClAr(4) = 110
        ClAr(5) = 65 : ClAr(6) = 80 : ClAr(7) = 110
        ClAr(8) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7))

        'If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
        '    ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60 : ClAr(7) = 70 : ClAr(8) = 60
        '    ClAr(9) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8))
        'ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
        '    ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60
        '    ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))
        'Else
        '    ClAr(1) = Val(35) : ClAr(2) = 280 : ClAr(3) = 100 : ClAr(4) = 80 : ClAr(5) = 100
        '    ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))
        'End If


        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        PrntCnt2ndPageSTS = False
        TpMargin = TMargin



        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format_Delivery_cum_PackingList_1520_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = 0

                CurY = CurY - 10

                If prn_DetDt.Rows.Count > 0 Then

                    Do While prn_NoofBmDets < prn_DetMxIndx

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", PageWidth - 10, CurY, 1, 0, pFont)

                            NoofDets = NoofDets + 1

                            Printing_Format_Delivery_cum_PackingList_1520_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                            prn_DetIndx = prn_DetIndx + NoofItems_PerPage

                            e.HasMorePages = True

                            Return

                        End If

                        prn_DetIndx = prn_DetIndx + 1

                        CurY = CurY + TxtHgt

                        If Val(prn_DetAr1(prn_DetIndx, 4)) <> 0 Then

                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr1(prn_DetIndx, 0)), LMargin + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr1(prn_DetIndx, 1)), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr1(prn_DetIndx, 2)), LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetAr1(prn_DetIndx, 4)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)

                            prn_NoofBmDets = prn_NoofBmDets + 1

                        End If

                        If Val(prn_DetAr1(prn_DetIndx + NoofItems_PerPage, 4)) <> 0 Then

                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr1(prn_DetIndx + NoofItems_PerPage, 0)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 12, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr1(prn_DetIndx + NoofItems_PerPage, 1)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr1(prn_DetIndx + NoofItems_PerPage, 2)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetAr1(prn_DetIndx + NoofItems_PerPage, 4)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 10, CurY, 1, 0, pFont)

                            prn_NoofBmDets = prn_NoofBmDets + 1

                        End If

                        NoofDets = NoofDets + 1

                    Loop

                End If

                Printing_Format_Delivery_cum_PackingList_1520_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

            End If


        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

LOOP2:

        prn_Count = prn_Count + 1

        e.HasMorePages = False

    End Sub

    Private Sub Printing_Format_Delivery_cum_PackingList_1520_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2, da3 As New SqlClient.SqlDataAdapter
        Dim dt2, dt3 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_Email As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single, strWidth As Single = 0
        Dim C1 As Single
        Dim W1, w2 As Single
        Dim S1, S2 As Single
        Dim vprn_BlNos As String = ""
        Dim Gst_dt As Date
        Dim Entry_dt As Date
        Dim CurX As Single = 0
        Dim vPackType As String = ""
        Dim suppRefNo As String = ""
        Dim payment As String = ""
        PageNo = PageNo + 1

        CurY = TMargin

        da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, d.ClothType_name from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        da2.Fill(dt2)

        If dt2.Rows.Count > NoofItems_PerPage Then
            Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        End If
        dt2.Clear()

        suppRefNo = ""
        payment = ""
        da3 = New SqlClient.SqlDataAdapter("select a.*, b.Clothsales_Order_no,b.payment_terms from ClothSales_Delivery_Details a INNER JOIN Clothsales_Order_Head b ON a.Clothsales_Order_Code = b.Clothsales_Order_Code  where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "'", con)
        dt3 = New DataTable
        da3.Fill(dt3)
        If dt3.Rows.Count > 0 Then
            suppRefNo = dt3.Rows(0).Item("ClothSales_Order_No").ToString
            payment = dt3.Rows(0).Item("payment_terms").ToString
        End If
        dt3.Clear()

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_Cap = "GSTIN : "
            Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        CurY = CurY + TxtHgt - 10

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            p1Font = New Font("Calibri", 16, FontStyle.Bold)
        Else
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
        End If

        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

            If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                If Not imageData Is Nothing Then
                    Using ms As New MemoryStream(imageData, 0, imageData.Length)
                        ms.Write(imageData, 0, imageData.Length)

                        If imageData.Length > 0 Then

                            '.BackgroundImage = Image.FromStream(ms)

                            ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)
                            e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 10, CurY + 5, 110, 100)

                        End If

                    End Using

                End If

            End If

        End If
        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

        Gst_dt = #7/1/2017#
        Entry_dt = dtp_Date.Value

        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt - 13  ' 10

        Else

            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_GSTIN_Cap), p1Font).Width
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_StateNm & "     " & Cmp_GSTIN_Cap & Cmp_GSTIN_No), pFont).Width
            If PrintWidth > strWidth Then
                CurX = LMargin + (PrintWidth - strWidth) / 2
            Else
                CurX = LMargin
            End If

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateCap, CurX, CurY, 0, 0, p1Font)
            strWidth = e.Graphics.MeasureString(Cmp_StateCap, p1Font).Width
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateNm, CurX, CurY, 0, 0, pFont)

            strWidth = e.Graphics.MeasureString(Cmp_StateNm, pFont).Width
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, "     " & Cmp_GSTIN_Cap, CurX, CurY, 0, PrintWidth, p1Font)
            strWidth = e.Graphics.MeasureString("     " & Cmp_GSTIN_Cap, p1Font).Width
            CurX = CurX + strWidth

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, CurX, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Trim(Cmp_PhNo & "   " & Cmp_Email), LMargin, CurY, 2, PrintWidth, pFont)

            CurY = CurY + TxtHgt - 1

        End If

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Then '---ALLWIN FABS(MARIA INTERNATIONAL)
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY TO JOBWORK", LMargin, CurY, 2, PrintWidth, p1Font)

            CurY = CurY + TxtHgt + 5
            p1Font = New Font("Calibri", 10, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "( NOT FOR SALE )", LMargin + 10, CurY, 0, 0, p1Font)
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "HSN/SAC CODE : 998821 ( Textile manufactring service )", PageWidth - 10, CurY, 1, 0, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        Else
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY CHALLAN", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)
        W1 = e.Graphics.MeasureString("ORDER NO : ", pFont).Width
        w2 = e.Graphics.MeasureString("DELIVERY.At : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO  :  ", pFont).Width
        S2 = e.Graphics.MeasureString("TRANSPORT :  ", pFont).Width

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_MAInName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 11, FontStyle.Bold)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
        '    If payment <> "" Then
        '        Common_Procedures.Print_To_PrintDocument(e, "PAYMENT TERMS", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, payment, LMargin + C1 + W1 + 70, CurY, 0, 0, p1Font)
        '    End If
        'End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SIZING (SOMANUR)
            If Trim(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) <> "" Then
                If IsDate(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DESPATCH DATE & TIME", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
                End If
            End If

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            If suppRefNo <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, "SUPPLIER REF.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, suppRefNo & "        PAYMENT TERMS       :   " & payment, LMargin + C1 + W1 + 70, CurY, 0, 0, pFont)
            End If

        End If

        CurY = CurY + TxtHgt
        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            If Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, " TIN NO : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, pFont)
            End If

        Else
            If Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString) <> "" Then
                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN NO : " & Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, p1Font)
            End If

        End If


        If prn_HdDt.Rows(0).Item("Party_OrderNo").ToString <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString & "   P.O DATE    :   " & prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '---- BRT SIZING (SOMANUR)
        '    Common_Procedures.Print_To_PrintDocument(e, "PARTY ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, suppRefNo, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
        'End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then

            'CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "THROUGH  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Through_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

            'If Trim(prn_HdDt.Rows(0).Item("Vechile_No").ToString) <> "" Then

            '    CurY = CurY + TxtHgt

            '    S3 = e.Graphics.MeasureString("THROUGH     :   " & prn_HdDt.Rows(0).Item("Through_Name").ToString, pFont).Width + 30

            '    Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + S3 + 70, CurY, 0, 0, pFont)

            'End If

        End If


        Common_Procedures.Print_To_PrintDocument(e, "AGENT", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "DESP.TO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_To").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then
            Common_Procedures.Print_To_PrintDocument(e, "LR.NO  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If

        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString) <> "" Then
            p1Font = New Font("Calibri", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "DELIVERY .At", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString), LMargin + C1 + w2 + 30, CurY, 0, 0, p1Font)
        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "TRANSPORT ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("TransportName").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
            ' Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        End If


        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("EwayBill_No").ToString) <> "" Then
            'CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No.", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("EwayBill_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress2").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        End If


        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress3").ToString) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress3").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        End If


        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        End If


        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString) <> "" Then
            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " GSTIN : " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, p1Font)
        End If

        CurY = CurY + TxtHgt + TxtHgt - 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))



        CurY = CurY + 10

        Common_Procedures.Print_To_PrintDocument(e, "Quatlity :  " & prn_DetDt.Rows(0).Item("Cloth_Name").ToString, LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "HSN Code :  " & prn_DetDt.Rows(0).Item("Item_HSN_Code").ToString, PageWidth - 20, CurY, 1, 0, pFont)

        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        CurY = CurY + TxtHgt - 10
        Common_Procedures.Print_To_PrintDocument(e, "SL.NO", LMargin, CurY, 2, ClAr(1), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "LOT NO", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "PCS.NO", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "SL.NO", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "LOT NO", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 3, CurY, 2, ClAr(6), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "PCS.NO", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY

    End Sub

    Private Sub Printing_Format_Delivery_cum_PackingList_1520_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim vPackType As String = ""
        Dim BLNo1 As String = ""
        Dim BLNo2 As String = ""

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY
        LnAr(6) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 4, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 4, LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))

        CurY = CurY + TxtHgt - 5
        Common_Procedures.Print_To_PrintDocument(e, "Total Pcs : " & Format(Val(prn_TotalPcs), "########0"), LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "Total Meters : " & Format(Val(prn_TotalMtrs), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 10, CurY, 0, 0, pFont)

        vprn_TotAmt = Format(Val(prn_HdDt.Rows(0).Item("Total_Taxable_Amount").ToString), "##########0")
        If Val(vprn_TotAmt) <> 0 Then
            p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
            If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) = 0 Then
                Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
            End If
        End If


        vprn_BlNos = ""
        'For i = 0 To prn_DetDt.Rows.Count - 1
        '    If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
        '        vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
        '    End If
        'Next

        BLNo1 = Trim(vprn_BlNos)
        BLNo2 = ""

        If Len(BLNo1) > 60 Then
            For i = 60 To 1 Step -1
                If Mid$(Trim(BLNo1), i, 1) = " " Or Mid$(Trim(BLNo1), i, 1) = "," Or Mid$(Trim(BLNo1), i, 1) = "." Or Mid$(Trim(BLNo1), i, 1) = "-" Or Mid$(Trim(BLNo1), i, 1) = "/" Or Mid$(Trim(BLNo1), i, 1) = "_" Or Mid$(Trim(BLNo1), i, 1) = "(" Or Mid$(Trim(BLNo1), i, 1) = ")" Or Mid$(Trim(BLNo1), i, 1) = "\" Or Mid$(Trim(BLNo1), i, 1) = "[" Or Mid$(Trim(BLNo1), i, 1) = "]" Or Mid$(Trim(BLNo1), i, 1) = "{" Or Mid$(Trim(BLNo1), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = 60
            BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - i)
            BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), i)
        End If


        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"

        CurY = CurY + TxtHgt
        If Trim(BLNo1) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & BLNo1, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Val(vprn_TotAmt) <> 0 Then

            If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

                p1Font = New Font("CALIBRI", 10, FontStyle.Bold)

                If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                End If

            End If

        End If

        CurY = CurY + TxtHgt
        If Trim(BLNo2) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo2, LMargin + 10, CurY, 0, 0, pFont)
        End If

        Dim VNetAmt As String = 0
        VNetAmt = Format(Val(prn_HdDt.Rows(0).Item("Net_Amount").ToString), "##########0")
        Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(VNetAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "NOTE : " & prn_HdDt.Rows(0).Item("Note").ToString, LMargin + 10, CurY, 0, 0, pFont)
        End If

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString

        CurY = CurY + TxtHgt - 5
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "Prepared By", LMargin + 20, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 250, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "Authorised Signature", PageWidth - 15, CurY, 1, 0, pFont)

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub btn_Print_Cancel_Enter(sender As Object, e As EventArgs) Handles btn_Print_Cancel.Enter
        btn_Print_Cancel.BackColor = Color.Lime
        btn_Print_Cancel.ForeColor = Color.Blue
    End Sub

    Private Sub btn_Print_Cancel_Leave(sender As Object, e As EventArgs) Handles btn_Print_Cancel.Leave
        btn_Print_Cancel.BackColor = Color.FromArgb(255, 90, 90)
        btn_Print_Cancel.ForeColor = Color.Black
    End Sub


    Private Sub Printing_Delivery_Format1420(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim ItmNm1 As String, ItmNm2 As String, ItmNm3 As String, ItmNm4 As String
        'Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        'Dim PpSzSTS As Boolean = False
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0
        Dim TpMargin As Single = 0
        Dim cnt As Integer = 0
        Dim Tot_Mtr As Integer = 0, Tot_Rt As Integer = 0
        Dim vAmt As String = 0
        Dim fldmtr As String = 0 'Double = 0
        Dim fmt As Double = 0
        Dim CurRow As Integer = 0
        Dim sno As Integer = 0
        Dim p1Font As Font

        set_PaperSize_For_PrintDocument1()

        'If Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_Custom8X6_As_Default_PaperSize) = 1 Then
        '    Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
        '    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.Landscape = False

        'ElseIf Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_A4_As_Default_PaperSize) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next

        'ElseIf Val(vPrnt_2Copy_In_SinglePage) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next



        'Else

        '    PpSzSTS = False

        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '        'Debug.Print(ps.PaperName)
        '        If ps.Width = 800 And ps.Height = 600 Then
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            PpSzSTS = True
        '            Exit For
        '        End If
        '    Next

        '    If PpSzSTS = False Then

        '        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
        '                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                PpSzSTS = True
        '                Exit For
        '            End If
        '        Next

        '        If PpSzSTS = False Then
        '            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                    PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                    Exit For
        '                End If
        '            Next
        '        End If

        '    End If

        'End If

        PrntCnt = 1
        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            If PrntCnt2ndPageSTS = False Then
                PrntCnt = 2
            End If
        End If

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10
            .Right = 50
            .Top = 10
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        Else
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        End If
        'pFont = New Font("Calibri", 11, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With

        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            NoofItems_PerPage = 4
            TxtHgt = 15


        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            NoofItems_PerPage = 18
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1423" Then
            NoofItems_PerPage = 30
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1234" Then
            NoofItems_PerPage = 3
            TxtHgt = 14

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL) Then 
            NoofItems_PerPage = 3
            TxtHgt = 14.75 '17.5 '20
        Else

            NoofItems_PerPage = 4
            TxtHgt = 15 '17.5 '20
        End If

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            NoofItems_PerPage = NoofItems_PerPage - 1
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        '    NoofItems_PerPage = 4
        'Else
        '    NoofItems_PerPage = 5
        'End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60 : ClAr(7) = 70 : ClAr(8) = 60
            ClAr(9) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8))
        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60
            ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))
        Else
            ClAr(1) = Val(35) : ClAr(2) = 280 : ClAr(3) = 100 : ClAr(4) = 80 : ClAr(5) = 100 : ClAr(6) = 60
            ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))
        End If


        '16 '18



        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        PrntCnt2ndPageSTS = False
        TpMargin = TMargin
        If Trim(Common_Procedures.settings.CustomerCode) = "1037" And vPrnt_2Copy_In_SinglePage = 1 Then
            PCnt = PCnt + 1
            PrntCnt = PrntCnt + 1
        End If

        For PCnt = 1 To PrntCnt

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 Then
                    prn_PageNo1 = prn_PageNo

                    prn_DetIndx1 = prn_DetIndx
                    prn_DetSNo1 = prn_DetSNo
                    prn_NoofBmDets1 = prn_NoofBmDets
                    TpMargin = TMargin


                Else

                    prn_PageNo = prn_PageNo1
                    prn_NoofBmDets = prn_NoofBmDets1
                    prn_DetIndx = prn_DetIndx1
                    prn_DetSNo = prn_DetSNo1

                    TpMargin = 560 + TMargin  ' 600 + TMargin


                End If

            End If

            Try
                If prn_HdDt.Rows.Count > 0 Then

                    Printing_Delivery_Format_1420_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                    NoofDets = 0

                    CurY = CurY - 10

                    If prn_DetDt.Rows.Count > 0 Then

                        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                            If NoofDets >= NoofItems_PerPage Then
                                If PCnt = 2 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then

                                    NoofDets = NoofDets + 1

                                    CurY = CurY + TxtHgt

                                    Common_Procedures.Print_To_PrintDocument(e, "Continued....", PageWidth - 10, CurY, 1, 0, pFont)


                                    Printing_Delivery_Format_1420_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                    prn_DetIndx = prn_DetIndx + NoofItems_PerPage

                                    e.HasMorePages = True

                                    Return

                                End If

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued...", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, pFont)

                                NoofDets = NoofDets + 1

                                Printing_Delivery_Format_1420_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True
                                Return

                            End If


                            ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Description").ToString)
                            If Trim(ItmNm1) = "" Then
                                ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Name").ToString)
                            End If
                            ItmNm2 = ""
                            If Len(ItmNm1) > 40 Then
                                For I = 40 To 1 Step -1
                                    If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                                Next I
                                If I = 0 Then I = 40
                                ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                                ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                            End If


                            If Len(ItmNm2) > 40 Then
                                For I = 40 To 1 Step -1
                                    If Mid$(Trim(ItmNm2), I, 1) = " " Or Mid$(Trim(ItmNm2), I, 1) = "," Or Mid$(Trim(ItmNm2), I, 1) = "." Or Mid$(Trim(ItmNm2), I, 1) = "-" Or Mid$(Trim(ItmNm2), I, 1) = "/" Or Mid$(Trim(ItmNm2), I, 1) = "_" Or Mid$(Trim(ItmNm2), I, 1) = "(" Or Mid$(Trim(ItmNm2), I, 1) = ")" Or Mid$(Trim(ItmNm2), I, 1) = "\" Or Mid$(Trim(ItmNm2), I, 1) = "[" Or Mid$(Trim(ItmNm2), I, 1) = "]" Or Mid$(Trim(ItmNm2), I, 1) = "{" Or Mid$(Trim(ItmNm2), I, 1) = "}" Then Exit For
                                Next I
                                If I = 0 Then I = 40
                                ItmNm3 = Microsoft.VisualBasic.Right(Trim(ItmNm2), Len(ItmNm2) - I)
                                ItmNm2 = Microsoft.VisualBasic.Left(Trim(ItmNm2), I - 1)
                            End If


                            If Len(ItmNm3) > 40 Then
                                For I = 40 To 1 Step -1
                                    If Mid$(Trim(ItmNm3), I, 1) = " " Or Mid$(Trim(ItmNm3), I, 1) = "," Or Mid$(Trim(ItmNm3), I, 1) = "." Or Mid$(Trim(ItmNm3), I, 1) = "-" Or Mid$(Trim(ItmNm3), I, 1) = "/" Or Mid$(Trim(ItmNm3), I, 1) = "_" Or Mid$(Trim(ItmNm3), I, 1) = "(" Or Mid$(Trim(ItmNm3), I, 1) = ")" Or Mid$(Trim(ItmNm3), I, 1) = "\" Or Mid$(Trim(ItmNm3), I, 1) = "[" Or Mid$(Trim(ItmNm3), I, 1) = "]" Or Mid$(Trim(ItmNm3), I, 1) = "{" Or Mid$(Trim(ItmNm3), I, 1) = "}" Then Exit For
                                Next I
                                If I = 0 Then I = 40
                                ItmNm4 = Microsoft.VisualBasic.Right(Trim(ItmNm3), Len(ItmNm3) - I)
                                ItmNm3 = Microsoft.VisualBasic.Left(Trim(ItmNm3), I - 1)
                            End If


                            CurY = CurY + TxtHgt + 10
                            sno = sno + 1
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetDt.Rows(prn_DetIndx).Item("Sl_No").ToString), LMargin + 15, CurY, 0, 0, pFont)
                            'Common_Procedures.Print_To_PrintDocument(e, sno, LMargin + 15, CurY, 0, 0, pFont)


                            'If Trim(Common_Procedures.settings.CustomerCode) = "1234" Then

                            '    Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            'End If
                            Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Item_HSN_Code").ToString, LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)

                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetDt.Rows(prn_DetIndx).Item("Bales_Nos").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)

                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Pcs").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Or Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            'CurRow = dgv_Details.CurrentCell.RowIndex
                            'If Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 0 Or Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 100 Then
                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")

                            'Else

                            '    fmt = ((100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) / 100) * Val(dgv_Details.Rows(CurRow).Cells(7).Value)

                            '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1035" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1152" Then
                            '        fmt = Format(Math.Abs(Val(fmt)), "######0.00")
                            '        fmt = Common_Procedures.Meter_RoundOff(fmt)
                            '    End If

                            '    If (100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) > 0 Then
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) - Val(fmt), "#########0.00")
                            '    Else
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) + Val(fmt), "#########0.00")
                            '    End If

                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(fldmtr) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")


                            'End If




                            vAmt = Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString) * Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString)
                            vprn_TotAmt = Val(vprn_TotAmt) + Val(vAmt)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(vAmt), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 0 And Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 100 Then
                                    CurY = CurY + TxtHgt
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) & " CM  Folding ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                    NoofDets = NoofDets + 1
                                End If
                            End If

                            NoofDets = NoofDets + 1

                            If Trim(ItmNm2) <> "" Then
                                CurY = CurY + TxtHgt - 5
                                Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm2), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If

                            If Trim(ItmNm3) <> "" Then
                                CurY = CurY + TxtHgt - 5
                                Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm3), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If

                            If Trim(ItmNm4) <> "" Then
                                CurY = CurY + TxtHgt - 5
                                Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm4), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If

                            prn_DetIndx = prn_DetIndx + 1

                        Loop

                    End If

                    Printing_Delivery_Format_1420_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                End If


            Catch ex As Exception
                MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then
                    If prn_DetDt.Rows.Count > prn_NoofBmDets Then
                        PrntCnt2ndPageSTS = True
                        e.HasMorePages = True
                        cnt = 6
                        Return
                    End If
                End If
            End If

            PrntCnt2ndPageSTS = False

        Next PCnt


LOOP2:

        prn_Count = prn_Count + 1


        e.HasMorePages = False

        If Val(prn_TotCopies) > 1 Then
            If prn_Count < Val(prn_TotCopies) Then

                prn_DetIndx = 0
                'prn_DetSNo = 0
                prn_PageNo = 0
                prn_DetIndx = 0
                prn_NoofBmDets = 0
                vprn_TotAmt = 0

                e.HasMorePages = True
                Return

            End If

        End If
    End Sub

    Private Sub Printing_Delivery_Format_1420_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2, da3 As New SqlClient.SqlDataAdapter
        Dim dt2, dt3 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_Email As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single, strWidth As Single = 0
        Dim C1 As Single
        Dim W1, w2 As Single
        Dim S1, S2 As Single
        Dim vprn_BlNos As String = ""
        Dim Gst_dt As Date
        Dim Entry_dt As Date
        Dim CurX As Single = 0
        Dim vPackType As String = ""
        Dim suppRefNo As String = ""
        Dim payment As String = ""

        Dim vBalLen As Integer

        PageNo = PageNo + 1

        CurY = TMargin



        da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, d.ClothType_name from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        da2.Fill(dt2)

        If dt2.Rows.Count > NoofItems_PerPage Then
            Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        End If
        dt2.Clear()

        suppRefNo = ""
        payment = ""
        da3 = New SqlClient.SqlDataAdapter("select a.*, b.Clothsales_Order_no,b.payment_terms from ClothSales_Delivery_Details a INNER JOIN Clothsales_Order_Head b ON a.Clothsales_Order_Code = b.Clothsales_Order_Code  where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "'", con)
        dt3 = New DataTable
        da3.Fill(dt3)
        If dt3.Rows.Count > 0 Then
            suppRefNo = dt3.Rows(0).Item("ClothSales_Order_No").ToString
            payment = dt3.Rows(0).Item("payment_terms").ToString
        End If
        dt3.Clear()

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_Cap = "GSTIN : "
            Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        CurY = CurY + TxtHgt - 10

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            p1Font = New Font("Calibri", 16, FontStyle.Bold)
        Else
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
        End If

        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

            If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                If Not imageData Is Nothing Then
                    Using ms As New MemoryStream(imageData, 0, imageData.Length)
                        ms.Write(imageData, 0, imageData.Length)

                        If imageData.Length > 0 Then

                            '.BackgroundImage = Image.FromStream(ms)

                            ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)
                            e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 10, CurY + 5, 110, 100)

                        End If

                    End Using

                End If

            End If

        End If
        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

        Gst_dt = #7/1/2017#
        Entry_dt = dtp_Date.Value

        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt - 13  ' 10

        Else

            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_GSTIN_Cap), p1Font).Width
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_StateNm & "     " & Cmp_GSTIN_Cap & Cmp_GSTIN_No), pFont).Width
            If PrintWidth > strWidth Then
                CurX = LMargin + (PrintWidth - strWidth) / 2
            Else
                CurX = LMargin
            End If

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateCap, CurX, CurY, 0, 0, p1Font)
            strWidth = e.Graphics.MeasureString(Cmp_StateCap, p1Font).Width
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateNm, CurX, CurY, 0, 0, pFont)

            strWidth = e.Graphics.MeasureString(Cmp_StateNm, pFont).Width
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, "     " & Cmp_GSTIN_Cap, CurX, CurY, 0, PrintWidth, p1Font)
            strWidth = e.Graphics.MeasureString("     " & Cmp_GSTIN_Cap, p1Font).Width
            CurX = CurX + strWidth

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, CurX, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Trim(Cmp_PhNo & "   " & Cmp_Email), LMargin, CurY, 2, PrintWidth, pFont)

            CurY = CurY + TxtHgt - 1

        End If

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL)
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY TO JOBWORK", LMargin, CurY, 2, PrintWidth, p1Font)

            CurY = CurY + TxtHgt + 5
            p1Font = New Font("Calibri", 10, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "( NOT FOR SALE )", LMargin + 10, CurY, 0, 0, p1Font)
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "HSN/SAC CODE : 998821 ( Textile manufactring service )", PageWidth - 10, CurY, 1, 0, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        Else
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY CHALLAN", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3)
        W1 = e.Graphics.MeasureString("ORDER NO : ", pFont).Width
        w2 = e.Graphics.MeasureString("DELIVERY.At : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO  :  ", pFont).Width
        S2 = e.Graphics.MeasureString("TRANSPORT :  ", pFont).Width

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_MAInName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 11, FontStyle.Bold)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
        '    If payment <> "" Then
        '        Common_Procedures.Print_To_PrintDocument(e, "PAYMENT TERMS", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, payment, LMargin + C1 + W1 + 70, CurY, 0, 0, p1Font)
        '    End If
        'End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SIZING (SOMANUR)
            If Trim(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) <> "" Then
                If IsDate(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DESPATCH DATE & TIME", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
                End If
            End If

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            If suppRefNo <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, "SUPPLIER REF.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, suppRefNo & "        PAYMENT TERMS       :   " & payment, LMargin + C1 + W1 + 70, CurY, 0, 0, pFont)
            End If

        End If

        CurY = CurY + TxtHgt
        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            If Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, " TIN NO : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, pFont)
            End If

        Else
            If Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString) <> "" Then
                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN NO : " & Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, p1Font)
            End If

        End If


        If prn_HdDt.Rows(0).Item("Party_OrderNo").ToString <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString & "   P.O DATE    :   " & prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '---- BRT SIZING (SOMANUR)
        '    Common_Procedures.Print_To_PrintDocument(e, "PARTY ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, suppRefNo, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
        'End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then

            'CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "THROUGH  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Through_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

            'If Trim(prn_HdDt.Rows(0).Item("Vechile_No").ToString) <> "" Then

            '    CurY = CurY + TxtHgt

            '    S3 = e.Graphics.MeasureString("THROUGH     :   " & prn_HdDt.Rows(0).Item("Through_Name").ToString, pFont).Width + 30

            '    Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + S3 + 70, CurY, 0, 0, pFont)

            'End If

        End If


        Common_Procedures.Print_To_PrintDocument(e, "AGENT", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "DESP.TO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_To").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then
            Common_Procedures.Print_To_PrintDocument(e, "LR.NO  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If
        '  Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "DELIVERY .At", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString), LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "TRANSPORT ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("TransportName").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        'CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, "AGENT ", LMargin + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("EwayBill_No").ToString) <> "" Then

            Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No.", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("EwayBill_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'vprn_BlNos = ""
        'For i = 0 To prn_DetDt.Rows.Count - 1
        '    If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
        '        vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
        '    End If
        'Next
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress3").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)



        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString) <> "" Then

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If




        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString) <> "" Then
            p1Font = New Font("Calibri", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " GSTIN : " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, p1Font)

        End If

        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        'Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & vprn_BlNos, LMargin + C1 + 10, CurY, 0, 0, pFont)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1333" Then
            CurY = CurY + TxtHgt + 5

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1420" Then

            CurY = CurY + TxtHgt

        End If
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        pFont = New Font("Calibri", 10, FontStyle.Bold)
        CurY = CurY + 5

        Common_Procedures.Print_To_PrintDocument(e, "SNO", LMargin, CurY, 2, ClAr(1), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "CLOTH NAME", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "HSN CODE", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & "S", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Or Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
            Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "FOLD%", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)

        Else
            Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)

        End If

        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then

            Common_Procedures.Print_To_PrintDocument(e, "RATE", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)

            Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
            'Else
            '    Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY

    End Sub

    Private Sub Printing_Delivery_Format_1420_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim vPackType As String = ""
        Dim BLNo1 As String = ""
        Dim BLNo2 As String = ""
        Dim BLNo3 As String = ""
        Dim BLNo4 As String = ""
        Dim BLNo5 As String = ""
        Dim j As Integer = 0

        Dim vBalLen As Integer

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt

        Next

        CurY = IIf(CurY > 880, CurY, 880)
        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY

        CurY = CurY + 5
        If is_LastPage = True Then
            Common_Procedures.Print_To_PrintDocument(e, " TOTAL", LMargin + ClAr(1) + 30, CurY, 2, ClAr(4), pFont)
            Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(0).Item("Total_Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Pcs").ToString), "#########0"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(6) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(3))

        CurY = CurY + 10


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then ' cyber   

            vBalLen = 120

        Else

            vBalLen = 60

        End If


        vprn_BlNos = ""
        For j = 0 To prn_DetDt.Rows.Count - 1
            If Trim(prn_DetDt.Rows(j).Item("Bales_Nos").ToString) <> "" Then
                vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(j).Item("Bales_Nos").ToString
            End If
        Next

        BLNo1 = Trim(vprn_BlNos)
        BLNo2 = ""



        If Len(BLNo1) > Val(vBalLen) Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo1), i, 1) = " " Or Mid$(Trim(BLNo1), i, 1) = "," Or Mid$(Trim(BLNo1), i, 1) = "." Or Mid$(Trim(BLNo1), i, 1) = "-" Or Mid$(Trim(BLNo1), i, 1) = "/" Or Mid$(Trim(BLNo1), i, 1) = "_" Or Mid$(Trim(BLNo1), i, 1) = "(" Or Mid$(Trim(BLNo1), i, 1) = ")" Or Mid$(Trim(BLNo1), i, 1) = "\" Or Mid$(Trim(BLNo1), i, 1) = "[" Or Mid$(Trim(BLNo1), i, 1) = "]" Or Mid$(Trim(BLNo1), i, 1) = "{" Or Mid$(Trim(BLNo1), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - i)
            BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), i)
        End If


        If Len(BLNo2) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo2), i, 1) = " " Or Mid$(Trim(BLNo2), i, 1) = "," Or Mid$(Trim(BLNo2), i, 1) = "." Or Mid$(Trim(BLNo2), i, 1) = "-" Or Mid$(Trim(BLNo2), i, 1) = "/" Or Mid$(Trim(BLNo2), i, 1) = "_" Or Mid$(Trim(BLNo2), i, 1) = "(" Or Mid$(Trim(BLNo2), i, 1) = ")" Or Mid$(Trim(BLNo2), i, 1) = "\" Or Mid$(Trim(BLNo2), i, 1) = "[" Or Mid$(Trim(BLNo2), i, 1) = "]" Or Mid$(Trim(BLNo2), i, 1) = "{" Or Mid$(Trim(BLNo2), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo3 = Microsoft.VisualBasic.Right(Trim(BLNo2), Len(BLNo2) - i)
            BLNo2 = Microsoft.VisualBasic.Left(Trim(BLNo2), i)
        End If


        If Len(BLNo3) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo3), i, 1) = " " Or Mid$(Trim(BLNo3), i, 1) = "," Or Mid$(Trim(BLNo3), i, 1) = "." Or Mid$(Trim(BLNo3), i, 1) = "-" Or Mid$(Trim(BLNo3), i, 1) = "/" Or Mid$(Trim(BLNo3), i, 1) = "_" Or Mid$(Trim(BLNo3), i, 1) = "(" Or Mid$(Trim(BLNo3), i, 1) = ")" Or Mid$(Trim(BLNo3), i, 1) = "\" Or Mid$(Trim(BLNo3), i, 1) = "[" Or Mid$(Trim(BLNo3), i, 1) = "]" Or Mid$(Trim(BLNo3), i, 1) = "{" Or Mid$(Trim(BLNo3), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo4 = Microsoft.VisualBasic.Right(Trim(BLNo3), Len(BLNo3) - i)
            BLNo3 = Microsoft.VisualBasic.Left(Trim(BLNo3), i)
        End If


        If Len(BLNo4) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo4), i, 1) = " " Or Mid$(Trim(BLNo4), i, 1) = "," Or Mid$(Trim(BLNo4), i, 1) = "." Or Mid$(Trim(BLNo4), i, 1) = "-" Or Mid$(Trim(BLNo4), i, 1) = "/" Or Mid$(Trim(BLNo4), i, 1) = "_" Or Mid$(Trim(BLNo4), i, 1) = "(" Or Mid$(Trim(BLNo4), i, 1) = ")" Or Mid$(Trim(BLNo4), i, 1) = "\" Or Mid$(Trim(BLNo4), i, 1) = "[" Or Mid$(Trim(BLNo4), i, 1) = "]" Or Mid$(Trim(BLNo4), i, 1) = "{" Or Mid$(Trim(BLNo4), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo5 = Microsoft.VisualBasic.Right(Trim(BLNo4), Len(BLNo4) - i)
            BLNo4 = Microsoft.VisualBasic.Left(Trim(BLNo4), i)
        End If


        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"


        '***********CMD BY LALITH 2025_06_19

        'Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & BLNo1, LMargin + 10, CurY, 0, 0, pFont)

        '***********CMD BY LALITH 2025_06_19

        'p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
        '    '  p1Font = New Font("CALIBRI", 10, FontStyle.Bold)


        '    If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

        '        'Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 1, 0, p1Font)

        '        Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt
        '        Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(7) + ClAr(1), CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt

        '        Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '    ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

        '        'Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, 0, p1Font)
        '        Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt
        '        Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '    End If


        'End If
        'If Common_Procedures.settings.CustomerCode = "1186" Then

        '    Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        '    p1Font = New Font("Calibri", 12, FontStyle.Bold)
        '    Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)
        '    CurY = CurY + TxtHgt
        'End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
            If Val(vprn_TotAmt) <> 0 Then
                p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
                If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) = 0 Then
                    Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
                End If
            End If
        End If



        'If Trim(BLNo2) <> "" Then
        '    CurY = CurY + TxtHgt
        '    Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo2, LMargin + 10, CurY, 0, 0, pFont)
        'End If

        'If Trim(BLNo3) <> "" Then
        '    CurY = CurY + TxtHgt
        '    Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo3, LMargin + 10, CurY, 0, 0, pFont)
        'End If

        'If Trim(BLNo4) <> "" Then
        '    CurY = CurY + TxtHgt
        '    Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo4, LMargin + 10, CurY, 0, 0, pFont)
        'End If

        'If Trim(BLNo5) <> "" Then
        '    CurY = CurY + TxtHgt
        '    Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo5, LMargin + 10, CurY, 0, 0, pFont)
        'End If


        If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

            p1Font = New Font("CALIBRI", 10, FontStyle.Bold)

            CurY = CurY + TxtHgt

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)

                If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                End If


            End If
        End If



        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            CurY = CurY + TxtHgt + 15

        Else

            CurY = CurY + TxtHgt

        End If





        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "NOTE : " & prn_HdDt.Rows(0).Item("Note").ToString, LMargin + 10, CurY, 0, 0, pFont)
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1186" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
            Dim VNetAmt As String = 0
            VNetAmt = Format(Val(prn_HdDt.Rows(0).Item("Net_Amount").ToString), "##########0")
            Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(VNetAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
        End If

        If Trim(BLNo2) = "" Then
            CurY = CurY + TxtHgt - 5
        End If
        CurY = CurY + TxtHgt + 5
        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "(NOT FOR SALE ONLY JOBWORK PROCESS)", LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Common_Procedures.User.IdNo <> 1 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + 20, CurY, 0, 0, pFont)
        End If


        If Common_Procedures.settings.CustomerCode = "1420" Or Common_Procedures.settings.CustomerCode = "1423" Then
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
        End If


        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        p1Font = New Font("Calibri", 12, FontStyle.Bold)

        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            CurY = CurY + TxtHgt + 25
        Else
            CurY = CurY + TxtHgt
        End If
        Common_Procedures.Print_To_PrintDocument(e, "Prepared By", LMargin + 20, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 170, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 320, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 250, CurY, 0, 0, pFont)
        End If

        If Trim(Common_Procedures.settings.CustomerCode) <> "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If
        If Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signature", PageWidth - 15, CurY, 1, 0, pFont)

        End If
        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Public Sub Printing_Bundle_1578()
        Dim prtFrm As Single = 0
        Dim prtTo As Single = 0
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim Condt As String = ""
        Dim PpSzSTS As Boolean = False
        Dim ps As Printing.PaperSize
        Dim NewCode As String
        Dim Def_PrntrNm As String = ""
        Dim vFILNm As String = ""
        Dim vFLPATH As String = ""
        Dim vPDFFLPATH_and_NAME As String = ""
        Dim vPRNTRNAME As String
        Dim vPARTYNM As String = ""
        Dim v1st_CLONM As String = ""

        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Try


            da1 = New SqlClient.SqlDataAdapter("select a.*, b.* from Packing_Slip_Head a INNER JOIN Cloth_Head b ON a.Cloth_IdNo <> 0 and a.Cloth_IdNo = b.Cloth_IdNo Where a.Delivery_Code = '" & Trim(NewCode) & "'  or a.Delivery_Code IN ( select 'CSDLV-' + sq1.ClothSales_Delivery_Code from ClothSales_Invoice_Details sq1 where sq1.ClothSales_Invoice_Code = '" & Trim(NewCode) & "' and sq1.Invoice_Selection_Type = 'DELIVERY' and sq1.ClothSales_Delivery_Code <> '')", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count <= 0 Then

                MessageBox.Show("No Entry Found", "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub

            End If

            dt1.Dispose()
            da1.Dispose()

            NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

            vPARTYNM = ""
            v1st_CLONM = ""
            da1 = New SqlClient.SqlDataAdapter("Select a.*, b.* from ClothSales_Delivery_Head a LEFT OUTER JOIN ClothSales_Delivery_Details b ON a.ClothSales_Delivery_Code = b.ClothSales_Delivery_Code Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "' Order by a.ClothSales_Delivery_Code, b.sl_no", con)
            dt1 = New DataTable
            da1.Fill(dt1)
            If dt1.Rows.Count >= 0 Then
                vPARTYNM = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("Ledger_IdNo").ToString))
                If IsDBNull(dt1.Rows(0).Item("Cloth_IdNo").ToString) = False Then
                    v1st_CLONM = Common_Procedures.Cloth_IdNoToName(con, Val(dt1.Rows(0).Item("Cloth_IdNo").ToString))
                End If
            End If
            dt1.Clear()


        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        For I = 0 To PrintDocument7.PrinterSettings.PaperSizes.Count - 1
            If PrintDocument7.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                ps = PrintDocument7.PrinterSettings.PaperSizes(I)
                PrintDocument7.DefaultPageSettings.PaperSize = ps
                Exit For
            End If
        Next

        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then

            Try

                If Print_PDF_Status = True Then

                    vFLPATH = ""
                    vPRNTRNAME = Common_Procedures.get_PDF_PrinterName(EMAIL_Status, WHATSAPP_Status, vFLPATH)

                    If Trim(vPRNTRNAME) = "" Then
                        Exit Sub
                    End If

                    Def_PrntrNm = PrintDocument1.PrinterSettings.PrinterName

                    vPARTYNM = Common_Procedures.Replace_SpecialCharacters_With_UnderScore(vPARTYNM)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SPINNERS PRIVATE LIMITED (FABRIC DIVISION)
                        vFILNm = Trim("PackingList_of_Invoice_" & Trim(lbl_DcNo.Text) & "_" & Trim(vPARTYNM) & ".pdf")
                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1489" Then '-----K V P WEAVES (ANNUR)
                        v1st_CLONM = Common_Procedures.Replace_SpecialCharacters_With_UnderScore(v1st_CLONM)
                        vFILNm = Trim("PackingList_of_Invoice_" & Trim(lbl_DcNo.Text) & "_" & Trim(vPARTYNM) & "_" & Trim(v1st_CLONM) & ".pdf")
                    Else
                        vFILNm = Trim("PackingList_of_Invoice_" & Trim(lbl_DcNo.Text) & ".pdf")
                    End If
                    'vFILNm = Trim("PackingList_" & Trim(lbl_BaleRefNo.Text) & ".pdf")

                    vFILNm = StrConv(vFILNm, vbProperCase)
                    vPDFFLPATH_and_NAME = Trim(vFLPATH) & "\" & Trim(vFILNm)
                    vEMAIL_Attachment_FileName = Trim(vPDFFLPATH_and_NAME)

                    PrintDocument7.DocumentName = Trim(vFILNm)
                    PrintDocument7.PrinterSettings.PrinterName = Trim(vPRNTRNAME)    ' "Microsoft Print to PDF"
                    'PrintDocument6.PrinterSettings.PrinterName = "doPDF v7"
                    PrintDocument7.PrinterSettings.PrintToFile = True
                    PrintDocument7.PrinterSettings.PrintFileName = Trim(vPDFFLPATH_and_NAME)
                    PrintDocument7.Print()

                    PrintDocument7.PrinterSettings.PrinterName = Trim(Def_PrntrNm)
                    Print_PDF_Status = False


                    ''--This is actual & correct 
                    'PrintDocument6.DocumentName = "BundleSlip"
                    'PrintDocument6.PrinterSettings.PrinterName = "doPDF v7"
                    'PrintDocument6.PrinterSettings.PrintFileName = "c:\BundleSlip.pdf"
                    'PrintDocument6.Print()

                Else


                    If Val(Common_Procedures.settings.Printing_Show_PrintDialogue) = 1 Then
                        PrintDialog1.PrinterSettings = PrintDocument7.PrinterSettings
                        If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                            PrintDocument7.PrinterSettings = PrintDialog1.PrinterSettings
                            PrintDocument7.Print()
                        End If

                    Else
                        PrintDocument7.Print()

                    End If

                End If


            Catch ex As Exception
                MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT SHOW PRINT PREVIEW...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                ppd.Document = PrintDocument7

                ppd.WindowState = FormWindowState.Maximized
                ppd.StartPosition = FormStartPosition.CenterScreen
                'ppd.ClientSize = New Size(600, 600)
                ppd.PrintPreviewControl.AutoZoom = True
                ppd.PrintPreviewControl.Zoom = 1.0

                ppd.ShowDialog()

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If

        pnl_Back.Enabled = True
        pnl_Print.Visible = False

    End Sub

    Private Sub PrintDocument7_PrintPage(sender As Object, e As PrintPageEventArgs) Handles PrintDocument7.PrintPage
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim DT1 As New DataTable
        Dim EntryCode As String
        Dim prn_NoofBmDets As String
        Dim vPartyCityName As String
        Dim vPACKINGSLIPDATE As String
        Dim vFOLDING As String
        Dim vPartyName As String = ""
        Dim vPacking_SlipNo As String = ""
        Dim vDCNo As String = ""
        Dim vClothSales_Inv_No As String = ""
        Dim vClothSales_Inv_Date As String = ""
        Dim vCloth_name As String = ""
        Dim vDeliveryTo_Name As String = ""
        Dim vPack_Type_Name As String = ""
        Dim vWeight_Column_Status As Integer = 0
        Dim vVehicle_No As String = ""
        Dim vfold As String
        Dim vClothDelv_No As String = ""
        Dim vClothDelv_Date As String = ""

        vPartyName = prn_HdDt.Rows(0).Item("Ledger_mainName").ToString
        vPartyCityName = ""
        If Trim(prn_HdDt.Rows(0).Item("City_Town").ToString) <> "" Then
            vPartyCityName = prn_HdDt.Rows(0).Item("City_Town").ToString

        ElseIf Trim(prn_HdDt.Rows(0).Item("Ledger_Address4").ToString) = "" Then
            vPartyCityName = prn_HdDt.Rows(0).Item("Ledger_Address4").ToString

        ElseIf Trim(prn_HdDt.Rows(0).Item("Ledger_Address3").ToString) = "" Then
            vPartyCityName = prn_HdDt.Rows(0).Item("Ledger_Address3").ToString

        ElseIf Trim(prn_HdDt.Rows(0).Item("Ledger_Address2").ToString) = "" Then
            vPartyCityName = prn_HdDt.Rows(0).Item("Ledger_Address2").ToString

        Else
            vPartyCityName = prn_HdDt.Rows(0).Item("Ledger_Address1").ToString

        End If

        vPack_Type_Name = prn_HdDt.Rows(0).Item("Packing_Type").ToString
        vClothDelv_No = prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString
        vClothDelv_Date = Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString
        vCloth_name = prn_HdDt.Rows(0).Item("Cloth_name").ToString
        vDeliveryTo_Name = Common_Procedures.Ledger_IdNoToName(con, prn_HdDt.Rows(0).Item("DeliveryTo_Idno").ToString)

        If prn_DetDt.Rows.Count > 0 Then
            vPacking_SlipNo = prn_DetDt.Rows(0).Item("Packing_Slip_No").ToString
        End If

        vWeight_Column_Status = 0
        'If Val(prn_HdDt.Rows(0).Item("wgt_mtr_sts").ToString) = 1 Then
        '    vWeight_Column_Status = 1
        'End If

        vfold = 0
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1489" Then '-----K V P WEAVES (ANNUR)
            If prn_DetDt.Rows.Count > 0 Then
                vfold = Val(prn_DetDt.Rows(0).Item("folding").ToString)
                If Val(vfold) = 0 Then vfold = 100
            End If

        End If

        vtot_pcs = Val(prn_HdDt.Rows(0).Item("total_pcs").ToString)
        vTot_Mtrs = Format(Val(prn_HdDt.Rows(0).Item("total_Meters").ToString), "########0.00")
        'vtot_wgt = Format(Val(prn_DetDt.Rows(0).Item("total_Weight").ToString), "########0.000")
        vVehicle_No = prn_HdDt.Rows(0).Item("Vechile_No").ToString


        Common_Procedures.Printing_PackingSlip_Format_1578(PrintDocument7, e, prn_HdDt, prn_DetDt, prn_DetMxIndx, prn_DetAr1, prn_PageNo, prn_Count, prn_HdIndx, prn_DetIndx, prn_NoofBmDets, vWeight_Column_Status, vPacking_SlipNo, vClothSales_Inv_No, vClothSales_Inv_Date, vPartyName, vPartyCityName, vDeliveryTo_Name, vCloth_name, vPack_Type_Name, vtot_pcs, vTot_Mtrs, vtot_wgt, vVehicle_No, vfold, vClothDelv_No, vPACKINGSLIPDATE, vClothDelv_Date)


    End Sub

    Private Sub PrintDocument7_BeginPrint(sender As Object, e As PrintEventArgs) Handles PrintDocument7.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim NewCode As String = ""
        Dim LmIdNo As Integer = 0
        Dim da3 As New SqlClient.SqlDataAdapter
        Dim dt3 As New DataTable
        Dim vSNO As Integer = 0

        prn_TotalWgt = 0
        prn_TotalMtrs = 0

        NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_HdDt.Clear()
        prn_DetDt.Clear()

        prn_DetIndx = 1
        prn_PageNo = 0
        prn_NoofBmDets = 0
        prn_DetMxIndx = 0


        Erase prn_HdAr
        Erase prn_DetAr

        Erase prn_DetAr1

        prn_DetAr1 = New String(500, 10) {}

        Try

            vSNO = 0
            da1 = New SqlClient.SqlDataAdapter("select a.*,b.*,L.*,c.cloth_name from ClothSales_Delivery_Head a INNER JOIN Company_head b ON a.company_idno = b.Company_Idno INNER JOIN Ledger_Head L ON a.Ledger_IdNo = L.Ledger_IdNo INNER JOIN ClothSales_Delivery_Details Cd ON a.ClothSales_Delivery_code = Cd.ClothSales_Delivery_code INNER JOIN Cloth_Head C ON cd.Cloth_IdNo = C.Cloth_IdNo Where a.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)

            If prn_HdDt.Rows.Count > 0 Then
                da2 = New SqlClient.SqlDataAdapter("select a.*, b.Total_Weight,b.Bale_Bundle,b.Total_Pcs,b.net_Weight,b.Total_Meters,b.Gross_Weight as grs_wgt from Packing_Slip_Details a, Packing_Slip_Head b Where a.Packing_Slip_Code = b.Packing_Slip_Code and ( b.Delivery_Code = '" & Trim(NewCode) & "' or b.Delivery_Code IN ( select 'CSDLV-' + sq1.ClothSales_Delivery_Code from ClothSales_Delivery_Details sq1 where sq1.ClothSales_Delivery_Code = '" & Trim(NewCode) & "'  and sq1.ClothSales_Delivery_Code <> '')  ) order by b.Packing_Slip_Date, b.for_orderby, b.Packing_Slip_No, b.Packing_Slip_Code, a.Sl_No", con)
                prn_DetDt = New DataTable
                da2.Fill(prn_DetDt)

                If prn_DetDt.Rows.Count > 0 Then

                    For i = 0 To prn_DetDt.Rows.Count - 1

                        If Val(prn_DetDt.Rows(i).Item("Meters").ToString) <> 0 Then

                            prn_DetMxIndx = prn_DetMxIndx + 1

                            vSNO = vSNO + 1

                            prn_DetAr1(prn_DetMxIndx, 1) = vSNO  ' Trim(prn_DetDt.Rows(i).Item("Sl_No").ToString)

                            prn_DetAr1(prn_DetMxIndx, 2) = Trim(prn_DetDt.Rows(i).Item("Lot_no").ToString)

                            prn_DetAr1(prn_DetMxIndx, 3) = Trim(prn_DetDt.Rows(i).Item("pcs_no").ToString)

                            prn_DetAr1(prn_DetMxIndx, 4) = Format(Val(prn_DetDt.Rows(i).Item("Meters").ToString), "#########0.00")
                            'prn_TotalMtrs = Val(prn_TotalMtrs) + Format(Val(prn_DetDt.Rows(i).Item("Meters").ToString), "#########0.00")
                            prn_DetAr1(prn_DetMxIndx, 5) = Format(Val(prn_DetDt.Rows(i).Item("Weight").ToString), "#########0.000")
                            'prn_TotalWgt = Val(prn_TotalWgt) + Format(Val(prn_DetDt.Rows(i).Item("Weight").ToString), "#########0.00")
                            prn_DetAr1(prn_DetMxIndx, 6) = Format(Val(prn_DetDt.Rows(i).Item("Weight_meter").ToString), "#########0.000")

                            prn_DetAr1(prn_DetMxIndx, 7) = Trim(prn_DetDt.Rows(i).Item("Packing_Slip_No").ToString) + "/" + prn_DetAr1(prn_DetMxIndx, 1)

                        End If
                    Next i
                End If

            Else

                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

            End If

            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try
    End Sub
    Private Sub btn_Print_Bundle_Without_Weight_Click(sender As Object, e As EventArgs) Handles btn_Print_Bundle_Without_Weight.Click
        EMAIL_Status = False
        WHATSAPP_Status = False
        vPACKING_LIST_PRINT_WITHOUT_WGT_STS = True
        If Common_Procedures.settings.CustomerCode = "1186" Then
            Printing_Packing_slip()
        ElseIf Common_Procedures.settings.CustomerCode = "1428" Or Common_Procedures.settings.CustomerCode = "1578" Then
            vPrnt_PackSlip_Wgt = False
            Printing_Packing_slip()
        ElseIf Common_Procedures.settings.CustomerCode = "1520" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1569" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1608" Then
            Printing_Delivery_cum_PackingList()
        Else
            Printing_Bundle()
        End If
        btn_print_Close_Click(sender, e)
    End Sub

    Private Sub Printing_Delivery_Format1267(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim ItmNm1 As String, ItmNm2 As String
        'Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        'Dim PpSzSTS As Boolean = False
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0
        Dim TpMargin As Single = 0
        Dim cnt As Integer = 0
        Dim Tot_Mtr As Integer = 0, Tot_Rt As Integer = 0
        Dim vAmt As String = 0
        Dim fldmtr As String = 0 'Double = 0
        Dim fmt As Double = 0
        Dim CurRow As Integer = 0
        Dim sno As Integer = 0
        Dim p1Font As Font

        set_PaperSize_For_PrintDocument1()

        'If Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_Custom8X6_As_Default_PaperSize) = 1 Then
        '    Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
        '    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.Landscape = False

        'ElseIf Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_A4_As_Default_PaperSize) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next

        'ElseIf Val(vPrnt_2Copy_In_SinglePage) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next



        'Else

        '    PpSzSTS = False

        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '        'Debug.Print(ps.PaperName)
        '        If ps.Width = 800 And ps.Height = 600 Then
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            PpSzSTS = True
        '            Exit For
        '        End If
        '    Next

        '    If PpSzSTS = False Then

        '        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
        '                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                PpSzSTS = True
        '                Exit For
        '            End If
        '        Next

        '        If PpSzSTS = False Then
        '            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                    PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                    Exit For
        '                End If
        '            Next
        '        End If

        '    End If

        'End If

        PrntCnt = 1
        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            If PrntCnt2ndPageSTS = False Then
                PrntCnt = 2
            End If
        End If

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10
            .Right = 50
            .Top = 10
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        Else
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        End If
        'pFont = New Font("Calibri", 11, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With

        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            NoofItems_PerPage = 4
            TxtHgt = 15


        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            NoofItems_PerPage = 30
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1423" Then
            NoofItems_PerPage = 30
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1234" Then
            NoofItems_PerPage = 3
            TxtHgt = 14

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL) Then 
            NoofItems_PerPage = 3
            TxtHgt = 14.75 '17.5 '20
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then
            NoofItems_PerPage = 30
            TxtHgt = 17
        Else

            NoofItems_PerPage = 4
            TxtHgt = 15 '17.5 '20
        End If

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            NoofItems_PerPage = NoofItems_PerPage - 1
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        '    NoofItems_PerPage = 4
        'Else
        '    NoofItems_PerPage = 5
        'End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60 : ClAr(7) = 70 : ClAr(8) = 60
            ClAr(9) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8))
        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60
            ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))
        Else
            ClAr(1) = Val(35) : ClAr(2) = 280 : ClAr(3) = 100 : ClAr(4) = 80 : ClAr(5) = 100
            ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))
        End If


        '16 '18

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        PrntCnt2ndPageSTS = False
        TpMargin = TMargin
        If Trim(Common_Procedures.settings.CustomerCode) = "1037" And vPrnt_2Copy_In_SinglePage = 1 Then
            PCnt = PCnt + 1
            PrntCnt = PrntCnt + 1
        End If

        For PCnt = 1 To PrntCnt

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 Then
                    prn_PageNo1 = prn_PageNo

                    prn_DetIndx1 = prn_DetIndx
                    prn_DetSNo1 = prn_DetSNo
                    prn_NoofBmDets1 = prn_NoofBmDets
                    TpMargin = TMargin


                Else

                    prn_PageNo = prn_PageNo1
                    prn_NoofBmDets = prn_NoofBmDets1
                    prn_DetIndx = prn_DetIndx1
                    prn_DetSNo = prn_DetSNo1

                    TpMargin = 560 + TMargin  ' 600 + TMargin

                End If

            End If

            Try
                If prn_HdDt.Rows.Count > 0 Then

                    Printing_Delivery_Format1267_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                    NoofDets = 0

                    CurY = CurY - 10

                    If prn_DetDt.Rows.Count > 0 Then

                        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                            If NoofDets >= NoofItems_PerPage Then
                                If PCnt = 2 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then

                                    NoofDets = NoofDets + 1

                                    CurY = CurY + TxtHgt

                                    Common_Procedures.Print_To_PrintDocument(e, "Continued....", PageWidth - 10, CurY, 1, 0, pFont)


                                    Printing_Delivery_Format1267_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                    prn_DetIndx = prn_DetIndx + NoofItems_PerPage

                                    e.HasMorePages = True

                                    Return

                                End If

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued...", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, pFont)

                                NoofDets = NoofDets + 1

                                Printing_Delivery_Format1267_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True
                                Return

                            End If


                            ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Description").ToString)
                            If Trim(ItmNm1) = "" Then
                                ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Name").ToString)
                            End If
                            ItmNm2 = ""
                            If Len(ItmNm1) > 40 Then
                                For I = 40 To 1 Step -1
                                    If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                                Next I
                                If I = 0 Then I = 40
                                ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                                ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                            End If

                            CurY = CurY + TxtHgt
                            sno = sno + 1
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetDt.Rows(prn_DetIndx).Item("Sl_No").ToString), LMargin + 15, CurY, 0, 0, pFont)
                            'Common_Procedures.Print_To_PrintDocument(e, sno, LMargin + 15, CurY, 0, 0, pFont)


                            'If Trim(Common_Procedures.settings.CustomerCode) = "1234" Then

                            '    Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            'End If
                            Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Item_HSN_Code").ToString, LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Pcs").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Or Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            'CurRow = dgv_Details.CurrentCell.RowIndex
                            'If Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 0 Or Val(dgv_Details.Rows(CurRow).Cells(3).Value) = 100 Then
                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")

                            'Else

                            '    fmt = ((100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) / 100) * Val(dgv_Details.Rows(CurRow).Cells(7).Value)

                            '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1035" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1152" Then
                            '        fmt = Format(Math.Abs(Val(fmt)), "######0.00")
                            '        fmt = Common_Procedures.Meter_RoundOff(fmt)
                            '    End If

                            '    If (100 - Val(dgv_Details.Rows(CurRow).Cells(3).Value)) > 0 Then
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) - Val(fmt), "#########0.00")
                            '    Else
                            '        fldmtr = Format(Val(dgv_Details.Rows(CurRow).Cells(7).Value) + Val(fmt), "#########0.00")
                            '    End If

                            '    dgv_Details.Rows(CurRow).Cells(9).Value = Format(Val(fldmtr) * Val(dgv_Details.Rows(CurRow).Cells(8).Value), "#########0.00")


                            'End If




                            vAmt = Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString) * Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString)
                            vprn_TotAmt = Val(vprn_TotAmt) + Val(vAmt)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(vAmt), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 0 And Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 100 Then
                                    CurY = CurY + TxtHgt
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) & " CM  Folding ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                    NoofDets = NoofDets + 1
                                End If
                            End If

                            NoofDets = NoofDets + 1

                            If Trim(ItmNm2) <> "" Then
                                CurY = CurY + TxtHgt - 5
                                Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm2), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If

                            prn_DetIndx = prn_DetIndx + 1

                        Loop

                    End If

                    Printing_Delivery_Format1267_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                End If


            Catch ex As Exception
                MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then
                    If prn_DetDt.Rows.Count > prn_NoofBmDets Then
                        PrntCnt2ndPageSTS = True
                        e.HasMorePages = True
                        cnt = 6
                        Return
                    End If
                End If
            End If

            PrntCnt2ndPageSTS = False

        Next PCnt


LOOP2:

        prn_Count = prn_Count + 1


        e.HasMorePages = False

        If Val(prn_TotCopies) > 1 Then
            If prn_Count < Val(prn_TotCopies) Then

                prn_DetIndx = 0
                'prn_DetSNo = 0
                prn_PageNo = 0
                prn_DetIndx = 0
                prn_NoofBmDets = 0
                vprn_TotAmt = 0

                e.HasMorePages = True
                Return

            End If

        End If
    End Sub

    Private Sub Printing_Delivery_Format1267_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2, da3 As New SqlClient.SqlDataAdapter
        Dim dt2, dt3 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_Email As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single, strWidth As Single = 0
        Dim C1 As Single
        Dim W1, w2 As Single
        Dim S1, S2 As Single
        Dim vprn_BlNos As String = ""
        Dim Gst_dt As Date
        Dim Entry_dt As Date
        Dim CurX As Single = 0
        Dim vPackType As String = ""
        Dim suppRefNo As String = ""
        Dim payment As String = ""
        PageNo = PageNo + 1

        CurY = TMargin

        da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, d.ClothType_name from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        da2.Fill(dt2)

        If dt2.Rows.Count > NoofItems_PerPage Then
            Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        End If
        dt2.Clear()

        suppRefNo = ""
        payment = ""
        da3 = New SqlClient.SqlDataAdapter("select a.*, b.Clothsales_Order_no,b.payment_terms from ClothSales_Delivery_Details a INNER JOIN Clothsales_Order_Head b ON a.Clothsales_Order_Code = b.Clothsales_Order_Code  where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "'", con)
        dt3 = New DataTable
        da3.Fill(dt3)
        If dt3.Rows.Count > 0 Then
            suppRefNo = dt3.Rows(0).Item("ClothSales_Order_No").ToString
            payment = dt3.Rows(0).Item("payment_terms").ToString
        End If
        dt3.Clear()

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_Cap = "GSTIN : "
            Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        CurY = CurY + TxtHgt - 10

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            p1Font = New Font("Calibri", 16, FontStyle.Bold)
        Else
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
        End If

        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

            If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                If Not imageData Is Nothing Then
                    Using ms As New MemoryStream(imageData, 0, imageData.Length)
                        ms.Write(imageData, 0, imageData.Length)

                        If imageData.Length > 0 Then

                            '.BackgroundImage = Image.FromStream(ms)

                            ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)
                            e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 10, CurY + 5, 110, 100)

                        End If

                    End Using

                End If

            End If

        End If
        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

        Gst_dt = #7/1/2017#
        Entry_dt = dtp_Date.Value

        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt - 13  ' 10

        Else

            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_GSTIN_Cap), p1Font).Width
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_StateNm & "     " & Cmp_GSTIN_Cap & Cmp_GSTIN_No), pFont).Width
            If PrintWidth > strWidth Then
                CurX = LMargin + (PrintWidth - strWidth) / 2
            Else
                CurX = LMargin
            End If

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateCap, CurX, CurY, 0, 0, p1Font)
            strWidth = e.Graphics.MeasureString(Cmp_StateCap, p1Font).Width
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateNm, CurX, CurY, 0, 0, pFont)

            strWidth = e.Graphics.MeasureString(Cmp_StateNm, pFont).Width
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, "     " & Cmp_GSTIN_Cap, CurX, CurY, 0, PrintWidth, p1Font)
            strWidth = e.Graphics.MeasureString("     " & Cmp_GSTIN_Cap, p1Font).Width
            CurX = CurX + strWidth

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, CurX, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Trim(Cmp_PhNo & "   " & Cmp_Email), LMargin, CurY, 2, PrintWidth, pFont)

            CurY = CurY + TxtHgt - 1

        End If

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL)
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY TO JOBWORK", LMargin, CurY, 2, PrintWidth, p1Font)

            CurY = CurY + TxtHgt + 5
            p1Font = New Font("Calibri", 10, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "( NOT FOR SALE )", LMargin + 10, CurY, 0, 0, p1Font)
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "HSN/SAC CODE : 998821 ( Textile manufactring service )", PageWidth - 10, CurY, 1, 0, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        Else
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY CHALLAN", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3)
        W1 = e.Graphics.MeasureString("ORDER NO : ", pFont).Width
        w2 = e.Graphics.MeasureString("DELIVERY.At : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO  :  ", pFont).Width
        S2 = e.Graphics.MeasureString("TRANSPORT :  ", pFont).Width

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_MAInName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 11, FontStyle.Bold)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
        '    If payment <> "" Then
        '        Common_Procedures.Print_To_PrintDocument(e, "PAYMENT TERMS", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, payment, LMargin + C1 + W1 + 70, CurY, 0, 0, p1Font)
        '    End If
        'End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SIZING (SOMANUR)
            If Trim(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) <> "" Then
                If IsDate(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DESPATCH DATE & TIME", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
                End If
            End If

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            If suppRefNo <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, "SUPPLIER REF.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, suppRefNo & "        PAYMENT TERMS       :   " & payment, LMargin + C1 + W1 + 70, CurY, 0, 0, pFont)
            End If

        End If

        CurY = CurY + TxtHgt
        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            If Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, " TIN NO : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, pFont)
            End If

        Else
            If Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString) <> "" Then
                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN NO : " & Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, p1Font)
            End If

        End If


        If prn_HdDt.Rows(0).Item("Party_OrderNo").ToString <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString & "   P.O DATE    :   " & prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '---- BRT SIZING (SOMANUR)
        '    Common_Procedures.Print_To_PrintDocument(e, "PARTY ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, suppRefNo, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
        'End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then

            'CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "THROUGH  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Through_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

            'If Trim(prn_HdDt.Rows(0).Item("Vechile_No").ToString) <> "" Then

            '    CurY = CurY + TxtHgt

            '    S3 = e.Graphics.MeasureString("THROUGH     :   " & prn_HdDt.Rows(0).Item("Through_Name").ToString, pFont).Width + 30

            '    Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + S3 + 70, CurY, 0, 0, pFont)

            'End If

        End If


        Common_Procedures.Print_To_PrintDocument(e, "AGENT", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "DESP.TO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_To").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then
            Common_Procedures.Print_To_PrintDocument(e, "LR.NO  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If
        '  Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "DELIVERY .At", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString), LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "TRANSPORT ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("TransportName").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        'CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, "AGENT ", LMargin + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("EwayBill_No").ToString) <> "" Then

            Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No.", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("EwayBill_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'vprn_BlNos = ""
        'For i = 0 To prn_DetDt.Rows.Count - 1
        '    If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
        '        vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
        '    End If
        'Next
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress3").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)



        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString) <> "" Then

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If




        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString) <> "" Then
            p1Font = New Font("Calibri", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " GSTIN : " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, p1Font)

        End If

        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        'Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & vprn_BlNos, LMargin + C1 + 10, CurY, 0, 0, pFont)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1333" Then
            CurY = CurY + TxtHgt + 5

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1420" Then

            CurY = CurY + TxtHgt

        End If
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        pFont = New Font("Calibri", 10, FontStyle.Bold)
        CurY = CurY + 5

        Common_Procedures.Print_To_PrintDocument(e, "SNO", LMargin, CurY, 2, ClAr(1), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "CLOTH NAME", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "HSN CODE", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & "S", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Or Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
            Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "FOLD%", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)

        Else
            Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)

        End If

        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then

            Common_Procedures.Print_To_PrintDocument(e, "RATE", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)

            Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
            'Else
            '    Common_Procedures.Print_To_PrintDocument(e, "PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY

    End Sub

    Private Sub Printing_Delivery_Format1267_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim vPackType As String = ""
        Dim BLNo1 As String = ""
        Dim BLNo2 As String = ""
        Dim BLNo3 As String = ""
        Dim BLNo4 As String = ""
        Dim BLNo5 As String = ""

        Dim vBalLen As Integer

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY

        CurY = CurY + 5
        If is_LastPage = True Then
            Common_Procedures.Print_To_PrintDocument(e, " TOTAL", LMargin + ClAr(1) + 30, CurY, 2, ClAr(4), pFont)
            Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(0).Item("Total_Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Pcs").ToString), "#########0"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(6) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(3))

        CurY = CurY + 10


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then ' cyber   

            vBalLen = 120

        Else

            vBalLen = 60

        End If


        vprn_BlNos = ""
        For i = 0 To prn_DetDt.Rows.Count - 1
            If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
                vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
            End If
        Next

        BLNo1 = Trim(vprn_BlNos)
        BLNo2 = ""



        If Len(BLNo1) > Val(vBalLen) Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo1), i, 1) = " " Or Mid$(Trim(BLNo1), i, 1) = "," Or Mid$(Trim(BLNo1), i, 1) = "." Or Mid$(Trim(BLNo1), i, 1) = "-" Or Mid$(Trim(BLNo1), i, 1) = "/" Or Mid$(Trim(BLNo1), i, 1) = "_" Or Mid$(Trim(BLNo1), i, 1) = "(" Or Mid$(Trim(BLNo1), i, 1) = ")" Or Mid$(Trim(BLNo1), i, 1) = "\" Or Mid$(Trim(BLNo1), i, 1) = "[" Or Mid$(Trim(BLNo1), i, 1) = "]" Or Mid$(Trim(BLNo1), i, 1) = "{" Or Mid$(Trim(BLNo1), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - i)
            BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), i)
        End If


        If Len(BLNo2) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo2), i, 1) = " " Or Mid$(Trim(BLNo2), i, 1) = "," Or Mid$(Trim(BLNo2), i, 1) = "." Or Mid$(Trim(BLNo2), i, 1) = "-" Or Mid$(Trim(BLNo2), i, 1) = "/" Or Mid$(Trim(BLNo2), i, 1) = "_" Or Mid$(Trim(BLNo2), i, 1) = "(" Or Mid$(Trim(BLNo2), i, 1) = ")" Or Mid$(Trim(BLNo2), i, 1) = "\" Or Mid$(Trim(BLNo2), i, 1) = "[" Or Mid$(Trim(BLNo2), i, 1) = "]" Or Mid$(Trim(BLNo2), i, 1) = "{" Or Mid$(Trim(BLNo2), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo3 = Microsoft.VisualBasic.Right(Trim(BLNo2), Len(BLNo2) - i)
            BLNo2 = Microsoft.VisualBasic.Left(Trim(BLNo2), i)
        End If


        If Len(BLNo3) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo3), i, 1) = " " Or Mid$(Trim(BLNo3), i, 1) = "," Or Mid$(Trim(BLNo3), i, 1) = "." Or Mid$(Trim(BLNo3), i, 1) = "-" Or Mid$(Trim(BLNo3), i, 1) = "/" Or Mid$(Trim(BLNo3), i, 1) = "_" Or Mid$(Trim(BLNo3), i, 1) = "(" Or Mid$(Trim(BLNo3), i, 1) = ")" Or Mid$(Trim(BLNo3), i, 1) = "\" Or Mid$(Trim(BLNo3), i, 1) = "[" Or Mid$(Trim(BLNo3), i, 1) = "]" Or Mid$(Trim(BLNo3), i, 1) = "{" Or Mid$(Trim(BLNo3), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo4 = Microsoft.VisualBasic.Right(Trim(BLNo3), Len(BLNo3) - i)
            BLNo3 = Microsoft.VisualBasic.Left(Trim(BLNo3), i)
        End If


        If Len(BLNo4) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo4), i, 1) = " " Or Mid$(Trim(BLNo4), i, 1) = "," Or Mid$(Trim(BLNo4), i, 1) = "." Or Mid$(Trim(BLNo4), i, 1) = "-" Or Mid$(Trim(BLNo4), i, 1) = "/" Or Mid$(Trim(BLNo4), i, 1) = "_" Or Mid$(Trim(BLNo4), i, 1) = "(" Or Mid$(Trim(BLNo4), i, 1) = ")" Or Mid$(Trim(BLNo4), i, 1) = "\" Or Mid$(Trim(BLNo4), i, 1) = "[" Or Mid$(Trim(BLNo4), i, 1) = "]" Or Mid$(Trim(BLNo4), i, 1) = "{" Or Mid$(Trim(BLNo4), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo5 = Microsoft.VisualBasic.Right(Trim(BLNo4), Len(BLNo4) - i)
            BLNo4 = Microsoft.VisualBasic.Left(Trim(BLNo4), i)
        End If


        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & BLNo1, LMargin + 10, CurY, 0, 0, pFont)

        'p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
        '    '  p1Font = New Font("CALIBRI", 10, FontStyle.Bold)


        '    If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

        '        'Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 1, 0, p1Font)

        '        Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt
        '        Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(7) + ClAr(1), CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt

        '        Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '    ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

        '        'Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, 0, p1Font)
        '        Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '        'CurY = CurY + TxtHgt
        '        Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, p1Font)
        '    End If


        'End If
        'If Common_Procedures.settings.CustomerCode = "1186" Then

        '    Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        '    p1Font = New Font("Calibri", 12, FontStyle.Bold)
        '    Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)
        '    CurY = CurY + TxtHgt
        'End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
            If Val(vprn_TotAmt) <> 0 Then
                p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
                If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) = 0 Then
                    Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
                End If
            End If
        End If


        If Trim(BLNo2) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo2, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo3) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo3, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo4) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo4, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo5) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo5, LMargin + 10, CurY, 0, 0, pFont)
        End If


        If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

            p1Font = New Font("CALIBRI", 10, FontStyle.Bold)

            CurY = CurY + TxtHgt

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)

                If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

                End If


            End If
        End If



        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            CurY = CurY + TxtHgt + 15

        Else

            CurY = CurY + TxtHgt

        End If





        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "NOTE : " & prn_HdDt.Rows(0).Item("Note").ToString, LMargin + 10, CurY, 0, 0, pFont)
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1186" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
            Dim VNetAmt As String = 0
            VNetAmt = Format(Val(prn_HdDt.Rows(0).Item("Net_Amount").ToString), "##########0")
            Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(VNetAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
        End If

        If Trim(BLNo2) = "" Then
            CurY = CurY + TxtHgt - 5
        End If
        CurY = CurY + TxtHgt + 5
        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "(NOT FOR SALE ONLY JOBWORK PROCESS)", LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Common_Procedures.User.IdNo <> 1 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + 20, CurY, 0, 0, pFont)
        End If


        If Common_Procedures.settings.CustomerCode = "1420" Or Common_Procedures.settings.CustomerCode = "1423" Then
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
        End If


        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        p1Font = New Font("Calibri", 12, FontStyle.Bold)

        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            CurY = CurY + TxtHgt + 25
        Else
            CurY = CurY + TxtHgt
        End If
        Common_Procedures.Print_To_PrintDocument(e, "Prepared By", LMargin + 20, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 170, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 320, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 250, CurY, 0, 0, pFont)
        End If

        If Trim(Common_Procedures.settings.CustomerCode) <> "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If
        If Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signature", PageWidth - 15, CurY, 1, 0, pFont)

        End If
        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub Printing_BundlePrint_Format_with_weight_1007(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim NoofDets As Integer, NoofItems_PerPage As Integer
        Dim pFont As Font, P1fONT As Font
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim CurY As Single, TxtHgt As Single
        Dim LnAr(15) As Single, ClArr(15) As Single
        Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        Dim PpSzSTS As Boolean = False
        Dim LM As Single = 0, TM As Single = 0
        Dim PgWt As Single = 0, PrWt As Single = 0
        Dim PgHt As Single = 0, PrHt As Single = 0

        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                PrintDocument1.DefaultPageSettings.PaperSize = ps
                e.PageSettings.PaperSize = ps
                Exit For
            End If
        Next

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 15
            .Right = 40
            .Top = 35
            .Bottom = 40
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'With PrintDocument1.DefaultPageSettings.PaperSize
        '    PrintWidth = (.Width / 2) - RMargin - LMargin
        '    PrintHeight = (.Height / 2) - TMargin - BMargin
        '    PageWidth = (.Width / 2) - RMargin
        '    PageHeight = (.Height / 2) - BMargin
        'End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        pFont = New Font("Calibri", 11, FontStyle.Regular)

        NoofItems_PerPage = 28

        Erase ClArr
        Erase LnAr
        ClArr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClArr(1) = 65 : ClArr(2) = 70 : ClArr(3) = 70 : ClArr(4) = 70 : ClArr(5) = 70 : ClArr(6) = 70 : ClArr(7) = 69 : ClArr(8) = 68 : ClArr(9) = 67 : ClArr(10) = 65
        ClArr(11) = PageWidth - (LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10))

        TxtHgt = 19 ' e.Graphics.MeasureString("A", pFont).Height  ' 20

        Try

            If prn_HdDt.Rows.Count > 0 Then

                If prn_HdMxIndx > 0 Then

                    Erase LnAr
                    LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

                    Printing_BundlePrint_Format_with_weight_1007_PageHeader(PrintDocument1, e, prn_HdDt, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClArr, prn_HdIndx)
                    CurY = CurY - 10

                    NoofDets = 0
                    Do While prn_HdIndx < prn_HdMxIndx

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) - 10, CurY, 1, 0, pFont)
                            NoofDets = NoofDets + 1

                            Printing_BundlePrint_Format_with_weight_1007_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, False)

                            e.HasMorePages = True

                            NoofDets = 0
                            prn_Count = prn_Count + 1

                            Return

                        End If

                        prn_HdIndx = prn_HdIndx + 1

                        If Val(prn_HdAr(prn_HdIndx, 4)) <> 0 Then

                            CurY = CurY + TxtHgt

                            P1fONT = New Font("Calibri", 9, FontStyle.Regular)

                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdAr(prn_HdIndx, 1)), LMargin + 15, CurY, 0, 0, P1fONT)
                            If Val(prn_DetAr(prn_HdIndx, 1, 3)) <> 0 Then

                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 1, 3)), LMargin + ClArr(1) + ClArr(2) - 2, CurY, 1, 0, P1fONT)

                            End If
                            If Val(prn_DetAr(prn_HdIndx, 2, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 2, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) - 2, CurY, 1, 0, P1fONT)

                            End If
                            If Val(prn_DetAr(prn_HdIndx, 3, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 3, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) - 2, CurY, 1, 0, P1fONT)

                            End If

                            If Val(prn_DetAr(prn_HdIndx, 4, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 4, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) - 2, CurY, 1, 0, P1fONT)

                            End If
                            If Val(prn_DetAr(prn_HdIndx, 5, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 5, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) - 2, CurY, 1, 0, P1fONT)

                            End If
                            If Val(prn_DetAr(prn_HdIndx, 6, 3)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 6, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) - 2, CurY, 1, 0, P1fONT)

                            End If

                            'If Val(prn_DetAr(prn_HdIndx, 7, 3)) <> 0 Then
                            '    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 7, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) - 2, CurY, 1, 0, P1fONT)

                            'End If

                            'If Val(prn_DetAr(prn_HdIndx, 8, 3)) <> 0 Then
                            '    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetAr(prn_HdIndx, 8, 3)), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) - 2, CurY, 1, 0, P1fONT)
                            'End If

                            If Val(prn_HdAr(prn_HdIndx, 4)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(Val(prn_HdAr(prn_HdIndx, 3))), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) - 2, CurY, 1, 0, P1fONT)
                            End If

                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdAr(prn_HdIndx, 4)), "#########0.00"), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) - 2, CurY, 1, 0, pFont)

                            If Val(prn_HdAr(prn_HdIndx, 4)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Trim(Val(prn_HdAr(prn_HdIndx, 6))), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) + ClArr(11) - 2, CurY, 1, 0, P1fONT)
                            End If

                            If Val(prn_HdAr(prn_HdIndx, 4)) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdAr(prn_HdIndx, 5)), "#########0.00"), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) - 2, CurY, 1, 0, pFont)
                            End If

                            NoofDets = NoofDets + 1

                        End If

                    Loop

                    Printing_BundlePrint_Format_with_weight_1007_PageFooter(e, prn_HdAr, TxtHgt, pFont, LMargin, RMargin, TM, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, NoofDets, prn_HdIndx, True)

                End If

            End If

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        e.HasMorePages = False

    End Sub


    Private Sub Printing_BundlePrint_Format_with_weight_1007_PageHeader(ByRef PrintDocument1 As Printing.PrintDocument, ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdDt As DataTable, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal prn_HdIndx As Integer)
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim dt3 As New DataTable
        Dim dt4 As New DataTable
        Dim p1Font As Font
        Dim strHeight As Single
        Dim Cmp_Add As String = ""
        Dim C1 As Single, W1, W2 As Single, S1, S2 As Single
        Dim Cmp_Name, Desc As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_EMail As String

        PageNo = PageNo + 1

        CurY = TMargin + 30

        'da2 = New SqlClient.SqlDataAdapter("select a.*, b.Ledger_Name, c.Ledger_Name, d.Company_Description as Transport_Name from ClothSales_Invoice_Head a  INNER JOIN Ledger_Head b ON b.Ledger_IdNo = a.Ledger_Idno LEFT OUTER JOIN Ledger_Head c ON c.Ledger_IdNo = a.Transport_IdNo LEFT OUTER JOIN Company_Head d ON d.Company_IdNo = a.Company_IdNo where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Invoice_Code = '" & Trim(EntryCode) & "' Order by a.For_OrderBy", con)
        'da2.Fill(dt2)
        'If dt2.Rows.Count > NoofItems_PerPage Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        'End If
        'dt2.Clear()

        prn_Count = prn_Count + 1

        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        If Trim(cbo_RollBundle.Text) = "BALE" Then
            Common_Procedures.Print_To_PrintDocument(e, "BALE PACKING DETAILS", LMargin, CurY - TxtHgt - 5, 2, PrintWidth, p1Font)
        ElseIf Trim(cbo_RollBundle.Text) = "BUNDLE" Then
            Common_Procedures.Print_To_PrintDocument(e, "BUNDLE PACKING DETAILS", LMargin, CurY - TxtHgt - 5, 2, PrintWidth, p1Font)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "ROLL PACKING DETAILS", LMargin, CurY - TxtHgt - 5, 2, PrintWidth, p1Font)
        End If


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY
        Desc = ""
        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_EMail = ""

        Desc = prn_HdDt.Rows(0).Item("Company_Description").ToString
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString

        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE : " & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_TinNo = "GST NO.: " & prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_EMail = "MAIL ID : " & prn_HdDt.Rows(0).Item("Company_EMail").ToString
        End If

        CurY = CurY + TxtHgt
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1249" Then
            e.Graphics.DrawImage(DirectCast(Global.Textile.My.Resources.Resources.Company_Logo_Vaipav, Drawing.Image), LMargin + 20, CurY - 5, 100, 90)
        End If


        p1Font = New Font("Calibri", 18, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height


        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Desc, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_EMail, LMargin, CurY, 2, PrintWidth, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7)
        W1 = e.Graphics.MeasureString("INVOICE DATE  : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO     :    ", pFont).Width
        W2 = e.Graphics.MeasureString("Despatch To   : ", pFont).Width
        S2 = e.Graphics.MeasureString("Sent Through  : ", pFont).Width


        CurY = CurY + 10
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_Name").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 14, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'If Trim(prn_HdDt.Rows(0).Item("Party_OrderDate").ToString) <> "" Then
        '    Common_Procedures.Print_To_PrintDocument(e, "ORDER DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        'End If

        If Trim(prn_HdDt.Rows(0).Item("Lr_No").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "LR NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'If Trim(prn_HdDt.Rows(0).Item("Dc_No").ToString) <> "" Then
        '    Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Dc_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        'End If


        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, " GST : " & prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        End If
        'If Trim(prn_HdDt.Rows(0).Item("Dc_Date").ToString) <> "" Then
        '    Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Dc_Date").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        'End If


        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        Try

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "QUALITY", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + W1, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdAr(prn_HdMxIndx, 2), LMargin + W1 + 25, CurY, 0, 0, pFont)



            CurY = CurY + TxtHgt + 10
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(2) = CurY

            CurY = CurY + TxtHgt - 20
            Common_Procedures.Print_To_PrintDocument(e, "INDIVIDUAL PCS METERS", ClAr(1) + ClAr(2) + ClAr(3), CurY + 5, 2, ClAr(7), pFont)
            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY)
            LnAr(4) = CurY

            CurY = CurY + TxtHgt - 10


            If Trim(cbo_RollBundle.Text) = "BALE" Then
                Common_Procedures.Print_To_PrintDocument(e, "BALE NO", LMargin, CurY, 2, ClAr(1), pFont)
            ElseIf Trim(cbo_RollBundle.Text) = "BUNDLE" Then
                Common_Procedures.Print_To_PrintDocument(e, "BUNDLE", LMargin, CurY - 5, 2, ClAr(1), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "NO", LMargin, CurY + 10, 2, ClAr(1), pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "ROLL NO", LMargin, CurY, 2, ClAr(1), pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "PCS-1", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-2", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-3", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-4", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-5", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "PCS-6", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "PCS-7", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "PCS-8", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "TOT PCS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "NET", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY - 5, 2, ClAr(10), pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "WEIGHT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY + 10, 2, ClAr(10), pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "GROSS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY - 5, 2, ClAr(11), pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "WEIGHT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY + 10, 2, ClAr(11), pFont)

            Common_Procedures.Print_To_PrintDocument(e, "GROSS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY - 5, 2, ClAr(10), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "WEIGHT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY + 10, 2, ClAr(10), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "NET", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY - 5, 2, ClAr(11), pFont)
            Common_Procedures.Print_To_PrintDocument(e, "WEIGHT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY + 10, 2, ClAr(11), pFont)

            CurY = CurY + TxtHgt + 10
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub Printing_BundlePrint_Format_with_weight_1007_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByRef prn_HdAr(,) As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal prn_HdIndx As Integer, ByVal is_LastPage As Boolean)
        Dim I As Integer
        Dim p1Font As Font

        Try

            For I = NoofDets + 1 To NoofItems_PerPage
                CurY = CurY + TxtHgt
            Next

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(5) = CurY

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(2))
            e.Graphics.DrawLine(Pens.Black, PageWidth, CurY, PageWidth, LnAr(2))


            If is_LastPage = True Then

                CurY = CurY + TxtHgt - 10

                Common_Procedures.Print_To_PrintDocument(e, "TOTAL", LMargin + ClAr(1) + ClAr(2) - 15, CurY, 1, 0, pFont)
                'Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotalBales), LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 1, 0, pFont)

                'Common_Procedures.Print_To_PrintDocument(e, "TOTAL PIECES", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 15, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Val(prn_TotalPcs), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 2, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalMtrs), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 2, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotaGrslWgt), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 2, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_TotalWgt), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) - 2, CurY, 1, 0, pFont)



                'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY + 24, LMargin + ClAr(1) + ClAr(2), LnAr(5))
                'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(5))
                'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(5))
                'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(5))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY + 24, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(5))

                CurY = CurY + TxtHgt + 5
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                LnAr(6) = CurY
            End If
            CurY = CurY + TxtHgt - 10

            p1Font = New Font("Calibri", 12, FontStyle.Bold)

            Common_Procedures.Print_To_PrintDocument(e, "For " & Trim(prn_HdDt.Rows(0).Item("Company_Name").ToString), PageWidth - 15, CurY, 1, 0, p1Font)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 12, FontStyle.Bold)

            Common_Procedures.Print_To_PrintDocument(e, "AUTHORISED SIGNATORY ", PageWidth - 5, CurY, 1, 0, pFont)
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)


        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub Printing_Delivery_Format4_1464(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim ItmNm1 As String, ItmNm2 As String
        'Dim ps As Printing.PaperSize
        Dim strHeight As Single = 0
        'Dim PpSzSTS As Boolean = False
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0
        Dim TpMargin As Single = 0
        Dim cnt As Integer = 0
        Dim Tot_Mtr As Integer = 0, Tot_Rt As Integer = 0
        Dim vAmt As String = 0
        Dim fldmtr As String = 0 'Double = 0
        Dim fmt As Double = 0
        Dim CurRow As Integer = 0
        Dim sno As Integer = 0
        Dim p1Font As Font

        set_PaperSize_For_PrintDocument1()

        'If Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_Custom8X6_As_Default_PaperSize) = 1 Then
        '    Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
        '    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
        '    PrintDocument1.DefaultPageSettings.Landscape = False

        'ElseIf Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_A4_As_Default_PaperSize) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next

        'ElseIf Val(vPrnt_2Copy_In_SinglePage) = 1 Then
        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            Exit For
        '        End If
        '    Next



        'Else

        '    PpSzSTS = False

        '    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '        ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '        'Debug.Print(ps.PaperName)
        '        If ps.Width = 800 And ps.Height = 600 Then
        '            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '            PrintDocument1.DefaultPageSettings.PaperSize = ps
        '            PpSzSTS = True
        '            Exit For
        '        End If
        '    Next

        '    If PpSzSTS = False Then

        '        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
        '                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                PpSzSTS = True
        '                Exit For
        '            End If
        '        Next

        '        If PpSzSTS = False Then
        '            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
        '                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
        '                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
        '                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
        '                    PrintDocument1.DefaultPageSettings.PaperSize = ps
        '                    Exit For
        '                End If
        '            Next
        '        End If

        '    End If

        'End If

        PrntCnt = 1
        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            If PrntCnt2ndPageSTS = False Then
                PrntCnt = 2
            End If
        End If

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10
            .Right = 50
            .Top = 10
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        Else
            pFont = New Font("Calibri", 9, FontStyle.Regular)
        End If
        'pFont = New Font("Calibri", 11, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With

        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        If Val(vPrnt_2Copy_In_SinglePage) = 1 Then
            NoofItems_PerPage = 4
            TxtHgt = 15


        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            NoofItems_PerPage = 30
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1423" Then
            NoofItems_PerPage = 30
            TxtHgt = 16

        ElseIf Common_Procedures.settings.CustomerCode = "1234" Then
            NoofItems_PerPage = 3
            TxtHgt = 14

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL) Then 
            NoofItems_PerPage = 3
            TxtHgt = 14.75 '17.5 '20
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1464" Then
            NoofItems_PerPage = 30
            TxtHgt = 17
        Else

            NoofItems_PerPage = 4
            TxtHgt = 15 '17.5 '20
        End If

        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            NoofItems_PerPage = NoofItems_PerPage - 1
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
        '    NoofItems_PerPage = 4
        'Else
        '    NoofItems_PerPage = 5
        'End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60 : ClAr(7) = 70 : ClAr(8) = 60
            ClAr(9) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8))
        ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1155" Then
            ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 70 : ClAr(4) = 60 : ClAr(5) = 50 : ClAr(6) = 60
            ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))
        Else
            ClAr(1) = Val(35) : ClAr(2) = 290 : ClAr(3) = 75 : ClAr(4) = 60 : ClAr(5) = 90 : ClAr(6) = 100
            ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))
        End If


        '16 '18

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_DcNo.Text) & "/" & Trim(EntFnYrCode)

        PrntCnt2ndPageSTS = False
        TpMargin = TMargin
        If Trim(Common_Procedures.settings.CustomerCode) = "1037" And vPrnt_2Copy_In_SinglePage = 1 Then
            PCnt = PCnt + 1
            PrntCnt = PrntCnt + 1
        End If

        For PCnt = 1 To PrntCnt

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 Then
                    prn_PageNo1 = prn_PageNo

                    prn_DetIndx1 = prn_DetIndx
                    prn_DetSNo1 = prn_DetSNo
                    prn_NoofBmDets1 = prn_NoofBmDets
                    TpMargin = TMargin


                Else

                    prn_PageNo = prn_PageNo1
                    prn_NoofBmDets = prn_NoofBmDets1
                    prn_DetIndx = prn_DetIndx1
                    prn_DetSNo = prn_DetSNo1

                    TpMargin = 560 + TMargin  ' 600 + TMargin

                End If

            End If

            Try
                If prn_HdDt.Rows.Count > 0 Then

                    Printing_Delivery_Format4_1464_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                    NoofDets = 0

                    CurY = CurY - 10

                    If prn_DetDt.Rows.Count > 0 Then

                        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                            If NoofDets >= NoofItems_PerPage Then
                                If PCnt = 2 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then

                                    NoofDets = NoofDets + 1

                                    CurY = CurY + TxtHgt

                                    Common_Procedures.Print_To_PrintDocument(e, "Continued....", PageWidth - 10, CurY, 1, 0, pFont)


                                    Printing_Delivery_Format4_1464_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                    prn_DetIndx = prn_DetIndx + NoofItems_PerPage

                                    e.HasMorePages = True

                                    Return

                                End If

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued...", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 10, CurY, 0, 0, pFont)

                                NoofDets = NoofDets + 1

                                Printing_Delivery_Format4_1464_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True
                                Return

                            End If


                            ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Description").ToString)
                            If Trim(ItmNm1) = "" Then
                                ItmNm1 = Trim(prn_DetDt.Rows(prn_DetIndx).Item("Cloth_Name").ToString)
                            End If
                            ItmNm2 = ""
                            If Len(ItmNm1) > 40 Then
                                For I = 40 To 1 Step -1
                                    If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                                Next I
                                If I = 0 Then I = 40
                                ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                                ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                            End If

                            CurY = CurY + TxtHgt
                            sno = sno + 1
                            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_DetDt.Rows(prn_DetIndx).Item("Sl_No").ToString), LMargin + 15, CurY, 0, 0, pFont)
                            'Common_Procedures.Print_To_PrintDocument(e, sno, LMargin + 15, CurY, 0, 0, pFont)


                            'If Trim(Common_Procedures.settings.CustomerCode) = "1234" Then

                            '    Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            'End If
                            Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm1), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Item_HSN_Code").ToString, LMargin + ClAr(1) + ClAr(2) + 10, CurY, 0, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)
                            '  Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                            '  Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7)  - 10, CurY, 1, 0, pFont)







                            vAmt = Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString) * Val(prn_DetDt.Rows(prn_DetIndx).Item("Rate").ToString)
                            vprn_TotAmt = Val(vprn_TotAmt) + Val(vAmt)

                            If Trim(Common_Procedures.settings.CustomerCode) = "1234" Or Trim(Common_Procedures.settings.CustomerCode) = "1186" Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(vAmt), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 10, CurY, 1, 0, pFont)
                                'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                                'Else
                                '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1168" Then
                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 0 And Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) <> 100 Then
                                    CurY = CurY + TxtHgt
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("Fold_Perc").ToString) & " CM  Folding ", LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                    NoofDets = NoofDets + 1
                                End If
                            End If

                            NoofDets = NoofDets + 1

                            If Trim(ItmNm2) <> "" Then
                                CurY = CurY + TxtHgt - 5
                                Common_Procedures.Print_To_PrintDocument(e, Trim(ItmNm2), LMargin + ClAr(1) + 10, CurY, 0, 0, pFont)
                                NoofDets = NoofDets + 1
                            End If

                            prn_DetIndx = prn_DetIndx + 1

                        Loop

                    End If

                    Printing_Delivery_Format4_1464_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                End If


            Catch ex As Exception
                MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

            End Try

            If Val(vPrnt_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then
                    If prn_DetDt.Rows.Count > prn_NoofBmDets Then
                        PrntCnt2ndPageSTS = True
                        e.HasMorePages = True
                        cnt = 6
                        Return
                    End If
                End If
            End If

            PrntCnt2ndPageSTS = False

        Next PCnt


LOOP2:

        prn_Count = prn_Count + 1


        e.HasMorePages = False

        If Val(prn_TotCopies) > 1 Then
            If prn_Count < Val(prn_TotCopies) Then

                prn_DetIndx = 0
                'prn_DetSNo = 0
                prn_PageNo = 0
                prn_DetIndx = 0
                prn_NoofBmDets = 0
                vprn_TotAmt = 0

                e.HasMorePages = True
                Return

            End If

        End If
    End Sub

    Private Sub Printing_Delivery_Format4_1464_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2, da3 As New SqlClient.SqlDataAdapter
        Dim dt2, dt3 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_Email As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single, strWidth As Single = 0
        Dim C1 As Single
        Dim W1, w2 As Single
        Dim S1, S2 As Single
        Dim vprn_BlNos As String = ""
        Dim Gst_dt As Date
        Dim Entry_dt As Date
        Dim CurX As Single = 0
        Dim vPackType As String = ""
        Dim suppRefNo As String = ""
        Dim payment As String = ""
        PageNo = PageNo + 1

        CurY = TMargin

        da2 = New SqlClient.SqlDataAdapter("select a.*, b.Cloth_name, d.ClothType_name from ClothSales_Delivery_Details a INNER JOIN Cloth_Head b ON a.Cloth_idno = b.Cloth_idno LEFT OUTER JOIN ClothType_Head d ON a.ClothType_idno = d.ClothType_idno where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        da2.Fill(dt2)

        If dt2.Rows.Count > NoofItems_PerPage Then
            Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        End If
        dt2.Clear()

        suppRefNo = ""
        payment = ""
        da3 = New SqlClient.SqlDataAdapter("select a.*, b.Clothsales_Order_no,b.payment_terms from ClothSales_Delivery_Details a INNER JOIN Clothsales_Order_Head b ON a.Clothsales_Order_Code = b.Clothsales_Order_Code  where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ClothSales_Delivery_Code = '" & Trim(EntryCode) & "'", con)
        dt3 = New DataTable
        da3.Fill(dt3)
        If dt3.Rows.Count > 0 Then
            suppRefNo = dt3.Rows(0).Item("ClothSales_Order_No").ToString
            payment = dt3.Rows(0).Item("payment_terms").ToString
        End If
        dt3.Clear()

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""
        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(0).Item("Company_TinNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(0).Item("Company_CstNo").ToString
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
            Cmp_StateCap = "STATE : "
            Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
            If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
                Cmp_StateNm = Cmp_StateNm & "   CODE : " & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
            End If
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTIN_Cap = "GSTIN : "
            Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        End If
        CurY = CurY + TxtHgt - 10

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            p1Font = New Font("Calibri", 16, FontStyle.Bold)
        Else
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
        End If

        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

            If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                If Not imageData Is Nothing Then
                    Using ms As New MemoryStream(imageData, 0, imageData.Length)
                        ms.Write(imageData, 0, imageData.Length)

                        If imageData.Length > 0 Then

                            '.BackgroundImage = Image.FromStream(ms)

                            ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)
                            e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 10, CurY + 5, 110, 100)

                        End If

                    End Using

                End If

            End If

        End If
        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)

        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

        Gst_dt = #7/1/2017#
        Entry_dt = dtp_Date.Value

        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt - 13  ' 10

        Else

            CurY = CurY + TxtHgt

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_GSTIN_Cap), p1Font).Width
            strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_StateNm & "     " & Cmp_GSTIN_Cap & Cmp_GSTIN_No), pFont).Width
            If PrintWidth > strWidth Then
                CurX = LMargin + (PrintWidth - strWidth) / 2
            Else
                CurX = LMargin
            End If

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateCap, CurX, CurY, 0, 0, p1Font)
            strWidth = e.Graphics.MeasureString(Cmp_StateCap, p1Font).Width
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, Cmp_StateNm, CurX, CurY, 0, 0, pFont)

            strWidth = e.Graphics.MeasureString(Cmp_StateNm, pFont).Width
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            CurX = CurX + strWidth
            Common_Procedures.Print_To_PrintDocument(e, "     " & Cmp_GSTIN_Cap, CurX, CurY, 0, PrintWidth, p1Font)
            strWidth = e.Graphics.MeasureString("     " & Cmp_GSTIN_Cap, p1Font).Width
            CurX = CurX + strWidth

            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, CurX, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Trim(Cmp_PhNo & "   " & Cmp_Email), LMargin, CurY, 2, PrintWidth, pFont)

            CurY = CurY + TxtHgt - 1

        End If

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 15, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1120" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Then '---ALLWIN FABS(MARIA INTERNATIONAL)
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY TO JOBWORK", LMargin, CurY, 2, PrintWidth, p1Font)

            CurY = CurY + TxtHgt + 5
            p1Font = New Font("Calibri", 10, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "( NOT FOR SALE )", LMargin + 10, CurY, 0, 0, p1Font)
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "HSN/SAC CODE : 998821 ( Textile manufactring service )", PageWidth - 10, CurY, 1, 0, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        Else
            Common_Procedures.Print_To_PrintDocument(e, "FABRIC DELIVERY CHALLAN", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        CurY = CurY + strHeight
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3)
        W1 = e.Graphics.MeasureString("ORDER NO : ", pFont).Width
        w2 = e.Graphics.MeasureString("DELIVERY.At : ", pFont).Width
        S1 = e.Graphics.MeasureString("TO  :  ", pFont).Width
        S2 = e.Graphics.MeasureString("TRANSPORT :  ", pFont).Width

        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & prn_HdDt.Rows(0).Item("Ledger_MAInName").ToString, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("ClothSales_Delivery_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, p1Font)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address1").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        p1Font = New Font("Calibri", 11, FontStyle.Bold)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address2").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("ClothSales_Delivery_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address3").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
        '    If payment <> "" Then
        '        Common_Procedures.Print_To_PrintDocument(e, "PAYMENT TERMS", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
        '        Common_Procedures.Print_To_PrintDocument(e, payment, LMargin + C1 + W1 + 70, CurY, 0, 0, p1Font)
        '    End If
        'End If

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Ledger_Address4").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT SIZING (SOMANUR)
            If Trim(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) <> "" Then
                If IsDate(prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString) = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DESPATCH DATE & TIME", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_DateandTime").ToString, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
                End If
            End If

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then
            If suppRefNo <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, "SUPPLIER REF.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, suppRefNo & "        PAYMENT TERMS       :   " & payment, LMargin + C1 + W1 + 70, CurY, 0, 0, pFont)
            End If

        End If

        CurY = CurY + TxtHgt
        If DateDiff("d", Gst_dt.ToShortDateString, Entry_dt.ToShortDateString) < 0 Then
            If Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, " TIN NO : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, pFont)
            End If

        Else
            If Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString) <> "" Then
                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN NO : " & Trim(prn_HdDt.Rows(0).Item("ledger_GSTinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, p1Font)
            End If

        End If


        If prn_HdDt.Rows(0).Item("Party_OrderNo").ToString <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "P.O NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Party_OrderNo").ToString & "   P.O DATE    :   " & prn_HdDt.Rows(0).Item("Party_OrderDate").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1234" Then '---- BRT SIZING (SOMANUR)
        '    Common_Procedures.Print_To_PrintDocument(e, "PARTY ORDER NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)
        '    Common_Procedures.Print_To_PrintDocument(e, suppRefNo, LMargin + C1 + W1 + 100, CurY, 0, 0, pFont)
        'End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then

            'CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "THROUGH  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Through_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

            'If Trim(prn_HdDt.Rows(0).Item("Vechile_No").ToString) <> "" Then

            '    CurY = CurY + TxtHgt

            '    S3 = e.Graphics.MeasureString("THROUGH     :   " & prn_HdDt.Rows(0).Item("Through_Name").ToString, pFont).Width + 30

            '    Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + S3 + 50, CurY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + S3 + 70, CurY, 0, 0, pFont)

            'End If

        End If


        Common_Procedures.Print_To_PrintDocument(e, "AGENT", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "VEHICLE NO  ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Vechile_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "DESP.TO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Despatch_To").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" Then
            Common_Procedures.Print_To_PrintDocument(e, "LR.NO  ", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Lr_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If
        '  Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "DELIVERY .At", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + C1 + w2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerName").ToString), LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "TRANSPORT ", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("TransportName").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress1").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        ' Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("Delivery_Address2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        'CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, "AGENT ", LMargin + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Agent_Name").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("EwayBill_No").ToString) <> "" Then

            Common_Procedures.Print_To_PrintDocument(e, "E-Way Bill No.", LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " :  ", LMargin + S2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("EwayBill_No").ToString, LMargin + S2 + 30, CurY, 0, 0, pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress2").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)
        'vprn_BlNos = ""
        'For i = 0 To prn_DetDt.Rows.Count - 1
        '    If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
        '        vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
        '    End If
        'Next
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress3").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)



        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString) <> "" Then

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerAddress4").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, pFont)

        End If




        CurY = CurY + TxtHgt
        If Trim(prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString) <> "" Then
            p1Font = New Font("Calibri", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " GSTIN : " & prn_HdDt.Rows(0).Item("DeliveryTo_LedgerGSTinNo").ToString, LMargin + C1 + w2 + 30, CurY, 0, 0, p1Font)

        End If

        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        'Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & vprn_BlNos, LMargin + C1 + 10, CurY, 0, 0, pFont)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1333" Then
            CurY = CurY + TxtHgt + 5

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1420" Then

            CurY = CurY + TxtHgt

        End If
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

        pFont = New Font("Calibri", 10, FontStyle.Bold)
        CurY = CurY + 5

        Common_Procedures.Print_To_PrintDocument(e, "SNO", LMargin, CurY, 2, ClAr(1), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "CLOTH NAME", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "HSN CODE", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & "S", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)

        Common_Procedures.Print_To_PrintDocument(e, "METERS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "GROSS", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "WEIGHT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY + TxtHgt, 2, ClAr(6), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "NET", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
        Common_Procedures.Print_To_PrintDocument(e, "WEIGHT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY + TxtHgt, 2, ClAr(7), pFont)

        CurY = CurY + TxtHgt + 15
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY

    End Sub

    Private Sub Printing_Delivery_Format4_1464_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim W1 As Single = 0
        Dim vprn_BlNos As String = ""
        Dim vPackType As String = ""
        Dim BLNo1 As String = ""
        Dim BLNo2 As String = ""
        Dim BLNo3 As String = ""
        Dim BLNo4 As String = ""
        Dim BLNo5 As String = ""

        Dim vBalLen As Integer

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY

        CurY = CurY + 5
        If is_LastPage = True Then
            Common_Procedures.Print_To_PrintDocument(e, " TOTAL", LMargin + ClAr(1) + 30, CurY, 2, ClAr(4), pFont)
            Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(0).Item("Total_Bales").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 1, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString), "########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(6) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(3))

        CurY = CurY + 10


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then ' cyber   

            vBalLen = 120

        Else

            vBalLen = 60

        End If


        vprn_BlNos = ""
        For i = 0 To prn_DetDt.Rows.Count - 1
            If Trim(prn_DetDt.Rows(i).Item("Bales_Nos").ToString) <> "" Then
                vprn_BlNos = Trim(vprn_BlNos) & IIf(Trim(vprn_BlNos) <> "", ", ", "") & prn_DetDt.Rows(i).Item("Bales_Nos").ToString
            End If
        Next

        BLNo1 = Trim(vprn_BlNos)
        BLNo2 = ""



        If Len(BLNo1) > Val(vBalLen) Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo1), i, 1) = " " Or Mid$(Trim(BLNo1), i, 1) = "," Or Mid$(Trim(BLNo1), i, 1) = "." Or Mid$(Trim(BLNo1), i, 1) = "-" Or Mid$(Trim(BLNo1), i, 1) = "/" Or Mid$(Trim(BLNo1), i, 1) = "_" Or Mid$(Trim(BLNo1), i, 1) = "(" Or Mid$(Trim(BLNo1), i, 1) = ")" Or Mid$(Trim(BLNo1), i, 1) = "\" Or Mid$(Trim(BLNo1), i, 1) = "[" Or Mid$(Trim(BLNo1), i, 1) = "]" Or Mid$(Trim(BLNo1), i, 1) = "{" Or Mid$(Trim(BLNo1), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - i)
            BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), i)
        End If


        If Len(BLNo2) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo2), i, 1) = " " Or Mid$(Trim(BLNo2), i, 1) = "," Or Mid$(Trim(BLNo2), i, 1) = "." Or Mid$(Trim(BLNo2), i, 1) = "-" Or Mid$(Trim(BLNo2), i, 1) = "/" Or Mid$(Trim(BLNo2), i, 1) = "_" Or Mid$(Trim(BLNo2), i, 1) = "(" Or Mid$(Trim(BLNo2), i, 1) = ")" Or Mid$(Trim(BLNo2), i, 1) = "\" Or Mid$(Trim(BLNo2), i, 1) = "[" Or Mid$(Trim(BLNo2), i, 1) = "]" Or Mid$(Trim(BLNo2), i, 1) = "{" Or Mid$(Trim(BLNo2), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo3 = Microsoft.VisualBasic.Right(Trim(BLNo2), Len(BLNo2) - i)
            BLNo2 = Microsoft.VisualBasic.Left(Trim(BLNo2), i)
        End If


        If Len(BLNo3) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo3), i, 1) = " " Or Mid$(Trim(BLNo3), i, 1) = "," Or Mid$(Trim(BLNo3), i, 1) = "." Or Mid$(Trim(BLNo3), i, 1) = "-" Or Mid$(Trim(BLNo3), i, 1) = "/" Or Mid$(Trim(BLNo3), i, 1) = "_" Or Mid$(Trim(BLNo3), i, 1) = "(" Or Mid$(Trim(BLNo3), i, 1) = ")" Or Mid$(Trim(BLNo3), i, 1) = "\" Or Mid$(Trim(BLNo3), i, 1) = "[" Or Mid$(Trim(BLNo3), i, 1) = "]" Or Mid$(Trim(BLNo3), i, 1) = "{" Or Mid$(Trim(BLNo3), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo4 = Microsoft.VisualBasic.Right(Trim(BLNo3), Len(BLNo3) - i)
            BLNo3 = Microsoft.VisualBasic.Left(Trim(BLNo3), i)
        End If


        If Len(BLNo4) > vBalLen Then
            For i = vBalLen To 1 Step -1
                If Mid$(Trim(BLNo4), i, 1) = " " Or Mid$(Trim(BLNo4), i, 1) = "," Or Mid$(Trim(BLNo4), i, 1) = "." Or Mid$(Trim(BLNo4), i, 1) = "-" Or Mid$(Trim(BLNo4), i, 1) = "/" Or Mid$(Trim(BLNo4), i, 1) = "_" Or Mid$(Trim(BLNo4), i, 1) = "(" Or Mid$(Trim(BLNo4), i, 1) = ")" Or Mid$(Trim(BLNo4), i, 1) = "\" Or Mid$(Trim(BLNo4), i, 1) = "[" Or Mid$(Trim(BLNo4), i, 1) = "]" Or Mid$(Trim(BLNo4), i, 1) = "{" Or Mid$(Trim(BLNo4), i, 1) = "}" Then Exit For
            Next i
            If i = 0 Then i = vBalLen
            BLNo5 = Microsoft.VisualBasic.Right(Trim(BLNo4), Len(BLNo4) - i)
            BLNo4 = Microsoft.VisualBasic.Left(Trim(BLNo4), i)
        End If


        vPackType = Trim(UCase(prn_HdDt.Rows(0).Item("Packing_Type").ToString))
        If Trim(vPackType) = "" Then vPackType = "BALE"
        Common_Procedures.Print_To_PrintDocument(e, Trim(vPackType) & " NOS : " & BLNo1, LMargin + 10, CurY, 0, 0, pFont)

        If Trim(Common_Procedures.settings.CustomerCode) <> "1186" Then

            Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
            p1Font = New Font("Calibri", 12, FontStyle.Bold)

            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
        '    If Val(vprn_TotAmt) <> 0 Then
        '        p1Font = New Font("CALIBRI", 10, FontStyle.Bold)
        '        If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) = 0 And Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) = 0 Then
        '            Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
        '        Else
        '            Common_Procedures.Print_To_PrintDocument(e, "Taxable Value : " & Format(Val(vprn_TotAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
        '        End If
        '    End If
        'End If


        If Trim(BLNo2) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo2, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo3) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo3, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo4) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo4, LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Trim(BLNo5) <> "" Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "        " & BLNo5, LMargin + 10, CurY, 0, 0, pFont)
        End If


        'If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

        '    p1Font = New Font("CALIBRI", 10, FontStyle.Bold)

        '    CurY = CurY + TxtHgt

        '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)

        '        If Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString) <> 0 And Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString) <> 0 Then

        '            Common_Procedures.Print_To_PrintDocument(e, "CGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("CGST_Amount").ToString), "##########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, 0, pFont)

        '            Common_Procedures.Print_To_PrintDocument(e, "SGST @ 2.5 : " & Format(Val(prn_HdDt.Rows(0).Item("SGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

        '        ElseIf Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString) <> 0 Then

        '            Common_Procedures.Print_To_PrintDocument(e, "IGST @ 5 : " & Format(Val(prn_HdDt.Rows(0).Item("IGST_Amount").ToString), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)

        '        End If


        '    End If
        'End If



        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1420" Then
            CurY = CurY + TxtHgt + 15

        Else

            CurY = CurY + TxtHgt

        End If





        If Trim(prn_HdDt.Rows(0).Item("Note").ToString) <> "" Then
            Common_Procedures.Print_To_PrintDocument(e, "NOTE : " & prn_HdDt.Rows(0).Item("Note").ToString, LMargin + 10, CurY, 0, 0, pFont)
        End If
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1087" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1186" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" Then '-----KALAIMAGAL TEXTILES(PALLDAM)
        '    Dim VNetAmt As String = 0
        '    VNetAmt = Format(Val(prn_HdDt.Rows(0).Item("Net_Amount").ToString), "##########0")
        '    Common_Procedures.Print_To_PrintDocument(e, "Value of Goods : " & Format(Val(VNetAmt), "##########0.00"), PageWidth - 15, CurY, 1, 0, pFont)
        'End If

        If Trim(BLNo2) = "" Then
            CurY = CurY + TxtHgt - 5
        End If
        CurY = CurY + TxtHgt + 5
        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "(NOT FOR SALE ONLY JOBWORK PROCESS)", LMargin + 10, CurY, 0, 0, pFont)
        End If

        If Common_Procedures.User.IdNo <> 1 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + 20, CurY, 0, 0, pFont)
        End If


        If Common_Procedures.settings.CustomerCode = "1420" Or Common_Procedures.settings.CustomerCode = "1423" Then
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
        End If



        If Trim(Common_Procedures.settings.CustomerCode) = "1333" Then
            CurY = CurY + TxtHgt + 25
        Else
            CurY = CurY + TxtHgt
        End If
        Common_Procedures.Print_To_PrintDocument(e, "Prepared By", LMargin + 20, CurY, 0, 0, pFont)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 170, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 320, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "Checked By ", LMargin + 250, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "Received By ", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 0, 0, pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, "Authorised Signature", PageWidth - 15, CurY, 1, 0, pFont)

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

End Class