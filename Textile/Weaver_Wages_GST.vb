Imports System.IO
Imports System.Xml.Serialization

Public Class Weaver_Wages_GST
    Implements Interface_MDIActions

    Private con As New SqlClient.SqlConnection(Common_Procedures.Connection_String)
    Private con1 As New SqlClient.SqlConnection(Common_Procedures.ConnectionString_CompanyGroupdetails)
    Private FrmLdSTS As Boolean = False
    Private New_Entry As Boolean = False
    Private Insert_Entry As Boolean = False
    Private Filter_Status As Boolean = False
    Private Filter_RowNo As Integer = -1
    Private prn_TotCopies As Integer = 0
    Private Pk_Condition As String = "GWWAG-"
    Private Pk_Condition2 As String = "GWWAL-"
    Private PkCondition_WPTDS As String = "GWTDS-"
    Private PkCondition_WPYMT As String = "GWPMT-"
    Private PkCondition_WCLRC As String = "WCLRC-"
    Private PkCondition_WADVP As String = "GWADP-"
    Private PkCondition_WADVD As String = "GWADU-"
    Private PkCondition_WPGST As String = "GWGST-"
    Private PkCondition_WFRGT As String = "GWFRG-"
    Private vprn_Tot_Amt As String = 0
    Private Prnt_HalfSheet_STS As Boolean = False
    Private vPrnt_2Copy_In_SinglePage As Integer = 0
    Private NoCalc_Status As Boolean = False
    Private Print_PDF_Status As Boolean = False
    Private Prec_ActCtrl As New Control
    Private vcbo_KeyDwnVal As Double
    Private vCbo_ItmNm As String
    Private Chk_Freight_sts As Integer = 0

    Private WithEvents dgtxt_Details As New DataGridViewTextBoxEditingControl

    Private SaveAll_STS As Boolean = False
    Private LastNo As String = ""

    Private prn_HdDt As New DataTable
    Private prn_DetDt As New DataTable
    Private prn_PageNo As Integer
    Private prn_HeadIndx As Integer
    Private prn_DetIndx As Integer
    Private prn_DetAr(50, 10) As String
    Private prn_DetMxIndx As Integer
    Private prn_PageSize_SetUP_STS As Boolean
    Private prn_NoofBmDets As Integer
    Private prn_DetSNo As Integer
    Private prn_FromNo As String
    Private prn_ToNo As String

    Private prn_Prev_HeadIndx As Integer

    Private NoFo_STS As Integer = 0
    Private prn_Tot_EBeam_Stk As Single = 0
    Private prn_Tot_Pavu_Stk As Single = 0
    Private prn_Tot_Yarn_Stk As Single = 0
    Private prn_Tot_Amt_Bal As Single = 0
    Private prn_WagesFrmt As String = ""
    Private prn_WagesDontShowToPartyName As Integer = 0
    Private PrntCnt2ndPageSTS As Boolean = False
    Dim PCnt As Integer = 0, PrntCnt As Integer = 0
    Private yarnstk, pavstk As Single
    Private yarnnm, pavnm As String
    Private Weight1, Weight2, Currency1, Currency2, Currency3, Currency4, Currency5, Currency6, Currency7, Currency8 As Single
    Private Wev_Sms_String As String = ""
    Private Prn_FrghtAmt_STS As Boolean = True
    Private Prn_In_English_STS As Boolean = False
    Private prn_Wages_Prt_WeaverName_IN_Heading As Integer
    Private vmskOldText As String = ""
    Private vmskSelStrt As Integer = -1
    Private chk_WvrGST_Sts As Boolean = False
    Private chk_WvrLmTp_Sts As Boolean = False

    Dim vPrintRange_FromDate As String
    Dim vPrintRange_ToDate As String

    Public Sub New()

        FrmLdSTS = True
        ' This call is required by the designer.
        InitializeComponent()
        ' Add any initialization after the InitializeComponent() call.
    End Sub

    Private Sub clear()
        chk_Verified_Status.Checked = False
        NoCalc_Status = True

        New_Entry = False
        Insert_Entry = False

        pnl_Back.Enabled = True
        pnl_Filter.Visible = False
        pnl_Selection.Visible = False
        pnl_PrintOption.Visible = False
        pnl_PrintRange.Visible = False


        lbl_BillNo.Text = ""
        lbl_BillNo.ForeColor = Color.Black
        Print_PDF_Status = False
        dtp_Date.Text = ""
        msk_Date.Text = ""
        cbo_Weaver.Text = ""
        lbl_Cloth.Text = ""
        cbo_Ends_Count.Text = ""
        cbo_Grid_Count.Text = ""
        Chk_Stop_payment_sts.Checked = False
        Chk_Freight_charge_print_sts.Checked = False

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1046" Then
            txt_addless_beforeTax_caption.Text = "Packing Charge"
        Else
            txt_addless_beforeTax_caption.Text = "Add/Less"
        End If

        txt_addless_beforeTax.Text = ""
        txt_Add_Amount.Text = ""
        txt_Bits_Cooly.Text = ""
        txt_Bits_Meter.Text = ""
        txt_Elogation.Text = ""

        txt_deduction.Text = ""
        lbl_Excess_Short.Text = ""
        txt_FoldingLess_Perc.Text = ""
        txt_Freight_Charge.Text = ""
        txt_Less_Amount.Text = ""
        lbl_Net_Amount.Text = ""
        txt_Other_Cooly.Text = ""
        txt_Other_Meter.Text = ""
        txt_Paid_Amount.Text = ""
        txt_Pcs.Text = ""
        lbl_PDcNo.Text = ""
        txt_Seconds_Cooly.Text = ""
        txt_Seconds_Meter.Text = ""
        txt_Sound_Cooly.Text = ""
        txt_Sound_Meter.Text = ""
        lbl_LotNoHeading.Text = Common_Procedures.settings.ClothReceipt_LotNo_OR_RollNo_Text
        lbl_UserName.Text = "USER : " & Trim(UCase(Common_Procedures.User_IdNoToName(con1, Common_Procedures.User.IdNo)))

        lbl_Rec_Date.Text = ""
        txt_Rec_Meter.Text = ""
        lbl_RecCode.Text = ""
        lbl_RecNo.Text = ""
        txt_Reject_Cooly.Text = ""
        txt_Reject_Meter.Text = ""
        txt_TdsPerc.Text = ""
        lbl_Tds_Amount.Text = ""
        lbl_Total_Cooly.Text = "0.00"
        lbl_Total_Meter.Text = "0.00"
        txt_Remarks.Text = ""


        txt_Sound_Cooly.Enabled = True
        txt_Seconds_Cooly.Enabled = True
        txt_Reject_Cooly.Enabled = True
        txt_Bits_Cooly.Enabled = True
        txt_Other_Cooly.Enabled = True
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then  ' --BRT
            txt_Sound_Cooly.Enabled = False
            txt_Seconds_Cooly.Enabled = False
            txt_Reject_Cooly.Enabled = False
            txt_Bits_Cooly.Enabled = False
            txt_Other_Cooly.Enabled = False
        End If

        pnl_OpenRecord.Visible = False

        txt_LotNo_Open.Text = ""
        txt_BillNoOpen.Text = ""
        txt_filter_LotNo.Text = ""

        dgv_Details.Rows.Clear()
        dgv_Details_Total.Rows.Clear()
        dgv_Details_Total.Rows.Add()

        txt_PrintRange_FromNo.Text = ""
        txt_PrintRange_ToNo.Text = ""

        lbl_Total_Amount.Text = ""
        txt_CGST_Percentage.Text = "" '"2.5"
        txt_SGST_Percentage.Text = "" ' "2.5"
        lbl_CGST_Amount.Text = ""
        lbl_SGST_Amount.Text = ""
        lbl_Taxable_Value.Text = ""

        If Filter_Status = False Then
            dtp_Filter_Fromdate.Text = Common_Procedures.Company_FromDate
            dtp_Filter_ToDate.Text = Common_Procedures.Company_ToDate
            cbo_Filter_PartyName.Text = ""
            cbo_Filter_PartyName.SelectedIndex = -1
            cbo_Filter_CountName.Text = ""
            cbo_Filter_CountName.SelectedIndex = -1
            dgv_Filter_Details.Rows.Clear()
        End If

        msk_PrintRange_DateFrom.Text = ""
        msk_PrintRange_DateTo.Text = ""
        dtp_PrintRange_DateFrom.Text = Date.Today
        dtp_PrintRange_DateTo.Text = Date.Today
        msk_PrintRange_DateFrom.Enabled = False
        msk_PrintRange_DateTo.Enabled = False
        dtp_PrintRange_DateFrom.Enabled = False
        dtp_PrintRange_DateTo.Enabled = False

        Grid_Cell_DeSelect()

        NoCalc_Status = False
        cbo_Grid_Count.Visible = False

    End Sub

    Private Sub ControlGotFocus(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim txtbx As TextBox
        Dim combobx As ComboBox
        Dim msk As MaskedTextBox
        On Error Resume Next

        If FrmLdSTS = True Then Exit Sub

        If TypeOf Me.ActiveControl Is TextBox Or TypeOf Me.ActiveControl Is ComboBox Or TypeOf Me.ActiveControl Is Button Or TypeOf Me.ActiveControl Is MaskedTextBox Then
            Me.ActiveControl.BackColor = Color.Lime
            Me.ActiveControl.ForeColor = Color.Blue
        End If

        If TypeOf Me.ActiveControl Is TextBox Then
            txtbx = Me.ActiveControl
            txtbx.SelectAll()
        ElseIf TypeOf Me.ActiveControl Is ComboBox Then
            combobx = Me.ActiveControl
            combobx.SelectAll()
        ElseIf TypeOf Me.ActiveControl Is MaskedTextBox Then
            msk = Me.ActiveControl
            msk.SelectionStart = 0
        End If


        If Me.ActiveControl.Name <> cbo_Grid_Count.Name Then
            cbo_Grid_Count.Visible = False
        End If

        If Me.ActiveControl.Name <> dgv_Details.Name Then
            Grid_DeSelect()
        End If

        Prec_ActCtrl = Me.ActiveControl

    End Sub

    Private Sub ControlLostFocus(ByVal sender As Object, ByVal e As System.EventArgs)
        On Error Resume Next
        If FrmLdSTS = True Then Exit Sub

        If IsNothing(Prec_ActCtrl) = False Then
            If TypeOf Prec_ActCtrl Is TextBox Or TypeOf Prec_ActCtrl Is ComboBox Or TypeOf Prec_ActCtrl Is MaskedTextBox Then
                Prec_ActCtrl.BackColor = Color.White
                Prec_ActCtrl.ForeColor = Color.Black
            ElseIf TypeOf Prec_ActCtrl Is Button Then
                Prec_ActCtrl.BackColor = Color.FromArgb(2, 57, 111)
                Prec_ActCtrl.ForeColor = Color.White
            End If
        End If

    End Sub
    Private Sub ControlLostFocus1(ByVal sender As Object, ByVal e As System.EventArgs)

        On Error Resume Next
        If FrmLdSTS = True Then Exit Sub
        If IsNothing(Prec_ActCtrl) = False Then
            If TypeOf Prec_ActCtrl Is TextBox Or TypeOf Prec_ActCtrl Is ComboBox Then
                Prec_ActCtrl.BackColor = Color.LightBlue
                Prec_ActCtrl.ForeColor = Color.Blue
            End If
        End If

    End Sub

    Private Sub Grid_DeSelect()
        On Error Resume Next
        If Not IsNothing(dgv_Details.CurrentCell) Then dgv_Details.CurrentCell.Selected = False
        If Not IsNothing(dgv_Details_Total.CurrentCell) Then dgv_Details_Total.CurrentCell.Selected = False
    End Sub
    Private Sub TextBoxControlKeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs)
        On Error Resume Next
        If e.KeyValue = 38 Then SendKeys.Send("+{TAB}")
        If e.KeyValue = 40 Then SendKeys.Send("{TAB}")
    End Sub

    Private Sub TextBoxControlKeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        On Error Resume Next
        If Asc(e.KeyChar) = 13 Then SendKeys.Send("{TAB}")
    End Sub

    Private Sub Grid_Cell_DeSelect()
        On Error Resume Next
        If Not IsNothing(dgv_Details.CurrentCell) Then dgv_Details.CurrentCell.Selected = False
        If Not IsNothing(dgv_Details_Total.CurrentCell) Then dgv_Details_Total.CurrentCell.Selected = False
        'dgv_Filter_Details.CurrentCell.Selected = False
    End Sub

    Private Sub Weaver_Wages_GST_Activated(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Activated
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable

        Try

            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_Weaver.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "LEDGER" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_Weaver.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            ' If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(lbl_Cloth.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "CLOTH" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
            '   lbl_Cloth.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            ' End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_Ends_Count.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "ENDSCOUNT" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_Ends_Count.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If
            If Trim(UCase(Common_Procedures.Master_Return.Form_Name)) = Trim(UCase(Me.Name)) And Trim(UCase(Common_Procedures.Master_Return.Control_Name)) = Trim(UCase(cbo_Grid_Count.Name)) And Trim(UCase(Common_Procedures.Master_Return.Master_Type)) = "COUNT" And Trim(Common_Procedures.Master_Return.Return_Value) <> "" Then
                cbo_Grid_Count.Text = Trim(Common_Procedures.Master_Return.Return_Value)
            End If

            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            If FrmLdSTS = True Then

                lbl_Company.Text = ""
                lbl_Company.Tag = 0
                Common_Procedures.CompIdNo = 0

                Me.Text = ""

                lbl_Company.Text = Common_Procedures.get_Company_From_CompanySelection(con)
                lbl_Company.Tag = Val(Common_Procedures.CompIdNo)

                Me.Text = lbl_Heading.Text & "  -  " & lbl_Company.Text

                new_record()

            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "DOES NOT SHOW...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        FrmLdSTS = False

    End Sub

    Private Sub Weaver_Wages_GST_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed
        On Error Resume Next
        con.Close()
        con.Dispose()
        Common_Procedures.Last_Closed_FormName = Me.Name
    End Sub

    Private Sub Weaver_Wages_GST_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles Me.KeyPress
        Try
            If Asc(e.KeyChar) = 27 Then

                If pnl_Filter.Visible = True Then
                    btn_Filter_Close_Click(sender, e)
                    Exit Sub

                ElseIf pnl_Selection.Visible = True Then
                    btn_Close_Selection_Click(sender, e)
                    Exit Sub

                ElseIf pnl_PrintOption.Visible = True Then
                    btn_Close_PrintOption_Click(sender, e)
                    Exit Sub

                ElseIf pnl_PrintRange.Visible = True Then
                    btn_Close_PrintRange_Click(sender, e)
                    Exit Sub

                ElseIf pnl_OpenRecord.Visible = True Then
                    btn_CloseOpenRecord_Click(sender, e)
                    Exit Sub
                Else

                    If MessageBox.Show("Do you want to Close?", "FOR CLOSING ENTRY...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1) <> Windows.Forms.DialogResult.Yes Then
                        Exit Sub
                    Else
                        Close_Form()
                    End If

                End If

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT CLOSE...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub Weaver_Wages_GST_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim dt2 As New DataTable
        Dim dt3 As New DataTable
        Dim dt4 As New DataTable
        Dim dt5 As New DataTable
        Dim dt6 As New DataTable
        Dim dt7 As New DataTable
        Dim dt8 As New DataTable

        lbl_LotNoHeading.Text = StrConv(Common_Procedures.settings.ClothReceipt_LotNo_OR_RollNo_Text, vbProperCase)
        lbl_ClothType1_Heading.Text = Trim(UCase(Common_Procedures.ClothType.Type1))
        lbl_ClothType2_Heading.Text = Trim(UCase(Common_Procedures.ClothType.Type2))
        lbl_ClothType3_Heading.Text = Trim(UCase(Common_Procedures.ClothType.Type3))
        lbl_ClothType4_Heading.Text = Trim(UCase(Common_Procedures.ClothType.Type4))
        lbl_ClothType5_Heading.Text = Trim(UCase(Common_Procedures.ClothType.Type5))

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1116" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1084" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1089" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1100" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1446" Then '---- k.c cotton mills
            dgv_Details.Columns(6).ReadOnly = False
        End If

        Me.Text = ""

        con.Open()

        Common_Procedures.get_CashPartyName_From_All_Entries(con)

        da = New SqlClient.SqlDataAdapter("select Ledger_DisplayName from Ledger_AlaisHead Where (Ledger_IdNo = 0 OR ledger_type = 'WEAVER'  or Ledger_Type = 'GODOWN' or Show_In_All_Entry = 1) order by Ledger_DisplayName", con)
        da.Fill(dt1)
        cbo_Weaver.DataSource = dt1
        cbo_Weaver.DisplayMember = "Ledger_DisplayName"

        'da = New SqlClient.SqlDataAdapter("select Cloth_Name from Cloth_Head order by Cloth_Name", con)
        'da.Fill(dt2)
        'lbl_Cloth.DataSource = dt2
        'lbl_Cloth.DisplayMember = "Cloth_Name"

        'da = New SqlClient.SqlDataAdapter("select EndsCount_Name from EndsCount_Head order by EndsCount_Name", con)
        'da.Fill(dt3)
        'cbo_Ends_Count.DataSource = dt3
        'cbo_Ends_Count.DisplayMember = "EndsCount_Name"

        da = New SqlClient.SqlDataAdapter("select Count_Name from Count_Head order by Count_Name", con)
        da.Fill(dt4)
        cbo_Grid_Count.DataSource = dt4
        cbo_Grid_Count.DisplayMember = "Cloth_Name"

        pnl_Filter.Visible = False
        pnl_Filter.Left = (Me.Width - pnl_Filter.Width) \ 2
        pnl_Filter.Top = (Me.Height - pnl_Filter.Height) \ 2
        pnl_Filter.BringToFront()

        pnl_PrintOption.Visible = False
        pnl_PrintOption.BringToFront()
        pnl_PrintOption.Left = (Me.Width - pnl_PrintOption.Width) \ 2
        pnl_PrintOption.Top = (Me.Height - pnl_PrintOption.Height) \ 2

        pnl_Selection.Visible = False
        pnl_Selection.Left = (Me.Width - pnl_Selection.Width) \ 2
        pnl_Selection.Top = (Me.Height - pnl_Selection.Height) \ 2
        pnl_Selection.BringToFront()

        pnl_PrintRange.Visible = False
        pnl_PrintRange.Left = (Me.Width - pnl_PrintRange.Width) \ 2
        pnl_PrintRange.Top = (Me.Height - pnl_PrintRange.Height) \ 2
        pnl_PrintRange.BringToFront()

        pnl_OpenRecord.Visible = False
        pnl_OpenRecord.Left = (Me.Width - pnl_OpenRecord.Width) \ 2
        pnl_OpenRecord.Top = (Me.Height - pnl_OpenRecord.Height) \ 2
        pnl_OpenRecord.BringToFront()

        cbo_Verified_Sts.Items.Clear()
        cbo_Verified_Sts.Items.Add("")
        cbo_Verified_Sts.Items.Add("YES")
        cbo_Verified_Sts.Items.Add("NO")

        'txt_FoldingLess_Perc.Visible = False
        'lbl_FoldingLess_Perc.Visible = False
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1152" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1155" Then '---- Asia Textiles (Palladam)
        txt_FoldingLess_Perc.Visible = True
        lbl_FoldingLess_Perc.Visible = True
        'End If


        dtp_Date.Enabled = True
        msk_Date.Enabled = True
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then  ' --BRT
            lbl_Heading.Text = "WEAVING WAGES -GST BILL"
            Chk_Stop_payment_sts.Visible = True
            dgv_Details.Columns(5).ReadOnly = True
            dgv_Details.Columns(6).ReadOnly = True

            dtp_Date.Enabled = False
            msk_Date.Enabled = False
            If Common_Procedures.User.IdNo = 1 Or Trim(Common_Procedures.UR.Weaver_Wages_Entry_ChangeDate) <> "" Then
                dtp_Date.Enabled = True
                msk_Date.Enabled = True
            End If

            txt_addless_beforeTax.Width = txt_Add_Amount.Width

            lbl_ExcessShort_Caption.Left = lbl_FreightCharge_Caption.Left
            lbl_ExcessShort_Caption.Top = lbl_FreightCharge_Caption.Top
            lbl_Excess_Short.Left = txt_Freight_Charge.Left
            lbl_Excess_Short.Top = txt_Freight_Charge.Top
            lbl_Excess_Short.Width = lbl_Net_Amount.Width

            lbl_FreightCharge_Caption.Text = "Handling Charges"
            lbl_FreightCharge_Caption.Left = lbl_SGSTAmount_Caption.Left
            lbl_FreightCharge_Caption.Top = lbl_TaxableValue_Caption.Top
            txt_Freight_Charge.Left = txt_Less_Amount.Left
            txt_Freight_Charge.Top = lbl_Taxable_Value.Top
            txt_Freight_Charge.Width = txt_Less_Amount.Width
            txt_Freight_Charge.TabIndex = txt_Elogation.TabIndex

            lbl_TaxableValue_Caption.Left = lbl_Elogation_Caption.Left
            lbl_Taxable_Value.Left = txt_Elogation.Left
            lbl_Taxable_Value.Width = lbl_Net_Amount.Width

            lbl_Elogation_Caption.Visible = False
            txt_Elogation.Visible = False
            txt_DeductionName_Caption.Visible = False
            txt_deduction.Visible = False

        End If


        btn_SaveAll.Visible = False
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1158" Then '---- Kalaimagal Textiles (Avinashi)
            btn_SaveAll.Visible = True
        End If


        btn_UserModification.Visible = False
        If Common_Procedures.settings.User_Modifications_Show_Status = 1 Then
            If Val(Common_Procedures.User.IdNo) = 1 Or Common_Procedures.User.Show_UserModification_Status = 1 Then
                btn_UserModification.Visible = True
            End If
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then '---- Dhanam Textiles (Avinashi)
            dgv_Details.Columns(6).ReadOnly = False
            lbl_LessAmtCaption.Text = "Seconds Less"
            txt_Less_Amount.Enabled = False
            Lbl_ScdLsCaption.Visible = True
            Lbl_ScdLsRatCaption.Visible = True
            txt_ScdsLsMeter.Visible = True
            txt_ScdsLsRate.Visible = True
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1098" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Then
            Btn_stockFormat2.Text = "FROM WEAVER"
            btn_Print_WithGST.Text = "TO WEAVER"
            btn_FromWeaver.Text = "TO AUDITOR"
        End If



        lbl_Total_Meter.Visible = True
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1408" Then
            lbl_Elogation_Caption.Visible = False
            txt_Elogation.Visible = False

            txt_DeductionName_Caption.Visible = True
            txt_deduction.Visible = True

        End If

        Chk_Freight_charge_print_sts.Visible = False
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "--1049--" Then
            Chk_Freight_charge_print_sts.Visible = True
        End If

        chk_Verified_Status.Visible = False
        If Common_Procedures.settings.Vefified_Status = 1 Then
            If Val(Common_Procedures.User.IdNo) = 1 Or Common_Procedures.User.Show_Verified_Status = 1 Then
                chk_Verified_Status.Visible = True
                lbl_verfied_sts.Visible = True
                cbo_Verified_Sts.Visible = True


            End If
        Else
            chk_Verified_Status.Visible = False
            lbl_verfied_sts.Visible = False
            cbo_Verified_Sts.Visible = False
        End If


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1589" Then

            lbl_BillDate_From.Visible = True
            lbl_BillDate_To.Visible = True
            msk_PrintRange_DateFrom.Visible = True
            dtp_PrintRange_DateFrom.Visible = True
            msk_PrintRange_DateTo.Visible = True
            dtp_PrintRange_DateTo.Visible = True
            lbl_Or.Visible = True

        Else

            lbl_BillDate_From.Visible = False
            lbl_BillDate_To.Visible = False
            msk_PrintRange_DateFrom.Visible = False
            dtp_PrintRange_DateFrom.Visible = False
            msk_PrintRange_DateTo.Visible = False
            dtp_PrintRange_DateTo.Visible = False
            lbl_Or.Visible = False

        End If


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1494" Then
            dgv_Details.Columns(0).HeaderText = "PCS"
            Label8.Text = "Wages Pcs"
        End If

        AddHandler chk_Verified_Status.GotFocus, AddressOf ControlGotFocus
        AddHandler chk_Verified_Status.LostFocus, AddressOf ControlLostFocus

        AddHandler txt_DeductionName_Caption.GotFocus, AddressOf ControlGotFocus
        ' AddHandler txt_Deduction_Name.LostFocus, AddressOf ControlLostFocus


        AddHandler msk_Date.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Weaver.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_Cloth.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Ends_Count.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Grid_Count.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_Add_Amount.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Bits_Cooly.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Bits_Meter.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Elogation.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_Excess_Short.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_FoldingLess_Perc.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Freight_Charge.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Less_Amount.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_Net_Amount.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Other_Cooly.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Remarks.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_Other_Meter.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Paid_Amount.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Pcs.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_addless_beforeTax.GotFocus, AddressOf ControlGotFocus

        AddHandler lbl_PDcNo.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_Rec_Date.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_RecNo.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Rec_Meter.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Reject_Cooly.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Reject_Meter.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Remarks.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_Seconds_Cooly.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Seconds_Meter.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Sound_Cooly.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_Sound_Meter.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_TdsPerc.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_Tds_Amount.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_Total_Cooly.GotFocus, AddressOf ControlGotFocus
        AddHandler lbl_Total_Meter.GotFocus, AddressOf ControlGotFocus

        AddHandler dtp_Filter_Fromdate.GotFocus, AddressOf ControlGotFocus
        AddHandler dtp_Filter_ToDate.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Filter_PartyName.GotFocus, AddressOf ControlGotFocus
        AddHandler cbo_Filter_CountName.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_ScdsLsMeter.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_ScdsLsRate.GotFocus, AddressOf ControlGotFocus


        AddHandler btn_close.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Filter_Show.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Cancel_PrintOption.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_Simple_WithName.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_Simple_WithOutName.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_SimpleFormat.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_WithGST.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_save.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_PrintRange_FromNo.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_PrintRange_ToNo.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Print_PrintRange.GotFocus, AddressOf ControlGotFocus
        AddHandler btn_Cancel_PrintRange.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_CGST_Percentage.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_SGST_Percentage.GotFocus, AddressOf ControlGotFocus
        AddHandler Btn_stockFormat2.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_deduction.GotFocus, AddressOf ControlGotFocus

        AddHandler txt_LotNo_Open.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_BillNoOpen.GotFocus, AddressOf ControlGotFocus
        AddHandler txt_filter_LotNo.GotFocus, AddressOf ControlGotFocus


        AddHandler txt_deduction.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_addless_beforeTax.LostFocus, AddressOf ControlLostFocus

        AddHandler msk_Date.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Weaver.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_Cloth.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Ends_Count.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Grid_Count.LostFocus, AddressOf ControlLostFocus

        AddHandler txt_Add_Amount.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Bits_Cooly.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Bits_Meter.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Elogation.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_Excess_Short.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_FoldingLess_Perc.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Freight_Charge.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Less_Amount.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_Net_Amount.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Other_Cooly.LostFocus, AddressOf ControlLostFocus

        AddHandler txt_Other_Meter.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Paid_Amount.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Pcs.LostFocus, AddressOf ControlLostFocus

        AddHandler lbl_PDcNo.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_Rec_Date.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_RecNo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Rec_Meter.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Reject_Cooly.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Reject_Meter.LostFocus, AddressOf ControlLostFocus

        AddHandler txt_Seconds_Cooly.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Seconds_Meter.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Sound_Cooly.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_Sound_Meter.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_TdsPerc.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_Tds_Amount.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_Total_Cooly.LostFocus, AddressOf ControlLostFocus
        AddHandler lbl_Total_Meter.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_ScdsLsMeter.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_ScdsLsRate.LostFocus, AddressOf ControlLostFocus


        AddHandler dtp_Filter_Fromdate.LostFocus, AddressOf ControlLostFocus
        AddHandler dtp_Filter_ToDate.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Filter_PartyName.LostFocus, AddressOf ControlLostFocus
        AddHandler cbo_Filter_CountName.LostFocus, AddressOf ControlLostFocus

        AddHandler btn_close.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Filter_Show.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Cancel_PrintOption.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_Simple_WithName.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_Simple_WithOutName.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_SimpleFormat.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_WithGST.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_save.LostFocus, AddressOf ControlLostFocus

        AddHandler txt_PrintRange_FromNo.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_PrintRange_ToNo.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Print_PrintRange.LostFocus, AddressOf ControlLostFocus
        AddHandler btn_Cancel_PrintRange.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_CGST_Percentage.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_SGST_Percentage.LostFocus, AddressOf ControlLostFocus
        AddHandler Btn_stockFormat2.LostFocus, AddressOf ControlLostFocus
        AddHandler txt_LotNo_Open.Leave, AddressOf ControlLostFocus
        AddHandler txt_BillNoOpen.Leave, AddressOf ControlLostFocus
        AddHandler txt_filter_LotNo.Leave, AddressOf ControlLostFocus

        'AddHandler txt_Deduction_Name.KeyDown, AddressOf TextBoxControlKeyDown
        'AddHandler dtp_Date.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_deduction.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Bits_Cooly.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Bits_Meter.KeyDown, AddressOf TextBoxControlKeyDown
        'AddHandler txt_Elogation.KeyDown, AddressOf TextBoxControlKeyDown

        AddHandler txt_FoldingLess_Perc.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Less_Amount.KeyDown, AddressOf TextBoxControlKeyDown


        AddHandler txt_Other_Meter.KeyDown, AddressOf TextBoxControlKeyDown

        AddHandler txt_Pcs.KeyDown, AddressOf TextBoxControlKeyDown

        AddHandler lbl_PDcNo.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler lbl_Rec_Date.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler lbl_RecNo.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Rec_Meter.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Reject_Cooly.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Reject_Meter.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Reject_Meter.KeyDown, AddressOf TextBoxControlKeyDown

        AddHandler txt_Seconds_Cooly.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Seconds_Meter.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Sound_Cooly.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_Sound_Meter.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_TdsPerc.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler lbl_Total_Cooly.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler lbl_Total_Meter.KeyDown, AddressOf TextBoxControlKeyDown

        AddHandler txt_PrintRange_FromNo.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_CGST_Percentage.KeyDown, AddressOf TextBoxControlKeyDown
        AddHandler txt_SGST_Percentage.KeyDown, AddressOf TextBoxControlKeyDown


        'AddHandler txt_Deduction_Name.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_deduction.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Bits_Cooly.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Bits_Meter.KeyPress, AddressOf TextBoxControlKeyPress
        'AddHandler txt_Elogation.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler lbl_Excess_Short.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_FoldingLess_Perc.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Freight_Charge.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Less_Amount.KeyPress, AddressOf TextBoxControlKeyPress



        AddHandler txt_Other_Meter.KeyPress, AddressOf TextBoxControlKeyPress

        AddHandler txt_Pcs.KeyPress, AddressOf TextBoxControlKeyPress

        AddHandler lbl_PDcNo.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler lbl_Rec_Date.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler lbl_RecNo.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Rec_Meter.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Reject_Cooly.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Reject_Meter.KeyPress, AddressOf TextBoxControlKeyPress

        AddHandler txt_Seconds_Cooly.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Seconds_Meter.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Sound_Cooly.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_Sound_Meter.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_TdsPerc.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler lbl_Total_Cooly.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler lbl_Total_Meter.KeyPress, AddressOf TextBoxControlKeyPress

        AddHandler dtp_Filter_Fromdate.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler dtp_Filter_ToDate.KeyPress, AddressOf TextBoxControlKeyPress

        AddHandler txt_PrintRange_FromNo.KeyPress, AddressOf TextBoxControlKeyPress

        AddHandler txt_CGST_Percentage.KeyPress, AddressOf TextBoxControlKeyPress
        AddHandler txt_SGST_Percentage.KeyPress, AddressOf TextBoxControlKeyPress


        AddHandler msk_PrintRange_DateFrom.GotFocus, AddressOf ControlGotFocus
        AddHandler dtp_PrintRange_DateFrom.GotFocus, AddressOf ControlGotFocus
        AddHandler msk_PrintRange_DateTo.GotFocus, AddressOf ControlGotFocus
        AddHandler dtp_PrintRange_DateTo.GotFocus, AddressOf ControlGotFocus

        AddHandler msk_PrintRange_DateFrom.LostFocus, AddressOf ControlLostFocus
        AddHandler dtp_PrintRange_DateFrom.LostFocus, AddressOf ControlLostFocus
        AddHandler msk_PrintRange_DateTo.LostFocus, AddressOf ControlLostFocus
        AddHandler dtp_PrintRange_DateTo.LostFocus, AddressOf ControlLostFocus

        lbl_Company.Text = ""
        lbl_Company.Tag = 0
        lbl_Company.Visible = False
        Common_Procedures.CompIdNo = 0

        Filter_Status = False
        FrmLdSTS = True
        new_record()

    End Sub

    Private Sub Close_Form()

        Try

            lbl_Company.Tag = 0
            lbl_Company.Text = ""
            Me.Text = ""
            Common_Procedures.CompIdNo = 0

            lbl_Company.Text = Common_Procedures.Show_CompanySelection_On_FormClose(con)
            lbl_Company.Tag = Val(Common_Procedures.CompIdNo)
            Me.Text = lbl_Company.Text
            If Val(Common_Procedures.CompIdNo) = 0 Then

                Me.Close()

            Else

                new_record()

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT CLOSE...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Protected Overrides Function ProcessCmdKey(ByRef msg As System.Windows.Forms.Message, ByVal keyData As System.Windows.Forms.Keys) As Boolean
        Dim dgv1 As New DataGridView

        If ActiveControl.Name = dgv_Details.Name Or TypeOf ActiveControl Is DataGridViewTextBoxEditingControl Then

            On Error Resume Next

            dgv1 = dgv_Details

            If IsNothing(dgv1) = False Then

                With dgv1

                    If keyData = Keys.Enter Or keyData = Keys.Down Then
                        If .CurrentCell.ColumnIndex >= .ColumnCount - 1 Then
                            If .CurrentCell.RowIndex = .RowCount - 1 Then
                                'txt_CGST_Percentage.Focus()
                                txt_addless_beforeTax.Focus()

                            Else
                                .CurrentCell = .Rows(.CurrentCell.RowIndex + 1).Cells(0)

                            End If

                        Else

                            If .CurrentCell.RowIndex = .RowCount - 1 And .CurrentCell.ColumnIndex >= 0 And Val(.CurrentRow.Cells(0).Value) = 0 And Trim(.CurrentRow.Cells(1).Value) = "" Then
                                'txt_CGST_Percentage.Focus()
                                txt_addless_beforeTax.Focus()

                            Else
                                .CurrentCell = .Rows(.CurrentRow.Index).Cells(.CurrentCell.ColumnIndex + 1)

                            End If

                        End If

                        Return True

                    ElseIf keyData = Keys.Up Then

                        If .CurrentCell.ColumnIndex <= 0 Then
                            If .CurrentCell.RowIndex = 0 Then
                                txt_Other_Cooly.Focus()

                            Else
                                .CurrentCell = .Rows(.CurrentCell.RowIndex - 1).Cells(.ColumnCount - 2)

                            End If

                        Else
                            .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(.CurrentCell.ColumnIndex - 1)

                        End If

                        Return True

                    Else
                        Return MyBase.ProcessCmdKey(msg, keyData)

                    End If

                End With

            Else

                Return MyBase.ProcessCmdKey(msg, keyData)

            End If

        Else

            Return MyBase.ProcessCmdKey(msg, keyData)

        End If

    End Function

    Private Sub move_record(ByVal no As String)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim dt2 As New DataTable
        Dim NewCode As String
        Dim n As Integer
        Dim SNo As Integer

        If Trim(no) = "" Then Exit Sub
        'If Val(no) = 0 Then Exit Sub

        clear()

        NoCalc_Status = True

        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(no) & "/" & Trim(Common_Procedures.FnYearCode)

        Try

            da1 = New SqlClient.SqlDataAdapter("select a.* from Weaver_Wages_Head a Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Wages_Code = '" & Trim(NewCode) & "'", con)
            dt1 = New DataTable
            da1.Fill(dt1)

            If dt1.Rows.Count > 0 Then

                lbl_BillNo.Text = dt1.Rows(0).Item("Weaver_Wages_No").ToString
                dtp_Date.Text = dt1.Rows(0).Item("Weaver_Wages_Date")
                msk_Date.Text = dtp_Date.Text


                cbo_Weaver.Text = Common_Procedures.Ledger_IdNoToName(con, Val(dt1.Rows(0).Item("Ledger_IdNo").ToString))
                lbl_Cloth.Text = Common_Procedures.Cloth_IdNoToName(con, Val(dt1.Rows(0).Item("Cloth_IdNo").ToString))
                cbo_Ends_Count.Text = Common_Procedures.EndsCount_IdNoToName(con, Val(dt1.Rows(0).Item("EndsCount_IdNo").ToString))
                'cbo_Grid_Count.Text = Common_Procedures.Count_IdNoToName(con, Val(dt1.Rows(0).Item("Count_IdNo").ToString))

                txt_FoldingLess_Perc.Text = dt1.Rows(0).Item("Folding_Less").ToString

                txt_Add_Amount.Text = dt1.Rows(0).Item("Add_Amount").ToString
                txt_Bits_Cooly.Text = dt1.Rows(0).Item("Bits_Cooly").ToString
                txt_Bits_Meter.Text = dt1.Rows(0).Item("Bits_Meters").ToString
                txt_Elogation.Text = dt1.Rows(0).Item("Elogation").ToString
                lbl_Excess_Short.Text = dt1.Rows(0).Item("Excess_Short").ToString

                txt_deduction.Text = dt1.Rows(0).Item("Deduction_Amount").ToString
                txt_Freight_Charge.Text = dt1.Rows(0).Item("Freight_Charge").ToString
                txt_Less_Amount.Text = dt1.Rows(0).Item("Less_Amount").ToString
                lbl_Net_Amount.Text = dt1.Rows(0).Item("Net_Amount").ToString
                txt_Other_Cooly.Text = dt1.Rows(0).Item("Others_Cooly").ToString
                txt_Other_Meter.Text = dt1.Rows(0).Item("Others_Meters").ToString
                txt_Paid_Amount.Text = dt1.Rows(0).Item("Paid_Amount").ToString
                txt_Pcs.Text = dt1.Rows(0).Item("Pcs").ToString
                lbl_PDcNo.Text = dt1.Rows(0).Item("P_Dc_No").ToString
                lbl_Rec_Date.Text = dt1.Rows(0).Item("Rec_Date").ToString
                txt_Rec_Meter.Text = dt1.Rows(0).Item("Receipt_Meters").ToString
                lbl_RecCode.Text = dt1.Rows(0).Item("Weaver_Cloth_Receipt_Code").ToString
                lbl_RecNo.Text = dt1.Rows(0).Item("Rec_No").ToString
                txt_Reject_Cooly.Text = dt1.Rows(0).Item("Reject_Cooly").ToString
                txt_Reject_Meter.Text = dt1.Rows(0).Item("Reject_Meters").ToString
                txt_Seconds_Cooly.Text = dt1.Rows(0).Item("Seconds_Cooly").ToString
                txt_Seconds_Meter.Text = dt1.Rows(0).Item("Seconds_Meters").ToString
                txt_Sound_Cooly.Text = dt1.Rows(0).Item("Sound_Cooly").ToString
                txt_Sound_Meter.Text = dt1.Rows(0).Item("Sound_Meters").ToString
                txt_TdsPerc.Text = dt1.Rows(0).Item("Tds_Perc").ToString
                lbl_Tds_Amount.Text = dt1.Rows(0).Item("Tds_Perc_Calc").ToString
                lbl_Total_Cooly.Text = dt1.Rows(0).Item("Total_Cooly").ToString
                lbl_Total_Meter.Text = dt1.Rows(0).Item("Total_Meters").ToString

                txt_addless_beforeTax_caption.Text = dt1.Rows(0).Item("Addless_Caption_name").ToString
                txt_addless_beforeTax.Text = dt1.Rows(0).Item("AddLess").ToString

                lbl_Total_Amount.Text = Format(Val(dt1.Rows(0).Item("Assesable_Value").ToString), "##############0.00")

                lbl_Taxable_Value.Text = dt1.Rows(0).Item("Total_Taxable_Amount").ToString
                txt_CGST_Percentage.Text = dt1.Rows(0).Item("CGST_Percentage").ToString
                lbl_CGST_Amount.Text = dt1.Rows(0).Item("CGST_Amount").ToString
                txt_SGST_Percentage.Text = dt1.Rows(0).Item("SGST_Percentage").ToString
                lbl_SGST_Amount.Text = dt1.Rows(0).Item("SGST_Amount").ToString

                txt_ScdsLsMeter.Text = dt1.Rows(0).Item("Scecondsless_Meter").ToString
                txt_ScdsLsRate.Text = dt1.Rows(0).Item("Scecondsless_Rate").ToString

                lbl_WeaverBillNo.Text = dt1.Rows(0).Item("Weaver_BillNo").ToString
                txt_Remarks.Text = dt1.Rows(0).Item("Remarks").ToString
                lbl_UserName.Text = "USER : " & Trim(UCase(Common_Procedures.User_IdNoToName(con1, Val(dt1.Rows(0).Item("User_IdNo").ToString))))

                txt_DeductionName_Caption.Text = dt1.Rows(0).Item("Deduction_caption").ToString

                If Val(dt1.Rows(0).Item("Stop_Payment_status").ToString) = 1 Then Chk_Stop_payment_sts.Checked = True Else Chk_Stop_payment_sts.Checked = False

                If Val(dt1.Rows(0).Item("Verified_Status").ToString) = 1 Then chk_Verified_Status.Checked = True

                If Val(dt1.Rows(0).Item("Chk_Freight_Print_Status").ToString) = 1 Then Chk_Freight_charge_print_sts.Checked = True

                txt_Add_Advance_Caption.Text = dt1.Rows(0).Item("Add_Advance_Caption_Name").ToString



                da2 = New SqlClient.SqlDataAdapter("Select a.* , b.Count_Name from Weaver_Wages_Yarn_Details a left outer join count_head b on a.Count_IdNo = b.Count_IdNo Where a.Weaver_Wages_Code = '" & Trim(NewCode) & "' Order by Sl_No", con)
                dt2 = New DataTable
                da2.Fill(dt2)

                With dgv_Details

                    .Rows.Clear()
                    SNo = 0

                    If dt2.Rows.Count > 0 Then

                        For i = 0 To dt2.Rows.Count - 1

                            n = .Rows.Add()

                            .Rows(n).Cells(0).Value = Format(Val(dt2.Rows(i).Item("Meters").ToString), "########0.00")
                            .Rows(n).Cells(1).Value = dt2.Rows(i).Item("Count_Name").ToString
                            .Rows(n).Cells(2).Value = Val(dt2.Rows(i).Item("Rd_Sp").ToString)
                            .Rows(n).Cells(3).Value = Val(dt2.Rows(i).Item("Pick").ToString)
                            .Rows(n).Cells(4).Value = Val(dt2.Rows(i).Item("Width").ToString)
                            .Rows(n).Cells(5).Value = Format(Val(dt2.Rows(i).Item("Weight_Meter").ToString), "########0.000000")
                            .Rows(n).Cells(6).Value = Format(Val(dt2.Rows(i).Item("Weight").ToString), "########0.000")

                        Next i

                    End If

                    If .RowCount = 0 Then .Rows.Add()

                End With

                With dgv_Details_Total
                    If .RowCount = 0 Then .Rows.Add()
                    .Rows(0).Cells(0).Value = Format(Val(dt1.Rows(0).Item("Total_Dgv_Meters").ToString), "########0.00")
                    .Rows(0).Cells(6).Value = Format(Val(dt1.Rows(0).Item("Total_Dgv_Weight").ToString), "########0.000")

                End With

            Else

                new_record()

            End If

            Grid_Cell_DeSelect()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT MOVE RECORDS...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally

            dt1.Dispose()
            da1.Dispose()

            dt2.Dispose()
            da2.Dispose()

            If msk_Date.Visible And msk_Date.Enabled Then
                msk_Date.Focus()
            Else
                cbo_Weaver.Focus()
            End If

        End Try

        NoCalc_Status = False

    End Sub

    Public Sub delete_record() Implements Interface_MDIActions.delete_record
        Dim Nr As Long
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim cmd As New SqlClient.SqlCommand
        Dim trans As SqlClient.SqlTransaction
        Dim NewCode As String = ""
        Dim PkCode As String = ""
        Dim vOrdByNo As String = ""
        Dim vWeaCloRcpt_WagesCode_FldName As String = ""


        vOrdByNo = Common_Procedures.OrderBy_CodeToValue(lbl_BillNo.Text)

        ' If Val(Common_Procedures.User.IdNo) <> 1 And InStr(Common_Procedures.UR.Weaver_Wages_Entry, "~L~") = 0 And InStr(Common_Procedures.UR.Weaver_Wages_Entry, "~D~") = 0 Then MessageBox.Show("You have No Rights to Delete", "DOES NOT DELETE...", MessageBoxButtons.OK, MessageBoxIcon.Error) : Exit Sub

        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.DeletingEntry, Common_Procedures.UR.Weaver_Wages_Entry, New_Entry, Me, con, "Weaver_Wages_Head", "Weaver_Wages_Code", NewCode, "Weaver_Wages_Date", "(Weaver_Wages_Code = '" & Trim(NewCode) & "')") = False Then Exit Sub

        If Common_Procedures.settings.Vefified_Status = 1 Then
            NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

            If Val(Common_Procedures.get_FieldValue(con, "Weaver_Wages_Head", "Verified_Status", "(Weaver_Wages_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "')")) = 1 Then
                MessageBox.Show("Entry Already Verified", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub
            End If
        End If

        If Val(lbl_Company.Tag) = 0 Then
            MessageBox.Show("Invalid Company Selection", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        If pnl_Back.Enabled = False Then
            MessageBox.Show("Close Other Windows", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        If MessageBox.Show("Do you want to Delete?", "FOR DELETION...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question, MessageBoxDefaultButton.Button2) <> Windows.Forms.DialogResult.Yes Then
            Exit Sub
        End If

        If New_Entry = True Then
            MessageBox.Show("This is New Entry", "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If


        vWeaCloRcpt_WagesCode_FldName = "Weaver_Wages_Code"
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20 Then '---BRT
            vWeaCloRcpt_WagesCode_FldName = "Weaver_IR_Wages_Code"
        End If

        trans = con.BeginTransaction

        Try

            PkCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)
            NewCode = Trim(Pk_Condition) & Trim(PkCode)


            cmd.Connection = con
            cmd.Transaction = trans



            Call Common_Procedures.User_Modification_Updation(con, "HEAD", Me.Name, "DELETE", "Weaver_Wages_head", "Weaver_Wages_Code", Val(lbl_Company.Tag), NewCode, lbl_BillNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, True, "", "", "Weaver_Wages_Code, Company_IdNo, for_OrderBy", trans)
            Call Common_Procedures.User_Modification_Updation(con, "DETAILS", Me.Name, "DELETE", "Weaver_Wages_Yarn_Details", "Weaver_Wages_Code", Val(lbl_Company.Tag), NewCode, lbl_BillNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, True, "  Meters ,Count_IdNo,Rd_Sp,Pick,Width ,Weight_Meter,Weight", "Sl_No", "Weaver_Wages_Code, For_OrderBy, Company_IdNo, Weaver_Wages_No, Weaver_Wages_Date, Ledger_Idno", trans)


            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1267" Then

                Nr = 0
                cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = b.Count_IdNo , Weight = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedYarn_Checking else b.ConsumedYarn_Receipt end) from Stock_Yarn_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = '" & Trim(PkCondition_WCLRC) & "' + b.Weaver_ClothReceipt_Code"
                Nr = cmd.ExecuteNonQuery()
                If Nr = 0 Then
                    cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = b.Count_IdNo , Weight = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedYarn_Checking else b.ConsumedYarn_Receipt end) from Stock_Yarn_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = b.Weaver_ClothReceipt_Code"
                    cmd.ExecuteNonQuery()
                End If

                Nr = 0
                cmd.CommandText = "Update Stock_Pavu_Processing_Details set Meters = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedPavu_Checking else b.ConsumedPavu_Receipt end) from Stock_Pavu_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = '" & Trim(PkCondition_WCLRC) & "' + b.Weaver_ClothReceipt_Code"
                Nr = cmd.ExecuteNonQuery()
                If Nr = 0 Then
                    cmd.CommandText = "Update Stock_Pavu_Processing_Details set Meters = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedPavu_Checking else b.ConsumedPavu_Receipt end) from Stock_Pavu_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = b.Weaver_ClothReceipt_Code"
                    cmd.ExecuteNonQuery()
                End If

                cmd.CommandText = "Update Stock_Cloth_Processing_Details set reference_date = b.Weaver_ClothReceipt_Date, UnChecked_Meters = b.ReceiptMeters_Receipt, Meters_Type1 = 0, Meters_Type2 = 0, Meters_Type3 = 0, Meters_Type4 = 0, Meters_Type5 = 0 from Stock_Cloth_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and b.Weaver_Piece_Checking_Code = '' and a.Reference_Code = '" & Trim(PkCondition_WCLRC) & "' + b.Weaver_ClothReceipt_Code"
                cmd.ExecuteNonQuery()

            End If



            If Common_Procedures.VoucherBill_Deletion(con, Trim(Pk_Condition) & Trim(NewCode), trans) = False Then
                Throw New ApplicationException("Error on Voucher Bill Deletion")
            End If

            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(Pk_Condition) & Trim(PkCode), trans)
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(Pk_Condition2) & Trim(PkCode), trans)
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WPYMT) & Trim(PkCode), trans)
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WADVP) & Trim(PkCode), trans)
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WADVD) & Trim(PkCode), trans)
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WPTDS) & Trim(PkCode), trans)
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WFRGT) & Trim(PkCode), trans)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20 Then '---BRT
                cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_IR_Wages_Code = '', ReceiptMeters_Wages = 0, Receipt_Meters = (case when Weaver_Piece_Checking_Code <> '' then ReceiptMeters_Checking else ReceiptMeters_Receipt end), ConsumedYarn_Wages = 0, Consumed_Yarn = (case when Weaver_Piece_Checking_Code <> '' then ConsumedYarn_Checking else ConsumedYarn_Receipt end), ConsumedPavu_Wages = 0, Consumed_Pavu = (case when Weaver_Piece_Checking_Code <> '' then ConsumedPavu_Checking else ConsumedPavu_Receipt end) , Type1_Wages_Meters = 0, Type2_Wages_Meters = 0, Type3_Wages_Meters = 0, Type4_Wages_Meters = 0, Type5_Wages_Meters = 0, Total_Wages_Meters = 0, Report_Particulars_Wages = '', Report_Particulars = Report_Particulars_Receipt  Where Weaver_IR_Wages_Code = '" & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()

                cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_Wages_Code = '', Weaver_Wages_Increment = Weaver_Wages_Increment - 1, Weaver_Wages_Date = Null Where Weaver_Wages_Code = '" & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()

            Else

                cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_Wages_Code = '', Weaver_Wages_Increment = Weaver_Wages_Increment - 1, Weaver_Wages_Date = Null, ReceiptMeters_Wages = 0, Receipt_Meters =  (case when Weaver_Piece_Checking_Code <> '' then ReceiptMeters_Checking else ReceiptMeters_Receipt end), ConsumedYarn_Wages = 0, Consumed_Yarn = (case when Weaver_Piece_Checking_Code <> '' then ConsumedYarn_Checking else ConsumedYarn_Receipt end), ConsumedPavu_Wages = 0, Consumed_Pavu = (case when Weaver_Piece_Checking_Code <> '' then ConsumedPavu_Checking else ConsumedPavu_Receipt end) , Type1_Wages_Meters = 0, Type2_Wages_Meters = 0, Type3_Wages_Meters = 0, Type4_Wages_Meters = 0, Type5_Wages_Meters = 0, Total_Wages_Meters = 0, Report_Particulars_Wages = '', Report_Particulars = Report_Particulars_Receipt  Where Weaver_Wages_Code = '" & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()

            End If

            cmd.CommandText = "Delete from Stock_Yarn_Processing_Details Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and Reference_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()
            cmd.CommandText = "delete from Weaver_Wages_Yarn_Details where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "delete from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            trans.Commit()

            new_record()

            MessageBox.Show("Deleted Sucessfully!!!", "FOR DELETION...", MessageBoxButtons.OKCancel, MessageBoxIcon.Information)

        Catch ex As Exception
            trans.Rollback()
            MessageBox.Show(ex.Message, "DOES NOT DELETE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally

            Dt1.Dispose()
            Da.Dispose()
            trans.Dispose()
            cmd.Dispose()

            If msk_Date.Visible And msk_Date.Enabled Then
                msk_Date.Focus()
            Else
                cbo_Weaver.Focus()
            End If

        End Try

    End Sub

    Public Sub filter_record() Implements Interface_MDIActions.filter_record

        If Filter_Status = False Then

            Dim da As New SqlClient.SqlDataAdapter
            Dim dt1 As New DataTable
            Dim dt2 As New DataTable

            da = New SqlClient.SqlDataAdapter("select Ledger_DisplayName from Ledger_AlaisHead order by Ledger_DisplayName", con)
            da.Fill(dt1)
            cbo_Filter_PartyName.DataSource = dt1
            cbo_Filter_PartyName.DisplayMember = "Ledger_DisplayName"


            da = New SqlClient.SqlDataAdapter("select Count_Name from Count_Head order by Count_Name", con)
            da.Fill(dt2)
            cbo_Filter_PartyName.DataSource = dt2
            cbo_Filter_PartyName.DisplayMember = "Count_Name"

            dtp_Filter_Fromdate.Text = Common_Procedures.Company_FromDate
            dtp_Filter_ToDate.Text = Common_Procedures.Company_ToDate
            cbo_Filter_PartyName.Text = ""
            cbo_Filter_PartyName.SelectedIndex = -1
            cbo_Filter_CountName.Text = ""
            cbo_Filter_CountName.SelectedIndex = -1
            dgv_Filter_Details.Rows.Clear()

        End If

        pnl_Filter.Visible = True
        pnl_Filter.Enabled = True
        pnl_Back.Enabled = False
        If Filter_Status = True Then
            If dgv_Filter_Details.Rows.Count > 0 And Filter_RowNo >= 0 Then
                dgv_Filter_Details.Focus()
                dgv_Filter_Details.CurrentCell = dgv_Filter_Details.Rows(Filter_RowNo).Cells(0)
                dgv_Filter_Details.CurrentCell.Selected = True
            Else
                If dtp_Filter_Fromdate.Enabled And dtp_Filter_Fromdate.Visible Then dtp_Filter_Fromdate.Focus()

            End If

        Else
            If dtp_Filter_Fromdate.Enabled And dtp_Filter_Fromdate.Visible Then dtp_Filter_Fromdate.Focus()

        End If
    End Sub

    Public Sub movefirst_record() Implements Interface_MDIActions.movefirst_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String

        Try

            da = New SqlClient.SqlDataAdapter("select top 1 Weaver_Wages_No from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "'  and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by for_Orderby, Weaver_Wages_No", con)
            dt = New DataTable
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = Trim(dt.Rows(0)(0).ToString)
                End If
            End If

            dt.Clear()

            If Trim(movno) <> "" Then move_record(movno)
            'If Val(movno) <> 0 Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub movenext_record() Implements Interface_MDIActions.movenext_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String = ""
        Dim OrdByNo As Single = 0

        Try

            OrdByNo = Common_Procedures.OrderBy_CodeToValue(Trim(lbl_BillNo.Text))

            da = New SqlClient.SqlDataAdapter("select top 1 Weaver_Wages_No from Weaver_Wages_Head where for_orderby > " & Str(Val(OrdByNo)) & " and company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "' and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by for_Orderby, Weaver_Wages_No", con)
            dt = New DataTable
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = dt.Rows(0)(0).ToString
                End If
            End If

            If Trim(movno) <> "" Then move_record(movno)
            'If Val(movno) <> 0 Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub moveprevious_record() Implements Interface_MDIActions.moveprevious_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String = ""
        Dim OrdByNo As Single = 0

        Try

            OrdByNo = Common_Procedures.OrderBy_CodeToValue(Trim(lbl_BillNo.Text))

            da = New SqlClient.SqlDataAdapter("select top 1 Weaver_Wages_No from Weaver_Wages_Head where for_orderby < " & Str(Val(OrdByNo)) & " and company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "' and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by for_Orderby desc, Weaver_Wages_No desc", con)
            dt = New DataTable
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = dt.Rows(0)(0).ToString
                End If
            End If

            If Trim(movno) <> "" Then move_record(movno)
            'If Val(movno) <> 0 Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub movelast_record() Implements Interface_MDIActions.movelast_record
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim movno As String = ""

        Try
            da = New SqlClient.SqlDataAdapter("select top 1 Weaver_Wages_No from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "'  and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by for_Orderby desc, Weaver_Wages_No desc", con)
            dt = New DataTable
            da.Fill(dt)

            movno = ""
            If dt.Rows.Count > 0 Then
                If IsDBNull(dt.Rows(0)(0).ToString) = False Then
                    movno = dt.Rows(0)(0).ToString
                End If
            End If

            If Trim(movno) <> "" Then move_record(movno)
            'If Val(movno) <> 0 Then move_record(movno)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

    End Sub

    Public Sub new_record() Implements Interface_MDIActions.new_record
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable

        Try
            clear()

            New_Entry = True

            lbl_BillNo.Text = Common_Procedures.get_MaxCode(con, "Weaver_Wages_Head", "Weaver_Wages_Code", "For_OrderBy", "( Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' )", Val(lbl_Company.Tag), Common_Procedures.FnYearCode)
            lbl_BillNo.ForeColor = Color.Red

            msk_Date.Text = Date.Today
            msk_Date.SelectionStart = 0
            Da1 = New SqlClient.SqlDataAdapter("select top 1 * from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "'  and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by for_Orderby desc, Weaver_Wages_No desc", con)
            Dt1 = New DataTable
            Da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If Val(Common_Procedures.settings.PreviousEntryDate_ByDefault) = 1 Then '---- M.S Textiles (Tirupur)
                    If Dt1.Rows(0).Item("Weaver_Wages_Date").ToString <> "" Then dtp_Date.Text = Dt1.Rows(0).Item("Weaver_Wages_Date").ToString
                End If
                txt_FoldingLess_Perc.Text = Dt1.Rows(0).Item("Folding_Less").ToString
                txt_CGST_Percentage.Text = Dt1.Rows(0).Item("CGST_Percentage").ToString
                txt_SGST_Percentage.Text = Dt1.Rows(0).Item("SGST_Percentage").ToString

                If Dt1.Rows(0).Item("Deduction_caption").ToString <> "" Then txt_DeductionName_Caption.Text = Dt1.Rows(0).Item("Deduction_caption").ToString
                If Dt1.Rows(0).Item("Add_Advance_Caption_Name").ToString <> "" Then txt_Add_Advance_Caption.Text = Dt1.Rows(0).Item("Add_Advance_Caption_Name").ToString
                If Dt1.Rows(0).Item("Addless_Caption_name").ToString <> "" Then txt_addless_beforeTax_caption.Text = Dt1.Rows(0).Item("Addless_Caption_name").ToString

            End If
            Dt1.Clear()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR NEW RECORD...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally

            Dt1.Dispose()
            Da1.Dispose()
        End Try

        If msk_Date.Visible And msk_Date.Enabled Then
            msk_Date.Focus()
        Else
            cbo_Weaver.Focus()
        End If

    End Sub

    Public Sub open_record() Implements Interface_MDIActions.open_record
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim movno As String, inpno As String
        Dim InvCode As String


        Try

            pnl_Back.Enabled = False
            pnl_OpenRecord.Visible = True
            pnl_OpenRecord.BringToFront()
            txt_BillNoOpen.Focus()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            '---

        End Try


        'Try

        '    inpno = InputBox("Enter Bill No.", "FOR FINDING...")

        '    InvCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(Common_Procedures.FnYearCode)

        '    Da = New SqlClient.SqlDataAdapter("select Weaver_Wages_No from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code = '" & Trim(InvCode) & "'", con)
        '    Dt = New DataTable
        '    Da.Fill(Dt)

        '    movno = ""
        '    If Dt.Rows.Count > 0 Then
        '        If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
        '            movno = Trim(Dt.Rows(0)(0).ToString)
        '        End If
        '    End If

        '    Dt.Clear()

        '    If Val(movno) <> 0 Then
        '        move_record(movno)

        '    Else
        '        MessageBox.Show("Bill No. does not exists", "DOES NOT FIND...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        '    End If

        'Catch ex As Exception
        '    MessageBox.Show(ex.Message, "DOES NOT FIND...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        'Finally
        '    Dt.Dispose()
        '    Da.Dispose()

        'End Try

    End Sub

    Public Sub insert_record() Implements Interface_MDIActions.insert_record
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim movno As String, inpno As String
        Dim InvCode As String

        '  If Val(Common_Procedures.User.IdNo) <> 1 And InStr(Common_Procedures.UR.Weaver_Wages_Entry, "~L~") = 0 And InStr(Common_Procedures.UR.Weaver_Wages_Entry, "~I~") = 0 Then MessageBox.Show("You have No Rights to Insert", "DOES NOT INSERT...", MessageBoxButtons.OK, MessageBoxIcon.Error) : Exit Sub
        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.InsertingEntry, Common_Procedures.UR.Weaver_Wages_Entry, New_Entry, Me) = False Then Exit Sub

        Try

            inpno = InputBox("Enter New Bill No.", "FOR NEW BILL NO. INSERTION...")

            InvCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(Common_Procedures.FnYearCode)

            Da = New SqlClient.SqlDataAdapter("select Weaver_Wages_No from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code = '" & Trim(InvCode) & "'", con)
            Dt = New DataTable
            Da.Fill(Dt)

            movno = ""
            If Dt.Rows.Count > 0 Then
                If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                    movno = Trim(Dt.Rows(0)(0).ToString)
                End If
            End If

            Dt.Clear()

            If Trim(movno) <> "" Then
                move_record(movno)

            Else
                If Val(inpno) = 0 Then
                    MessageBox.Show("Invalid BILL No.", "DOES NOT INSERT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

                Else
                    new_record()
                    Insert_Entry = True
                    lbl_BillNo.Text = Trim(UCase(inpno))

                End If

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT INSERT ...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            Dt.Dispose()
            Da.Dispose()

        End Try

    End Sub

    Public Sub save_record() Implements Interface_MDIActions.save_record
        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim tr As SqlClient.SqlTransaction
        Dim NewCode As String = ""
        Dim PkCode As String = ""
        Dim clth_ID As Integer = 0
        Dim Wev_ID As Integer = 0
        Dim Endcnt_ID As Integer = 0
        Dim cunt_ID As Integer = 0
        Dim Sno As Integer = 0, YSno As Integer = 0
        Dim EntID As String = ""
        Dim PBlNo As String = ""
        Dim Partcls As String = ""
        Dim vTotMtrs As Single, vTotwgt As Single
        Dim Cr_ID As Integer = 0
        Dim Dr_ID As Integer = 0
        Dim TdsAc_ID As Integer = 0
        Dim Chk_Freight_sts As Integer = 0
        Dim PcsChkCode As String = ""
        Dim Lm_ID As Integer = 0
        Dim Wdth_Typ As String = ""
        Dim ConsYarn As Single = 0
        Dim ConsPavu As Single = 0
        Dim Clo_Mtrs_Pc As Single = 0
        Dim ClthName As String = ""
        Dim Rep_Partcls_Wages As String = ""
        Dim DateColUpdt As String = ""
        Dim RCM_Sts As String = ""
        Dim vWgAmt As String = ""
        Dim LoomTy As String = ""
        Dim VouBil As String = ""
        Dim vLed_IdNos As String = "", vVou_Amts As String = "", ErrMsg As String = ""
        Dim Verified_STS As String = ""
        Dim vOrdByNo As String = ""
        Dim vWeaCloRcpt_WagesCode_FldName As String = ""
        Dim AC_POS_sts As Boolean = True
        Dim vDat1 As Date = #1/1/2000#
        Dim vDat2 As Date = #2/2/2000#
        Dim stppymnt_sts As Integer = 0
        Dim vCLOREC_WeftCntIdNo As Integer = 0
        Dim vWftYrn_CntIdNo As Integer = 0
        Dim vWftYrn_1stCount_Consumption As String = 0
        Dim vCLOREC_SAME_COUNT_UPDT_STS As Boolean = False
        Dim Nr As Long = 0
        Dim vGStinSts As String = ""
        Dim Led_type As String
        Dim vDelv_ID As Integer
        Dim vRec_ID As Integer

        vOrdByNo = Common_Procedures.OrderBy_CodeToValue(lbl_BillNo.Text)

        If Val(lbl_Company.Tag) = 0 Then
            MessageBox.Show("Invalid Company Selection", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        'If Common_Procedures.UserRight_Check(Common_Procedures.UR.Weaver_Wages_Entry, New_Entry) = False Then Exit Sub
        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.SavingEntry, Common_Procedures.UR.Weaver_Wages_Entry, New_Entry, Me, con, "Weaver_Wages_Head", "Weaver_Wages_Code", NewCode, "Weaver_Wages_Date", "(Weaver_Wages_Code = '" & Trim(NewCode) & "')", "(Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnYearCode) & "')", "for_Orderby desc, Weaver_Wages_No desc", dtp_Date.Value.Date) = False Then Exit Sub

        If Common_Procedures.settings.Vefified_Status = 1 Then
            If Not (Val(Common_Procedures.User.IdNo) = 1 Or Common_Procedures.User.Show_Verified_Status = 1) Then
                NewCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

                If Val(Common_Procedures.get_FieldValue(con, "Weaver_Wages_Head", "Verified_Status", "(Weaver_Wages_Code = '" & Trim(Pk_Condition) & Trim(NewCode) & "')")) = 1 Then
                    MessageBox.Show("Entry Already Verified", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    Exit Sub
                End If
            End If
        End If

        If pnl_Back.Enabled = False Then
            MessageBox.Show("Close Other Windows", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If

        If IsDate(msk_Date.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If msk_Date.Visible And msk_Date.Enabled Then msk_Date.Focus()
            Exit Sub
        End If

        If IsDate(dtp_Date.Text) = False Then
            MessageBox.Show("Invalid Date", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            If msk_Date.Visible And msk_Date.Enabled Then msk_Date.Focus()
            Exit Sub
        End If

        If Trim(msk_Date.Text) <> "" Then
            If Trim(msk_Date.Text) <> "-  -" Then
                If IsDate(msk_Date.Text) = True Then
                    vDat1 = Convert.ToDateTime(msk_Date.Text)
                End If
            End If
        End If

        If Trim(dtp_Date.Text) <> "" Then
            If IsDate(dtp_Date.Text) = True Then
                vDat2 = dtp_Date.Value.Date
            End If
        End If

        If IsDate(vDat1) = True And IsDate(vDat2) = True Then

            If DateDiff(DateInterval.Day, vDat1, vDat2) <> 0 Then

                If msk_Date.Visible And msk_Date.Enabled Then msk_Date.Focus()
                MessageBox.Show("Invalid Wages Date", "DOES NOT SAVE....", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub

            End If

        End If

        If Not (Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Trim(Common_Procedures.FnYearCode) = "19-20") Then
            If Not (Convert.ToDateTime(msk_Date.Text) >= Common_Procedures.Company_FromDate And Convert.ToDateTime(msk_Date.Text) <= Common_Procedures.Company_ToDate) Then
                MessageBox.Show("Date is out of financial range", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                If msk_Date.Visible And msk_Date.Enabled Then msk_Date.Focus()
                Exit Sub
            End If
        End If

        Wev_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)
        clth_ID = Common_Procedures.Cloth_NameToIdNo(con, lbl_Cloth.Text)
        Endcnt_ID = Common_Procedures.EndsCount_NameToIdNo(con, cbo_Ends_Count.Text)
        cunt_ID = Common_Procedures.Count_NameToIdNo(con, cbo_Grid_Count.Text)
        lbl_UserName.Text = Common_Procedures.User.IdNo

        For i = 0 To dgv_Details.RowCount - 1

            If Val(dgv_Details.Rows(i).Cells(1).Value) <> 0 Or Val(dgv_Details.Rows(i).Cells(6).Value) <> 0 Then

                cunt_ID = Common_Procedures.Count_NameToIdNo(con, dgv_Details.Rows(i).Cells(1).Value)
                If clth_ID = 0 Then
                    MessageBox.Show("Invalid Count Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                    If dgv_Details.Enabled And dgv_Details.Visible Then
                        dgv_Details.Focus()
                        dgv_Details.CurrentCell = dgv_Details.Rows(i).Cells(1)
                    End If
                    Exit Sub
                End If
            End If
        Next

        If Common_Procedures.settings.CustomerCode = "1204" Then
            If Val(dgv_Details_Total.Rows(0).Cells(6).Value) = 0 Then
                MessageBox.Show("Invalid Weft Yarn Details", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                If dgv_Details.Enabled And dgv_Details.Visible Then
                    dgv_Details.Focus()
                    dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(1)
                End If
                Exit Sub
            End If

        End If

        Wev_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

        If Wev_ID = 0 Then
            MessageBox.Show("Invalid Weaver Name", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If cbo_Weaver.Enabled Then cbo_Weaver.Focus()
            Exit Sub
        End If

        If lbl_WeaverBillNo.Visible Then
            If Trim(lbl_WeaverBillNo.Text) <> "" Then
                Da = New SqlClient.SqlDataAdapter("select Weaver_BillNo from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnRange) & "' and Ledger_IdNo = " & Str(Val(Wev_ID)) & " and Weaver_BillNo = '" & Trim(lbl_WeaverBillNo.Text) & "'", con)
                Dt1 = New DataTable
                Da.Fill(Dt1)
                If Dt1.Rows.Count > 0 Then
                    If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                        MessageBox.Show("Duplicate Weaver Bill No", "DOES NOT SAVE...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                        If cbo_Weaver.Enabled Then cbo_Weaver.Focus()
                        Exit Sub
                    End If
                End If
                Dt1.Clear()
            End If
        End If

        Verified_STS = 0
        If chk_Verified_Status.Checked = True Then Verified_STS = 1


        stppymnt_sts = 0
        If Chk_Stop_payment_sts.Checked = True Then stppymnt_sts = 1

        Chk_Freight_sts = 0
        If Chk_Freight_charge_print_sts.Checked = True Then Chk_Freight_sts = 1

        NoCalc_Status = False
        Total_Calculation()

        vTotMtrs = 0 : vTotwgt = 0

        If dgv_Details_Total.RowCount > 0 Then
            vTotMtrs = Val(dgv_Details_Total.Rows(0).Cells(0).Value())
            vTotwgt = Val(dgv_Details_Total.Rows(0).Cells(6).Value())
        End If

        PcsChkCode = ""
        Lm_ID = 0
        Wdth_Typ = ""
        LoomTy = ""

        vCLOREC_WeftCntIdNo = 0
        Da = New SqlClient.SqlDataAdapter("select Weaver_Piece_Checking_Code, Loom_IdNo, Width_Type , Loom_Type, Count_IdNo from Weaver_Cloth_Receipt_Head Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "'", con)
        Dt1 = New DataTable
        Da.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0).Item("Weaver_Piece_Checking_Code").ToString) = False Then
                PcsChkCode = Dt1.Rows(0).Item("Weaver_Piece_Checking_Code").ToString
            End If
            vCLOREC_WeftCntIdNo = Val(Dt1.Rows(0).Item("Count_IdNo").ToString)
            Lm_ID = Val(Dt1.Rows(0).Item("Loom_IdNo").ToString)
            Wdth_Typ = Dt1.Rows(0).Item("Width_Type").ToString
            LoomTy = Dt1.Rows(0).Item("Loom_Type").ToString
        End If
        Dt1.Clear()

        vWeaCloRcpt_WagesCode_FldName = "Weaver_Wages_Code"
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20 Then
            vWeaCloRcpt_WagesCode_FldName = "Weaver_IR_Wages_Code"
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then 'BRT

            vGStinSts = Common_Procedures.get_FieldValue(con, "Ledger_Head", "Ledger_GSTinNo", "(Ledger_IdNo = " & Str(Val(Wev_ID)) & " )")

            If Trim(vGStinSts) <> "" Then

                If Val(lbl_Total_Amount.Text) <> 0 Then
                    If (Val(lbl_CGST_Amount.Text) + Val(lbl_SGST_Amount.Text)) = 0 Then
                        MessageBox.Show("Invalid GST Amount - Fill GST %", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                        txt_CGST_Percentage.Text = "2.5"
                        txt_SGST_Percentage.Text = "2.5"
                        If txt_CGST_Percentage.Enabled Then txt_CGST_Percentage.Focus()
                        Exit Sub
                    End If
                End If

            Else

                If (Val(lbl_CGST_Amount.Text) + Val(lbl_SGST_Amount.Text)) <> 0 Then
                    MessageBox.Show("Invalid GST Amount - GST Amount should be Zero for this Party (No GST number in Weaver Creation)", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    txt_CGST_Percentage.Text = ""
                    txt_SGST_Percentage.Text = ""
                    If txt_CGST_Percentage.Enabled Then txt_CGST_Percentage.Focus()
                    Exit Sub
                End If

            End If

            If Val(lbl_Total_Amount.Text) <> 0 Then
                If Val(lbl_Tds_Amount.Text) = 0 Then
                    MessageBox.Show("Invalid TDS Amount", "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                    If Val(txt_TdsPerc.Text) = 0 Then
                        txt_TdsPerc.Text = Common_Procedures.get_FieldValue(con, "Ledger_Head", "Tds_Perc", "(Ledger_IdNo = " & Str(Val(Wev_ID)) & " )")
                    End If
                    If txt_TdsPerc.Enabled Then txt_TdsPerc.Focus()
                    Exit Sub
                End If
            End If

        End If

        tr = con.BeginTransaction

        Try

            If Insert_Entry = True Or New_Entry = False Then
                PkCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)


            Else

                lbl_BillNo.Text = Common_Procedures.get_MaxCode(con, "Weaver_Wages_Head", "Weaver_Wages_Code", "For_OrderBy", "(Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' )", Val(lbl_Company.Tag), Common_Procedures.FnYearCode, tr)

                PkCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

            End If
            NewCode = Trim(Pk_Condition) & Trim(PkCode)

            cmd.Connection = con
            cmd.Transaction = tr

            cmd.Parameters.Clear()
            cmd.Parameters.AddWithValue("@WagesDate", dtp_Date.Value.Date)
            cmd.Parameters.AddWithValue("@receiptdate", CDate(lbl_Rec_Date.Text))

            Debug.Print(txt_Bits_Meter.Text)

            cmd.CommandText = "Truncate Table TempTable_For_NegativeStock"
            cmd.ExecuteNonQuery()


            If New_Entry = True Then

                cmd.CommandText = "Insert into Weaver_Wages_Head ( Weaver_Wages_Code        ,               Company_IdNo       ,          Weaver_Wages_No       ,                     for_OrderBy                                         , Weaver_Wages_Date ,       Ledger_IdNo       ,      Weaver_Cloth_Receipt_Code    ,             Rec_No              ,   Rec_Date                          ,   Cloth_IdNo                 ,  P_Dc_No                   ,  EndsCount_IdNo             ,                  Pcs                   , Receipt_Meters                      , Folding_Less                            ,  Sound_Meters                            , Sound_Cooly                     ,   Seconds_Meters                        ,  Seconds_Cooly                          ,     Bits_Meters                           , Bits_Cooly                             ,  Reject_Meters                           , Reject_Cooly                       ,             Others_Meters                  ,  Others_Cooly                          ,  Total_Meters                       ,  Total_Cooly                         , Freight_Charge                     ,                 Paid_Amount                       ,   Excess_Short                     ,      Add_Amount                     ,      Tds_Perc                                ,   Tds_Perc_Calc              ,          Elogation                   ,    Less_Amount                         ,             Assesable_Value      ,                   Net_Amount                ,            Total_Dgv_Meters          ,    Total_Dgv_Weight, Weaver_BillNo               ,                                WeaverBillNo_ForOrderBy                                 , Scecondsless_Meter                   ,            Scecondsless_Rate            , Remarks                          ,       User_IdNo                ,Total_Taxable_Amount                    ,CGST_Percentage                           ,CGST_Amount                           ,SGST_Percentage                           ,SGST_Amount       ,                                      Verified_Status,Deduction_Amount,Deduction_caption,   Stop_Payment_status                                                                                , Chk_Freight_Print_Status          ,         Add_Advance_Caption_Name, Addless_Caption_name , Addless ) " &
                                    "     Values                 (   '" & Trim(NewCode) & "', " & Str(Val(lbl_Company.Tag)) & ", '" & Trim(lbl_BillNo.Text) & "', " & Str(Val(Common_Procedures.OrderBy_CodeToValue(lbl_BillNo.Text))) & ",     @WagesDate    , " & Str(Val(Wev_ID)) & ",  '" & Trim(lbl_RecCode.Text) & "' ,  '" & Trim(lbl_RecNo.Text) & "' ,  '" & Trim(lbl_Rec_Date.Text) & "'  , " & Str(Val(clth_ID)) & ", '" & Trim(lbl_PDcNo.Text) & "' , " & Str(Val(Endcnt_ID)) & ", " & Str(Val(txt_Pcs.Text)) & ", " & Str(Val(txt_Rec_Meter.Text)) & ",  " & Str(Val(txt_FoldingLess_Perc.Text)) & ",  " & Str(Val(txt_Sound_Meter.Text)) & ",  " & Str(Val(txt_Sound_Cooly.Text)) & ", " & Str(Val(txt_Seconds_Meter.Text)) & ",  " & Str(Val(txt_Seconds_Cooly.Text)) & " , " & Str(Val(txt_Bits_Meter.Text)) & " ,  " & Str(Val(txt_Bits_Cooly.Text)) & ", " & Str(Val(txt_Reject_Meter.Text)) & " , " & Str(Val(txt_Reject_Cooly.Text)) & ", " & Str(Val(txt_Other_Meter.Text)) & ",  " & Str(Val(txt_Other_Cooly.Text)) & ", " & Str(Val(lbl_Total_Meter.Text)) & ", " & Str(Format(Val(lbl_Total_Cooly.Text), "##########0")) & ",  " & Str(Val(txt_Freight_Charge.Text)) & ",  " & Str(Val(txt_Paid_Amount.Text)) & ",  " & Str(Val(lbl_Excess_Short.Text)) & ",  " & Str(Val(txt_Add_Amount.Text)) & ",  " & Str(Val(txt_TdsPerc.Text)) & ",  " & Str(Val(lbl_Tds_Amount.Text)) & ",  " & Str(Val(txt_Elogation.Text)) & ",  " & Str(Val(txt_Less_Amount.Text)) & ",  " & Str(Val(lbl_Total_Amount.Text)) & ",  " & Str(Val(CSng(lbl_Net_Amount.Text))) & ",  " & Str(Val(vTotMtrs)) & ",  " & Str(Val(vTotwgt)) & ", '" & Trim(lbl_WeaverBillNo.Text) & "',  " & Str(Val(Common_Procedures.OrderBy_CodeToValue(lbl_WeaverBillNo.Text))) & "  , " & Str(Val(txt_ScdsLsMeter.Text)) & " ," & Str(Val(txt_ScdsLsRate.Text)) & " , '" & Trim(txt_Remarks.Text) & "' , " & Val(lbl_UserName.Text) & "  ," & Str(Val(lbl_Taxable_Value.Text)) & "," & Str(Val(txt_CGST_Percentage.Text)) & "," & Str(Val(lbl_CGST_Amount.Text)) & "," & Str(Val(txt_SGST_Percentage.Text)) & "," & Str(Val(lbl_SGST_Amount.Text)) & ", " & Val(Verified_STS) & "," & Str(Val(txt_deduction.Text)) & ",'" & Trim(txt_DeductionName_Caption.Text) & "' ,   " & Str(Val(stppymnt_sts)) & ",  " & Str(Val(Chk_Freight_sts)) & "   ,'" & Trim(txt_Add_Advance_Caption.Text) & "' , '" & Trim(txt_addless_beforeTax_caption.Text) & "' , " & Val(txt_addless_beforeTax.Text) & ") "
                cmd.ExecuteNonQuery()

            Else

                Call Common_Procedures.User_Modification_Updation(con, "HEAD", Me.Name, "OLD", "Weaver_Wages_head", "Weaver_Wages_Code", Val(lbl_Company.Tag), NewCode, lbl_BillNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, "", "", "Weaver_Wages_Code, Company_IdNo, for_OrderBy", tr)
                Call Common_Procedures.User_Modification_Updation(con, "DETAILS", Me.Name, "OLD", "Weaver_Wages_Yarn_Details", "Weaver_Wages_Code", Val(lbl_Company.Tag), NewCode, lbl_BillNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, "  Meters ,Count_IdNo,Rd_Sp,Pick,Width ,Weight_Meter,Weight", "Sl_No", "Weaver_Wages_Code, For_OrderBy, Company_IdNo, Weaver_Wages_No, Weaver_Wages_Date, Ledger_Idno", tr)


                cmd.CommandText = "Update Weaver_Wages_Head set Weaver_Wages_Date = @WagesDate, Ledger_IdNo =  " & Str(Val(Wev_ID)) & " ,   Weaver_Cloth_Receipt_Code = '" & Trim(lbl_RecCode.Text) & "' ,   Rec_No = '" & Trim(lbl_RecNo.Text) & "' ,   Rec_Date = '" & Trim(lbl_Rec_Date.Text) & "' ,   Cloth_IdNo  =  " & Str(Val(clth_ID)) & "                                         ,  P_Dc_No = '" & Trim(lbl_PDcNo.Text) & "' ,  EndsCount_IdNo =  " & Str(Val(Endcnt_ID)) & " ,    Pcs = " & Str(Val(txt_Pcs.Text)) & " , Receipt_Meters = " & Str(Val(txt_Rec_Meter.Text)) & " , Folding_Less =  " & Str(Val(txt_FoldingLess_Perc.Text)) & "    ,  Sound_Meters  =  " & Str(Val(txt_Sound_Meter.Text)) & " , Sound_Cooly = " & Str(Val(txt_Sound_Cooly.Text)) & ",   Seconds_Meters = " & Str(Val(txt_Seconds_Meter.Text)) & ",  Seconds_Cooly =  " & Str(Val(txt_Seconds_Cooly.Text)) & ", Bits_Meters =  " & Str(Val(txt_Bits_Meter.Text)) & " , Bits_Cooly = " & Str(Val(txt_Bits_Cooly.Text)) & ",  Reject_Meters =  " & Str(Val(txt_Reject_Meter.Text)) & " , Reject_Cooly = " & Str(Val(txt_Reject_Cooly.Text)) & " , Others_Meters = " & Str(Val(txt_Other_Meter.Text)) & " ,  Others_Cooly =  " & Str(Val(txt_Other_Cooly.Text)) & " ,  Total_Meters = " & Str(Val(lbl_Total_Meter.Text)) & "   ,  Total_Cooly =  " & Str(Format(Val(lbl_Total_Cooly.Text), "#############0")) & " , Freight_Charge =  " & Str(Val(txt_Freight_Charge.Text)) & " , Paid_Amount =  " & Str(Val(txt_Paid_Amount.Text)) & "  ,   Excess_Short = " & Str(Val(lbl_Excess_Short.Text)) & "  , Add_Amount = " & Str(Val(txt_Add_Amount.Text)) & "  , Tds_Perc =  " & Str(Val(txt_TdsPerc.Text)) & " , Tds_Perc_Calc =  " & Str(Val(lbl_Tds_Amount.Text)) & " , Scecondsless_Meter =" & Str(Val(txt_ScdsLsMeter.Text)) & "  , Remarks = '" & Trim(txt_Remarks.Text) & "' , Scecondsless_Rate =" & Str(Val(txt_ScdsLsRate.Text)) & " ,  Elogation =  " & Str(Val(txt_Elogation.Text)) & " ,    Less_Amount =  " & Str(Val(txt_Less_Amount.Text)) & " , Assesable_Value = " & Str(Val(lbl_Total_Amount.Text)) & ", Net_Amount = " & Str(Val(CSng(lbl_Net_Amount.Text))) & ", Total_Dgv_Meters = " & Str(Val(vTotMtrs)) & " ,    Total_Dgv_Weight = " & Str(Val(vTotwgt)) & ", Weaver_BillNo = '" & Trim(lbl_WeaverBillNo.Text) & "', WeaverBillNo_ForOrderBy = " & Str(Val(Common_Procedures.OrderBy_CodeToValue(lbl_WeaverBillNo.Text))) & " , User_idNo = " & Val(lbl_UserName.Text) & ",Total_Taxable_Amount =" & Str(Val(lbl_Taxable_Value.Text)) & ",CGST_Percentage =" & Str(Val(txt_CGST_Percentage.Text)) & " ,CGST_Amount =" & Str(Val(lbl_CGST_Amount.Text)) & " ,SGST_Percentage =" & Str(Val(txt_SGST_Percentage.Text)) & ",SGST_Amount =" & Str(Val(lbl_SGST_Amount.Text)) & " ,Verified_Status= " & Val(Verified_STS) & ",Deduction_Amount=" & Str(Val(txt_deduction.Text)) & ",Deduction_caption= '" & Trim(txt_DeductionName_Caption.Text) & "' , Stop_Payment_status =  " & Str(Val(stppymnt_sts)) & ",   Chk_Freight_Print_Status = " & Str(Val(Chk_Freight_sts)) & "  ,Add_Advance_Caption_Name = '" & Trim(txt_Add_Advance_Caption.Text) & "'  , Addless_Caption_name = '" & Trim(txt_addless_beforeTax_caption.Text) & "' , Addless = " & Val(txt_addless_beforeTax.Text) & " Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code = '" & Trim(NewCode) & "'"
                cmd.ExecuteNonQuery()


                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1267" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1461" Then

                    Nr = 0
                    cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = b.Count_IdNo , Weight = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedYarn_Checking else b.ConsumedYarn_Receipt end) from Stock_Yarn_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = '" & Trim(PkCondition_WCLRC) & "' + b.Weaver_ClothReceipt_Code"
                    Nr = cmd.ExecuteNonQuery()
                    If Nr = 0 Then
                        cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = b.Count_IdNo , Weight = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedYarn_Checking else b.ConsumedYarn_Receipt end) from Stock_Yarn_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = b.Weaver_ClothReceipt_Code"
                        Nr = cmd.ExecuteNonQuery()
                    End If

                    Nr = 0
                    cmd.CommandText = "Update Stock_Pavu_Processing_Details set Meters = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedPavu_Checking else b.ConsumedPavu_Receipt end) from Stock_Pavu_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = '" & Trim(PkCondition_WCLRC) & "' + b.Weaver_ClothReceipt_Code"
                    cmd.ExecuteNonQuery()
                    If Nr = 0 Then
                        cmd.CommandText = "Update Stock_Pavu_Processing_Details set Meters = (case when b.Weaver_Piece_Checking_Code <> '' then b.ConsumedPavu_Checking else b.ConsumedPavu_Receipt end) from Stock_Pavu_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and a.Reference_Code = b.Weaver_ClothReceipt_Code"
                        cmd.ExecuteNonQuery()
                    End If

                    cmd.CommandText = "Update Stock_Cloth_Processing_Details set reference_date = b.Weaver_ClothReceipt_Date, UnChecked_Meters = b.ReceiptMeters_Receipt, Meters_Type1 = 0, Meters_Type2 = 0, Meters_Type3 = 0, Meters_Type4 = 0, Meters_Type5 = 0 from Stock_Cloth_Processing_Details a, Weaver_Cloth_Receipt_Head b Where b." & Trim(vWeaCloRcpt_WagesCode_FldName) & " = '" & Trim(NewCode) & "' and b.Weaver_Piece_Checking_Code = '' and a.Reference_Code = '" & Trim(PkCondition_WCLRC) & "' + b.Weaver_ClothReceipt_Code"
                    cmd.ExecuteNonQuery()

                End If



                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20 Then

                    cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_IR_Wages_Code = '', ReceiptMeters_Wages = 0, Receipt_Meters = (case when Weaver_Piece_Checking_Code <> '' then ReceiptMeters_Checking else ReceiptMeters_Receipt end), ConsumedYarn_Wages = 0, Consumed_Yarn = (case when Weaver_Piece_Checking_Code <> '' then ConsumedYarn_Checking else ConsumedYarn_Receipt end), ConsumedPavu_Wages = 0, Consumed_Pavu = (case when Weaver_Piece_Checking_Code <> '' then ConsumedPavu_Checking else ConsumedPavu_Receipt end) , Type1_Wages_Meters = 0, Type2_Wages_Meters = 0, Type3_Wages_Meters = 0, Type4_Wages_Meters = 0, Type5_Wages_Meters = 0, Total_Wages_Meters = 0, Report_Particulars_Wages = '', Report_Particulars = Report_Particulars_Receipt Where Weaver_IR_Wages_Code = '" & Trim(NewCode) & "'"
                    cmd.ExecuteNonQuery()

                    cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_Wages_Code = '', Weaver_Wages_Increment = Weaver_Wages_Increment - 1, Weaver_Wages_Date = Null Where Weaver_Wages_Code = '" & Trim(NewCode) & "'"
                    cmd.ExecuteNonQuery()

                Else

                    cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_Wages_Code = '', Weaver_Wages_Increment = Weaver_Wages_Increment - 1, Weaver_Wages_Date = Null, ReceiptMeters_Wages = 0, Receipt_Meters =  (case when Weaver_Piece_Checking_Code <> '' then ReceiptMeters_Checking else ReceiptMeters_Receipt end), ConsumedYarn_Wages = 0, Consumed_Yarn = (case when Weaver_Piece_Checking_Code <> '' then ConsumedYarn_Checking else ConsumedYarn_Receipt end), ConsumedPavu_Wages = 0, Consumed_Pavu = (case when Weaver_Piece_Checking_Code <> '' then ConsumedPavu_Checking else ConsumedPavu_Receipt end) , Type1_Wages_Meters = 0, Type2_Wages_Meters = 0, Type3_Wages_Meters = 0, Type4_Wages_Meters = 0, Type5_Wages_Meters = 0, Total_Wages_Meters = 0, Report_Particulars_Wages = '', Report_Particulars = Report_Particulars_Receipt  Where Weaver_Wages_Code = '" & Trim(NewCode) & "'"
                    cmd.ExecuteNonQuery()

                End If



            End If

            Debug.Print(txt_Bits_Meter.Text)

            Call Common_Procedures.User_Modification_Updation(con, "HEAD", Me.Name, "NEW", "Weaver_Wages_head", "Weaver_Wages_Code", Val(lbl_Company.Tag), NewCode, lbl_BillNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, "", "", "Weaver_Wages_Code, Company_IdNo, for_OrderBy", tr)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1116" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1446" Then
                Rep_Partcls_Wages = ""
                Rep_Partcls_Wages = "CloRcpt :" & Trim(lbl_RecNo.Text)
                If Trim(lbl_PDcNo.Text) <> "" Then
                    Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ",P.Dc.No : " & Trim(lbl_PDcNo.Text)
                End If
                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", Bil.No. " & Trim(lbl_BillNo.Text)
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1446" Then
                    Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", Cloth :" & Trim(lbl_Cloth.Text) & ", Ends : " & Trim(cbo_Ends_Count.Text) & ", Pcs :" & Trim(Val(txt_Pcs.Text))
                Else
                    Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", Cloth :" & Trim(lbl_Cloth.Text) & ", Ends : " & Trim(cbo_Ends_Count.Text) & ", Pcs :" & Trim(lbl_Total_Meter.Text)
                End If


            ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1185" Then
                Rep_Partcls_Wages = "CloRcpt : LotNo. " & Trim(lbl_RecNo.Text)
                If Trim(lbl_PDcNo.Text) <> "" Then
                    Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ",P.Dc.No : " & Trim(lbl_PDcNo.Text)
                End If
                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", Bil.No. " & Trim(lbl_BillNo.Text)
                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", Cloth :" & Trim(lbl_Cloth.Text)

            ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1613" Then

                Dim Ends_Name() As String
                Dim Pick, width As String

                Ends_Name = Split(cbo_Ends_Count.Text, "/")

                Rep_Partcls_Wages = "CloRcpt : "
                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & " " & Ends_Name(1)
                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", " & Ends_Name(0)

                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", " & Str(Val(dgv_Details.Rows(0).Cells(3).Value)) & " X " & Str(Val(dgv_Details.Rows(0).Cells(4).Value))
                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", " & Str(Val(txt_Sound_Meter.Text)) & IIf(Str(Val(txt_Bits_Meter.Text)) <> 0, "  & " & Str(Val(txt_Bits_Meter.Text)), "")

            Else

                Rep_Partcls_Wages = "CloRcpt : LotNo. " & Trim(lbl_RecNo.Text)
                If Trim(lbl_PDcNo.Text) <> "" Then
                    Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ",  P.Dc.No : " & Trim(lbl_PDcNo.Text)
                End If
                Rep_Partcls_Wages = Trim(Rep_Partcls_Wages) & ", Bill.No. " & Trim(lbl_BillNo.Text)

            End If


            EntID = Trim(Pk_Condition) & Trim(lbl_BillNo.Text)
            Partcls = Rep_Partcls_Wages
            PBlNo = Trim(lbl_BillNo.Text)

            If Val(Common_Procedures.settings.Weaver_YarnStock_InMeter_Status) = 1 Then
                ConsYarn = Val(vTotMtrs)
            Else
                ConsYarn = Val(vTotwgt)
            End If

            Debug.Print(txt_Bits_Meter.Text)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then '---- S.Ravichandran Textiles (Erode)

                Clo_Mtrs_Pc = Val(Common_Procedures.get_FieldValue(con, "Cloth_Head", "Meters_Pcs", "(Cloth_idno = " & Str(Val(clth_ID)) & ")", , tr))
                If Val(Clo_Mtrs_Pc) = 0 Then Clo_Mtrs_Pc = 40
                ConsPavu = Format(Val(Clo_Mtrs_Pc) * Val(txt_Pcs.Text), "##########0.00")

            ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1116" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1446" Then

                Clo_Mtrs_Pc = Val(Common_Procedures.get_FieldValue(con, "Cloth_Head", "Meters_Pcs", "(Cloth_idno = " & Str(Val(clth_ID)) & ")", , tr))
                If Val(Clo_Mtrs_Pc) = 0 Then Clo_Mtrs_Pc = 40
                ConsPavu = Format(Val(Clo_Mtrs_Pc) * Val(lbl_Total_Meter.Text), "##########0.00")

            Else


                If Trim(UCase(LoomTy)) = "AUTO LOOM" Or Trim(UCase(LoomTy)) = "AUTOLOOM" Then
                    ConsPavu = Val(Common_Procedures.get_Pavu_Consumption(con, clth_ID, Lm_ID, Val(lbl_Total_Meter.Text), Trim(Wdth_Typ), tr))
                Else
                    ConsPavu = Val(Common_Procedures.get_Pavu_Consumption(con, clth_ID, Lm_ID, Val(txt_Rec_Meter.Text), Trim(Wdth_Typ), tr))
                End If


            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20 Then  ' --BRT

                cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_IR_Wages_Code = '" & Trim(NewCode) & "', ReceiptMeters_Wages = " & Str(Val(txt_Rec_Meter.Text)) & ", Receipt_Meters = " & Str(Val(txt_Rec_Meter.Text)) & ", ConsumedYarn_Wages = " & Str(Val(ConsYarn)) & ", Consumed_Yarn = " & Str(Val(ConsYarn)) & ", ConsumedPavu_Wages = " & Str(Val(ConsPavu)) & ", Consumed_Pavu = " & Str(Val(ConsPavu)) & ", Type1_Wages_Meters = " & Str(Val(txt_Sound_Meter.Text)) & ", Type2_Wages_Meters = " & Str(Val(txt_Seconds_Meter.Text)) & ", Type3_Wages_Meters = " & Str(Val(txt_Bits_Meter.Text)) & ", Type4_Wages_Meters = " & Str(Val(txt_Reject_Meter.Text)) & ", Type5_Wages_Meters = " & Str(Val(txt_Other_Meter.Text)) & ", Total_Wages_Meters = " & Str(Val(lbl_Total_Meter.Text)) & ", Report_Particulars_Wages = '" & Trim(Rep_Partcls_Wages) & "', Report_Particulars = '" & Trim(Rep_Partcls_Wages) & "'  Where Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "'"
                cmd.ExecuteNonQuery()

                If Trim(UCase(LoomTy)) = "POWER LOOM" Or Trim(UCase(LoomTy)) = "POWERLOOM" Then
                    cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_Wages_Code = '" & Trim(NewCode) & "', Weaver_Wages_Increment = Weaver_Wages_Increment + 1, Weaver_Wages_Date = @WagesDate Where Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "'"
                    cmd.ExecuteNonQuery()
                End If

            Else

                cmd.CommandText = "Update Weaver_Cloth_Receipt_Head set Weaver_Wages_Code = '" & Trim(NewCode) & "', Weaver_Wages_Increment = Weaver_Wages_Increment + 1, Weaver_Wages_Date = @WagesDate, EndsCount_IdNo =  " & Str(Val(Endcnt_ID)) & ", ReceiptMeters_Wages = " & Str(Val(txt_Rec_Meter.Text)) & ", Receipt_Meters = " & Str(Val(txt_Rec_Meter.Text)) & ", ConsumedYarn_Wages = " & Str(Val(ConsYarn)) & ", Consumed_Yarn = " & Str(Val(ConsYarn)) & ", ConsumedPavu_Wages = " & Str(Val(ConsPavu)) & ", Consumed_Pavu = " & Str(Val(ConsPavu)) & ", Type1_Wages_Meters = " & Str(Val(txt_Sound_Meter.Text)) & ", Type2_Wages_Meters = " & Str(Val(txt_Seconds_Meter.Text)) & ", Type3_Wages_Meters = " & Str(Val(txt_Bits_Meter.Text)) & ", Type4_Wages_Meters = " & Str(Val(txt_Reject_Meter.Text)) & ", Type5_Wages_Meters = " & Str(Val(txt_Other_Meter.Text)) & ", Total_Wages_Meters = " & Str(Val(lbl_Total_Meter.Text)) & ", Report_Particulars_Wages = '" & Trim(Rep_Partcls_Wages) & "', Report_Particulars = '" & Trim(Rep_Partcls_Wages) & "'  Where Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "'"
                cmd.ExecuteNonQuery()

            End If


            cmd.CommandText = "Delete from Weaver_Wages_Yarn_Details Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            cmd.CommandText = "Delete from Stock_Yarn_Processing_Details Where Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and Reference_Code = '" & Trim(NewCode) & "'"
            cmd.ExecuteNonQuery()

            vWftYrn_CntIdNo = 0
            vWftYrn_1stCount_Consumption = 0
            With dgv_Details

                Sno = 0
                For i = 0 To .RowCount - 1

                    If Val(.Rows(i).Cells(0).Value) <> 0 Or Val(.Rows(i).Cells(6).Value) <> 0 Then

                        Sno = Sno + 1

                        cunt_ID = Common_Procedures.Count_NameToIdNo(con, .Rows(i).Cells(1).Value, tr)
                        If vWftYrn_CntIdNo = 0 Then
                            vWftYrn_CntIdNo = cunt_ID
                        End If

                        cmd.CommandText = "Insert into Weaver_Wages_Yarn_Details (       Weaver_Wages_Code  ,             Company_IdNo         ,             Weaver_Wages_No    ,                               for_OrderBy                               , Weaver_Wages_Date,            Sl_No     ,                      Meters              ,            Count_IdNo    ,                        Rd_Sp                ,               Pick                        ,                      Width               ,              Weight_Meter                ,                      Weight               ) " &
                                            "     Values                         (   '" & Trim(NewCode) & "', " & Str(Val(lbl_Company.Tag)) & ", '" & Trim(lbl_BillNo.Text) & "', " & Str(Val(Common_Procedures.OrderBy_CodeToValue(lbl_BillNo.Text))) & ",       @WagesDate , " & Str(Val(Sno)) & ", " & Str(Val(.Rows(i).Cells(0).Value)) & ", " & Str(Val(cunt_ID)) & ", '" & Trim(Val(.Rows(i).Cells(2).Value)) & "',  " & Str(Val(.Rows(i).Cells(3).Value)) & ", " & Str(Val(.Rows(i).Cells(4).Value)) & ", " & Str(Val(.Rows(i).Cells(5).Value)) & ", " & Str(Val(.Rows(i).Cells(6).Value)) & " ) "
                        cmd.ExecuteNonQuery()

                    End If

                Next
                Call Common_Procedures.User_Modification_Updation(con, "DETAILS", Me.Name, "NEW", "Weaver_Wages_Yarn_Details", "Weaver_Wages_Code", Val(lbl_Company.Tag), NewCode, lbl_BillNo.Text, Val(vOrdByNo), Pk_Condition, "", "", New_Entry, False, "  Meters ,Count_IdNo,Rd_Sp,Pick,Width ,Weight_Meter,Weight", "Sl_No", "Weaver_Wages_Code, For_OrderBy, Company_IdNo, Weaver_Wages_No, Weaver_Wages_Date, Ledger_Idno", tr)


            End With

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1234" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1267" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1461" Then

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1461" Then

                    vWftYrn_CntIdNo = 0
                    vWftYrn_1stCount_Consumption = 0

                    vCLOREC_SAME_COUNT_UPDT_STS = False

                    '--1st Updating to Yarn_Stock_Processing if yarn consumed details has same count as in the weaver cloth receipt
                    '--Condition ( Count_IdNo = vCLOREC_WeftCntIdNo )
                    Da = New SqlClient.SqlDataAdapter("Select a.Count_IdNo, sum(a.Weight) as consyarnweight from Weaver_Wages_Yarn_Details a Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Wages_Code = '" & Trim(NewCode) & "' and a.Count_IdNo <> 0 and a.Count_IdNo = " & Str(Val(vCLOREC_WeftCntIdNo)) & " group by a.Count_IdNo Having sum(a.Weight) <> 0 Order by sum(a.Weight) desc, a.Count_IdNo", con)
                    Da.SelectCommand.Transaction = tr
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then

                        vWftYrn_CntIdNo = Val(Dt1.Rows(0).Item("Count_IdNo").ToString)
                        vWftYrn_1stCount_Consumption = Format(Val(Dt1.Rows(0).Item("consyarnweight").ToString), "#########0.000")
                        vCLOREC_SAME_COUNT_UPDT_STS = True

                        cmd.CommandText = "Update Stock_Yarn_Processing_Details set Weight = " & Str(Val(vWftYrn_1stCount_Consumption)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                        Nr = cmd.ExecuteNonQuery()
                        If Nr = 0 Then
                            cmd.CommandText = "Update Stock_Yarn_Processing_Details set Weight = " & Str(Val(vWftYrn_1stCount_Consumption)) & " Where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                            Nr = cmd.ExecuteNonQuery()
                        End If
                        If vWftYrn_CntIdNo <> 0 Then
                            cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = " & Str(Val(vWftYrn_CntIdNo)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                            Nr = cmd.ExecuteNonQuery()
                            If Nr = 0 Then
                                cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = " & Str(Val(vWftYrn_CntIdNo)) & " Where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                                Nr = cmd.ExecuteNonQuery()
                            End If
                        End If

                    End If
                    Dt1.Clear()

                    '--2nd inserting to Yarn_Stock_Processing if yarn consumed details has some other count than in the weaver cloth receipt
                    '--3rd if the cloth receipt weft count is not in the wages consumed yarn details, then it will be updated to old Yarn_Stock_Processing  record itself
                    '--Condition ( Count_IdNo <> vCLOREC_WeftCntIdNo )


                    Led_type = Common_Procedures.get_FieldValue(con, "Ledger_Head", "Ledger_Type", "(Ledger_IdNo = " & Str(Val(Wev_ID)) & ")",, tr)
                    vDelv_ID = 0 : vRec_ID = 0
                    If Trim(UCase(Led_type)) = "JOBWORKER" Then
                        vDelv_ID = Wev_ID
                        vRec_ID = 0
                    Else
                        vDelv_ID = 0
                        vRec_ID = Wev_ID
                    End If

                    YSno = 100
                    Da = New SqlClient.SqlDataAdapter("Select a.Count_IdNo, sum(a.Weight) as consyarnweight from Weaver_Wages_Yarn_Details a Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Wages_Code = '" & Trim(NewCode) & "' and a.Count_IdNo <> 0 and a.Count_IdNo <> " & Str(Val(vCLOREC_WeftCntIdNo)) & " group by a.Count_IdNo Having sum(a.Weight) <> 0 Order by sum(a.Weight) desc, a.Count_IdNo", con)
                    Da.SelectCommand.Transaction = tr
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    If Dt1.Rows.Count > 0 Then
                        For i = 0 To Dt1.Rows.Count - 1
                            If IsDBNull(Dt1.Rows(i).Item("Count_IdNo").ToString) = False Then

                                If Val(vWftYrn_CntIdNo) = 0 And vCLOREC_SAME_COUNT_UPDT_STS = False Then

                                    vWftYrn_CntIdNo = Val(Dt1.Rows(i).Item("Count_IdNo").ToString)
                                    vWftYrn_1stCount_Consumption = Format(Val(Dt1.Rows(i).Item("consyarnweight").ToString), "#########0.000")

                                    cmd.CommandText = "Update Stock_Yarn_Processing_Details set Weight = " & Str(Val(vWftYrn_1stCount_Consumption)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                                    Nr = cmd.ExecuteNonQuery()
                                    If Nr = 0 Then
                                        cmd.CommandText = "Update Stock_Yarn_Processing_Details set Weight = " & Str(Val(vWftYrn_1stCount_Consumption)) & " Where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                                        Nr = cmd.ExecuteNonQuery()
                                    End If
                                    If vWftYrn_CntIdNo <> 0 Then
                                        cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = " & Str(Val(vWftYrn_CntIdNo)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                                        Nr = cmd.ExecuteNonQuery()
                                        If Nr = 0 Then
                                            cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = " & Str(Val(vWftYrn_CntIdNo)) & " Where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                                            Nr = cmd.ExecuteNonQuery()
                                        End If
                                    End If

                                Else

                                    YSno = YSno + 1
                                    cmd.CommandText = "Insert into Stock_Yarn_Processing_Details (      Reference_Code   ,                 Company_IdNo     ,               Reference_No     ,                               for_OrderBy                               , Reference_Date ,         DeliveryTo_Idno   ,       ReceivedFrom_Idno  ,          Entry_ID    ,         Particulars    ,       Party_Bill_No  ,             Sl_No     ,                         Count_IdNo                       , Yarn_Type, Mill_IdNo, Bags, Cones,                         Weight                                ) " &
                                                        "          Values                        ('" & Trim(NewCode) & "', " & Str(Val(lbl_Company.Tag)) & ", '" & Trim(lbl_BillNo.Text) & "', " & Str(Val(Common_Procedures.OrderBy_CodeToValue(lbl_BillNo.Text))) & ",   @receiptdate , " & Str(Val(vDelv_ID)) & ", " & Str(Val(vRec_ID)) & ", '" & Trim(EntID) & "', '" & Trim(Partcls) & "', '" & Trim(PBlNo) & "', " & Str(Val(YSno)) & ", " & Str(Val(Dt1.Rows(i).Item("Count_IdNo").ToString)) & ",    'MILL',    0     ,  0  ,    0 , " & Str(Val(Dt1.Rows(i).Item("consyarnweight").ToString)) & " ) "
                                    cmd.ExecuteNonQuery()

                                End If
                            End If
                        Next i
                    End If
                    Dt1.Clear()


                    'cmd.CommandText = "Update Stock_Yarn_Processing_Details set Weight = " & Str(Val(ConsYarn)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                    'Nr = cmd.ExecuteNonQuery()
                    'If Nr = 0 Then
                    '    cmd.CommandText = "Update Stock_Yarn_Processing_Details set Weight = " & Str(Val(ConsYarn)) & " Where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                    '    Nr = cmd.ExecuteNonQuery()
                    'End If
                    'If vWftYrn_CntIdNo <> 0 Then
                    '    cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = " & Str(Val(vWftYrn_CntIdNo)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                    '    Nr = cmd.ExecuteNonQuery()
                    '    If Nr = 0 Then
                    '        cmd.CommandText = "Update Stock_Yarn_Processing_Details set Count_IdNo = " & Str(Val(vWftYrn_CntIdNo)) & " Where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                    '        Nr = cmd.ExecuteNonQuery()
                    '    End If
                    'End If
                    cmd.CommandText = "Update Stock_Pavu_Processing_Details set EndsCount_IdNo =  " & Str(Val(Endcnt_ID)) & ", Meters = " & Str(Val(ConsPavu)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                    Nr = cmd.ExecuteNonQuery()
                    If Nr = 0 Then
                        cmd.CommandText = "Update Stock_Pavu_Processing_Details set EndsCount_IdNo =  " & Str(Val(Endcnt_ID)) & ", Meters = " & Str(Val(ConsPavu)) & " Where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                        Nr = cmd.ExecuteNonQuery()
                    End If

                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1195" Then
                    If Trim(PcsChkCode) = "" Then
                        cmd.CommandText = "Update Stock_Cloth_Processing_Details set reference_date = @WagesDate, UnChecked_Meters = 0, Meters_Type1 = " & Str(Val(txt_Sound_Meter.Text)) & ", Meters_Type5 = " & Str(Val(txt_Other_Meter.Text)) & ", Meters_Type3 = " & Str(Val(txt_Bits_Meter.Text)) & ", Meters_Type4 = " & Str(Val(txt_Reject_Meter.Text)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                        cmd.ExecuteNonQuery()
                    End If

                Else
                    If Trim(PcsChkCode) = "" Then
                        cmd.CommandText = "Update Stock_Cloth_Processing_Details set reference_date = @WagesDate, UnChecked_Meters = 0, Meters_Type1 = " & Str(Val(txt_Sound_Meter.Text)) & ", Meters_Type2 = " & Str(Val(txt_Seconds_Meter.Text)) & ", Meters_Type3 = " & Str(Val(txt_Bits_Meter.Text)) & ", Meters_Type4 = " & Str(Val(txt_Reject_Meter.Text)) & ", Meters_Type5 = " & Str(Val(txt_Other_Meter.Text)) & " Where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                        cmd.ExecuteNonQuery()
                    End If

                End If

            End If


            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(Pk_Condition) & Trim(PkCode), tr)

            AC_POS_sts = True
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20 Then '---- BRT SIZING (SOMANUR)
                If Trim(UCase(LoomTy)) = "AUTO LOOM" Or Trim(UCase(LoomTy)) = "AUTOLOOM" Then
                    AC_POS_sts = False
                End If
            End If

            If AC_POS_sts = True Then

                Cr_ID = Wev_ID
                Dr_ID = Common_Procedures.CommonLedger.Weaving_Wages_Ac
                TdsAc_ID = Common_Procedures.CommonLedger.TDS_Payable_Ac

                RCM_Sts = Common_Procedures.get_FieldValue(con, "Ledger_Head", "Ledger_GSTinNo", "(Ledger_IdNo = " & Wev_ID & ")", 0, tr)

                If Trim(RCM_Sts) <> "" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then  '-------SREE DHANALAXSHMI TEXTILES (AVINASHI)
                        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1035" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then '---- Kalaimagal Textiles (Avinashi)
                        vLed_IdNos = Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac) & "|" & Wev_ID & "|" & Val(Common_Procedures.CommonLedger.Freight_Charges_Ac) & "|" & Val(Common_Procedures.CommonLedger.TDS_Payable_Ac)
                        vVou_Amts = -1 * (Val(CSng(lbl_Net_Amount.Text)) + Val(txt_Freight_Charge.Text) + Val(lbl_Tds_Amount.Text)) & "|" & Val(CSng(lbl_Net_Amount.Text)) & "|" & Val(txt_Freight_Charge.Text) & "|" & Val(lbl_Tds_Amount.Text)

                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1238" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1239" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1249" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1440" Then '---- Prakash Textiles (Somanur)
                        vLed_IdNos = Wev_ID & "|" & Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac) & "|24|25"
                        vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text)) + Val(txt_Freight_Charge.Text), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text)) - Val(CSng(lbl_CGST_Amount.Text)) - Val(CSng(lbl_SGST_Amount.Text)) + Val(txt_Freight_Charge.Text), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")

                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "-------" Then '---- Kalaimagal Textiles (Avinashi)
                        vLed_IdNos = Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac) & "|" & Wev_ID & "|" & Val(Common_Procedures.CommonLedger.TDS_Payable_Ac)
                        vVou_Amts = -1 * (Val(CSng(lbl_Net_Amount.Text)) + Val(lbl_Tds_Amount.Text)) & "|" & Val(CSng(lbl_Net_Amount.Text)) & "|" & Val(lbl_Tds_Amount.Text)

                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1100" Then
                        vLed_IdNos = Wev_ID & "|" & Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac)
                        vVou_Amts = Format(Val(CSng(lbl_Total_Cooly.Text)), "#########0") & "|" & -1 * Format(Val(CSng(lbl_Total_Cooly.Text)), "#########0")

                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1207" Then '---- '-----Balakumar Textiles
                        vLed_IdNos = Wev_ID & "|" & Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac)
                        vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text)) - Val(CSng(lbl_CGST_Amount.Text)) - Val(CSng(lbl_SGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text)) - Val(CSng(lbl_CGST_Amount.Text)) - Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")

                    Else

                        '-----Getting GST account details
                        cmd.CommandText = "truncate table Entry_GST_Tax_Details_Temp"
                        cmd.ExecuteNonQuery()

                        If Val(txt_CGST_Percentage.Text) <> 0 And Val(txt_SGST_Percentage.Text) <> 0 And Val(lbl_CGST_Amount.Text) <> 0 And Val(lbl_SGST_Amount.Text) <> 0 Then
                            cmd.CommandText = "insert into Entry_GST_Tax_Details_Temp(GST_Percentage, CGST_Amount, SGST_Amount, IGST_Amount) values (" & Str(Val(txt_CGST_Percentage.Text) + Val(txt_SGST_Percentage.Text)) & ", " & Str(Val(lbl_CGST_Amount.Text)) & ", " & Str(Val(lbl_SGST_Amount.Text)) & ", 0) "
                            cmd.ExecuteNonQuery()
                        End If

                        Dim vVOUPOS_GSTAC_IDNOS As String = "", vVOUPOS_GST_AMTS As String = ""

                        Common_Procedures.get_GST_AC_IDNOS_for_AC_POSTING(con, "DR", vVOUPOS_GSTAC_IDNOS, vVOUPOS_GST_AMTS, tr)

                        vLed_IdNos = Wev_ID & "|" & Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac) & "|" & Trim(vVOUPOS_GSTAC_IDNOS)
                        vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text)) - Val(CSng(lbl_CGST_Amount.Text)) - Val(CSng(lbl_SGST_Amount.Text)), "#########0.00") & "|" & Trim(vVOUPOS_GST_AMTS)

                        'vLed_IdNos = Wev_ID & "|" & Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac) & "|24|25"
                        'vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text)) - Val(CSng(lbl_CGST_Amount.Text)) - Val(CSng(lbl_SGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")

                    End If


                    If Common_Procedures.Voucher_Updation(con, "WeaWg.Wages", Val(lbl_Company.Tag), Trim(Pk_Condition) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                        Throw New ApplicationException(ErrMsg)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1100" Then
                        vLed_IdNos = Val(Common_Procedures.CommonLedger.Weaving_Wages_Ac) & "|" & Wev_ID
                        vVou_Amts = Val(CSng(txt_Less_Amount.Text)) & "|" & -1 * (Val(CSng(txt_Less_Amount.Text)))

                        If Common_Procedures.Voucher_Updation(con, "WeaWg.Wages.Less", Val(lbl_Company.Tag), Trim(Pk_Condition2) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                            Throw New ApplicationException(ErrMsg)
                        End If
                    End If

                Else

                    'With Out Registeration
                    '27 - RCM CGST
                    '28 - RCM SGST
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then '-------SREE DHANALAXSHMI TEXTILES (AVINASHI)
                        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1035" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then '---- Kalaimagal Textiles (Avinashi)
                        vLed_IdNos = Wev_ID & "|27|28|" & Common_Procedures.CommonLedger.Weaving_Wages_Ac & "|24|25|" & Val(Common_Procedures.CommonLedger.Freight_Charges_Ac) & "|" & Val(Common_Procedures.CommonLedger.TDS_Payable_Ac)
                        vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)), "#########0.00") & "|" & Format(Val(CSng(lbl_CGST_Amount.Text)), "##########0.00") & "|" & Format(Val(CSng(lbl_SGST_Amount.Text)), "###########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text) + Val(txt_Freight_Charge.Text) + Val(lbl_Tds_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00") & "|" & Format(Val(txt_Freight_Charge.Text), "#########0.00") & "|" & Format(Val(lbl_Tds_Amount.Text), "#########0.00")

                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1238" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1239" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1249" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1440" Then '---- Prakash Textiles (Somanur)
                        vLed_IdNos = Wev_ID & "|27|28|" & Common_Procedures.CommonLedger.Weaving_Wages_Ac & "|24|25"
                        vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text)) + Val(txt_Freight_Charge.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text), "#########0.00") & "|" & Format(Val(CSng(lbl_CGST_Amount.Text)), "##########0.00") & "|" & Format(Val(CSng(lbl_SGST_Amount.Text)), "###########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text)) - Val(CSng(lbl_CGST_Amount.Text)) - Val(CSng(lbl_SGST_Amount.Text)) + Val(txt_Freight_Charge.Text), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")
                        'vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)), "#########0.00") & "|" & Format(Val(CSng(lbl_CGST_Amount.Text)), "##########0.00") & "|" & Format(Val(CSng(lbl_SGST_Amount.Text)), "###########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text) - Val(txt_Freight_Charge.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(txt_Freight_Charge.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")

                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1207" Then '-----Balakumar Textiles
                        vLed_IdNos = Wev_ID & "|" & Common_Procedures.CommonLedger.Weaving_Wages_Ac
                        vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)), "#########0.00")
                    Else

                        vLed_IdNos = Wev_ID & "|27|28|" & Common_Procedures.CommonLedger.Weaving_Wages_Ac & "|24|25"
                        vVou_Amts = Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)), "#########0.00") & "|" & Format(Val(CSng(lbl_CGST_Amount.Text)), "##########0.00") & "|" & Format(Val(CSng(lbl_SGST_Amount.Text)), "###########0.00") & "|" & -1 * Format(Val(CSng(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")

                    End If
                    If Common_Procedures.Voucher_Updation(con, "WeaWg.Wages", Val(lbl_Company.Tag), Trim(Pk_Condition) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                        Throw New ApplicationException(ErrMsg)
                    End If

                End If



            Else

                If Common_Procedures.VoucherBill_Deletion(con, Trim(Pk_Condition) & Trim(NewCode), tr) = False Then
                    Throw New ApplicationException("Error on Voucher Bill Deletion")
                End If

                Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(Pk_Condition) & Trim(PkCode), tr)
                Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(Pk_Condition2) & Trim(PkCode), tr)
                Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WPYMT) & Trim(PkCode), tr)
                Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WADVP) & Trim(PkCode), tr)
                Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WADVD) & Trim(PkCode), tr)
                Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WPTDS) & Trim(PkCode), tr)
                Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WFRGT) & Trim(PkCode), tr)

            End If


            '--FReight A/c Posting Separate
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WFRGT) & Trim(PkCode), tr)
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1238" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1239" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1249" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1440" Then '---- Prakash Textiles (Somanur)
                vLed_IdNos = ""
                vVou_Amts = ""
                ErrMsg = ""

                vLed_IdNos = Val(Common_Procedures.CommonLedger.Freight_Charges_Ac) & "|" & Wev_ID
                vVou_Amts = Val(txt_Freight_Charge.Text) & "|" & -1 * Val(txt_Freight_Charge.Text)

                If Common_Procedures.Voucher_Updation(con, "WeaWg.Frgt", Val(lbl_Company.Tag), Trim(PkCondition_WFRGT) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                    Throw New ApplicationException(ErrMsg)
                End If

            End If


            '--GST A/c Posting  Separate
            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WPGST) & Trim(PkCode), tr)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1207" Then '---- '-----Balakumar Textiles

                vLed_IdNos = ""
                vVou_Amts = ""
                ErrMsg = ""

                If Trim(RCM_Sts) <> "" Then
                    vLed_IdNos = Wev_ID & "|24|25"
                    vVou_Amts = Format(Val(CSng(lbl_CGST_Amount.Text)) + Val(CSng(lbl_SGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")

                Else
                    vLed_IdNos = "27|28|24|25"
                    vVou_Amts = Format(Val(CSng(lbl_CGST_Amount.Text)), "##########0.00") & "|" & Format(Val(CSng(lbl_SGST_Amount.Text)), "###########0.00") & "|" & -1 * Format(Val(CSng(lbl_CGST_Amount.Text)), "#########0.00") & "|" & -1 * Format(Val(CSng(lbl_SGST_Amount.Text)), "#########0.00")

                End If

                If Common_Procedures.Voucher_Updation(con, "WeaWg.GST", Val(lbl_Company.Tag), Trim(PkCondition_WPGST) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                    Throw New ApplicationException(ErrMsg)
                End If

            End If


            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WPTDS) & Trim(PkCode), tr)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1049" And AC_POS_sts = True Then '-------SREE DHANALAXSHMI TEXTILES (AVINASHI)
                'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1035" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1049" And AC_POS_sts = True Then '---- Kalaimagal Textiles (Avinashi)

                vLed_IdNos = ""
                vVou_Amts = ""
                ErrMsg = ""

                vLed_IdNos = Val(Common_Procedures.CommonLedger.TDS_Payable_Ac) & "|" & Wev_ID
                vVou_Amts = Val(CSng(lbl_Tds_Amount.Text)) & "|" & -1 * Val(CSng(lbl_Tds_Amount.Text))

                If Common_Procedures.Voucher_Updation(con, "WeaWg.Tds", Val(lbl_Company.Tag), Trim(PkCondition_WPTDS) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                    Throw New ApplicationException(ErrMsg)
                End If

            End If

            Debug.Print(txt_Bits_Meter.Text)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then
                vLed_IdNos = ""
                vVou_Amts = ""
                ErrMsg = ""
                If Val(txt_Add_Amount.Text) = 0 Then
                    txt_Add_Amount.Text = 0.0
                End If
                vLed_IdNos = Val(Common_Procedures.CommonLedger.Cash_Ac) & "|" & Wev_ID
                vVou_Amts = Val(CSng(txt_Add_Amount.Text)) & "|" & -1 * Val(CSng(txt_Add_Amount.Text))
                If Common_Procedures.Voucher_Updation(con, "WeaWg.AdvPymt", Val(lbl_Company.Tag), Trim(PkCondition_WADVP) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                    Throw New ApplicationException(ErrMsg)
                End If

                vLed_IdNos = ""
                vVou_Amts = ""
                ErrMsg = ""
                If Val(txt_Less_Amount.Text) = 0 Then
                    txt_Less_Amount.Text = 0.0
                End If
                vLed_IdNos = Wev_ID & "|" & Val(Common_Procedures.CommonLedger.Cash_Ac)
                vVou_Amts = Val(CSng(txt_Less_Amount.Text)) & "|" & -1 * Val(CSng(txt_Less_Amount.Text))
                If Common_Procedures.Voucher_Updation(con, "WeaWg.AdvDed", Val(lbl_Company.Tag), Trim(PkCondition_WADVD) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text) & IIf(Trim(lbl_PDcNo.Text) <> "", " , P.Dc.No : " & Trim(lbl_PDcNo.Text), ""), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                    Throw New ApplicationException(ErrMsg)
                End If

            End If

            Common_Procedures.Voucher_Deletion(con, Val(lbl_Company.Tag), Trim(PkCondition_WPYMT) & Trim(PkCode), tr)
            If Val(txt_Paid_Amount.Text) <> 0 Then
                vLed_IdNos = Val(Common_Procedures.CommonLedger.Cash_Ac) & "|" & Val(Wev_ID)
                vVou_Amts = Val(txt_Paid_Amount.Text) & "|" & -1 * Val(txt_Paid_Amount.Text)
                If Common_Procedures.Voucher_Updation(con, "WeaWg.Pymt", Val(lbl_Company.Tag), Trim(PkCondition_WPYMT) & Trim(PkCode), Trim(lbl_BillNo.Text), msk_Date.Text, "Bill No : " & Trim(lbl_BillNo.Text), vLed_IdNos, vVou_Amts, ErrMsg, tr) = False Then
                    Throw New ApplicationException(ErrMsg)
                End If
            End If

            '-----Bill Posting
            VouBil = Common_Procedures.VoucherBill_Posting(con, Val(lbl_Company.Tag), Convert.ToDateTime(msk_Date.Text), Wev_ID, Trim(lbl_BillNo.Text), 0, Val(CSng(lbl_Net_Amount.Text)), "CR", Trim(Pk_Condition) & Trim(NewCode), tr,, SaveAll_STS)
            If Trim(UCase(VouBil)) = "ERROR" Then
                Throw New ApplicationException("Error on Voucher Bill Posting")
            End If

            Debug.Print(txt_Bits_Meter.Text)




            If Val(Common_Procedures.settings.Negative_Stock_Restriction_for_Yarn_Stock) = 1 Then

                Nr = 0
                cmd.CommandText = "Insert into TempTable_For_NegativeStock ( Stock_Type, Reference_Code, Reference_Date, Company_Idno, Ledger_Idno      , Count_IdNo, Yarn_Type, Mill_IdNo ) " &
                                          " Select                               'YARN'    , Reference_Code, Reference_Date, Company_IdNo, ReceivedFrom_Idno, Count_IdNo, Yarn_Type, Mill_IdNo from Stock_Yarn_Processing_Details where Reference_Code = '" & Trim(PkCondition_WCLRC) & Trim(lbl_RecCode.Text) & "'"
                Nr = cmd.ExecuteNonQuery()
                If Nr = 0 Then
                    cmd.CommandText = "Insert into TempTable_For_NegativeStock ( Stock_Type, Reference_Code, Reference_Date, Company_Idno, Ledger_Idno      , Count_IdNo, Yarn_Type, Mill_IdNo ) " &
                          " Select                               'YARN'    , Reference_Code, Reference_Date, Company_IdNo, ReceivedFrom_Idno, Count_IdNo, Yarn_Type, Mill_IdNo from Stock_Yarn_Processing_Details where Reference_Code = '" & Trim(lbl_RecCode.Text) & "'"
                    Nr = cmd.ExecuteNonQuery()
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1155" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1267" Then '----KRG TEXTILE MILLS (PALLADAM)
                    If Common_Procedures.Check_is_Negative_Stock_Status(con, tr) = True Then Exit Sub
                End If

            End If


            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTILES(SOMANUR)

                Dim vREF_LOTNos As String = ""

                vREF_LOTNos = ""
                Da = New SqlClient.SqlDataAdapter("Select a.Weaver_ClothReceipt_Code from Weaver_Cloth_Receipt_Head a Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Piece_Checking_Code <> '' and 'WCLRC-' + a.Weaver_ClothReceipt_Code NOT IN ( Select z.Reference_Code from Stock_Yarn_Processing_Details z WHERE z.Reference_Code LIKE 'WCLRC-%' )", con)
                Da.SelectCommand.Transaction = tr
                Dt1 = New DataTable
                Da.Fill(Dt1)
                If Dt1.Rows.Count > 0 Then

                    For i = 0 To Dt1.Rows.Count - 1
                        If IsDBNull(Dt1.Rows(i).Item("Weaver_ClothReceipt_Code").ToString) = False Then
                            vREF_LOTNos = Trim(vREF_LOTNos) & IIf(Trim(vREF_LOTNos) <> "", Chr(13), "") & Trim(Dt1.Rows(i).Item("Weaver_ClothReceipt_Code").ToString)
                        End If
                    Next i

                    If Trim(vREF_LOTNos) <> "" Then
                        MessageBox.Show("Invalid WEFT Yarn Consumption for this Following Lot.Nos : " & Chr(13) & Chr(13) & vREF_LOTNos, "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                        Exit Sub
                    End If

                End If
                Dt1.Clear()


                vREF_LOTNos = ""
                Da = New SqlClient.SqlDataAdapter("Select a.Weaver_ClothReceipt_Code from Weaver_Cloth_Receipt_Head a Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Piece_Checking_Code <> '' and 'WCLRC-' + a.Weaver_ClothReceipt_Code NOT IN ( Select z.Reference_Code from Stock_Pavu_Processing_Details z WHERE z.Reference_Code LIKE 'WCLRC-%' )", con)
                Da.SelectCommand.Transaction = tr
                Dt1 = New DataTable
                Da.Fill(Dt1)
                If Dt1.Rows.Count > 0 Then

                    For i = 0 To Dt1.Rows.Count - 1
                        If IsDBNull(Dt1.Rows(i).Item("Weaver_ClothReceipt_Code").ToString) = False Then
                            vREF_LOTNos = Trim(vREF_LOTNos) & IIf(Trim(vREF_LOTNos) <> "", Chr(13), "") & Trim(Dt1.Rows(i).Item("Weaver_ClothReceipt_Code").ToString)
                        End If
                    Next i

                    If Trim(vREF_LOTNos) <> "" Then
                        MessageBox.Show("Invalid WARP Consumption for this Following Lot.Nos : " & Chr(13) & Chr(13) & vREF_LOTNos, "DOES NOT SAVE...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                        Exit Sub
                    End If

                End If
                Dt1.Clear()

            End If

            tr.Commit()

            If Val(Common_Procedures.settings.OnSave_MoveTo_NewEntry_Status) = 1 Then
                If New_Entry = True Then
                    new_record()
                Else
                    move_record(lbl_BillNo.Text)
                End If
            Else
                move_record(lbl_BillNo.Text)
            End If

            Debug.Print(txt_Bits_Meter.Text)

            If SaveAll_STS <> True Then
                MessageBox.Show("Saved Sucessfully!!!", "FOR SAVING...", MessageBoxButtons.OKCancel, MessageBoxIcon.Information)
            End If

            'Debug.Print(txt_Bits_Meter.Text)

            If Val(Common_Procedures.settings.OnSave_MoveTo_NewEntry_Status) = 1 Then
                If New_Entry = True Then
                    new_record()
                Else
                    move_record(lbl_BillNo.Text)
                End If
            Else
                move_record(lbl_BillNo.Text)
            End If


        Catch ex As Exception
            tr.Rollback()

            Timer1.Enabled = False
            SaveAll_STS = False

            MessageBox.Show(ex.Message, "for saving...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally

            Dt1.Dispose()
            Da.Dispose()
            cmd.Dispose()
            tr.Dispose()

            If msk_Date.Enabled And msk_Date.Visible Then
                msk_Date.Focus()
            Else
                cbo_Weaver.Focus()
            End If

        End Try

    End Sub

    Private Sub TotalMeter_Calculation()
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt2 As New DataTable
        Dim tlmtr As Single = 0
        Dim TtConsMtrs As Single = 0
        Dim Clo_IdNo As Integer = 0
        Dim Stock_In As String = ""
        Dim cnt_id As Integer = 0
        Dim mtrspcs As Single = 0

        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1100" Then
            tlmtr = Val(txt_Sound_Meter.Text)
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1195" Then
            tlmtr = Val(txt_Sound_Meter.Text) + Val(txt_Other_Meter.Text) + Val(txt_Reject_Meter.Text) + Val(txt_Bits_Meter.Text)
        Else
            tlmtr = Val(txt_Sound_Meter.Text) + Val(txt_Seconds_Meter.Text) + Val(txt_Reject_Meter.Text) + Val(txt_Bits_Meter.Text) + Val(txt_Other_Meter.Text)
        End If


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then '---- S.Ravichandran Textiles (Erode)
            tlmtr = Common_Procedures.Meter_RoundOff(tlmtr)
            lbl_Total_Meter.Text = Format(Val(tlmtr), "#########0")
        Else
            lbl_Total_Meter.Text = Format(Val(tlmtr), "#########0.00")
        End If

        TtConsMtrs = 0

        Clo_IdNo = Common_Procedures.Cloth_NameToIdNo(con, lbl_Cloth.Text)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1089" Then

            If Val(Clo_IdNo) <> 0 And Val(txt_Pcs.Text) <> 0 Then
                Stock_In = ""
                mtrspcs = 0

                Da = New SqlClient.SqlDataAdapter("Select Stock_In , Meters_Pcs from  Cloth_Head Where Cloth_idno = " & Str(Val(Clo_IdNo)), con)
                Dt2 = New DataTable
                Da.Fill(Dt2)
                If Dt2.Rows.Count > 0 Then
                    Stock_In = Dt2.Rows(0)("Stock_In").ToString
                    mtrspcs = Val(Dt2.Rows(0)("Meters_Pcs").ToString)
                End If
                Dt2.Clear()
            End If

            If Trim(UCase(Stock_In)) = "PCS" Then
                TtConsMtrs = Val(mtrspcs) * Val(lbl_Total_Meter.Text)
            Else
                TtConsMtrs = Val(lbl_Total_Meter.Text)
            End If

            Dim TtYARNConsMtrs As String = 0

            TtYARNConsMtrs = 0
            With dgv_Details_Total
                If .Rows.Count > 0 Then
                    TtYARNConsMtrs = .Rows(0).Cells(0).Value
                End If
            End With

            With dgv_Details

                If .Rows.Count = 1 Then
                    .Rows(0).Cells(0).Value = Format(Val(TtConsMtrs), "##########0.00")

                Else
                    If TtYARNConsMtrs = 0 Or TtYARNConsMtrs = Val(.Rows(0).Cells(0).Value) Then
                        .Rows(0).Cells(0).Value = Format(Val(TtConsMtrs), "##########0.00")
                    End If

                End If

            End With

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1242" Then
            TtConsMtrs = Format(Val(txt_Sound_Meter.Text), "#########0.00")
            With dgv_Details

                If .Rows.Count > 1 Then
                    .Rows(0).Cells(0).Value = Format(Val(TtConsMtrs), "##########0.00")
                End If

            End With


        Else
            With dgv_Details_Total
                If .Rows.Count > 0 Then
                    TtConsMtrs = .Rows(0).Cells(0).Value
                End If
            End With

            With dgv_Details

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1035" Then
                    If .Rows.Count = 1 Then
                        .Rows(0).Cells(0).Value = Format(Val(lbl_Total_Meter.Text), "##########0.00")

                    Else
                        If TtConsMtrs = 0 Or TtConsMtrs = Val(.Rows(0).Cells(0).Value) Then
                            .Rows(0).Cells(0).Value = Format(Val(lbl_Total_Meter.Text), "##########0.00")
                        End If

                    End If
                End If

            End With

        End If

        Excess_Short_Calculation()

    End Sub

    Private Sub TotalCooly_Calculation()
        Dim tlcly As Double = 0
        Dim vR As Long = 0


        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        TotalMeter_Calculation()

        tlcly = (Val(txt_Sound_Meter.Text) * Val(txt_Sound_Cooly.Text)) + (Val(txt_Seconds_Meter.Text) * Val(txt_Seconds_Cooly.Text)) + (Val(txt_Reject_Meter.Text) * Val(txt_Reject_Cooly.Text)) + (Val(txt_Bits_Meter.Text) * Val(txt_Bits_Cooly.Text)) + (Val(txt_Other_Meter.Text) * Val(txt_Other_Cooly.Text))

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1239" Then '----ms textiles

            vR = tlcly Mod 100
            If Val(vR) >= 50 Then
                tlcly = tlcly - (Val(vR) - 50)
                'vR = tlcly + (100 - Val(vR))
                'ElseIf Val(vR) >= 50 Then
                '    vR = tlcly - (Val(vR) - 50)
                'ElseIf Val(vR) >= 25 Then
                '    vR = tlcly + (50 - Val(vR))
            Else
                tlcly = tlcly - Val(vR)
            End If



        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1151" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1136" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1238" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1239" Then '----ms textiles
            lbl_Total_Cooly.Text = Format(Val(tlcly), "#########0")
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1242" Then '---- SOUTHERN SAREESS (ERODE)
            lbl_Total_Cooly.Text = Format(Val(tlcly), "#########0.00")
            lbl_Total_Cooly.Text = Format(Math.Floor(Val(lbl_Total_Cooly.Text)), "#########0.00")
        Else
            lbl_Total_Cooly.Text = Format(Val(tlcly), "#########0.00")
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1151" Then '---- S.Ravichandran Textiles (Erode)
            lbl_Total_Cooly.Text = Format(Val(lbl_Total_Cooly.Text), "#########0")
        Else
            lbl_Total_Cooly.Text = Format(Val(lbl_Total_Cooly.Text), "#########0.00")
        End If

        Total_Amount_Calculation()

    End Sub

    Private Sub TdsCommision_Calculation()
        Dim tlamt As Double = 0
        Dim tdsamt As Double = 0

        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1239" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1191" Then
            tdsamt = Format((Val(lbl_Total_Cooly.Text) - Val(txt_Freight_Charge.Text)) * Val(txt_TdsPerc.Text) / 100, "########0")
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1055" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1140" Then
            tdsamt = Format((Val(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)) * Val(txt_TdsPerc.Text) / 100, "########0")
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then  ' --BRT
            tdsamt = Format(Val(lbl_Taxable_Value.Text) * Val(txt_TdsPerc.Text) / 100, "########0")
        Else
            tdsamt = Format(Val(lbl_Total_Cooly.Text) * Val(txt_TdsPerc.Text) / 100, "########0")
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1035" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1098" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1087" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1088" Then
        '    tdsamt = Format(Val(lbl_Total_Cooly.Text) * Val(txt_Tds.Text) / 100, "########0")

        'Else
        '    tdsamt = Format((Val(lbl_Total_Amount.Text) - Val(lbl_CGST_Amount.Text) - Val(lbl_SGST_Amount.Text)) * Val(txt_Tds.Text) / 100, "########0")

        'End If

        lbl_Tds_Amount.Text = Format(Val(tdsamt), "########0.00")

        NetAmount_Calculation()

    End Sub

    Private Sub Weight_Calculation(ByVal CurRow As Integer, ByVal CurCol As Integer)
        Dim ConsYrn As Double = 0
        Dim ConsYrn_round As Double = 0
        Dim vClo_Mtrs As Double = 0
        Dim Wgt_Mtr As Double = 0
        Dim RdSp As Double = 0
        Dim Pick As Double = 0
        Dim Weft As Double = 0
        Dim FdLessMtrs As Double = 0
        Dim ConsYrn_Int As Integer = 0
        Dim s1 As String = ""
        Dim s2 As String = ""

        Dim Mtr_Kgs_str As String = 0
        Dim Cloth_Master_RdSp As Double = 0
        Dim Cloth_Master_Width As Double = 0
        Dim Cloth_Reed As Double = 0


        On Error Resume Next

        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        With dgv_Details
            If .Visible Then

                If .Rows.Count > 0 Then

                    If CurCol = 0 Or CurCol = 1 Or CurCol = 2 Or CurCol = 3 Or CurCol = 4 Or CurCol = 5 Then

                        vClo_Mtrs = Val(.Rows(CurRow).Cells(0).Value)

                        FdLessMtrs = 0
                        If txt_FoldingLess_Perc.Visible = True Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then '---- Asia Textiles (Tirupur)
                                FdLessMtrs = vClo_Mtrs * Val(txt_FoldingLess_Perc.Text) / 100
                            End If
                        End If
                        vClo_Mtrs = Format(vClo_Mtrs - FdLessMtrs, "#########0.00")

                        Wgt_Mtr = Val(.Rows(CurRow).Cells(5).Value)

                        ConsYrn = 0
                        If Val(Wgt_Mtr) <> 0 Then
                            ConsYrn = Val(vClo_Mtrs) * Val(Wgt_Mtr)

                        Else

                            RdSp = Val(.Rows(CurRow).Cells(2).Value)
                            Pick = Val(.Rows(CurRow).Cells(3).Value)
                            Weft = Val(Common_Procedures.get_FieldValue(con, "count_head", "Resultant_Count", "(count_name = '" & Trim(.Rows(CurRow).Cells(1).Value) & "')"))
                            If Val(Weft) = 0 Then
                                Weft = Val(.Rows(CurRow).Cells(1).Value)
                            End If

                            If Val(Weft) <> 0 Then

                                If Trim(Common_Procedures.settings.CustomerCode) = "1613" Then  '--- A.P.A TEXTILE 

                                    Cloth_Master_Width = Val(Common_Procedures.get_FieldValue(con, "Cloth_head", "Cloth_Width", "(Cloth_Name = '" & Trim(lbl_Cloth.Text) & "')"))
                                    Cloth_Master_RdSp = Val(Common_Procedures.get_FieldValue(con, "Cloth_head", "Cloth_ReedSpace", "(Cloth_Name = '" & Trim(lbl_Cloth.Text) & "')"))

                                    If Val(.Rows(CurRow).Cells(4).Value) <> 0 Then

                                        Cloth_Reed = 0

                                        If Val(Cloth_Master_Width) <> 0 And Val(Cloth_Master_RdSp) <> 0 Then
                                            Cloth_Reed = Val(Cloth_Master_RdSp - Cloth_Master_Width)
                                        End If

                                        .Rows(CurRow).Cells(2).Value = Val(.Rows(CurRow).Cells(4).Value) + Val(Cloth_Reed)

                                    End If

                                    RdSp = Val(.Rows(CurRow).Cells(2).Value)

                                    Mtr_Kgs_str = Format(Val(((1698 * Weft) / Pick) / RdSp), "#########0.000")

                                    s1 = Microsoft.VisualBasic.Left(Mtr_Kgs_str, Len(Mtr_Kgs_str) - 1)

                                    ConsYrn = Val(vClo_Mtrs / s1)

                                Else

                                ConsYrn = (vClo_Mtrs * RdSp * Pick * 1.0937) / (84 * 22 * Weft)

                                End If

                            End If

                        End If

                        If Trim(Common_Procedures.settings.CompanyName) = "1009" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1444" Then
                            ConsYrn = Format(Val(ConsYrn), "#########0.0")
                            .Rows(CurRow).Cells(6).Value = Format(Val(ConsYrn), "#########0.000")

                        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1035" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1136" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1188" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1238" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1239" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1278" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1440" Then '---- KALAIMAGAL TEX

                            ConsYrn = Format(Val(ConsYrn), "#########0")
                            .Rows(CurRow).Cells(6).Value = Format(Val(ConsYrn), "#########0.000")

                        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1057" Then
                            s1 = Trim(Format(Val(ConsYrn), "#########0.000"))
                            s2 = Microsoft.VisualBasic.Right(s1, 2)
                            Select Case Val(s2)
                                Case Is < 25
                                    ConsYrn = Val(Microsoft.VisualBasic.Left(s1, Len(s1) - 2))
                                Case Is < 75
                                    ConsYrn = Val(Microsoft.VisualBasic.Left(s1, Len(s1) - 2)) + 0.05
                                Case Else
                                    ConsYrn = Val(Microsoft.VisualBasic.Left(s1, Len(s1) - 2)) + 0.1
                            End Select

                            .Rows(CurRow).Cells(6).Value = Format(Val(ConsYrn), "#########0.000")

                        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then '---- 
                            ConsYrn = Format(Val(Val(.Rows(CurRow).Cells(0).Value)), "#########0")
                            .Rows(CurRow).Cells(6).Value = Format(Val(ConsYrn), "#########0.00")
                        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1151" Then

                            .Rows(CurRow).Cells(6).Value = Format(Val(ConsYrn), "#########0.00")

                        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1242" Then '---- SOUTHERN SAREESS (ERODE)
                            s1 = Trim(Format(Val(ConsYrn), "#########0.000"))
                            s2 = Microsoft.VisualBasic.Left(s1, Len(s1) - 2)
                            .Rows(CurRow).Cells(6).Value = Format(Val(s2), "#########0.00")

                        Else

                            .Rows(CurRow).Cells(6).Value = Format(Val(ConsYrn), "#########0.000")

                        End If

                    End If

                    Total_Calculation()

                End If

            End If

        End With
    End Sub

    Private Sub NetAmount_Calculation()
        Dim NtAmt As Single = 0

        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
            NtAmt = Val(lbl_Total_Amount.Text) - Val(lbl_Tds_Amount.Text) - Val(txt_Freight_Charge.Text)
        Else
            NtAmt = Val(lbl_Total_Amount.Text) - Val(lbl_Tds_Amount.Text)
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1057" Then '---- Karthikeyan Textiles (mangalam)
            NtAmt = Int(NtAmt)
        End If

        lbl_Net_Amount.Text = Format(Val(NtAmt), "##########0")

        lbl_Net_Amount.Text = Common_Procedures.Currency_Format(Val(CSng(lbl_Net_Amount.Text)))

    End Sub

    Private Sub Excess_Short_Calculation()
        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Dt2 As New DataTable
        Dim Clo_IdNo As Integer = 0
        Dim Stock_In As String
        Dim vWEAWAGES_for As String
        Dim mtrspcs As Single
        Dim vRCPT_FOLDPERC As String = 0
        Dim vTOT_RCPTMTRS As String = 0


        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        Clo_IdNo = Common_Procedures.Cloth_NameToIdNo(con, lbl_Cloth.Text)

        Stock_In = ""
        mtrspcs = 0
        vWEAWAGES_for = ""
        If Val(Clo_IdNo) <> 0 Then
            Da = New SqlClient.SqlDataAdapter("Select Stock_In , Meters_Pcs, WeaverWages_for from  Cloth_Head Where Cloth_idno = " & Str(Val(Clo_IdNo)), con)
            Dt2 = New DataTable
            Da.Fill(Dt2)
            If Dt2.Rows.Count > 0 Then
                Stock_In = Dt2.Rows(0)("Stock_In").ToString
                mtrspcs = Val(Dt2.Rows(0)("Meters_Pcs").ToString)
                vWEAWAGES_for = Dt2.Rows(0)("WeaverWages_for").ToString
            End If
            Dt2.Clear()
        End If

        If NoCalc_Status = True Then Exit Sub

        vRCPT_FOLDPERC = 0

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1155" Then '----KRG TEXTILE MILLS (PALLADAM)
            vRCPT_FOLDPERC = 100

        Else

            'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1033" Then '---- Rajeswari Weaving (Karumanthapatti) - Somanur Sizing

            Da = New SqlClient.SqlDataAdapter("select Folding_Receipt from Weaver_Cloth_Receipt_Head Where Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "'", con)
            Dt1 = New DataTable
            Da.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0).Item("Folding_Receipt").ToString) = False Then
                    vRCPT_FOLDPERC = Dt1.Rows(0).Item("Folding_Receipt").ToString
                End If
            End If
            Dt1.Clear()

            'End If

        End If

        If Val(vRCPT_FOLDPERC) <= 0 Then vRCPT_FOLDPERC = 100

        vTOT_RCPTMTRS = txt_Rec_Meter.Text
        If Val(vRCPT_FOLDPERC) <> 100 Then
            vTOT_RCPTMTRS = Format(Val(vTOT_RCPTMTRS) * Val(vRCPT_FOLDPERC) / 100, "########0.00")
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then
            lbl_Excess_Short.Text = Format(Val(lbl_Total_Meter.Text) - Val(txt_Rec_Meter.Text), "#########0.00")

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1446" Then
            If Trim(vWEAWAGES_for) <> "" And Trim(UCase(vWEAWAGES_for)) = "PCS" Then
                lbl_Excess_Short.Text = Format(Val(lbl_Total_Meter.Text) - Val(txt_Pcs.Text), "#########0.00")
            Else
                lbl_Excess_Short.Text = Format(Val(lbl_Total_Meter.Text) - Val(vTOT_RCPTMTRS), "#########0.00")
            End If

        Else

            If Trim(Stock_In) <> "" And Trim(UCase(Stock_In)) = "PCS" Then
                lbl_Excess_Short.Text = Format(Val(lbl_Total_Meter.Text) - Val(txt_Pcs.Text), "#########0.00")
            Else
                lbl_Excess_Short.Text = Format(Val(lbl_Total_Meter.Text) - Val(vTOT_RCPTMTRS), "#########0.00")
                'lbl_Excess_Short.Text = Format(Val(lbl_Total_Meter.Text) - Val(txt_Rec_Meter.Text), "#########0.00")
            End If

        End If

        If Val(txt_Pcs.Text) > 0 Then
            txt_Elogation.Text = Format(Val(lbl_Excess_Short.Text) / Val(txt_Pcs.Text), "#########0.00")
        Else
            txt_Elogation.Text = ""
        End If

    End Sub

    Private Sub Total_Amount_Calculation()
        Dim tlamt As Single = 0
        Dim TaxAmt As Single = 0

        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        If Trim(Common_Procedures.settings.CustomerCode) = "1033" Or Trim(Common_Procedures.settings.CustomerCode) = "1204" Then
            Check_Weaver_LoomType_Sts()
        End If

        TaxAmt = 0
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1151" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1188" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1136" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1195" Then '---- M.S Textiles (Tirupur)
            lbl_Taxable_Value.Text = Format(Val(lbl_Total_Cooly.Text) + Val(txt_addless_beforeTax.Text), "###########0")
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTILES(SOMANUR)
            lbl_Taxable_Value.Text = Format(Val(lbl_Total_Cooly.Text) + Val(txt_addless_beforeTax.Text) - Val(txt_Freight_Charge.Text), "###########0.00")
        Else
            lbl_Taxable_Value.Text = Format(Val(lbl_Total_Cooly.Text) + Val(txt_addless_beforeTax.Text), "###########0.00")
        End If

        '---Gst
        If chk_WvrLmTp_Sts = False Then
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1188" Then 'ms tex textile
                lbl_CGST_Amount.Text = Format(Val(lbl_Taxable_Value.Text) * Val(txt_CGST_Percentage.Text) / 100, "##########0")
                lbl_SGST_Amount.Text = Format(Val(lbl_Taxable_Value.Text) * Val(txt_SGST_Percentage.Text) / 100, "##########0")

            ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Then '---- Prakash Textiles (Somanur)
                lbl_CGST_Amount.Text = Format((Val(lbl_Taxable_Value.Text) - Val(txt_Freight_Charge.Text)) * Val(txt_CGST_Percentage.Text) / 100, "##########0.00")
                lbl_SGST_Amount.Text = Format((Val(lbl_Taxable_Value.Text) - Val(txt_Freight_Charge.Text)) * Val(txt_SGST_Percentage.Text) / 100, "###########0.00")
            Else
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1204" Then
                    If chk_WvrGST_Sts = True Then
                        lbl_CGST_Amount.Text = Format(Val(lbl_Taxable_Value.Text) * Val(txt_CGST_Percentage.Text) / 100, "##########0.00")
                        lbl_SGST_Amount.Text = Format(Val(lbl_Taxable_Value.Text) * Val(txt_SGST_Percentage.Text) / 100, "###########0.00")
                    End If
                Else
                    lbl_CGST_Amount.Text = Format(Val(lbl_Taxable_Value.Text) * Val(txt_CGST_Percentage.Text) / 100, "##########0.00")
                    lbl_SGST_Amount.Text = Format(Val(lbl_Taxable_Value.Text) * Val(txt_SGST_Percentage.Text) / 100, "###########0.00")
                End If
            End If
        End If


        TaxAmt = Val(lbl_Taxable_Value.Text) + Val(lbl_CGST_Amount.Text) + Val(lbl_SGST_Amount.Text)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then '---- S.Ravichandran Textiles (Erode)
            tlamt = Val(TaxAmt) - Val(txt_Freight_Charge.Text)
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            tlamt = Val(TaxAmt) + Val(txt_Add_Amount.Text) - Val(txt_Less_Amount.Text) - Val(txt_deduction.Text)
        Else
            tlamt = Val(TaxAmt) - Val(txt_Freight_Charge.Text) + Val(txt_Add_Amount.Text) - Val(txt_Less_Amount.Text) - Val(txt_deduction.Text)
        End If

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1100" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1188" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1195" Then
        lbl_Total_Amount.Text = Format(Val(tlamt), "##########0")

        'Else
        '    lbl_Total_Amount.Text = Format(Val(tlamt), "#########0.00")

        'End If

        lbl_Total_Amount.Text = Format(Val(lbl_Total_Amount.Text), "#########0.00")

        TdsCommision_Calculation()

        NetAmount_Calculation()

    End Sub


    Private Sub Total_Calculation()
        Dim TotMtrs As Single
        Dim TotWgt As Single

        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        TotMtrs = 0 : TotWgt = 0

        With dgv_Details
            For i = 0 To .RowCount - 1
                If Val(.Rows(i).Cells(0).Value) <> 0 Or Val(.Rows(i).Cells(6).Value) <> 0 Then

                    TotMtrs = TotMtrs + Val(.Rows(i).Cells(0).Value())
                    TotWgt = TotWgt + Val(.Rows(i).Cells(6).Value())

                End If
            Next i

        End With


        With dgv_Details_Total
            If .RowCount = 0 Then .Rows.Add()

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1151" Then
                .Rows(0).Cells(0).Value = Format(Val(TotMtrs), "########0.00")
            Else
                .Rows(0).Cells(0).Value = Format(Val(TotMtrs), "########0.00")
            End If
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1278" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1440" Then
                .Rows(0).Cells(6).Value = Format(Val(TotWgt), "########0")
            Else

                .Rows(0).Cells(6).Value = Format(Val(TotWgt), "########0.000")
            End If
        End With

    End Sub

    Private Sub cbo_Weaver_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Weaver.GotFocus
        cbo_Weaver.Tag = cbo_Weaver.Text
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Ledger_AlaisHead", "Ledger_DisplayName", "(ledger_type = 'WEAVER'  or Ledger_Type = 'GODOWN' or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_Weaver_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Weaver.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Weaver, msk_Date, txt_Sound_Meter, "Ledger_AlaisHead", "Ledger_DisplayName", "(ledger_type = 'WEAVER'  or Ledger_Type = 'GODOWN' or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_Weaver_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Weaver.KeyPress
        Dim q As Single = 0
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        'Dim frt_Lm, Frt_Amt, Tds_Perc As Single
        Dim LedID As Integer = 0, NoofLm As Integer = 0
        Dim MxId As Long = 0

        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Weaver, Nothing, "Ledger_AlaisHead", "Ledger_DisplayName", "(ledger_type = 'WEAVER'  or Ledger_Type = 'GODOWN' or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")

        If Asc(e.KeyChar) = 13 Then

            chk_WvrGST_Sts = True

            LedID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

            If lbl_WeaverBillNo.Visible Then
                If Trim(UCase(cbo_Weaver.Text)) <> "" Then
                    If Trim(UCase(cbo_Weaver.Tag)) <> Trim(UCase(cbo_Weaver.Text)) Then

                        Da = New SqlClient.SqlDataAdapter("select max(WeaverBillNo_ForOrderBy) from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Ledger_IdNo = " & Str(Val(LedID)) & "and Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnYearCode) & "'", con)
                        Dt = New DataTable
                        Da.Fill(Dt)

                        MxId = 0
                        If Dt.Rows.Count > 0 Then
                            If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                                MxId = Int(Val(Dt.Rows(0)(0).ToString))
                            End If
                        End If
                        Dt.Clear()
                        MxId = MxId + 1

                        lbl_WeaverBillNo.Text = Trim(UCase(MxId))

                    End If

                End If
            End If

            If MessageBox.Show("Do you want to select Cloth Receipt :", "FOR CLOTH RECEIPT SELECTION...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                btn_Selection_Click(sender, e)

            Else
                txt_Sound_Meter.Focus()

            End If

            getfrieghtAmt()
            If Trim(Common_Procedures.settings.CustomerCode) = "1033" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1204" Then
                Check_WeaverGSTIN_Status()
                'ElseIf Trim(Common_Procedures.settings.CustomerCode) = "1033" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1204" Then
                '    Check_Weaver_LoomType_Sts()
            End If

            txt_Sound_Meter.Focus()

        End If

    End Sub

    Private Sub cbo_Weaver_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Weaver.KeyUp
        If e.Control = False And e.KeyValue = 17 Then
            Common_Procedures.MDI_LedType = "WEAVER"
            Dim f As New Ledger_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_Weaver.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()

        End If
    End Sub

    Private Sub dgv_Details_CellEndEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellEndEdit
        dgv_Details_CellLeave(sender, e)
    End Sub

    Private Sub dgv_Details_CellEnter(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellEnter
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Dt2 As New DataTable
        Dim rect As Rectangle
        Dim Tot As Single = 0
        Dim Clo_IdNo As Integer = 0
        Dim Stock_In As String
        Dim mtrspcs As Single

        With dgv_Details

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1089" Then  '----------Abc
                Clo_IdNo = Common_Procedures.Cloth_NameToIdNo(con, lbl_Cloth.Text)

                Stock_In = ""
                mtrspcs = 0

                Da = New SqlClient.SqlDataAdapter("Select Stock_In , Meters_Pcs from  Cloth_Head Where Cloth_idno = " & Str(Val(Clo_IdNo)), con)
                Dt2 = New DataTable
                Da.Fill(Dt2)
                If Dt2.Rows.Count > 0 Then
                    Stock_In = Dt2.Rows(0)("Stock_In").ToString
                    mtrspcs = Val(Dt2.Rows(0)("Meters_Pcs").ToString)
                End If
                Dt2.Clear()

                If Trim(UCase(Stock_In)) = "PCS" Then
                    If (Val(.CurrentRow.Cells(0).Value) = 0 And .CurrentRow.Index = 0) Then
                        .Rows(0).Cells(0).Value = Format(Val(lbl_Total_Meter.Text) * Val(mtrspcs), "########0.00")
                    End If
                End If

            Else

                If (Val(.CurrentRow.Cells(0).Value) = 0 And .CurrentRow.Index = 0) Then
                    .Rows(0).Cells(0).Value = Val(lbl_Total_Meter.Text)
                End If

                If e.ColumnIndex = 0 Then
                    If e.RowIndex > 0 Then

                        Tot = 0
                        For I = 0 To dgv_Details.Rows.Count - 1
                            Tot = Tot + Val(dgv_Details.Rows(I).Cells(0).Value)
                        Next
                        If Val(dgv_Details.Rows(e.RowIndex).Cells(e.ColumnIndex).Value) = 0 And (Val(lbl_Total_Meter.Text) > Val(Tot)) Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1151" Then
                                dgv_Details.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = Format(Val(lbl_Total_Meter.Text) - Val(Tot), "#########0")
                            Else
                                dgv_Details.Rows(e.RowIndex).Cells(e.ColumnIndex).Value = Format(Val(lbl_Total_Meter.Text) - Val(Tot), "#########0.00")

                            End If
                        End If

                    End If


                End If
            End If



            'If Trim(.CurrentRow.Cells(0).Value) = "" Then
            '    .Focus()
            '    dgv_Details.CurrentCell = dgv_Details.CurrentRow.Cells(1)
            'End If

            If e.ColumnIndex = 1 Then

                If cbo_Grid_Count.Visible = False Or Val(cbo_Grid_Count.Tag) <> e.RowIndex Then

                    cbo_Grid_Count.Tag = -1
                    Da = New SqlClient.SqlDataAdapter("select Count_Name from Count_Head order by Count_Name", con)
                    Dt1 = New DataTable
                    Da.Fill(Dt1)
                    cbo_Grid_Count.DataSource = Dt1
                    cbo_Grid_Count.DisplayMember = "Count_Name"

                    rect = .GetCellDisplayRectangle(e.ColumnIndex, e.RowIndex, False)

                    cbo_Grid_Count.Left = .Left + rect.Left
                    cbo_Grid_Count.Top = .Top + rect.Top

                    cbo_Grid_Count.Width = rect.Width
                    cbo_Grid_Count.Height = rect.Height
                    cbo_Grid_Count.Text = .CurrentCell.Value

                    cbo_Grid_Count.Tag = Val(e.RowIndex)
                    cbo_Grid_Count.Visible = True

                    cbo_Grid_Count.BringToFront()
                    cbo_Grid_Count.Focus()

                End If

            Else
                cbo_Grid_Count.Visible = False

            End If


        End With
    End Sub

    Private Sub dgv_Details_CellLeave(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellLeave
        If Not IsNothing(dgv_Details.CurrentCell) Then dgv_Details.CurrentCell.Selected = False
        If Not IsNothing(dgv_Details_Total.CurrentCell) Then dgv_Details_Total.CurrentCell.Selected = False

        With dgv_Details
            If .CurrentCell.ColumnIndex = 0 Then
                If Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value) <> 0 Then
                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = Format(Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value), "#########0.00")
                Else
                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = ""
                End If
            End If

            If .CurrentCell.ColumnIndex = 5 Then
                If Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value) <> 0 Then
                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = Format(Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value), "#########0.000000")
                Else
                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = ""
                End If
            End If

            If .CurrentCell.ColumnIndex = 6 Then
                If Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value) <> 0 Then

                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = Format(Val(.CurrentRow.Cells(.CurrentCell.ColumnIndex).Value), "#########0.000")

                Else
                    .CurrentRow.Cells(.CurrentCell.ColumnIndex).Value = ""
                End If
            End If

        End With
    End Sub

    Private Sub dgv_Details_CellValueChanged(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Details.CellValueChanged
        If IsNothing(dgv_Details.CurrentCell) Then Exit Sub

        If IsNothing(dgv_Details_Total.CurrentCell) Then Exit Sub


        Try
            If FrmLdSTS = True Then Exit Sub
            If NoCalc_Status = True Then Exit Sub

            With dgv_Details
                If .Visible Then

                    If .CurrentCell.ColumnIndex = 0 Or .CurrentCell.ColumnIndex = 1 Or .CurrentCell.ColumnIndex = 2 Or .CurrentCell.ColumnIndex = 3 Or .CurrentCell.ColumnIndex = 4 Or .CurrentCell.ColumnIndex = 5 Then
                        Excess_Short_Calculation()
                        Weight_Calculation(.CurrentCell.RowIndex, .CurrentCell.ColumnIndex)
                    End If

                    If .CurrentCell.ColumnIndex = 0 Or .CurrentCell.ColumnIndex = 6 Then
                        Total_Calculation()
                    End If

                End If
            End With

        Catch ex As Exception
            '---
        End Try

    End Sub

    Private Sub dgv_Details_EditingControlShowing(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs) Handles dgv_Details.EditingControlShowing
        dgtxt_Details = CType(dgv_Details.EditingControl, DataGridViewTextBoxEditingControl)
    End Sub
    Private Sub dgtxt_Details_Enter(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgtxt_Details.Enter
        dgv_Details.EditingControl.BackColor = Color.Lime
        dgv_Details.EditingControl.ForeColor = Color.Blue
        dgtxt_Details.SelectAll()
    End Sub
    Private Sub dgtxt_Details_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles dgtxt_Details.KeyPress

        With dgv_Details
            If .Visible Then
                If .CurrentCell.ColumnIndex = 0 Or .CurrentCell.ColumnIndex = 1 Or .CurrentCell.ColumnIndex = 2 Or .CurrentCell.ColumnIndex = 3 Or .CurrentCell.ColumnIndex = 4 Or .CurrentCell.ColumnIndex = 5 Or .CurrentCell.ColumnIndex = 6 Then

                    If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
                        e.Handled = True
                    End If

                End If
            End If
        End With

    End Sub

    Private Sub dgv_Details_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Details.KeyDown
        With dgv_Details

            If e.KeyCode = Keys.Left Then
                If .CurrentCell.ColumnIndex <= 0 Then
                    If .CurrentCell.RowIndex = 0 Then
                        txt_Other_Cooly.Focus()
                    Else
                        .CurrentCell = .Rows(.CurrentCell.RowIndex - 1).Cells(.ColumnCount - 1)
                    End If
                End If
            End If

            If e.KeyCode = Keys.Right Then
                If .CurrentCell.ColumnIndex >= .ColumnCount - 1 Then
                    If .CurrentCell.RowIndex >= .Rows.Count - 1 Then
                        If txt_deduction.Visible = True Then
                            txt_deduction.Focus()
                        Else
                            txt_CGST_Percentage.Focus()
                        End If

                    Else
                        .CurrentCell = .Rows(.CurrentCell.RowIndex + 1).Cells(0)
                    End If
                End If
            End If

        End With

    End Sub

    Private Sub dgv_Details_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Details.KeyUp
        Dim i As Integer
        Dim n As Integer

        If e.Control = True And UCase(Chr(e.KeyCode)) = "D" Then

            With dgv_Details

                n = .CurrentRow.Index

                If .CurrentCell.RowIndex = .Rows.Count - 1 Then
                    For i = 0 To .ColumnCount - 1
                        .Rows(n).Cells(i).Value = ""
                    Next

                Else
                    .Rows.RemoveAt(n)

                End If

            End With

        End If
    End Sub

    Private Sub dgv_Details_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles dgv_Details.LostFocus
        On Error Resume Next

        If IsNothing(dgv_Details.CurrentCell) Then Exit Sub

        'dgv_Details.CurrentCell.Selected = False
    End Sub


    Private Sub btn_save_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_save.Click
        save_record()
    End Sub

    Private Sub btn_close_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_close.Click
        Me.Close()
    End Sub
    Private Sub btn_Filter_Close_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Filter_Close.Click
        pnl_Back.Enabled = True
        pnl_Filter.Visible = False
        Filter_Status = False
    End Sub

    Private Sub btn_Filter_Show_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Filter_Show.Click

        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim dt2 As New DataTable
        Dim n As Integer
        Dim Led_IdNo As Integer, Clth_IdNo As Integer
        Dim Condt As String = ""
        Dim Verfied_Sts As Integer = 0
        Try

            Condt = ""
            Led_IdNo = 0
            Clth_IdNo = 0

            If IsDate(dtp_Filter_Fromdate.Value) = True And IsDate(dtp_Filter_ToDate.Value) = True Then
                Condt = "a.Weaver_Wages_Date between '" & Trim(Format(dtp_Filter_Fromdate.Value, "MM/dd/yyyy")) & "' and '" & Trim(Format(dtp_Filter_ToDate.Value, "MM/dd/yyyy")) & "' "
            ElseIf IsDate(dtp_Filter_Fromdate.Value) = True Then
                Condt = "a.Weaver_Wages_Date = '" & Trim(Format(dtp_Filter_Fromdate.Value, "MM/dd/yyyy")) & "' "
            ElseIf IsDate(dtp_Filter_ToDate.Value) = True Then
                Condt = "a.Weaver_Wages_Date = '" & Trim(Format(dtp_Filter_ToDate.Value, "MM/dd/yyyy")) & "' "
            End If

            If Trim(cbo_Filter_PartyName.Text) <> "" Then
                Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Filter_PartyName.Text)
            End If

            If Trim(cbo_Filter_CountName.Text) <> "" Then
                Clth_IdNo = Common_Procedures.Count_NameToIdNo(con, cbo_Filter_CountName.Text)
            End If


            If Val(Led_IdNo) <> 0 Then
                Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " (a.Ledger_Idno = " & Str(Val(Led_IdNo)) & ")"
            End If

            If Val(Clth_IdNo) <> 0 Then
                Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " b.Count_IdNo = " & Str(Val(Clth_IdNo))
            End If

            If Trim(txt_filter_LotNo.Text) <> "" Then
                Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " a.Rec_No = '" & Trim(txt_filter_LotNo.Text) & "'"
            End If

            If Trim(cbo_Verified_Sts.Text) = "YES" Then
                Verfied_Sts = 1
                Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " a.Weaver_Wages_Code IN ( select z2.Weaver_Wages_Code from Weaver_Wages_Head z2 where z2.Verified_Status = " & Str(Val(Verfied_Sts)) & " )"
            ElseIf Trim(cbo_Verified_Sts.Text) = "NO" Then
                Verfied_Sts = 0
                Condt = Condt & IIf(Trim(Condt) <> "", " and ", "") & " a.Weaver_Wages_Code IN ( select z2.Weaver_Wages_Code from Weaver_Wages_Head z2 where z2.Verified_Status = " & Str(Val(Verfied_Sts)) & " )"
            End If

            da = New SqlClient.SqlDataAdapter("select a.*, c.Count_Name, e.Ledger_Name from Weaver_Wages_Head a left outer join Weaver_Wages_Yarn_Details b on a.Weaver_Wages_Code = b.Weaver_Wages_Code left outer join Count_head c on b.Count_idno = c.Count_idno left outer join Ledger_head e on a.Ledger_idno = e.Ledger_idno where a.company_idno =" & Str(Val(lbl_Company.Tag)) & "and a.Weaver_Wages_Code like '" & Trim(Pk_Condition) & "%/" & Trim(Common_Procedures.FnYearCode) & "' " & IIf(Trim(Condt) <> "", " and ", "") & Condt & " Order by Weaver_Wages_Date, for_orderby, Weaver_Wages_No", con)
            da.Fill(dt2)

            dgv_Filter_Details.Rows.Clear()

            If dt2.Rows.Count > 0 Then

                For i = 0 To dt2.Rows.Count - 1

                    n = dgv_Filter_Details.Rows.Add()

                    dgv_Filter_Details.Rows(n).Cells(0).Value = i + 1
                    dgv_Filter_Details.Rows(n).Cells(1).Value = dt2.Rows(i).Item("Weaver_Wages_No").ToString
                    dgv_Filter_Details.Rows(n).Cells(2).Value = Format(Convert.ToDateTime(dt2.Rows(i).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy")
                    dgv_Filter_Details.Rows(n).Cells(3).Value = dt2.Rows(i).Item("Ledger_Name").ToString
                    dgv_Filter_Details.Rows(n).Cells(4).Value = dt2.Rows(i).Item("Rec_No").ToString
                    dgv_Filter_Details.Rows(n).Cells(5).Value = dt2.Rows(i).Item("Count_Name").ToString
                    dgv_Filter_Details.Rows(n).Cells(6).Value = dt2.Rows(i).Item("Rec_Date").ToString
                    dgv_Filter_Details.Rows(n).Cells(7).Value = Format(Val(dt2.Rows(i).Item("Total_Cooly").ToString), "########0.00")
                    dgv_Filter_Details.Rows(n).Cells(8).Value = Format(Val(dt2.Rows(i).Item("Net_Amount").ToString), "########0.00")

                Next i

            End If

            dt2.Clear()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT FILTER...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            dt2.Dispose()
            da.Dispose()

            If dgv_Filter_Details.Visible And dgv_Filter_Details.Enabled Then dgv_Filter_Details.Focus()

        End Try

    End Sub
    Private Sub dgv_Filter_Details_CellDoubleClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs)
        Open_FilterEntry()
    End Sub

    Private Sub dgv_Filter_Details_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs)
        If e.KeyCode = 13 Then
            Open_FilterEntry()
        End If
    End Sub


    Private Sub txt_Excess_Short_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Paid_Amount_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_Paid_Amount.KeyDown
        If e.KeyValue = 38 Then
            txt_TdsPerc.Focus()
        End If

        If e.KeyValue = 40 Then
            If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                save_record()
            Else
                If msk_Date.Enabled And msk_Date.Visible Then
                    msk_Date.Focus()
                Else
                    cbo_Weaver.Focus()
                End If
            End If
        End If
    End Sub

    Private Sub txt_Paid_Amount_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Paid_Amount.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
        If Asc(e.KeyChar) = 13 Then


            If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                save_record()
            Else
                If msk_Date.Enabled And msk_Date.Visible Then
                    msk_Date.Focus()
                Else
                    cbo_Weaver.Focus()
                End If
            End If
        End If

    End Sub

    Private Sub txt_Add_Amount_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_Add_Amount.KeyDown
        If e.KeyValue = 38 Then txt_Freight_Charge.Focus()
        'If e.KeyValue = 38 Then txt_CGST_Percentage.Focus()
        If e.KeyValue = 40 Then
            If txt_ScdsLsMeter.Visible = True Then
                txt_ScdsLsMeter.Focus()
            Else
                txt_Less_Amount.Focus()
            End If
        End If
    End Sub

    Private Sub txt_Add_Amount_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Add_Amount.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
        If Asc(e.KeyChar) = 13 Then
            If txt_ScdsLsMeter.Visible = True Then
                txt_ScdsLsMeter.Focus()
            Else
                txt_Less_Amount.Focus()
            End If
        End If
    End Sub

    Private Sub txt_Bits_Cooly_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Bits_Cooly.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Bits_Meter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Bits_Meter.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Elogation_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Elogation.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If

        If Asc(e.KeyChar) = 13 Then
            txt_CGST_Percentage.Focus()
        End If


    End Sub

    Private Sub txt_Folding_Less_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_FoldingLess_Perc.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Freight_Charge_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Freight_Charge.GotFocus
        If Trim(UCase(cbo_Weaver.Tag)) <> Trim(UCase(cbo_Weaver.Text)) Then
            cbo_Weaver.Tag = cbo_Weaver.Text
            getfrieghtAmt()
        End If
    End Sub

    Private Sub txt_Freight_Charge_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_Freight_Charge.KeyDown
        If e.KeyValue = 38 Then
            If txt_Elogation.Enabled And txt_Elogation.Visible = True Then
                txt_addless_beforeTax.Focus()
            Else
                txt_SGST_Percentage.Focus()
            End If
        End If
        If e.KeyValue = 40 Then SendKeys.Send("{TAB}")
    End Sub

    Private Sub txt_Freight_Charge_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Freight_Charge.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Less_Amount_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Less_Amount.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Net_Amount_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Other_Cooly_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_Other_Cooly.KeyDown
        If e.KeyValue = 38 Then SendKeys.Send("+{TAB}")
        If (e.KeyValue = 40) Then
            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(0)

            Else
                txt_CGST_Percentage.Focus()

            End If
        End If
    End Sub

    Private Sub txt_Other_Cooly_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Other_Cooly.KeyPress

        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
        If Asc(e.KeyChar) = 13 Then
            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(0)

            Else
                txt_CGST_Percentage.Focus()

            End If
        End If
    End Sub

    Private Sub txt_Other_Meter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Other_Meter.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Rec_Meter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Rec_Meter.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Reject_Cooly_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Reject_Cooly.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Reject_Meter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Reject_Meter.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Seconds_Cooly_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Seconds_Cooly.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Seconds_Meter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Seconds_Meter.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Sound_Cooly_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Sound_Cooly.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Sound_Meter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Sound_Meter.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Tds_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_TdsPerc.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Total_Cooly_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_Total_Meter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs)
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub cbo_Grid_Count_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Grid_Count.GotFocus
        vCbo_ItmNm = Trim(cbo_Grid_Count.Text)
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Count_Head", "Count_Name", "", "(Count_IdNo = 0)")

    End Sub

    Private Sub cbo_Grid_Count_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Grid_Count.KeyDown
        Dim dep_idno As Integer = 0

        vcbo_KeyDwnVal = e.KeyValue

        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Grid_Count, Nothing, Nothing, "Count_Head", "Count_Name", "", "(Count_IdNo = 0)")

        With dgv_Details

            If (e.KeyValue = 38 And cbo_Grid_Count.DroppedDown = False) Or (e.Control = True And e.KeyValue = 38) Then
                .Focus()
                .CurrentCell = .Rows(.CurrentRow.Index).Cells(.CurrentCell.ColumnIndex - 1)

            End If

            If (e.KeyValue = 40 And cbo_Grid_Count.DroppedDown = False) Or (e.Control = True And e.KeyValue = 40) Then

                .Focus()
                .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(.CurrentCell.ColumnIndex + 1)

            End If


        End With
    End Sub

    Private Sub cbo_Grid_Count_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Grid_Count.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Grid_Count, Nothing, "Count_Head", "Count_Name", "", "(Count_IdNo = 0)")

        'If Asc(e.KeyChar) = 13 Then

        '    With dgv_Details

        '        .Focus()
        '        .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(.CurrentCell.ColumnIndex + 1)

        '    End With

        'End If
        If Asc(e.KeyChar) = 13 Then

            e.Handled = True

            With dgv_Details
                If Trim(.Rows(.CurrentRow.Index).Cells(1).Value) = "" And .CurrentRow.Index = .Rows.Count - 1 Then
                    txt_CGST_Percentage.Focus()
                Else
                    .Focus()
                    .CurrentCell = .Rows(.CurrentCell.RowIndex).Cells(.CurrentCell.ColumnIndex + 1)

                End If
            End With

        End If
    End Sub

    Private Sub cbo_Grid_Count_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Grid_Count.KeyUp
        If e.Control = False And e.KeyValue = 17 Then
            Dim f As New Count_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_Grid_Count.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()
        End If
    End Sub

    Private Sub cbo_Grid_Count_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Grid_Count.TextChanged
        Try
            If IsNothing(dgv_Details.CurrentCell) Then Exit Sub

            If cbo_Grid_Count.Visible Then
                With dgv_Details

                    If Val(cbo_Grid_Count.Tag) = Val(.CurrentCell.RowIndex) And .CurrentCell.ColumnIndex = 1 Then
                        .Rows(.CurrentCell.RowIndex).Cells.Item(.CurrentCell.ColumnIndex).Value = Trim(cbo_Grid_Count.Text)
                    End If
                End With
            End If

        Catch ex As Exception
            'MessageBox.Show(ex.Message, "FOR MOVING...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub txt_Other_Meter_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Other_Meter.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Sound_Meter_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Sound_Meter.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Seconds_Meter_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Seconds_Meter.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Bits_Meter_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Bits_Meter.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Reject_Meter_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Reject_Meter.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Other_Cooly_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Other_Cooly.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Reject_Cooly_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Reject_Cooly.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Seconds_Cooly_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Seconds_Cooly.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Sound_Cooly_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Sound_Cooly.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Bits_Cooly_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Bits_Cooly.TextChanged
        TotalCooly_Calculation()
    End Sub

    Private Sub txt_Tds_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_TdsPerc.TextChanged
        TdsCommision_Calculation()
    End Sub

    Private Sub txt_Total_Meter_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs)
        TdsCommision_Calculation()
    End Sub

    Private Sub txt_Rec_Meter_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Rec_Meter.TextChanged
        Excess_Short_Calculation()
    End Sub


    Private Sub txt_Freight_Charge_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Freight_Charge.TextChanged
        Total_Amount_Calculation()
    End Sub

    Private Sub txt_Less_Amount_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Less_Amount.TextChanged
        Total_Amount_Calculation()
    End Sub


    Private Sub txt_deduction_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_deduction.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
    End Sub

    Private Sub txt_deduction_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_deduction.TextChanged
        Total_Amount_Calculation()
    End Sub

    Private Sub txt_Add_Amount_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Add_Amount.TextChanged
        Total_Amount_Calculation()
    End Sub
    Private Sub btn_Selection_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Selection.Click
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim Dt2 As New DataTable
        Dim i As Integer, j As Integer, n As Integer, SNo As Integer
        Dim LedIdNo As Integer
        Dim NewCode As String
        Dim Fldng As Single = 0
        Dim vWeaCloRcpt_WagesCode_FldName As String = ""
        Dim PcsChk_Condt As String = ""
        Dim DtCondt As String = ""
        Dim vPCSCHK_APPSTS_JOIN As String = ""

        'Dim dAt As Date
        '  Dim lckdt As Date

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then '---- S.Ravichandran Textiles (Erode)
        '    lckdt = #12/12/2016#
        '    dAt = dtp_Date.Value.Date
        '    If DateDiff("d", lckdt, dAt) > 0 Then
        '        MessageBox.Show("Error in loading Dll's", "RECEIPT SELECTION........", MessageBoxButtons.OK, MessageBoxIcon.Error)
        '        Application.Exit()
        '    End If
        'End If


        LedIdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

        If LedIdNo = 0 Then
            MessageBox.Show("Invalid Party Name", "DOES NOT SELECT PAVU...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            If cbo_Weaver.Enabled And cbo_Weaver.Visible Then cbo_Weaver.Focus()
            Exit Sub
        End If

        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        vWeaCloRcpt_WagesCode_FldName = "Weaver_Wages_Code"
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20 Then '---BRT
            vWeaCloRcpt_WagesCode_FldName = "Weaver_IR_Wages_Code"

        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            DtCondt = "'" & Trim(Format(dtp_Date.Value, "MM/dd/yyyy")) & "'  between From_date_time and To_date_time "
        End If

        With dgv_Selection

            .Rows.Clear()
            SNo = 0

            Da = New SqlClient.SqlDataAdapter("select a.*, b.*, c.Cloth_Name, d.EndsCount_Name from Weaver_Cloth_Receipt_Head a INNER JOIN Weaver_Wages_Head b ON a." & vWeaCloRcpt_WagesCode_FldName & " = b.Weaver_Wages_Code INNER JOIN  Cloth_Head c ON a.Cloth_IdNo = c.Cloth_IdNo INNER JOIN EndsCount_Head d ON a.EndsCount_IdNo = d.EndsCount_IdNo where a." & vWeaCloRcpt_WagesCode_FldName & " = '" & Trim(NewCode) & "' and a.ledger_Idno = " & Str(Val(LedIdNo)) & "  and a.Return_Status = 0 order by a.Weaver_ClothReceipt_Date, a.for_orderby, a.Weaver_ClothReceipt_No", con)
            Dt1 = New DataTable
            Da.Fill(Dt1)

            If Dt1.Rows.Count > 0 Then

                For i = 0 To Dt1.Rows.Count - 1


                    Fldng = Val(Dt1.Rows(i).Item("folding").ToString)
                    If Val(Fldng) = 0 Then Fldng = 100

                    n = .Rows.Add()


                    SNo = SNo + 1
                    .Rows(n).Cells(0).Value = Val(SNo)

                    .Rows(n).Cells(1).Value = Dt1.Rows(i).Item("Weaver_ClothReceipt_No").ToString
                    .Rows(n).Cells(2).Value = Format(Convert.ToDateTime(Dt1.Rows(i).Item("Weaver_ClothReceipt_Date").ToString), "dd-MM-yyyy")
                    .Rows(n).Cells(3).Value = Dt1.Rows(i).Item("Party_DcNo").ToString
                    .Rows(n).Cells(4).Value = Dt1.Rows(i).Item("Cloth_Name").ToString
                    .Rows(n).Cells(5).Value = Dt1.Rows(i).Item("EndsCount_Name").ToString
                    .Rows(n).Cells(6).Value = Val(Dt1.Rows(i).Item("noof_pcs").ToString)
                    .Rows(n).Cells(7).Value = Format(Val(Dt1.Rows(i).Item("Receipt_Meters").ToString), "#########0.00")
                    .Rows(n).Cells(8).Value = "1"
                    .Rows(n).Cells(9).Value = Dt1.Rows(i).Item("Weaver_ClothReceipt_Code").ToString
                    .Rows(n).Cells(10).Value = Val(Fldng)
                    .Rows(n).Cells(11).Value = Format(Val(Dt1.Rows(i).Item("Sound_Meters").ToString), "#########0.00")
                    .Rows(n).Cells(12).Value = Format(Val(Dt1.Rows(i).Item("Seconds_Meters").ToString), "#########0.00")
                    .Rows(n).Cells(13).Value = Format(Val(Dt1.Rows(i).Item("Bits_Meters").ToString), "#########0.00")
                    .Rows(n).Cells(14).Value = Format(Val(Dt1.Rows(i).Item("Reject_Meters").ToString), "#########0.00")
                    .Rows(n).Cells(15).Value = Format(Val(Dt1.Rows(i).Item("Others_Meters").ToString), "#########0.00")
                    .Rows(n).Cells(16).Value = Format(Val(Dt1.Rows(i).Item("Sound_Cooly").ToString), "#########0.00")
                    .Rows(n).Cells(17).Value = Format(Val(Dt1.Rows(i).Item("Seconds_Cooly").ToString), "#########0.00")
                    .Rows(n).Cells(18).Value = Format(Val(Dt1.Rows(i).Item("Bits_Cooly").ToString), "#########0.00")
                    .Rows(n).Cells(19).Value = Format(Val(Dt1.Rows(i).Item("Reject_Cooly").ToString), "#########0.00")
                    .Rows(n).Cells(20).Value = Format(Val(Dt1.Rows(i).Item("Others_Cooly").ToString), "#########0.00")

                    If txt_FoldingLess_Perc.Visible = True And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1152" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Then
                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")

                        Else
                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")

                        End If

                    Else

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1152" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Then
                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")

                        Else

                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")

                        End If

                    End If

                    '.Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString), "#########0.00")
                    '.Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString), "#########0.00")
                    '.Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString), "#########0.00")
                    '.Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString), "#########0.00")
                    '.Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString), "#########0.00")

                    For j = 0 To .ColumnCount - 1
                        .Rows(i).Cells(j).Style.ForeColor = Color.Red
                    Next

                Next

            End If
            Dt1.Clear()


            PcsChk_Condt = ""
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1059" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1087" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1249" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1360" Then
                PcsChk_Condt = "(a.Weaver_Piece_Checking_Code <> '')"
            End If


            vPCSCHK_APPSTS_JOIN = ""
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                vPCSCHK_APPSTS_JOIN = " INNER JOIN Weaver_Piece_Checking_Head tWPCH ON tWPCH.Approved_Status = 1 and tWPCH.Weaver_Piece_Checking_Code = a.Weaver_Piece_Checking_Code "
            End If

            Da = New SqlClient.SqlDataAdapter("select a.*, c.*, d.EndsCount_Name from Weaver_Cloth_Receipt_Head a INNER JOIN  Cloth_Head c ON a.Cloth_IdNo = c.Cloth_IdNo INNER JOIN EndsCount_Head d ON a.EndsCount_IdNo = d.EndsCount_IdNo " & vPCSCHK_APPSTS_JOIN & " Where " & Trim(PcsChk_Condt) & IIf(Trim(PcsChk_Condt) <> "", " and ", "") & " a.company_idno = " & Str(Val(lbl_Company.Tag)) & " and a." & vWeaCloRcpt_WagesCode_FldName & " = '' and a.ledger_Idno = " & Str(Val(LedIdNo)) & " and a.No_Weaving_Wages_Bill = 0   and a.Return_Status = 0 order by a.Weaver_ClothReceipt_Date, a.for_orderby, a.Weaver_ClothReceipt_No", con)
            Dt1 = New DataTable
            Da.Fill(Dt1)

            If Dt1.Rows.Count > 0 Then

                For i = 0 To Dt1.Rows.Count - 1

                    Fldng = Val(Dt1.Rows(i).Item("folding").ToString)
                    If Val(Fldng) = 0 Then Fldng = 100

                    n = .Rows.Add()

                    SNo = SNo + 1
                    .Rows(n).Cells(0).Value = Val(SNo)

                    .Rows(n).Cells(1).Value = Dt1.Rows(i).Item("Weaver_ClothReceipt_No").ToString
                    .Rows(n).Cells(2).Value = Format(Convert.ToDateTime(Dt1.Rows(i).Item("Weaver_ClothReceipt_Date").ToString), "dd-MM-yyyy")
                    .Rows(n).Cells(3).Value = Dt1.Rows(i).Item("Party_DcNo").ToString
                    .Rows(n).Cells(4).Value = Dt1.Rows(i).Item("Cloth_Name").ToString
                    .Rows(n).Cells(5).Value = Dt1.Rows(i).Item("EndsCount_Name").ToString
                    .Rows(n).Cells(6).Value = Val(Dt1.Rows(i).Item("noof_pcs").ToString)
                    .Rows(n).Cells(7).Value = Format(Val(Dt1.Rows(i).Item("Receipt_Meters").ToString), "#########0.00")
                    .Rows(n).Cells(8).Value = ""
                    .Rows(n).Cells(9).Value = Dt1.Rows(i).Item("Weaver_ClothReceipt_Code").ToString
                    .Rows(n).Cells(10).Value = Val(Fldng)

                    .Rows(n).Cells(11).Value = ""
                    .Rows(n).Cells(12).Value = ""
                    .Rows(n).Cells(13).Value = ""
                    .Rows(n).Cells(14).Value = ""
                    .Rows(n).Cells(15).Value = ""

                    'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1152" Then
                    '    .Rows(n).Cells(11).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                    '    .Rows(n).Cells(12).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                    '    .Rows(n).Cells(13).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                    '    .Rows(n).Cells(14).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                    '    .Rows(n).Cells(15).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                    'Else
                    '    .Rows(n).Cells(11).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                    '    .Rows(n).Cells(12).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                    '    .Rows(n).Cells(13).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                    '    .Rows(n).Cells(14).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                    '    .Rows(n).Cells(15).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                    'End If

                    .Rows(n).Cells(16).Value = Format(Val(Dt1.Rows(i).Item("Wages_For_Type1").ToString), "#########0.00")
                    .Rows(n).Cells(17).Value = Format(Val(Dt1.Rows(i).Item("Wages_For_Type2").ToString), "#########0.00")
                    .Rows(n).Cells(18).Value = Format(Val(Dt1.Rows(i).Item("Wages_For_Type3").ToString), "#########0.00")
                    .Rows(n).Cells(19).Value = Format(Val(Dt1.Rows(i).Item("Wages_For_Type4").ToString), "#########0.00")
                    .Rows(n).Cells(20).Value = Format(Val(Dt1.Rows(i).Item("Wages_For_Type5").ToString), "#########0.00")


                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1242" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then

                        Da = New SqlClient.SqlDataAdapter("select top 1 a.* from Ledger_Weaver_Wages_Details a Where a.ledger_Idno = " & Str(Val(LedIdNo)) & " and  a.cloth_Idno = " & Str(Val(Dt1.Rows(i).Item("Cloth_IdNo").ToString)) & IIf(Trim(DtCondt) <> "", " And ", "") & DtCondt & " order by a.From_date_time DESC, a.To_date_time DESC, a.Sl_No", con)
                        'Da = New SqlClient.SqlDataAdapter("select a.* from Ledger_Weaver_Wages_Details a Where a.ledger_Idno = " & Str(Val(LedIdNo)) & " and  a.cloth_Idno = " & Str(Val(Dt1.Rows(i).Item("Cloth_IdNo").ToString)) & IIf(Trim(DtCondt) <> "", " And ", "") & DtCondt & " order by a.Sl_No", con)
                        Dt2 = New DataTable
                        Da.Fill(Dt2)
                        If Dt2.Rows.Count > 0 Then
                            .Rows(n).Cells(16).Value = Format(Val(Dt2.Rows(0).Item("Type1_Wages_Rate").ToString), "#########0.00")
                            .Rows(n).Cells(17).Value = Format(Val(Dt2.Rows(0).Item("Type2_Wages_Rate").ToString), "#########0.00")
                            .Rows(n).Cells(18).Value = Format(Val(Dt2.Rows(0).Item("Type3_Wages_Rate").ToString), "#########0.00")
                            .Rows(n).Cells(19).Value = Format(Val(Dt2.Rows(0).Item("Type4_Wages_Rate").ToString), "#########0.00")
                            .Rows(n).Cells(20).Value = Format(Val(Dt2.Rows(0).Item("Type5_Wages_Rate").ToString), "#########0.00")
                        End If
                        Dt2.Clear()

                    End If

                    If txt_FoldingLess_Perc.Visible = True And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1152" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Then
                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")

                        Else
                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) + Format((Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")

                        End If

                    Else

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1152" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Then
                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0.00")

                        Else

                            .Rows(n).Cells(21).Value = Format(Val(Dt1.Rows(i).Item("Type1_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(22).Value = Format(Val(Dt1.Rows(i).Item("Type2_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(23).Value = Format(Val(Dt1.Rows(i).Item("Type3_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(24).Value = Format(Val(Dt1.Rows(i).Item("Type4_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")
                            .Rows(n).Cells(25).Value = Format(Val(Dt1.Rows(i).Item("Type5_Checking_Meters").ToString) * Val(Fldng) / 100, "#########0")

                        End If

                    End If

                Next

            End If
            Dt1.Clear()

        End With

        pnl_Selection.Visible = True
        pnl_Back.Enabled = False
        dgv_Selection.Focus()

    End Sub

    Private Sub dgv_Selection_CellClick(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Selection.CellClick
        Select_Pavu(e.RowIndex)
    End Sub

    Private Sub Select_Pavu(ByVal RwIndx As Integer)
        Dim i As Integer

        With dgv_Selection

            If .RowCount > 0 And RwIndx >= 0 Then

                For i = 0 To dgv_Selection.Rows.Count - 1
                    dgv_Selection.Rows(i).Cells(8).Value = ""
                Next

                .Rows(RwIndx).Cells(8).Value = 1

                If Val(.Rows(RwIndx).Cells(8).Value) = 1 Then

                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Red
                    Next


                Else
                    .Rows(RwIndx).Cells(8).Value = ""

                    For i = 0 To .ColumnCount - 1
                        .Rows(RwIndx).Cells(i).Style.ForeColor = Color.Black
                    Next

                End If

                Close_Receipt_Selection()

            End If

        End With

    End Sub


    Private Sub dgv_Selection_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Selection.KeyDown
        Dim n As Integer

        On Error Resume Next

        If IsNothing(dgv_Selection.CurrentCell) Then Exit Sub

        If e.KeyCode = Keys.Enter Or e.KeyCode = Keys.Space Then
            If dgv_Selection.CurrentCell.RowIndex >= 0 Then
                n = dgv_Selection.CurrentCell.RowIndex
                Select_Pavu(n)
                e.Handled = True
            End If
        End If

    End Sub

    Private Sub btn_Close_Selection_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_Selection.Click
        Close_Receipt_Selection()
    End Sub

    Private Sub Close_Receipt_Selection()
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim n As Integer = 0
        Dim sno As Integer = 0
        Dim i As Integer = 0
        Dim j As Integer = 0

        dgv_Details.Rows.Clear()

        For i = 0 To dgv_Selection.RowCount - 1

            If Val(dgv_Selection.Rows(i).Cells(8).Value) = 1 Then

                NoCalc_Status = True

                lbl_RecCode.Text = dgv_Selection.Rows(i).Cells(9).Value
                lbl_RecNo.Text = dgv_Selection.Rows(i).Cells(1).Value
                lbl_Rec_Date.Text = dgv_Selection.Rows(i).Cells(2).Value
                lbl_PDcNo.Text = dgv_Selection.Rows(i).Cells(3).Value
                lbl_Cloth.Text = dgv_Selection.Rows(i).Cells(4).Value
                cbo_Ends_Count.Text = dgv_Selection.Rows(i).Cells(5).Value
                txt_Pcs.Text = dgv_Selection.Rows(i).Cells(6).Value
                txt_Rec_Meter.Text = dgv_Selection.Rows(i).Cells(7).Value

                txt_Sound_Meter.Text = IIf(Val(dgv_Selection.Rows(i).Cells(11).Value) <> 0, dgv_Selection.Rows(i).Cells(11).Value, dgv_Selection.Rows(i).Cells(21).Value)
                txt_Seconds_Meter.Text = IIf(Val(dgv_Selection.Rows(i).Cells(12).Value) <> 0, dgv_Selection.Rows(i).Cells(12).Value, dgv_Selection.Rows(i).Cells(22).Value)
                txt_Bits_Meter.Text = IIf(Val(dgv_Selection.Rows(i).Cells(13).Value) <> 0, dgv_Selection.Rows(i).Cells(13).Value, dgv_Selection.Rows(i).Cells(23).Value)
                txt_Reject_Meter.Text = IIf(Val(dgv_Selection.Rows(i).Cells(14).Value) <> 0, dgv_Selection.Rows(i).Cells(14).Value, dgv_Selection.Rows(i).Cells(24).Value)
                txt_Other_Meter.Text = IIf(Val(dgv_Selection.Rows(i).Cells(15).Value) <> 0, dgv_Selection.Rows(i).Cells(15).Value, dgv_Selection.Rows(i).Cells(25).Value)

                'If txt_FoldingLess_Perc.Visible = True Then
                '    txt_Sound_Meter.Text = Format(Val(dgv_Selection.Rows(i).Cells(11).Value) + Format((Val(dgv_Selection.Rows(i).Cells(11).Value) * (Val(dgv_Selection.Rows(i).Cells(10).Value) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "########0.00"), "########0.00")
                '    txt_Seconds_Meter.Text = Format(Val(dgv_Selection.Rows(i).Cells(12).Value) + Format((Val(dgv_Selection.Rows(i).Cells(12).Value) * (Val(dgv_Selection.Rows(i).Cells(10).Value) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "########0.00"), "########0.00")
                '    txt_Bits_Meter.Text = Format(Val(dgv_Selection.Rows(i).Cells(13).Value) + Format((Val(dgv_Selection.Rows(i).Cells(13).Value) * (Val(dgv_Selection.Rows(i).Cells(10).Value) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "########0.00"), "########0.00")
                '    txt_Reject_Meter.Text = Format(Val(dgv_Selection.Rows(i).Cells(14).Value) + Format((Val(dgv_Selection.Rows(i).Cells(14).Value) * (Val(dgv_Selection.Rows(i).Cells(10).Value) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "########0.00"), "########0.00")
                '    txt_Other_Meter.Text = Format(Val(dgv_Selection.Rows(i).Cells(15).Value) + Format((Val(dgv_Selection.Rows(i).Cells(15).Value) * (Val(dgv_Selection.Rows(i).Cells(10).Value) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "########0.00"), "########0.00")

                'Else
                '    txt_Sound_Meter.Text = dgv_Selection.Rows(i).Cells(11).Value
                '    txt_Seconds_Meter.Text = dgv_Selection.Rows(i).Cells(12).Value
                '    txt_Bits_Meter.Text = dgv_Selection.Rows(i).Cells(13).Value
                '    txt_Reject_Meter.Text = dgv_Selection.Rows(i).Cells(14).Value
                '    txt_Other_Meter.Text = dgv_Selection.Rows(i).Cells(15).Value

                'End If

                txt_Sound_Cooly.Text = dgv_Selection.Rows(i).Cells(16).Value
                txt_Seconds_Cooly.Text = dgv_Selection.Rows(i).Cells(17).Value
                txt_Bits_Cooly.Text = dgv_Selection.Rows(i).Cells(18).Value
                txt_Reject_Cooly.Text = dgv_Selection.Rows(i).Cells(19).Value
                txt_Other_Cooly.Text = dgv_Selection.Rows(i).Cells(20).Value

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1370" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1448" Then '-----SHANVI FABRICS  ( SENTHIL ANDAVAR SIZING ) (somanur)
                    Da1 = New SqlClient.SqlDataAdapter("Select c.Count_Name, a.Weaver_Piece_Checking_Date, b.Cloth_ReedSpace, b.Cloth_Pick as Cloth_Master_Pick, b.Cloth_Width, b.Weight_Meter_Weft, d.Pick as Cloth_Pick, SUM(d.Type1_Meters+d.Type2_Meters+d.Type3_Meters+d.Type4_Meters+d.Type5_Meters) as TotalMeter from Weaver_Cloth_Receipt_Head a, cloth_head b, count_head c, Weaver_ClothReceipt_Piece_Details d where a.Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "' and a.cloth_idno = b.cloth_idno and a.count_idno = c.count_idno and a.Weaver_Piece_Checking_Code = d.Weaver_Piece_Checking_Code Group by c.Count_Name, a.Weaver_Piece_Checking_Date, b.Cloth_ReedSpace, d.Pick, d.Width, b.Cloth_Pick, b.Cloth_Width, b.Weight_Meter_Weft Order by c.Count_Name, b.Cloth_ReedSpace, d.Pick, b.Cloth_Pick, b.Cloth_Width ", con)
                Else
                    Da1 = New SqlClient.SqlDataAdapter("Select Weaver_Piece_Checking_Date, " & Val(lbl_Total_Meter.Text) & " as TotalMeter, b.*, b.Cloth_Pick as Cloth_Master_Pick, c.Count_Name from Weaver_Cloth_Receipt_Head a, cloth_head b, count_head c where a.Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "' and a.cloth_idno = b.cloth_idno and a.count_idno = c.count_idno ", con)
                End If
                Dt1 = New DataTable
                Da1.Fill(Dt1)

                If Dt1.Rows.Count > 0 Then

                    For j = 0 To Dt1.Rows.Count - 1

                        n = dgv_Details.Rows.Add()

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1035" Then
                            dgv_Details.Rows(n).Cells(0).Value = Format(Val(dgv_Selection.Rows(i).Cells(7).Value), "#########0.00")
                        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1242" Then
                            If Val(txt_Sound_Meter.Text) <> 0 Then
                                dgv_Details.Rows(n).Cells(0).Value = Format(Val(txt_Sound_Meter.Text), "#########0.00")
                            Else
                                dgv_Details.Rows(n).Cells(0).Value = Format(Val(dgv_Selection.Rows(i).Cells(7).Value), "#########0.00")
                            End If
                        Else
                            dgv_Details.Rows(n).Cells(0).Value = Format(Val(Dt1.Rows(j).Item("TotalMeter").ToString), "#########0.00")
                        End If

                        dgv_Details.Rows(n).Cells(1).Value = Dt1.Rows(j).Item("Count_Name").ToString
                        dgv_Details.Rows(n).Cells(2).Value = Dt1.Rows(j).Item("Cloth_ReedSpace").ToString
                        dgv_Details.Rows(n).Cells(3).Value = Dt1.Rows(j).Item("Cloth_Pick").ToString
                        dgv_Details.Rows(n).Cells(4).Value = Dt1.Rows(j).Item("Cloth_Width").ToString
                        If Val(Dt1.Rows(j).Item("Cloth_Pick").ToString) = Val(Dt1.Rows(j).Item("Cloth_Master_Pick").ToString) Then
                            dgv_Details.Rows(n).Cells(5).Value = Format(Val(Dt1.Rows(j).Item("Weight_Meter_Weft").ToString), "#########0.000000")
                        Else
                            dgv_Details.Rows(n).Cells(5).Value = ""
                        End If
                        dgv_Details.Rows(n).Cells(6).Value = Format(Val(Dt1.Rows(j).Item("TotalMeter").ToString) * Val(Dt1.Rows(j).Item("Weight_Meter_Weft").ToString), "#########0.000")

                        NoCalc_Status = False
                        Weight_Calculation(n, 0)
                        NoCalc_Status = True

                    Next

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                        txt_Freight_Charge.Text = ""
                        dtp_Date.Text = Dt1.Rows(0).Item("Weaver_Piece_Checking_Date")
                        msk_Date.Text = dtp_Date.Text
                    End If

                End If
                Dt1.Clear()

                NoCalc_Status = False

                TotalCooly_Calculation()

                Total_Calculation()

                TotalMeter_Calculation()

                Total_Amount_Calculation()

                getfrieghtAmt()
                Exit For

            End If

        Next

        pnl_Back.Enabled = True
        pnl_Selection.Visible = False

        If txt_Sound_Meter.Enabled And txt_Sound_Meter.Visible Then txt_Sound_Meter.Focus()

    End Sub

    Public Sub print_record() Implements Interface_MDIActions.print_record
        If Common_Procedures.UserRight_NEWCheck(Common_Procedures.UserRightsCheckFor.PrintEntry, Common_Procedures.UR.Weaver_Wages_Entry, New_Entry) = False Then Exit Sub

        prn_FromNo = Trim(lbl_BillNo.Text)
        prn_ToNo = Trim(lbl_BillNo.Text)

        prn_WagesFrmt = Common_Procedures.settings.WeaverWages_Printing_Format
        prn_WagesDontShowToPartyName = Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_To_PartyName)
        prn_Wages_Prt_WeaverName_IN_Heading = Val(Common_Procedures.settings.WeaverWages_Print_Weavers_Name_IN_Heading)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
            txt_PrintRange_FromNo.Text = prn_FromNo
            txt_PrintRange_ToNo.Text = prn_ToNo

            pnl_PrintRange.Visible = True
            pnl_Back.Enabled = False
            pnl_PrintOption.Visible = False

            If txt_PrintRange_FromNo.Enabled Then txt_PrintRange_FromNo.Focus()

        Else

            pnl_PrintOption.Visible = True
            pnl_Back.Enabled = False
            pnl_PrintRange.Visible = False
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1140" Then
                If btn_Print_WithGST.Enabled And btn_Print_WithGST.Visible Then
                    btn_Print_WithGST.Focus()
                End If

            Else
                If btn_Print_SimpleFormat.Enabled And btn_Print_SimpleFormat.Visible Then

                    btn_Print_SimpleFormat.Focus()
                End If

            End If

        End If

    End Sub

    Private Sub printing_WeaverWages()
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim NewCode As String = ""
        Dim OrdBy_FrmNo As Single = 0, OrdByToNo As Single = 0
        'Dim ps As Printing.PaperSize
        Dim PpSzSTS As Boolean = False
        Dim Condt As String = ""
        Dim OrdBy_FrmTo As String = ""

        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Try

            OrdBy_FrmNo = Common_Procedures.OrderBy_CodeToValue(prn_FromNo)
            OrdByToNo = Common_Procedures.OrderBy_CodeToValue(prn_ToNo)


            Condt = ""
            If Val(OrdBy_FrmNo) <> 0 And Val(OrdByToNo) <> 0 Then
                Condt = " for_orderby between " & Str(Format(Val(OrdBy_FrmNo), "########0.00")) & "  And " & Str(Format(Val(OrdByToNo), "########0.00")) & " "

            Else

                If Trim(vPrintRange_FromDate) <> "" And Trim(vPrintRange_ToDate) <> "" Then
                    If IsDate(vPrintRange_FromDate) = True And IsDate(vPrintRange_ToDate) = True Then
                        Condt = " Weaver_Wages_Date between '" & Trim(Format(CDate(vPrintRange_FromDate), "MM/dd/yyyy")) & "' and '" & Trim(Format(CDate(vPrintRange_ToDate), "MM/dd/yyyy")) & "' "
                    End If
                End If
            End If

            'Condt = " Weaver_Wages_Date between '" & Trim(Format(Dtp_PrintRange_DateFrom.Value, "MM/dd/yyyy")) & "' and '" & Trim(Format(dtp_Filter_ToDate.Value, "MM/dd/yyyy")) & "' "
            'If Val(OrdBy_FrmNo) And Val(OrdByToNo) <> 0 Then
            '    OrdBy_FrmTo = " for_orderby between " & Str(Format(Val(OrdBy_FrmNo), "########0.00")) & "  And " & Str(Format(Val(OrdByToNo), "########0.00")) & " "
            'End If

            da1 = New SqlClient.SqlDataAdapter("Select * from Weaver_Wages_Head Where " & Trim(Condt) & IIf(Trim(Condt) <> "", " And ", "") & " Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " And  Weaver_Wages_Code Like '%/" & Trim(Common_Procedures.FnYearCode) & "'  and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by for_orderby, Weaver_Wages_No, Weaver_Wages_Code", con)
            'da1 = New SqlClient.SqlDataAdapter("Select * from Weaver_Wages_Head Where  Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " And for_orderby between " & Str(Format(Val(OrdBy_FrmNo), "########0.00")) & " and " & Str(Format(Val(OrdByToNo), "########0.00")) & " And Weaver_Wages_Code Like '%/" & Trim(Common_Procedures.FnYearCode) & "'  and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by for_orderby, Weaver_Wages_No, Weaver_Wages_Code", con)
            dt1 = New DataTable
            da1.Fill(dt1)
            If dt1.Rows.Count <= 0 Then
                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
                Exit Sub
            End If
            dt1.Dispose()
            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try



        set_PaperSize_For_PrintDocument1()


        If Val(Common_Procedures.Print_OR_Preview_Status) = 1 Then

            Try

                If Print_PDF_Status = True Then
                    '--This is actual & correct 
                    PrintDocument1.DocumentName = "BundleSlip"
                    PrintDocument1.PrinterSettings.PrinterName = "doPDF v7"
                    PrintDocument1.PrinterSettings.PrintFileName = "c:\Weaver_Wages.pdf"
                    PrintDocument1.Print()

                    Print_PDF_Status = False
                Else

                    If Val(Common_Procedures.settings.Printing_Show_PrintDialogue) = 1 Then

                        PrintDialog1.PrinterSettings = PrintDocument1.PrinterSettings
                        If PrintDialog1.ShowDialog() = Windows.Forms.DialogResult.OK Then
                            PrintDocument1.PrinterSettings = PrintDialog1.PrinterSettings

                            set_PaperSize_For_PrintDocument1()

                            PrintDocument1.Print()

                        End If


                    Else

                        PrintDocument1.Print()


                    End If

                End If

            Catch ex As Exception
                MessageBox.Show("The printing operation failed" & vbCrLf & ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

            End Try

        Else

            Try

                Dim ppd As New PrintPreviewDialog

                ppd.Document = PrintDocument1

                ppd.WindowState = FormWindowState.Maximized
                ppd.StartPosition = FormStartPosition.CenterScreen
                'ppd.ClientSize = New Size(600, 600)
                ppd.PrintPreviewControl.AutoZoom = True
                ppd.PrintPreviewControl.Zoom = 1.0

                ppd.ShowDialog()

            Catch ex As Exception
                MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT SHOW PRINT PREVIEW...")

            End Try

        End If

    End Sub

    Private Sub PrintDocument1_BeginPrint(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintEventArgs) Handles PrintDocument1.BeginPrint
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim NewCode As String
        Dim OrdBy_FrmNo As Single = 0, OrdByToNo As Single = 0
        Dim vWeaCloRcpt_WagesCode_FldName As String = ""
        Dim Condt As String = ""
        Dim OrdBy_FrmTo As String = ""


        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_HdDt.Clear()
        prn_DetDt.Clear()

        prn_Prev_HeadIndx = -100
        prn_HeadIndx = 0

        prn_DetIndx = 0
        prn_DetSNo = 0
        prn_PageSize_SetUP_STS = False

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

        Try

            OrdBy_FrmNo = Common_Procedures.OrderBy_CodeToValue(prn_FromNo)
            OrdByToNo = Common_Procedures.OrderBy_CodeToValue(prn_ToNo)

            Condt = ""
            If Val(OrdBy_FrmNo) <> 0 And Val(OrdByToNo) <> 0 Then
                Condt = " a.for_orderby between " & Str(Format(Val(OrdBy_FrmNo), "########0.00")) & "  And " & Str(Format(Val(OrdByToNo), "########0.00")) & " "

            Else

                If Trim(vPrintRange_FromDate) <> "" And Trim(vPrintRange_ToDate) <> "" Then
                    If IsDate(vPrintRange_FromDate) = True And IsDate(vPrintRange_ToDate) = True Then
                        Condt = " a.Weaver_Wages_Date between '" & Trim(Format(CDate(vPrintRange_FromDate), "MM/dd/yyyy")) & "' and '" & Trim(Format(CDate(vPrintRange_ToDate), "MM/dd/yyyy")) & "' "
                    End If
                End If
            End If

            vWeaCloRcpt_WagesCode_FldName = "Weaver_Wages_Code"
            If (Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(Common_Procedures.FnYearCode) >= 20) Then '---BRT
                vWeaCloRcpt_WagesCode_FldName = "Weaver_IR_Wages_Code"
            End If


            da1 = New SqlClient.SqlDataAdapter("Select a.*, b.*, c.*, d.Cloth_Name, e.Loom_Type  as LoomType_ClothReceipt from Weaver_Wages_Head a INNER JOIN Company_Head b ON a.Company_IdNo = b.Company_IdNo LEFT OUTER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_Idno LEFT OUTER JOIN Cloth_Head d ON a.Cloth_IdNo = d.Cloth_Idno INNER JOIN Weaver_Cloth_Receipt_Head e ON a.Weaver_Wages_Code = e." & Trim(vWeaCloRcpt_WagesCode_FldName) & " Where " & Trim(Condt) & IIf(Trim(Condt) <> "", " And ", "") & "  a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and  a.Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnYearCode) & "'  and a.Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by a.for_orderby, a.Weaver_Wages_No, a.Weaver_Wages_Code", con)

            '----cmd by lalith

            'da1 = New SqlClient.SqlDataAdapter("Select a.*, b.*, c.*, d.Cloth_Name, e.Loom_Type from Weaver_Wages_Head a INNER JOIN Company_Head b ON a.Company_IdNo = b.Company_IdNo LEFT OUTER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_Idno LEFT OUTER JOIN Cloth_Head d ON a.Cloth_IdNo = d.Cloth_Idno INNER JOIN Weaver_Cloth_Receipt_Head e ON a.Weaver_Wages_Code = e." & Trim(vWeaCloRcpt_WagesCode_FldName) & " Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.for_orderby between " & Str(Format(Val(OrdBy_FrmNo), "########0.00")) & " and " & Str(Format(Val(OrdByToNo), "########0.00")) & " and a.Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnYearCode) & "'  and a.Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by a.for_orderby, a.Weaver_Wages_No, a.Weaver_Wages_Code", con)

            '----cmd by lalith


            'da1 = New SqlClient.SqlDataAdapter("Select a.*, b.*, c.*, d.Cloth_Name, e.Loom_Type from Weaver_Wages_Head a INNER JOIN Company_Head b ON a.Company_IdNo = b.Company_IdNo LEFT OUTER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_Idno LEFT OUTER JOIN Cloth_Head d ON a.Cloth_IdNo = d.Cloth_Idno INNER JOIN Weaver_Cloth_Receipt_Head e ON a.Weaver_Wages_Code = e.Weaver_Wages_Code Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.for_orderby between " & Str(Format(Val(OrdBy_FrmNo), "########0.00")) & " and " & Str(Format(Val(OrdByToNo), "########0.00")) & " and a.Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnYearCode) & "'  and a.Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by a.for_orderby, a.Weaver_Wages_No, a.Weaver_Wages_Code", con)
            'da1 = New SqlClient.SqlDataAdapter("select a.*, b.*, c.*, d.Cloth_Name from Weaver_Wages_Head a INNER JOIN Company_Head b ON a.Company_IdNo = b.Company_IdNo LEFT OUTER JOIN Ledger_Head c ON a.Ledger_IdNo = c.Ledger_Idno LEFT OUTER JOIN Cloth_Head d ON a.Cloth_IdNo = d.Cloth_Idno Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.for_orderby between " & Str(Format(Val(OrdBy_FrmNo), "########0.00")) & " and " & Str(Format(Val(OrdByToNo), "########0.00")) & " and a.Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnYearCode) & "'  and a.Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' Order by a.for_orderby, a.Weaver_Wages_No, a.Weaver_Wages_Code", con)
            prn_HdDt = New DataTable
            da1.Fill(prn_HdDt)

            If prn_HdDt.Rows.Count > 0 Then

                'Weaver_AllStock_Ledger(Val(prn_HdDt.Rows(0).Item("Ledger_IdNo").ToString), prn_HdDt.Rows(0).Item("Weaver_Wages_Date").ToString)

                'da2 = New SqlClient.SqlDataAdapter("select Date1, Int3 as Ent_OrderBy, meters1 as for_OrderBy, name2 as Ref_No, name1 as Ref_Code, name3 as Dc_Rec_No, sum(Int6) as EmptyBeam, sum(Meters6) as PavuMtrs, sum(weight1) as YarnWgt, sum(currency1) as amount from " & Trim(Common_Procedures.ReportTempTable) & " group by Date1, Int3, meters1, name2, name1, name3 having sum(Int6)  <> 0 or sum(Meters6) <> 0 or sum(weight1) <> 0 or sum(currency1) <> 0 Order by Date1, Int3, meters1, name2, name1", con)
                'prn_DetDt = New DataTable
                'da2.Fill(prn_DetDt)

            Else

                MessageBox.Show("This is New Entry", "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

            End If

            da1.Dispose()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub


    Private Sub PrintDocument1_PrintPage(ByVal sender As Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument1.PrintPage
        Dim Da2 As New SqlClient.SqlDataAdapter

        If prn_HdDt.Rows.Count <= 0 Then Exit Sub

        'prn_DetDt.Clear()

        'prn_PageNo = 0

        'prn_DetIndx = 0
        'prn_DetSNo = 0

        'prn_Tot_EBeam_Stk = 0
        'prn_Tot_Pavu_Stk = 0
        'prn_Tot_Yarn_Stk = 0
        'prn_Tot_Amt_Bal = 0

        If prn_Prev_HeadIndx <> prn_HeadIndx Then
            Weaver_AllStock_Ledger(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_IdNo").ToString), prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date"))
        End If

        Da2 = New SqlClient.SqlDataAdapter("select Date1, Int3 as Ent_OrderBy, meters1 as for_OrderBy, name2 as Ref_No, name1 as Ref_Code, name3 as Dc_Rec_No, sum(Int6) as EmptyBeam, sum(Meters6) as PavuMtrs, SUM(Meters8) as PavuExcShtMtrs, sum(weight1) as YarnWgt, sum(currency1) as amount ,Name10 as Narration from " & Trim(Common_Procedures.ReportTempTable) & " group by Date1, Int3, meters1, name2, name1, name3 ,Name10 having sum(Int6)  <> 0 or sum(Meters6) <> 0 or sum(weight1) <> 0 or sum(currency1) <> 0 Order by Date1, Int3, meters1, name2, name1", con)
        prn_DetDt = New DataTable
        Da2.Fill(prn_DetDt)

        Prn_In_English_STS = False
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTILES (SOMANUR)
            If Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("Loom_Type").ToString)) = "POWER LOOM" Or Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("Loom_Type").ToString)) = "POWERLOOM" Then
                Prn_In_English_STS = False
            Else
                Prn_In_English_STS = True
            End If

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1311" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1172" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1482" Then '---- SENTHUR FAB(PALLADAM)

            Prn_In_English_STS = True

        End If


        If Trim(UCase(prn_WagesFrmt)) = "FORMAT-1" Then
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1140" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- ANANDHARAJA MILLS (AVINASHI)  or BRT TEXTILES (SOMANUR)
                Printing_Format5(e)
            ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1172" Then
                Printing_Format_1172(e)
            Else
                Printing_Format1(e)
            End If

        ElseIf Trim(UCase(prn_WagesFrmt)) = "FORMAT-2" Or Trim(UCase(prn_WagesFrmt)) = "FORMAT-2.1" Then
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
                Printing_Format7(e)
            ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1242" Then '---- SOUTHERN SAREES
                Printing_Format8(e) ' A4 SIZE
            ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---- KAMACHIAMMAN TEX
                Printing_Format10(e)
            Else
                Printing_Format2(e)
            End If

        ElseIf Trim(UCase(prn_WagesFrmt)) = "FORMAT-3" Then
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1408" Then
                Printing_Format_1408(e)
            Else
                Printing_Format_GST_Weaver(e)
            End If


        ElseIf Trim(UCase(prn_WagesFrmt)) = "FORMAT-4" Then
            Printing_Format4(e)

        ElseIf Trim(UCase(prn_WagesFrmt)) = "FORMAT-5" Then
            Printing_Format9(e)

        Else
            Printing_Format2(e)

        End If

    End Sub

    Private Sub Printing_Format1(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' Simple Format without Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim p2Font As Font
        Dim vpTamFont_R As Font
        Dim vpTamFont_B As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1, C2, C3, C4, C5, W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim Ntamt As String = 0
        Dim Rndoffamt As Single = 0

        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        p1Font = New Font("Calibri", 10, FontStyle.Bold)

        vpTamFont_R = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
        vpTamFont_B = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10 ' 30
            .Right = 60 ' 50
            .Top = 10 '30
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'If PrintDocument1.DefaultPageSettings.Landscape = True Then
        '    With PrintDocument1.DefaultPageSettings.PaperSize
        '        PrintWidth = .Height - TMargin - BMargin
        '        PrintHeight = .Width - RMargin - LMargin
        '        PageWidth = .Height - TMargin
        '        PageHeight = .Width - RMargin
        '    End With
        'End If

        'd1 = e.Graphics.MeasureString("Department   : ", pFont).Width
        'i1 = e.Graphics.MeasureString("Item Name : ", pFont).Width
        'b1 = e.Graphics.MeasureString("Brand Name : ", pFont).Width
        'qn1 = e.Graphics.MeasureString("Quantity (NEW ITEM) : ", pFont).Width
        'qo1 = e.Graphics.MeasureString("Quantity (OLD ITEM) - Usable  : ", pFont).Width
        'qo2 = e.Graphics.MeasureString("Quantity (OLD ITEM) - Scrap : ", pFont).Width

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 50 : ClAr(4) = 50 : ClAr(5) = 50
        ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))


        C1 = ClAr(1) + ClAr(2)
        C2 = C1 + ClAr(3) + ClAr(4)
        C3 = C2 + ClAr(5)
        C4 = C3 + ClAr(6)
        C5 = C4 + ClAr(7)


        TxtHgt = 17 ' 18.75 ' 19

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Try

            prn_Prev_HeadIndx = prn_HeadIndx

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format1_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1

                CurY = CurY + 5
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Fabric Name", LMargin + 10, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                End If

                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                Ntamt = snd + sec + bit + rjt + otr

                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type1, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                End If

                Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                CurY = CurY + TxtHgt
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Receipt Meters", LMargin + 10, CurY, 0, 0, p1Font)
                Else
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1094" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                    End If
                End If

                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type2, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                End If
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                CurY = CurY + TxtHgt
                If Prn_In_English_STS = True Then
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                        Common_Procedures.Print_To_PrintDocument(e, "Difference Meters", LMargin + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Excess Meters", LMargin + 10, CurY, 0, 0, p1Font)
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                Else
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                        End If

                    End If

                End If



                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type3, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                End If


                CurY = CurY + TxtHgt + 5
                Common_Procedures.Print_To_PrintDocument(e, "Wages Amount", LMargin + 10, CurY, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) <> 0 Then
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type4, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                End If

                If Prn_FrghtAmt_STS = True Then

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        CurY = CurY + TxtHgt

                        If Common_Procedures.settings.CustomerCode = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY, 0, 0, p1Font)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY, 0, 0, p1Font)
                        End If

                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                End If


                'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Then
                '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                '        CurY = CurY + TxtHgt
                '        Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY, 0, 0, p1Font)
                '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                '    End If
                'End If



                'If Common_Procedures.settings.CustomerCode = "1049" Then
                '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                '        CurY = CurY + TxtHgt
                '        If Common_Procedures.settings.CustomerCode = "1049" Then
                '            Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY, 0, 0, p1Font)

                '        End If
                '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                '    End If
                'Else
                '    CurY = CurY + TxtHgt
                '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                '        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                '    End If

                'End If


                'If Common_Procedures.settings.CustomerCode <> "1049" Then
                '                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                '                         CurY = CurY + TxtHgt
                '                          If Common_Procedures.settings.CustomerCode <> "1049" Then
                '                               Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY, 0, 0, p1Font)
                '
                '                            End If
                '

                '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                '    End If
                'Else
                '    If Common_Procedures.settings.CustomerCode <> "1049" Then
                '        CurY = CurY + TxtHgt
                '        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                '            Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                '        End If
                '    End If
                'End If

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) <> 0 Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type5, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                End If

                CurY = CurY + TxtHgt
                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                    Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If

                'If Prn_FrghtAmt_STS = True Then
                '    If Common_Procedures.settings.CustomerCode = "1049" Then
                '        CurY = CurY + TxtHgt
                '        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                '            Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                '        End If

                '    Else

                '        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                '            CurY = CurY + TxtHgt

                '            Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY, 0, 0, p1Font)



                '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                '        End If
                '    End If
                'End If

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If

                CurY = CurY + TxtHgt + 2
                e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)

                CurY = CurY + 2
                If Prn_FrghtAmt_STS = True Then
                    If Common_Procedures.settings.CustomerCode = "--1049--" Then
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)
                    End If
                Else
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)
                End If


                CurY = CurY + TxtHgt + 2
                e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)

                'Gst


                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt - 10
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt
                    p2Font = New Font("Calibri", 11, FontStyle.Bold Or FontStyle.Underline)
                    Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY, 0, 0, p2Font)
                End If


                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If


                CurY = CurY + TxtHgt
                Rndoffamt = Format(Val(Ntamt), "###########0") - Val(Ntamt)
                If Rndoffamt <> 0 Then
                    If Rndoffamt > 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY - 5, 0, 0, p1Font)
                    ElseIf Rndoffamt < 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY - 5, 0, 0, p1Font)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                End If

                If Prn_FrghtAmt_STS = True Then
                    Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "###########0.00")
                Else
                    Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "###########0.00")
                End If

                Rndoffamt = Format(Val(Ntamt), "###########0") - Val(Ntamt)
                If Rndoffamt <> 0 Then
                    If Rndoffamt > 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + 10, CurY - 5, 0, 0, p1Font)
                    ElseIf Rndoffamt < 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + 10, CurY - 5, 0, 0, p1Font)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If


                CurY = CurY + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)

                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Total", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                End If


                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                End If

                'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                '    'Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) , PageWidth - 10, CurY, 1, 0, pFont)
                '    Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                'Else
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                'End If

                CurY = CurY + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)
                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)


                CurY = CurY + 10
                Common_Procedures.Print_To_PrintDocument(e, "Net Amount", LMargin + 10, CurY, 0, 0, p1Font)
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                    Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString), "###########0.00")
                Else
                    Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString), "###########0.00")
                End If
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(Ntamt), "############0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)


                W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", p1Font).Width
                W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", p1Font).Width

                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "No.of Pcs", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                End If
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)

                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Consumed Yarn", LMargin + C1 + 200, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY, 0, 0, vpTamFont_B)
                End If
                Common_Procedures.Print_To_PrintDocument(e, "   :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY, 0, 0, pFont)


                NoofDets = NoofDets + 1

                prn_DetIndx = prn_DetIndx + 1

                CurY = CurY + TxtHgt + 10

                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))

            End If

            Printing_Format1_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        prn_Prev_HeadIndx = prn_HeadIndx
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True
        Else
            e.HasMorePages = False
        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format1_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim p1Font As Font
        Dim p2Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String
        Dim Led_Name As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, S1, W1, W2 As Single
        Dim vPcsChkNo As String = ""
        Dim vPcsChkDate As String = ""


        p1Font = New Font("Calibri", 11, FontStyle.Bold)

        PageNo = PageNo + 1

        CurY = TMargin


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = ""

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString) <> "" Then
                Cmp_TinNo = "PAN NO : " & prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString
            End If
        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
                Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
                Cmp_TinNo = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
            End If


        End If

        If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

            If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                If Not imageData Is Nothing Then
                    Using ms As New MemoryStream(imageData, 0, imageData.Length)
                        ms.Write(imageData, 0, imageData.Length)

                        If imageData.Length > 0 Then

                            '.BackgroundImage = Image.FromStream(ms)

                            e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 15, CurY + 2, 70, 70)
                            'e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 15, CurY + 5, 100, 90)
                            ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)



                        End If

                    End Using

                End If


            End If

        End If

        CurY = CurY + TxtHgt - 10

        p2Font = New Font("Calibri", 18, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p2Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p2Font).Height

        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        If Common_Procedures.settings.CustomerCode = "1273" Then
            If Print_PDF_Status = False Then
                Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, PrintWidth - 10, CurY, 1, 0, pFont)
            End If
        Else
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, PrintWidth - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt

        p2Font = New Font("Calibri", 13, FontStyle.Bold)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1098" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1140" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1331" Then
            Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p2Font)

        Else
            If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)

            Else

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1172" Then

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)
                    End If

                End If

            End If
        End If


        CurY = CurY + strHeight - 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        LnAr(2) = CurY



        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        Else

            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Then '---- Sri Sugam Textile (Karumanthampatti)

                If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString) <> "" Then
                    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
                    Led_Add2 = "PAN NO : " & prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString
                Else
                    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
                    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
                End If

            Else
                Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
                Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

            End If

        End If


        C1 = ClAr(1) + ClAr(2) + 150
        C2 = C1 + ClAr(4) + 80
        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width


        CurY = CurY + TxtHgt - 10
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, pFont)


        Common_Procedures.Print_To_PrintDocument(e, "BILL NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)

        If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, "BILL DATE ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, pFont)


        vPcsChkNo = ""
        vPcsChkDate = ""
        Da1 = New SqlClient.SqlDataAdapter("select c.Weaver_Piece_Checking_No, c.Weaver_Piece_Checking_Date from Weaver_Wages_Head a INNER JOIN Weaver_Cloth_Receipt_Head b ON a.Weaver_Wages_Code = b.Weaver_Wages_Code LEFT OUTER JOIN Weaver_Piece_Checking_Head c ON b.Weaver_Piece_Checking_Code = c.Weaver_Piece_Checking_Code Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Wages_Code = '" & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Code").ToString) & "'", con)
        Dt1 = New DataTable
        Da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0).Item("Weaver_Piece_Checking_No").ToString) = False Then
                vPcsChkNo = Dt1.Rows(0).Item("Weaver_Piece_Checking_No").ToString
            End If
            If IsDBNull(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString) = False Then
                If Trim(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString) <> "" Then
                    vPcsChkDate = Format(Convert.ToDateTime(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString), "dd-MM-yyyy").ToString
                End If
            End If
        End If
        Dt1.Clear()

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTTILES (SOMANUR)
            Common_Procedures.Print_To_PrintDocument(e, "IR NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & vPcsChkNo, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "IR DATE ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & vPcsChkDate, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)
        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, pFont)

        If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)

        Else

            Common_Procedures.Print_To_PrintDocument(e, "LOT NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        End If
        If Common_Procedures.settings.CustomerCode = "1370" Then

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "GSTIN :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_GSTinNo").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)

        End If

        Common_Procedures.Print_To_PrintDocument(e, "LOT DATE ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

    End Sub

    Private Sub Printing_Format1_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        End If

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt


        CurY = CurY + 10

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 0 Then
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
                If Prn_In_English_STS = True Then
                    p1Font = New Font("Calibri", 12, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Weaver's Signature", LMargin + 10, CurY, 0, 0, p1Font)
                Else
                    p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, p1Font)
                End If

            End If
        End If


        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        End If


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, p1Font)

            Else
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

            End If
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        End If

    End Sub


    Private Sub Printing_Format_1172(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' Simple Format without Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim p2Font As Font
        Dim vpTamFont_R As Font
        Dim vpTamFont_B As Font
        Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1, C2, C3, C4, C5, W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim Ntamt As String = 0
        Dim Rndoffamt As Single = 0
        Dim TpMargin As Single = 0

        Dim PCnt As Integer = 0, PrntCnt As Integer = 0


        PrntCnt = 1

        If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    Exit For
                End If
            Next

            If PrntCnt2ndPageSTS = False Then
                PCnt = 1
                PrntCnt = 2
            End If

        Else

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    Exit For
                End If
            Next

        End If


        'If prn_PageSize_SetUP_STS = False Then
        '    set_PaperSize_For_PrintDocument1()
        '    prn_PageSize_SetUP_STS = True
        'End If

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        p1Font = New Font("Calibri", 10, FontStyle.Bold)

        vpTamFont_R = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
        vpTamFont_B = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10 ' 30
            .Right = 60 ' 50
            .Top = 10 '30
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With



        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'If PrintDocument1.DefaultPageSettings.Landscape = True Then
        '    With PrintDocument1.DefaultPageSettings.PaperSize
        '        PrintWidth = .Height - TMargin - BMargin
        '        PrintHeight = .Width - RMargin - LMargin
        '        PageWidth = .Height - TMargin
        '        PageHeight = .Width - RMargin
        '    End With
        'End If

        'd1 = e.Graphics.MeasureString("Department   : ", pFont).Width
        'i1 = e.Graphics.MeasureString("Item Name : ", pFont).Width
        'b1 = e.Graphics.MeasureString("Brand Name : ", pFont).Width
        'qn1 = e.Graphics.MeasureString("Quantity (NEW ITEM) : ", pFont).Width
        'qo1 = e.Graphics.MeasureString("Quantity (OLD ITEM) - Usable  : ", pFont).Width
        'qo2 = e.Graphics.MeasureString("Quantity (OLD ITEM) - Scrap : ", pFont).Width

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 50 : ClAr(4) = 50 : ClAr(5) = 50
        ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))


        C1 = ClAr(1) + ClAr(2) + 50
        C2 = C1 + ClAr(3) + ClAr(4)
        C3 = C2 + ClAr(5)
        C4 = C3 + ClAr(6)
        C5 = C4 + ClAr(7)


        TxtHgt = 17 ' 18.75 ' 19

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        TpMargin = TMargin

        PrntCnt2ndPageSTS = False

        'Do While PCnt <= PrntCnt




        Try

            For PCnt = 1 To PrntCnt

                If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then

                    If PCnt = 1 Then
                        prn_PageNo = 0

                        prn_DetIndx = 0
                        prn_DetSNo = 0

                        prn_Tot_EBeam_Stk = 0
                        prn_Tot_Pavu_Stk = 0
                        prn_Tot_Yarn_Stk = 0
                        prn_Tot_Amt_Bal = 0

                        TpMargin = TMargin

                    Else

                        prn_PageNo = 0

                        prn_DetIndx = 0
                        prn_DetSNo = 0

                        prn_Tot_EBeam_Stk = 0
                        prn_Tot_Pavu_Stk = 0
                        prn_Tot_Yarn_Stk = 0
                        prn_Tot_Amt_Bal = 0

                        TpMargin = 600 + TMargin  ' 600 + TMargin

                    End If

                End If
                prn_Prev_HeadIndx = prn_HeadIndx

                If prn_HdDt.Rows.Count > 0 Then

                    Printing_Format_1172_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                    NoofDets = NoofDets + 1

                    CurY = CurY + 5
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Fabric Name", LMargin + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                    End If



                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                    snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                    sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                    bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                    rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                    otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                    Ntamt = snd + sec + bit + rjt + otr

                    p1Font = New Font("Calibri", 10, FontStyle.Bold)

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type1, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Receipt Meters", LMargin + 10, CurY, 0, 0, p1Font)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1094" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                        End If
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type2, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt
                    If Prn_In_English_STS = True Then
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                            Common_Procedures.Print_To_PrintDocument(e, "Difference Meters", LMargin + 10, CurY, 0, 0, p1Font)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Excess Meters", LMargin + 10, CurY, 0, 0, p1Font)
                        End If

                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                        Else
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                                Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY, 0, 0, vpTamFont_B)
                                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                            End If

                        End If

                    End If



                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type3, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    End If


                    CurY = CurY + TxtHgt + 5
                    Common_Procedures.Print_To_PrintDocument(e, "Wages Amount", LMargin + 10, CurY, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type4, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    If Prn_FrghtAmt_STS = True Then

                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                            CurY = CurY + TxtHgt

                            If Common_Procedures.settings.CustomerCode = "1049" Then
                                Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY, 0, 0, p1Font)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY, 0, 0, p1Font)
                            End If

                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                        End If

                    End If


                    'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Then
                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                    '        CurY = CurY + TxtHgt
                    '        Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY, 0, 0, p1Font)
                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    '    End If
                    'End If



                    'If Common_Procedures.settings.CustomerCode = "1049" Then
                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                    '        CurY = CurY + TxtHgt
                    '        If Common_Procedures.settings.CustomerCode = "1049" Then
                    '            Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY, 0, 0, p1Font)

                    '        End If
                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    '    End If
                    'Else
                    '    CurY = CurY + TxtHgt
                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                    '        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    '    End If

                    'End If


                    'If Common_Procedures.settings.CustomerCode <> "1049" Then
                    '                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                    '                         CurY = CurY + TxtHgt
                    '                          If Common_Procedures.settings.CustomerCode <> "1049" Then
                    '                               Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY, 0, 0, p1Font)
                    '
                    '                            End If
                    '

                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    '    End If
                    'Else
                    '    If Common_Procedures.settings.CustomerCode <> "1049" Then
                    '        CurY = CurY + TxtHgt
                    '        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                    '            Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                    '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    '        End If
                    '    End If
                    'End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) <> 0 Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then

                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type5, LMargin + C1 + 10, CurY, 0, 0, p1Font)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                        End If

                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If

                    End If

                    CurY = CurY + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                    'If Prn_FrghtAmt_STS = True Then
                    '    If Common_Procedures.settings.CustomerCode = "1049" Then
                    '        CurY = CurY + TxtHgt
                    '        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                    '            Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY, 0, 0, p1Font)
                    '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    '        End If

                    '    Else

                    '        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                    '            CurY = CurY + TxtHgt

                    '            Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY, 0, 0, p1Font)



                    '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    '        End If
                    '    End If
                    'End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                        CurY = CurY + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                        CurY = CurY + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                    CurY = CurY + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)

                    CurY = CurY + 2
                    If Prn_FrghtAmt_STS = True Then
                        If Common_Procedures.settings.CustomerCode = "--1049--" Then
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)
                        End If
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)
                    End If


                    CurY = CurY + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)

                    'Gst


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        CurY = CurY + TxtHgt - 10
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                        CurY = CurY + TxtHgt
                        p2Font = New Font("Calibri", 11, FontStyle.Bold Or FontStyle.Underline)
                        Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY, 0, 0, p2Font)
                    End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                        CurY = CurY + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        CurY = CurY + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt
                    Rndoffamt = Format(Val(Ntamt), "###########0") - Val(Ntamt)
                    If Rndoffamt <> 0 Then
                        If Rndoffamt > 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY - 5, 0, 0, p1Font)
                        ElseIf Rndoffamt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY - 5, 0, 0, p1Font)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    End If

                    If Prn_FrghtAmt_STS = True Then
                        Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "###########0.00")
                    Else
                        Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "###########0.00")
                    End If

                    Rndoffamt = Format(Val(Ntamt), "###########0") - Val(Ntamt)
                    If Rndoffamt <> 0 Then
                        If Rndoffamt > 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + 10, CurY - 5, 0, 0, p1Font)
                        ElseIf Rndoffamt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + 10, CurY - 5, 0, 0, p1Font)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Total", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                    End If


                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                    '    'Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) , PageWidth - 10, CurY, 1, 0, pFont)
                    '    Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                    'Else
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                    'End If

                    CurY = CurY + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)
                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)


                    CurY = CurY + 10
                    Common_Procedures.Print_To_PrintDocument(e, "Net Amount", LMargin + 10, CurY, 0, 0, p1Font)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString), "###########0.00")
                    Else
                        Ntamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString), "###########0.00")
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(Ntamt), "############0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)


                    W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", p1Font).Width
                    W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", p1Font).Width

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "No.of Pcs", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY, 0, 0, vpTamFont_B)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 60, CurY, 0, 0, pFont)

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Consumed Yarn", LMargin + C1 + 200, CurY, 0, 0, p1Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY, 0, 0, vpTamFont_B)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, "   :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY, 0, 0, pFont)


                    NoofDets = NoofDets + 1

                    prn_DetIndx = prn_DetIndx + 1

                    CurY = CurY + TxtHgt + 10

                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 + 5, CurY, LMargin + C1 + 5, LnAr(3))

                End If

                Printing_Format_1172_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)
            Next PCnt

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then
            If PCnt = 1 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then
                If prn_HdDt.Rows.Count > 0 Then
                    PrntCnt2ndPageSTS = True
                    e.HasMorePages = True
                    Return
                End If
            End If
        End If

        PrntCnt2ndPageSTS = False
        'PCnt = PCnt + 1

        'Loop

        prn_Prev_HeadIndx = prn_HeadIndx
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True
        Else
            e.HasMorePages = False
        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format_1172_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim p1Font As Font
        Dim p2Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String
        Dim Led_Name As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, S1, W1, W2 As Single
        Dim vPcsChkNo As String = ""
        Dim vPcsChkDate As String = ""


        p1Font = New Font("Calibri", 11, FontStyle.Bold)

        PageNo = PageNo + 1

        CurY = TMargin


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = ""

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString) <> "" Then
                Cmp_TinNo = "PAN NO : " & prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString
            End If
        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
                Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
                Cmp_TinNo = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
            End If


        End If

        If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

            If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                If Not imageData Is Nothing Then
                    Using ms As New MemoryStream(imageData, 0, imageData.Length)
                        ms.Write(imageData, 0, imageData.Length)

                        If imageData.Length > 0 Then

                            '.BackgroundImage = Image.FromStream(ms)

                            ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)
                            e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 15, CurY + 5, 100, 90)


                        End If

                    End Using

                End If


            End If

        End If

        CurY = CurY + TxtHgt - 10

        p2Font = New Font("Calibri", 18, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p2Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p2Font).Height

        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
        CurY = CurY + TxtHgt - 1
        If Common_Procedures.settings.CustomerCode = "1273" Then
            If Print_PDF_Status = False Then
                Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, PrintWidth - 10, CurY, 1, 0, pFont)
            End If
        Else
            Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, PrintWidth - 10, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt

        p2Font = New Font("Calibri", 13, FontStyle.Bold)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1098" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1140" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1331" Then
            Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)

        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p2Font)

        Else
            If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)

            Else

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1172" Then

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p2Font)
                    End If

                End If

            End If
        End If


        CurY = CurY + strHeight - 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        LnAr(2) = CurY



        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        Else

            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Then '---- Sri Sugam Textile (Karumanthampatti)

                If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString) <> "" Then
                    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
                    Led_Add2 = "PAN NO : " & prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString
                Else
                    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
                    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
                End If

            Else
                Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
                Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

            End If

        End If


        C1 = ClAr(1) + ClAr(2) + 150
        C2 = C1 + ClAr(4) + 80
        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width


        CurY = CurY + TxtHgt - 10
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, pFont)


        Common_Procedures.Print_To_PrintDocument(e, "BILL NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)

        If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        End If

        Common_Procedures.Print_To_PrintDocument(e, "BILL DATE ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, pFont)


        vPcsChkNo = ""
        vPcsChkDate = ""
        Da1 = New SqlClient.SqlDataAdapter("select c.Weaver_Piece_Checking_No, c.Weaver_Piece_Checking_Date from Weaver_Wages_Head a INNER JOIN Weaver_Cloth_Receipt_Head b ON a.Weaver_Wages_Code = b.Weaver_Wages_Code LEFT OUTER JOIN Weaver_Piece_Checking_Head c ON b.Weaver_Piece_Checking_Code = c.Weaver_Piece_Checking_Code Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Wages_Code = '" & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Code").ToString) & "'", con)
        Dt1 = New DataTable
        Da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0).Item("Weaver_Piece_Checking_No").ToString) = False Then
                vPcsChkNo = Dt1.Rows(0).Item("Weaver_Piece_Checking_No").ToString
            End If
            If IsDBNull(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString) = False Then
                If Trim(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString) <> "" Then
                    vPcsChkDate = Format(Convert.ToDateTime(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString), "dd-MM-yyyy").ToString
                End If
            End If
        End If
        Dt1.Clear()

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTTILES (SOMANUR)
            Common_Procedures.Print_To_PrintDocument(e, "IR NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & vPcsChkNo, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "IR DATE ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & vPcsChkDate, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)
        End If


        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, pFont)

        If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)

        Else

            Common_Procedures.Print_To_PrintDocument(e, "LOT NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        End If
        If Common_Procedures.settings.CustomerCode = "1370" Then

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "GSTIN :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_GSTinNo").ToString, LMargin + S1 + 10, CurY, 0, 0, pFont)

        End If

        Common_Procedures.Print_To_PrintDocument(e, "LOT DATE ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        If Trim(prn_HdDt.Rows(0).Item("P_DC_NO").ToString) <> "" Then
            CurY = CurY + TxtHgt + 10

            Common_Procedures.Print_To_PrintDocument(e, "P.DC.NO", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(0).Item("P_DC_NO").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        End If




        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

    End Sub

    Private Sub Printing_Format_1172_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        End If




        If Trim(prn_HdDt.Rows(0).Item("Remarks").ToString) <> "" Then

            Common_Procedures.Print_To_PrintDocument(e, "Remarks : " & Trim(prn_HdDt.Rows(0).Item("Remarks").ToString), LMargin + 10, CurY + 5, 0, 0, pFont)

        End If


        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt


        CurY = CurY + 10

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 0 Then
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
                If Prn_In_English_STS = True Then
                    p1Font = New Font("Calibri", 12, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Weaver's Signature", LMargin + 10, CurY, 0, 0, p1Font)
                Else
                    p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, p1Font)
                End If

            End If
        End If


        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        End If


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, p1Font)

            Else
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

            End If
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        End If

    End Sub

    Private Sub Printing_Format2(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' common Format with Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        Dim pTBFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim CurY1 As Single = 0
        Dim Rndoffamt As Single = 0
        Dim Ntamt As Single = 0

        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If


        p1Font = New Font("Calibri", 11, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1098" Then
                .Left = 20
                .Right = 50
                .Top = 0 ' 30
                .Bottom = 20
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            Else
                .Left = 20
                .Right = 50
                .Top = 2 ' 20 ' 30
                .Bottom = 25 ' 30
                LMargin = .Left
                RMargin = .Right
                TMargin = .Top
                BMargin = .Bottom
            End If
        End With

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1589" Then
            pFont = New Font("Calibri", 9, FontStyle.Regular)
            pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
            pTBFont = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)

        Else
            pFont = New Font("Calibri", 10, FontStyle.Regular)
            pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
            pTBFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

        End If




        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then

            ClAr(1) = Val(110) : ClAr(2) = 80 : ClAr(3) = 85 : ClAr(4) = 85 : ClAr(5) = 90 : ClAr(6) = 0 : ClAr(7) = 90 : ClAr(8) = 0 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 140 '285
            C2 = C1 + ClAr(5)  '385

        Else
            ClAr(1) = Val(80) : ClAr(2) = 50 : ClAr(3) = 55 : ClAr(4) = 55 : ClAr(5) = 80 : ClAr(6) = 80 : ClAr(7) = 70 : ClAr(8) = 70 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)  '285
            C2 = C1 + ClAr(5)  '385

        End If

        'If Trim(Common_Procedures.settings.CustomerCode) = "1037" And vPrnt_2Copy_In_SinglePage = 1 Then
        '    PCnt = PCnt + 1
        '    PrntCnt = PrntCnt + 1
        'End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1589" Then
            TxtHgt = 14.25 ' 14.75 ' 15
        Else
            TxtHgt = 14.75
        End If

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format2_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                    NoofItems_PerPage = 9
                ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1045" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
                    NoofItems_PerPage = 38
                ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1444" Then
                    If prn_DetDt.Rows.Count > 6 Then
                        NoofItems_PerPage = 38
                    Else
                        NoofItems_PerPage = 6
                    End If
                ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1273" Then
                    NoofItems_PerPage = 38
                ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1589" Then
                    'If prn_DetDt.Rows.Count > 7 Then
                    '    NoofItems_PerPage = 40
                    'Else
                    NoofItems_PerPage = 7
                    'End If
                Else
                    NoofItems_PerPage = 6
                End If


                If prn_PageNo <= 1 Then

                    'If Prn_In_English_STS = True Then
                    '    Common_Procedures.Print_To_PrintDocument(e, "Fabric Name", LMargin + 10, CurY, 0, 0, pFont)
                    'Else
                    '    Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, pTBFont) '---Thuni
                    'End If

                    CurY1 = CurY
                    'Right Side

                    CurY = CurY + TxtHgt - 10
                    snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                    sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                    bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                    rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                    otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                    Ntamt = snd + sec + bit + rjt + otr
                    '  Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "I Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "SOUND", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTBFont)
                        End If
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt


                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "II Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1055" Then
                        p1Font = New Font("SaiIndira", 16, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "-II", LMargin + C1 + 10 + 43, CurY - 3, 0, 0, pFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "SECONDS", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    ' Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "H†", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Else
                            If Prn_In_English_STS = True Then
                                Common_Procedures.Print_To_PrintDocument(e, "BITS", LMargin + C1 + 10, CurY, 0, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTBFont)
                            End If
                        End If
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        '  CurY = CurY + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString) <> 0 Then
                            CurY = CurY + TxtHgt
                            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString) * (prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If
                    End If

                    CurY = CurY + TxtHgt

                    If Val(rjt) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Rejected", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, pTFont) '---Kalivu
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt
                    If Val(otr) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Others ", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, pTFont) '----Idhara
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If

                    End If

                    CurY = CurY + TxtHgt

                    If Prn_In_English_STS = True Then
                        W1 = e.Graphics.MeasureString("No.of Pieces : ", pFont).Width '---Piece Ennikkai
                        W2 = e.Graphics.MeasureString("Yarn Cost : ", pFont).Width '-----Nool Selavu
                    Else
                        W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", pTBFont).Width
                        W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", pTBFont).Width
                    End If

                    'Left Side 
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1037" Then
                        CurY1 = CurY1 + TxtHgt - 10

                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Type", LMargin + 10, CurY1 + 5, 0, 0, pFont) '----Ragam
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY1 + 5, 0, 0, pTBFont)
                        End If
                    End If
                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt

                    pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Receipt Meters", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTBFont) '---Thuni Varavu
                            'Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                        End If
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    CurY1 = CurY1 + TxtHgt
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1395" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1037" Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Excess/Short", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTBFont) '---Valari
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    p1Font = New Font("Calibri", 9, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)

                    pFont = New Font("Calibri", 9, FontStyle.Regular)

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        If Common_Procedures.settings.CustomerCode = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY1, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY1, 0, 0, pFont)
                        End If
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    '' CurY1 = CurY1 + TxtHgt
                    'If Common_Procedures.settings.CustomerCode <> "1049" Then
                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                    '        CurY1 = CurY1 + TxtHgt
                    '        If Common_Procedures.settings.CustomerCode = "1049" Then
                    '            Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY1, 0, 0, pFont)
                    '        End If
                    '        pFont = New Font("Calibri", 9, FontStyle.Regular)
                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    '    End If

                    'Else

                    '    If Common_Procedures.settings.CustomerCode <> "1049" Then
                    '        CurY1 = CurY1 + TxtHgt
                    '        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                    '            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                    '            Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                    '            pFont = New Font("Calibri", 9, FontStyle.Regular)
                    '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    '        End If
                    '    End If

                    'End If


                    'If Common_Procedures.settings.CustomerCode = "1049" Then
                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                    '        CurY1 = CurY1 + TxtHgt
                    '        If Common_Procedures.settings.CustomerCode = "1049" Then
                    '            Common_Procedures.Print_To_PrintDocument(e, "(Less) Discount", LMargin + 10, CurY1, 0, 0, pFont)
                    '       End If
                    ' 
                    '       pFont = New Font("Calibri", 9, FontStyle.Regular)
                    '       Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    '    End If
                    'Else

                    '    CurY1 = CurY1 + TxtHgt
                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                    '        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                    '        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                    '        pFont = New Font("Calibri", 9, FontStyle.Regular)
                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    '    End If
                    'End If

                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    'If Common_Procedures.settings.CustomerCode = "1049" Then
                    '    CurY1 = CurY1 + TxtHgt
                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                    '        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                    '        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                    '        pFont = New Font("Calibri", 9, FontStyle.Regular)
                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    '    End If

                    'Else

                    '    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                    '        CurY1 = CurY1 + TxtHgt

                    '        Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY1, 0, 0, pFont)



                    '        pFont = New Font("Calibri", 9, FontStyle.Regular)
                    '        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    '    End If

                    'End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY1, 0, 0, p1Font)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 2

                    If Common_Procedures.settings.CustomerCode = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY, 1, 0, p1Font)
                        'Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString)  - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    'Gst
                    CurY1 = CurY1 + TxtHgt - 10
                    'p1Font = New Font("Calibri", 9, FontStyle.Bold Or FontStyle.Underline)
                    'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    '    Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    'End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("calibri", 10, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        CurY1 = CurY1 + TxtHgt
                        p1Font = New Font("Calibri", 10, FontStyle.Bold Or FontStyle.Underline)
                        Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    End If


                    Rndoffamt = Format(Val(Ntamt), "##########0") - Ntamt
                    If Rndoffamt <> 0 Then
                        If Rndoffamt > 0 Then
                            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY1 - 10, 0, 0, p1Font)
                        ElseIf Rndoffamt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY1 - 10, 0, 0, pFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), PageWidth - 10, CurY1 - 10, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 - 5, PageWidth - 10, CurY1 - 5)

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Total", LMargin + C1 + 10, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY1, 0, 0, pTBFont) '-----Mottham
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY1, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), PageWidth - 10, CurY1, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 + 5, PageWidth - 10, CurY1 + 5)


                    CurY1 = CurY1 + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Total Piece", LMargin + C1 + 10, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY1, 0, 0, pTBFont) '---Thuni Ennikai
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 50, CurY1 - 3, 0, 0, pFont)

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Yarn Cost", LMargin + C1 + 250, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY1, 0, 0, pTBFont) '---Nool Selavu
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY1 - 3, 0, 0, pFont)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1098" Then
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                        CurY1 = CurY1 + 5
                        Common_Procedures.Print_To_PrintDocument(e, "Total Amount", LMargin + 10, CurY1, 0, 0, pFont)
                        If Common_Procedures.settings.CustomerCode = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString), "############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString), "############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If

                    End If

                    If CurY1 > CurY Then CurY = CurY1

                    CurY = CurY + TxtHgt + 8

                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    LnAr(4) = CurY
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 5, CurY, LMargin + C1 - 5, LnAr(3))


                Else
                    NoofItems_PerPage = 15

                End If


                CurY = CurY + TxtHgt - 10

                If Trim(UCase(prn_WagesFrmt)) <> "FORMAT-2.1" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1395" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1482" Then '---- SANTHA EXPORTS (SOMANUR)

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin, CurY, 2, ClAr(1), pFont)
                        Common_Procedures.Print_To_PrintDocument(e, "NO.", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
                        Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
                        Common_Procedures.Print_To_PrintDocument(e, "BEAM STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
                        Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "«îF", LMargin - 5, CurY, 2, ClAr(1), pTBFont)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then '----KAMACHIAMMAN TEX
                            Common_Procedures.Print_To_PrintDocument(e, "ªï‹.", LMargin + ClAr(1), CurY, 2, ClAr(2), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pTBFont)
                        End If
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + 5, CurY, 2, ClAr(2), pTBFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pTBFont)
                        End If
                    End If
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "PAVU STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
                        Else
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 25, CurY, 2, ClAr(3), pTBFont) '---PAVU IRUPPU
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pTBFont) '---PAVU IRUPPU
                            End If
                        End If
                    End If
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(4), pTBFont) '---NOOL VARAVU/PATRU
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pTBFont) '---NOOL VARAVU/PATRU
                        End If
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "YARN STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)
                        Else
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                                Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 2, ClAr(5), pTBFont) '--- YARN IRUPU
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pTBFont) '--- YARN IRUPU
                            End If
                        End If
                    End If
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
                        Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pFont)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                            Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 2, ClAr(6), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(7), pTBFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pTBFont)
                        Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pTBFont) '---THOGAI IRUPPUR
                    End If

                    CurY = CurY + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    LnAr(5) = CurY


                    NoofDets = 0

                    CurY = CurY - 10

                    If prn_DetDt.Rows.Count > 0 Then

                        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                            If NoofDets >= NoofItems_PerPage Then

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 10, CurY + 10, 1, 0, pFont)

                                NoofDets = NoofDets + 1

                                If Val(Common_Procedures.settings.WeaverWages_Print_NoNeed_2nd_Page) = 1 Then
                                    Printing_Format2_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                                    GoTo LOOP2

                                Else

                                    Printing_Format2_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                    e.HasMorePages = True

                                    Return

                                End If

                            End If

                            prn_Tot_EBeam_Stk = prn_Tot_EBeam_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)
                            prn_Tot_Pavu_Stk = prn_Tot_Pavu_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)
                            prn_Tot_Yarn_Stk = prn_Tot_Yarn_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)
                            prn_Tot_Amt_Bal = prn_Tot_Amt_Bal + Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)

                            CurY = CurY + TxtHgt
                            If IsDate(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString) = True Then
                                Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString), "dd-MM-yy").ToString, LMargin + 5, CurY, 0, 0, pFont)
                            Else

                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, "Opening", LMargin + 5, CurY, 0, 0, pFont)
                                End If

                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) <> 0 Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                    If prn_DetIndx <> 0 Then
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                    End If
                                Else
                                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + 20, CurY, 1, 0, pFont)
                                    Else
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                    End If
                                End If
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                                    Else
                                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                                    End If
                                End If
                            End If
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) <> 0 Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                    If prn_DetIndx <> 0 Then
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                    End If
                                Else
                                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 15, CurY, 1, 0, pFont)
                                    Else
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                    End If
                                End If

                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 15, CurY, 1, 0, pFont)
                                    Else
                                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                                    End If
                                End If
                            End If
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 5, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Amt_Bal), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
                            End If

                            NoofDets = NoofDets + 1

                            prn_DetIndx = prn_DetIndx + 1

                        Loop

                    End If


                End If

            End If

LOOP1:
            CurY = CurY + TxtHgt

            Printing_Format2_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

LOOP2:
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True

        Else
            e.HasMorePages = False

        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format2_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String, Cmp_DivisonName As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GSTNO As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        CurY = TMargin
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p1Font)
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Then '---- SANTHA EXPORTS (SOMANUR)
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER WAGES", LMargin, CurY, 2, PrintWidth, p1Font)
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Then '---- PRAKASH TEXTILES
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER WAGES INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
        Else

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1098" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1172" Then '----SRI BANNARIAMMAN TEX OR SRI RAM WEAVING PALLADAM
                Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
                'Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
            End If
        End If

        CurY = CurY + TxtHgt + 3
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = "" : Cmp_DivisonName = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GSTNO = ""

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        '    Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        '    Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        'Else

        If Trim(prn_HdDt.Rows(0).Item("Company_Division_Name").ToString) <> "" Then
            Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
            Cmp_Name = Replace(Cmp_Name, Trim(prn_HdDt.Rows(0).Item("Company_Division_Name").ToString), "")

            Cmp_DivisonName = Trim(prn_HdDt.Rows(0).Item("Company_Division_Name").ToString)

        End If

        Cmp_Name = prn_HdDt.Rows(0).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(0).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(0).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(0).Item("Company_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTNO = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If
        'End If

        CurY = CurY + TxtHgt - 15

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            If Trim(prn_HdDt.Rows(0).Item("Company_logo_Image").ToString) <> "" Then

                If IsDBNull(prn_HdDt.Rows(0).Item("Company_logo_Image")) = False Then

                    Dim imageData As Byte() = DirectCast(prn_HdDt.Rows(0).Item("Company_logo_Image"), Byte())
                    If Not imageData Is Nothing Then
                        Using ms As New MemoryStream(imageData, 0, imageData.Length)
                            ms.Write(imageData, 0, imageData.Length)

                            If imageData.Length > 0 Then

                                '.BackgroundImage = Image.FromStream(ms)

                                e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 10, CurY + 5, 55, 55)
                                'e.Graphics.DrawImage(DirectCast(Image.FromStream(ms), Drawing.Image), LMargin + 10, CurY + 5, 110, 80)
                                ' e.Graphics.DrawImage(DirectCast(pic_IRN_QRCode_Image_forPrinting.BackgroundImage, Drawing.Image), PageWidth - 108, CurY + 10, 90, 90)


                            End If

                        End Using

                    End If

                End If

            End If

            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 5
            If Trim(Cmp_DivisonName) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, Cmp_DivisonName, LMargin, CurY, 2, PrintWidth, pFont)
                CurY = CurY + TxtHgt
            End If
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTNO, LMargin, CurY, 2, PrintWidth, pFont)

            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If

        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
            C2 = 560 ' C1 + ClAr(5) + 70 + 70 + 70
            C3 = 420 'ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 70 + 20
        Else
            C2 = C1 + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 20
            C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 20
        End If


        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        '    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        '    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        '    If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        '    Else
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        '    End If

        'Else
        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Then '---- Sri Sugam Textile (Karumanthampatti)

            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString) <> "" Then
                Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
                Led_Add2 = "PAN NO : " & prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString
            Else
                Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
                Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
            End If

        Else
            Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
            Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        End If

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If

        'End If

        If Val(prn_WagesDontShowToPartyName) = 1 Then
            CurY = CurY + TxtHgt
            'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Prn_In_English_STS = True Then
                Common_Procedures.Print_To_PrintDocument(e, "BILL NO.", LMargin + 10, CurY + 5, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY + 5, 0, 0, pTFont) '---
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then

                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            If Prn_In_English_STS = True Then
                Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + 140 + 10, CurY + 5, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY + 5, 0, 0, pTFont)
            End If
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date")), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)


            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DELIVERY NO", LMargin + C3 - 65, CurY + 5, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C3 - 65, CurY + 5, 0, 0, pTFont)
                End If
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 40, CurY, 0, 0, pFont)
            Else
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "RECEIPT NO", LMargin + C3 - 65, CurY, 0, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C3 - 65, CurY, 0, 0, p1Font)
                End If
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 30, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DELIVERY DATE", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                End If
            Else
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "RECEIPT DATE", LMargin + C2 - 20, CurY + 5, 0, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                End If
            End If

            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 10, CurY, 0, 0, pFont)

            CurY = CurY + 5

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3 - 75, CurY, LMargin + C3 - 75, LnAr(2))


        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, p1Font)



            Common_Procedures.Print_To_PrintDocument(e, "BILL NO ", LMargin + C3 + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, p1Font)


            'p1Font = New Font("TAM_SC_Suvita", 8, FontStyle.Bold)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 40, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 40, CurY, 0, 0, pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC. NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "REC. DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date")), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            End If


            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("P_Dc_No").ToString) <> "" Then

                CurY = CurY + TxtHgt

                Common_Procedures.Print_To_PrintDocument(e, "P.DC.NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("P_Dc_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

            End If





            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, p1Font)
            If Common_Procedures.settings.CustomerCode = "1370" Then
                CurY = CurY + TxtHgt
                p1Font = New Font("Calibri", 9, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "GSTIN : " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_GSTinNo").ToString), LMargin + S1 + 10, CurY, 0, 0, p1Font)

            End If

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2))

        End If

    End Sub

    Private Sub Printing_Format2_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim S1, C1, C2 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0
        Dim pTBFont As Font

        If Trim(UCase(prn_WagesFrmt)) <> "FORMAT-2.1" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1395" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1482" Then '---- SANTHA EXPORTS (SOMANUR)

            For i = NoofDets + 1 To NoofItems_PerPage
                CurY = CurY + TxtHgt
            Next

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
            'CurY = CurY + TxtHgt
            'e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
            LnAr(6) = CurY

            CurY = CurY + 5

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX

                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4)) '---DATE
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, LnAr(4)) '---PAVU I/O
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, LnAr(4)) '---PAVU STOCK
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, LnAr(4)) '---YARN I/O
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, LnAr(4)) '---YARN STOCK
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM I/O
                'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM STOCK
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

            Else

                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))

                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

            End If

        End If

        CurY = CurY + 10

        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
            End If
            Dt1.Clear()

            C1 = ClAr(1) + ClAr(2) + ClAr(3) - 70
            C2 = C1 + ClAr(4) + ClAr(5)

            If Prn_In_English_STS = True Then
                S1 = e.Graphics.MeasureString("YARN :", pFont).Width
            Else
                S1 = e.Graphics.MeasureString("Ë™  :", pTFont).Width '---NOOL
            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then '---- Nithya Textiles (Sedapalayam)

                If Prn_In_English_STS = True Then '-----English

                    Common_Procedures.Print_To_PrintDocument(e, "STOCK DETAILS:- ", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + C2 + 30, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                Else

                    pTBFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTBFont)

                    Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont,, True, PageWidth)


                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "Ë™  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont,, True, PageWidth)

                End If
            Else
                CurY = CurY + TxtHgt
            End If


            If Trim(prn_HdDt.Rows(0).Item("Remarks").ToString) <> "" Then

                CurY = CurY + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

                Common_Procedures.Print_To_PrintDocument(e, "REMARKS : " & prn_HdDt.Rows(0).Item("Remarks").ToString, LMargin + 10, CurY + 5, 0, 0, pFont)

                CurY = CurY + TxtHgt + 10
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            End If


        Else
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If














        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt





        If Prn_In_English_STS = True Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER SIGNATURE", LMargin + 10, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)
        End If

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        'Else
        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        'End If

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        Else
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        'e.Graphics.DrawLine(Pens.Black, 0, 580, 1000, 580)

    End Sub

    Private Sub Printing_Format4(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' common Format with Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim count_val As Single
        Dim yn_Kgs As Double = 0

        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If


        p1Font = New Font("Calibri", 11, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30
            .Right = 50
            .Top = 1 ' 30
            .Bottom = 25 ' 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
        p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then

            ClAr(1) = Val(110) : ClAr(2) = 80 : ClAr(3) = 85 : ClAr(4) = 85 : ClAr(5) = 90 : ClAr(6) = 0 : ClAr(7) = 90 : ClAr(8) = 0 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 140 '285
            C2 = C1 + ClAr(5)  '385

        Else
            ClAr(1) = Val(80) : ClAr(2) = 50 : ClAr(3) = 55 : ClAr(4) = 55 : ClAr(5) = 80 : ClAr(6) = 80 : ClAr(7) = 70 : ClAr(8) = 70 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 40 '285
            C2 = C1 + ClAr(5)  '385

        End If


        '  If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
        TxtHgt = 17
        '  Else
        '  TxtHgt = 17.25 ' 18  ' 18.5
        '  End If

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format4_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                    NoofItems_PerPage = 9
                Else
                    NoofItems_PerPage = 7
                End If


                If prn_PageNo <= 1 Then

                    CurY = CurY + TxtHgt - 10
                    Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                    sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                    bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                    rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                    otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                    '  Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "I Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY, 0, 0, pFont)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    Else
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY, 0, 0, p1Font)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                    pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "II Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    End If
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    ' Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî e†ì˜ ", LMargin + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                        ' Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "H†", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        ' CurY = CurY + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString) <> 0 Then
                            CurY = CurY + TxtHgt
                            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                            pFont = New Font("Calibri", 11, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString) * (prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If
                    End If

                    CurY = CurY + TxtHgt
                    pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è ", LMargin + 10, CurY, 0, 0, p1Font)
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), LMargin + C1 - 10, CurY, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                    p1Font = New Font("Calibri", 10, FontStyle.Bold)
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                        CurY = CurY + TxtHgt

                        'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, "CGST - " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)

                    End If
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        CurY = CurY + TxtHgt
                        'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, "SGST - " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)

                    End If
                    p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

                    'CurY = CurY + TxtHgt
                    'Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è ", LMargin + 10, CurY, 0, 0, pTFont)
                    'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    If Val(rjt) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If



                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "õ‡® õ£ì¬è ", LMargin + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    If Val(otr) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "H®ˆî‹ ", LMargin + 10, CurY, 0, 0, pTFont)

                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "0.00", LMargin + C1 - 10, CurY, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If
                    ' Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY + 5, PageWidth - 10, CurY + 5)


                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "õK H®ˆî‹ ", LMargin + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    '  Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), PageWidth - 10, CurY, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                    End If

                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "Ü†õ£¡v ", LMargin + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Add_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY - 5, PageWidth - 10, CurY - 5)

                    CurY = CurY + 8
                    Common_Procedures.Print_To_PrintDocument(e, "eF ªî£¬è ", LMargin + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                    W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", pFont).Width
                    W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", pFont).Width

                    count_val = 0
                    count_val = Thiri_ToKgs_Count(Trim((prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString())))
                    yn_Kgs = 0

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString) <> 0 Then
                        ' yn_Kgs = Format(count_val * 11 / 50 * .Rows(.CurrentRow.Index).Cells(6).Value, "##########0.000")
                        yn_Kgs = Format((Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString) / count_val) * 50 / 11, "##########0.000")

                    End If

                    'Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    'Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ( FK ) ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + W1 + 50, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾( A«ô£ )", LMargin + C1 + 230, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & Val(yn_Kgs), PageWidth - 10, CurY, 1, 0, pFont)

                    'Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY, 0, 0, pTFont)
                    'Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY, 0, 0, pFont)

                    CurY = CurY + TxtHgt + 8

                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    LnAr(4) = CurY
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(3))

                Else
                    NoofItems_PerPage = 15

                End If




                '    CurY = CurY + TxtHgt - 10
                '    Common_Procedures.Print_To_PrintDocument(e, "«îF", LMargin, CurY, 2, ClAr(1), pTFont)
                '    Common_Procedures.Print_To_PrintDocument(e, "ªï‹.", LMargin + ClAr(1), CurY, 2, ClAr(2), pTFont)
                '    Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pTFont)
                '    Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pTFont)
                '    Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pTFont)
                '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                '        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pTFont)
                '    End If
                '    Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pTFont)
                '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                '        Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pTFont)
                '    End If
                '    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pTFont)
                '    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pTFont)

                '    CurY = CurY + TxtHgt
                '    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                '    LnAr(5) = CurY


                '    NoofDets = 0

                '    CurY = CurY - 10

                '    If prn_DetDt.Rows.Count > 0 Then

                '        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                '            If NoofDets >= NoofItems_PerPage Then

                '                CurY = CurY + TxtHgt

                '                Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 10, CurY, 1, 0, pFont)

                '                NoofDets = NoofDets + 1

                '                If Val(Common_Procedures.settings.WeaverWages_Print_NoNeed_2nd_Page) = 1 Then
                '                    Printing_Format4_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                '                    GoTo LOOP2

                '                Else

                '                    Printing_Format4_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                '                    e.HasMorePages = True

                '                    Return

                '                End If

                '            End If

                '            prn_Tot_EBeam_Stk = prn_Tot_EBeam_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)
                '            prn_Tot_Pavu_Stk = prn_Tot_Pavu_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)
                '            prn_Tot_Yarn_Stk = prn_Tot_Yarn_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)
                '            prn_Tot_Amt_Bal = prn_Tot_Amt_Bal + Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)

                '            CurY = CurY + TxtHgt
                '            If IsDate(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString) = True Then
                '                Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString), "dd-MM-yy").ToString, LMargin + 5, CurY, 0, 0, pFont)
                '            Else

                '                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                '                    Common_Procedures.Print_To_PrintDocument(e, "Opening", LMargin + 5, CurY, 0, 0, pFont)
                '                End If

                '            End If

                '            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                '            If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                '                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                '                Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                '            End If
                '            If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) <> 0 Then
                '                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                '                    If prn_DetIndx <> 0 Then
                '                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                '                    End If
                '                Else

                '                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                '                End If
                '                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                '                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                '                End If
                '            End If
                '            If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) <> 0 Then
                '                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                '                    If prn_DetIndx <> 0 Then
                '                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                '                    End If
                '                Else

                '                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                '                End If

                '                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                '                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                '                End If
                '            End If
                '            If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) <> 0 Then
                '                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 5, CurY, 1, 0, pFont)
                '                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Amt_Bal), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
                '            End If

                '            NoofDets = NoofDets + 1

                '            prn_DetIndx = prn_DetIndx + 1

                '        Loop

                '    End If

            End If

LOOP1:
            CurY = CurY + TxtHgt

            Printing_Format4_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

LOOP2:
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True

        Else
            e.HasMorePages = False

        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Function Thiri_ToKgs_Count(ByVal vCloth_Name As String) As Integer

        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim count_val As Single
        Dim CntID As Integer
        Dim yn_Kgs As Double = 0

        CntID = Val(Common_Procedures.get_FieldValue(con, "Cloth_Head", "Cloth_WeftCount_IdNo", "(Cloth_Name = '" & Trim(vCloth_Name) & "')", , ))

        count_val = 0

        'If Common_Procedures.settings.Weaver_YarnStock_InThiri_Status = 1 Then

        Da = New SqlClient.SqlDataAdapter("select (Resultant_Count) from Count_Head where count_idno = " & Str(Val(CntID)), con)
        Da.Fill(Dt)

        If Dt.Rows.Count > 0 Then
            If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                count_val = Dt.Rows(0).Item("Resultant_Count").ToString
            End If
        End If

        Dt.Clear()
        Dt.Dispose()
        Da.Dispose()

        Thiri_ToKgs_Count = count_val

    End Function

    Private Sub Printing_Format4_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = ""

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
                Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_TinNo").ToString) <> "" Then
                Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_TinNo").ToString
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_CstNo").ToString) <> "" Then
                Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_CstNo").ToString
            End If

        End If

        CurY = CurY + TxtHgt - 15

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)

            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
            C2 = 560 ' C1 + ClAr(5) + 70 + 70 + 70
            C3 = 420 'ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 70 + 20
        Else
            C2 = C1 + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8)
            C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6)
        End If


        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF  ", pFont).Width

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
            Else
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
            End If

        Else
            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
            Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
            Else
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
            End If

        End If

        If Val(prn_WagesDontShowToPartyName) = 1 Then
            CurY = CurY + TxtHgt
            'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY + 5, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)


            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C3 - 65, CurY + 5, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 40, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C3 - 65, CurY, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 30, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
            End If

            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 10, CurY, 0, 0, pFont)

            CurY = CurY + 5

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3 - 75, CurY, LMargin + C3 - 75, LnAr(2))


        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, p1Font)

            p1Font = New Font("TAM_SC_Suvita", 8, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + C2 + 10, CurY + 5, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add, LMargin + S1 + 10, CurY, 0, 0, p1Font)

            p1Font = New Font("TAM_SC_Suvita", 8, FontStyle.Bold)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 40, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 + 10, CurY + 5, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 40, CurY, 0, 0, pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 + 10, CurY + 5, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            End If


            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2))

        End If

    End Sub

    Private Sub Printing_Format4_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim I As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim S1, C1, C2 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0
        Dim prn_Tot_Yarn_StkSumry_Kg As String = ""
        Dim Count_Val As Double = 0
        Dim Yn_Kg As Double = 0
        Dim ItmNm1 As String, ItmNm2 As String
        Dim ItmNm3 As String, ItmNm4 As String

        'For i = NoofDets + 1 To NoofItems_PerPage
        '    CurY = CurY + TxtHgt
        'Next

        ' e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        '  LnAr(6) = CurY

        'CurY = CurY + 5

        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        CurY = CurY + 10

        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & "  " & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & "  :  " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ",  ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
                For j = 0 To Dt1.Rows.Count - 1
                    Yn_Kg = 0
                    Count_Val = Thiri_ToKgs_Count(Trim((prn_HdDt.Rows(0).Item("Cloth_Name").ToString())))
                    If Val(Dt1.Rows(j).Item("YarnWgt").ToString) <> 0 Then

                        Yn_Kg = Format((Val(Dt1.Rows(j).Item("YarnWgt").ToString) / Count_Val) * 50 / 11, "##########0.000")

                    End If

                    prn_Tot_Yarn_StkSumry_Kg = Trim(prn_Tot_Yarn_StkSumry_Kg) & IIf(Trim(prn_Tot_Yarn_StkSumry_Kg) <> "", ",  ", "") & Dt1.Rows(j).Item("CountName").ToString & " : " & Yn_Kg
                Next

            End If
            Dt1.Clear()

            C1 = ClAr(1) + ClAr(2) + ClAr(3) - 40
            C2 = C1 + ClAr(4) + ClAr(5)

            S1 = e.Graphics.MeasureString("Ë™  :  ", pFont).Width
            pTFont = New Font("TAM_SC_Suvita", 13, FontStyle.Regular)
            pFont = New Font("Calibri", 12, FontStyle.Regular)

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then '---- Nithya Textiles (Sedapalayam)

                Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTFont)

                Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                CurY = CurY + TxtHgt + 5

                Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                CurY = CurY + TxtHgt + 5

                ItmNm1 = Trim(prn_Tot_Pavu_StkSumry)
                ItmNm2 = ""
                If Len(ItmNm1) > 90 Then
                    For I = 90 To 1 Step -1
                        If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                    Next I
                    If I = 0 Then I = 90
                    ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                    ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                End If

                ItmNm3 = Trim(ItmNm2)
                ItmNm4 = ""
                If Len(ItmNm3) > 100 Then
                    For I = 100 To 1 Step -1
                        If Mid$(Trim(ItmNm3), I, 1) = " " Or Mid$(Trim(ItmNm3), I, 1) = "," Or Mid$(Trim(ItmNm3), I, 1) = "." Or Mid$(Trim(ItmNm3), I, 1) = "-" Or Mid$(Trim(ItmNm3), I, 1) = "/" Or Mid$(Trim(ItmNm3), I, 1) = "_" Or Mid$(Trim(ItmNm3), I, 1) = "(" Or Mid$(Trim(ItmNm3), I, 1) = ")" Or Mid$(Trim(ItmNm3), I, 1) = "\" Or Mid$(Trim(ItmNm3), I, 1) = "[" Or Mid$(Trim(ItmNm3), I, 1) = "]" Or Mid$(Trim(ItmNm3), I, 1) = "{" Or Mid$(Trim(ItmNm3), I, 1) = "}" Then Exit For
                    Next I
                    If I = 0 Then I = 100
                    ItmNm4 = Microsoft.VisualBasic.Right(Trim(ItmNm3), Len(ItmNm3) - I)
                    ItmNm3 = Microsoft.VisualBasic.Left(Trim(ItmNm3), I - 1)
                End If

                Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & ItmNm1, LMargin + S1 + 20, CurY, 0, 0, pFont)

                If Trim(ItmNm3) <> "" Then
                    CurY = CurY + TxtHgt + 5
                    Common_Procedures.Print_To_PrintDocument(e, ItmNm3, LMargin + 10, CurY, 0, 0, pFont)
                End If

                If Trim(ItmNm4) <> "" Then
                    CurY = CurY + TxtHgt + 5
                    Common_Procedures.Print_To_PrintDocument(e, ItmNm4, LMargin + 10, CurY, 0, 0, pFont)
                End If

                CurY = CurY + TxtHgt + 5

                Common_Procedures.Print_To_PrintDocument(e, "Ë™ ( FK ) ", LMargin + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + S1 + 70, CurY, 0, 0, pFont)

                CurY = CurY + TxtHgt + 5
                Common_Procedures.Print_To_PrintDocument(e, "Ë™( A«ô£ ) ", LMargin + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry_Kg, LMargin + S1 + 70, CurY, 0, 0, pFont)

            Else
                CurY = CurY + TxtHgt + 5
            End If

        Else
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If

        CurY = CurY + TxtHgt + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "(" & Trim(Common_Procedures.User.Name) & ")", LMargin + 300, CurY, 0, 0, pFont)

        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, "Prepared By ", LMargin + 300, CurY, 0, 0, pFont)
        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        End If

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        Else


            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub Printing_Format3(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' Simple Format without Stock
        Dim pFont As Font
        Dim p1Font As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1, C2, C3, C4, C5, W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single


        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If


        p1Font = New Font("Calibri", 10, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10 ' 30
            .Right = 60 ' 50
            .Top = 30
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'If PrintDocument1.DefaultPageSettings.Landscape = True Then
        '    With PrintDocument1.DefaultPageSettings.PaperSize
        '        PrintWidth = .Height - TMargin - BMargin
        '        PrintHeight = .Width - RMargin - LMargin
        '        PageWidth = .Height - TMargin
        '        PageHeight = .Width - RMargin
        '    End With
        'End If


        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 50 : ClAr(4) = 50 : ClAr(5) = 50
        ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))


        C1 = ClAr(1) + ClAr(2)
        C2 = C1 + ClAr(3) + ClAr(4)
        C3 = C2 + ClAr(5)
        C4 = C3 + ClAr(6)
        C5 = C4 + ClAr(7)

        TxtHgt = 18

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)
        p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

        Try

            prn_Prev_HeadIndx = prn_HeadIndx

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format3_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1

                CurY = CurY + TxtHgt
                pFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                CurY = CurY + TxtHgt
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1094" Then '---- MS textiles
                    Common_Procedures.Print_To_PrintDocument(e, "õó¾ e†ì˜ ", LMargin + 10, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY, 0, 0, p1Font)
                End If
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)


                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                CurY = CurY + TxtHgt
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then '---- Asia Textiles (Tirupur)
                    pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY, 0, 0, p1Font)
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                    pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                End If

                CurY = CurY + TxtHgt
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è ", LMargin + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)



                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) <> 0 Then
                    pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
                        Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    Else
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "ªê‚AƒÜì£v", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                    End If
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                End If

                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt

                    'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, "CGST - " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)

                End If
                pFont = New Font("Calibri", 10, FontStyle.Regular)
                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt
                    'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, "SGST - " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY - 3, 0, 0, p1Font)
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "########0.00"), LMargin + C1 - 10, CurY, 1, 0, pFont)

                End If

                p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

                CurY = CurY + TxtHgt
                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then '---- Asia Textiles (Tirupur)
                        p1Font = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "V.V", LMargin + 10, CurY, 0, 0, p1Font)
                        'Common_Procedures.Print_To_PrintDocument(e, "«õ¡ ", LMargin + 10, CurY, 0, 0, pFont)

                    Else

                        Common_Procedures.Print_To_PrintDocument(e, "õ‡® õ£ì¬è ", LMargin + 10, CurY, 0, 0, p1Font)

                    End If
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                End If
                p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) <> 0 Then

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then '---- Asia Textiles (Tirupur)
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                End If

                CurY = CurY + TxtHgt

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then '---- Asia Textiles (Tirupur)

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v H®ˆî‹ ", LMargin + 10, CurY, 0, 0, p1Font)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "H®ˆî‹ ", LMargin + 10, CurY, 0, 0, p1Font)
                        End If
                        ' Common_Procedures.Print_To_PrintDocument(e, "H®ˆî‹ ", LMargin + 10, CurY, 0, 0, p1Font)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If

                End If

                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)
                p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)
                CurY = CurY + TxtHgt
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then '---- Asia Textiles (Tirupur)
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "õK H®ˆî‹ ", LMargin + 10, CurY, 0, 0, p1Font)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If
                End If
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)

                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)


                CurY = CurY + TxtHgt
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Add_Amount").ToString) <> 0 Then
                        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "Ü†õ£¡v ", LMargin + 10, CurY, 0, 0, p1Font)
                        pFont = New Font("Calibri", 11, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Add_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)
                    End If
                End If

                CurY = CurY + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)

                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)

                CurY = CurY + 10
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è ", LMargin + 10, CurY, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "eF ªî£¬è ", LMargin + 10, CurY, 0, 0, p1Font)

                End If
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)

                W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", p1Font).Width
                W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", p1Font).Width

                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 40, CurY, 0, 0, pFont)
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)

                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY, 0, 0, pFont)

                NoofDets = NoofDets + 1

                prn_DetIndx = prn_DetIndx + 1

                CurY = CurY + TxtHgt + 10

                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))

            End If

            Printing_Format3_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        prn_Prev_HeadIndx = prn_HeadIndx
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True
        Else
            e.HasMorePages = False
        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format3_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = ""

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
                Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_TinNo").ToString) <> "" Then
                Cmp_TinNo = "TIN NO.: " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_TinNo").ToString
            End If
            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_CstNo").ToString) <> "" Then
                Cmp_CstNo = "CST NO.: " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_CstNo").ToString
            End If

        End If


        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)

            CurY = CurY + TxtHgt - 10

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                p1Font = New Font("Calibri", 11, FontStyle.Regular)
            Else
                p1Font = New Font("Calibri", 18, FontStyle.Bold)
            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                Common_Procedures.Print_To_PrintDocument(e, "From", LMargin + 10, CurY, 0, 0, p1Font)
            End If

            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                p1Font = New Font("Calibri", 9, FontStyle.Regular)
            Else
                p1Font = New Font("Calibri", 11, FontStyle.Regular)
            End If

            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, p1Font)
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, p1Font)
            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
                CurY = CurY + TxtHgt - 1
                Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, p1Font)
                CurY = CurY + TxtHgt - 1
                Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, p1Font)
            End If

            CurY = CurY + strHeight
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        Else
            TxtHgt = TxtHgt + 2

        End If
        LnAr(2) = CurY

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
            Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
            Else
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
            End If

        Else
            Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
            Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
            Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
            ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
            Else
                Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
            End If

        End If

        C1 = ClAr(1) + ClAr(2) + 75
        C2 = C1 + ClAr(4) + 100
        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        If Val(prn_WagesDontShowToPartyName) = 1 Then

            CurY = CurY + TxtHgt
            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY, 0, 0, p1Font)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY, 0, 0, p1Font)
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ": " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 40, CurY, 0, 0, pFont)

            Else
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ": " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

            End If

            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            End If
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ": " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + 5

        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, pFont)
            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
            Else
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
            End If
            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            pFont = New Font("Calibri", 11, FontStyle.Regular)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, pFont)

            pFont = New Font("Calibri", 11, FontStyle.Regular)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, pFont)


            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 40, CurY, 0, 0, pFont)
            Else
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
            End If

            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            End If
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

    End Sub

    Private Sub Printing_Format3_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim pTFont As Font
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim k As Integer = 0
        Dim S1, C1, C2, C5 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then

        '    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        '    e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        '    e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        'End If

        'CurY = CurY + TxtHgt
        'CurY = CurY + TxtHgt


        'CurY = CurY + 10
        'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
        'p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)


        'Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, p1Font)

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        'Else
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        'End If



        'If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
        '    p1Font = New Font("Calibri", 12, FontStyle.Bold)
        '    Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, p1Font)

        'Else
        '    p1Font = New Font("Calibri", 12, FontStyle.Bold)
        '    Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        'End If

        'CurY = CurY + TxtHgt + 10

        'e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        'e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        'e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)
        C5 = ClAr(1) + ClAr(2) - 10

        CurY = CurY + 10
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
            End If
            Dt1.Clear()


            C1 = ClAr(1) + ClAr(2) + ClAr(3)
            C2 = C1 + ClAr(4) + ClAr(5)

            S1 = e.Graphics.MeasureString("Ë™  :", pFont).Width

            Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTFont)

            Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C5 + 10, CurY, 0, 0, pTFont)
            Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C5 + S1 + 20, CurY, 0, 0, pFont)

            Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
            Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt

            Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

            Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + C5 + 10, CurY, 0, 0, pTFont)
            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C5 + S1 + 20, CurY, 0, 0, pFont)


            CurY = CurY + TxtHgt

            Common_Procedures.Print_To_PrintDocument(e, "Ë™  ", LMargin + C5 + 10, CurY, 0, 0, pTFont)
            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C5 + S1 + 20, CurY, 0, 0, pFont)

        Else
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)

        If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Else
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        End If

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        Else
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)
    End Sub

    Private Sub Weaver_AllStock_Ledger(ByVal Led_IdNo As Integer, ByVal Wages_Date As Date)
        Dim cmd As New SqlClient.SqlCommand
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim vDate_To As Date, vDate_From As Date
        Dim CompIDCondt As String
        Dim SqlCondt As String = ""
        Dim vWeavWagSQL_Cond As String = ""

        CompIDCondt = "(a.company_idno = " & Str(Val(lbl_Company.Tag)) & ")"
        If Common_Procedures.settings.EntrySelection_Combine_AllCompany = 1 Then
            CompIDCondt = ""
            If Trim(UCase(Common_Procedures.User.Type)) = "ACCOUNT" Then
                CompIDCondt = "(tZ.Company_Type <> 'UNACCOUNT')"
            End If
        End If

        cmd.Connection = con
        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@WeaWageDate", Wages_Date.Date)

        vDate_From = Common_Procedures.Company_FromDate
        vDate_To = Wages_Date

        cmd.CommandText = "select max(a.weaver_wages_date) from Weaver_Wages_Head a INNER JOIN Company_Head tZ ON a.company_idno <> 0 and a.company_idno = tZ.company_idno Where " & Trim(CompIDCondt) & IIf(Trim(CompIDCondt) <> "", " and ", "") & " a.ledger_idno = " & Str(Val(Led_IdNo)) & " and a.Weaver_Wages_Date < @WeaWageDate"
        Da1 = New SqlClient.SqlDataAdapter(cmd)
        Dt1 = New DataTable
        Da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                If IsDate(Dt1.Rows(0)(0).ToString) = True Then
                    vDate_From = Dt1.Rows(0)(0).ToString
                    vDate_From = DateAdd("d", 1, vDate_From.Date)
                End If
            End If
        End If

        Dt1.Clear()

        cmd.Connection = con

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempTable) & ""
        cmd.ExecuteNonQuery()

        cmd.Parameters.Clear()
        cmd.Parameters.AddWithValue("@WeaWageDate", Wages_Date.Date)
        cmd.Parameters.AddWithValue("@fromdate", vDate_From.Date)
        cmd.Parameters.AddWithValue("@todate", vDate_To.Date)

        SqlCondt = Trim(CompIDCondt)
        If Val(Led_IdNo) <> 0 Then
            SqlCondt = Trim(SqlCondt) & IIf(Trim(SqlCondt) <> "", " and ", "") & " tP.Ledger_IdNo = " & Str(Val(Led_IdNo))
        End If

        '-------- Empty Beam,  Empty Bag,  Empty Cone

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1) Select (a.Empty_Beam+a.Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date < @fromdate and (a.Empty_Beam <> 0 or a.Pavu_Beam <> 0 )"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1) Select -1*(a.Empty_Beam+Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date < @fromdate and (a.Empty_Beam <> 0 or a.Pavu_Beam <> 0)"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, name5, name6, Int6) Select 0, 'Opening', 'BEAM', sum(Int1) from " & Trim(Common_Procedures.ReportTempSubTable) & " having sum(Int1) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6, Int6) Select 1, a.Reference_Date, a.Reference_Code, a.Reference_No, a.For_OrderBy, a.Party_Bill_No, tP.Ledger_Name, a.Particulars, 'BEAM', (a.Empty_Beam+a.Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date between @fromdate and @todate and (a.Empty_Beam <> 0 or a.Pavu_Beam <> 0 )"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6, Int6) Select 2, a.Reference_Date, a.Reference_Code, a.Reference_No, a.For_OrderBy, a.Party_Bill_No, tP.Ledger_Name, a.Particulars, 'BEAM', -1*abs(a.Empty_Beam+a.Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date between @fromdate and @todate and (a.Empty_Beam <> 0 or a.Pavu_Beam <> 0)"
        cmd.ExecuteNonQuery()

        '-------- Pavu 

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(name1, meters1) Select c.endscount_name, a.Meters from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo <> 0 and a.EndsCount_IdNo = c.EndsCount_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date < @fromdate and a.Meters <> 0"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(name1, meters1) Select c.endscount_name, -1*a.Meters from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo <> 0 and a.EndsCount_IdNo = c.EndsCount_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date < @fromdate and a.Meters <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, name5, name6, name7, meters6) Select 0, 'Opening', 'PAVU', name1, sum(meters1) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by name1 having sum(meters1) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6, name7, meters6) Select 1, a.Reference_Date, a.Reference_Code, a.Reference_No, a.For_OrderBy, a.Party_Bill_No, tP.Ledger_Name, a.Particulars, 'PAVU', c.endscount_name, abs(a.Meters) from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo <> 0 and a.EndsCount_IdNo = c.EndsCount_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date between @fromdate and @todate and a.Meters <> 0 "
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6, name7, meters6) Select 2, a.Reference_Date, a.Reference_Code, a.Reference_No, a.For_OrderBy, a.Party_Bill_No, tP.Ledger_Name, a.Particulars, 'PAVU', c.endscount_name, -1*abs(a.Meters) from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo <> 0 and a.EndsCount_IdNo = c.EndsCount_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date between @fromdate and @todate and a.Meters <> 0 "
        cmd.ExecuteNonQuery()

        '-------- Excess/Short Meters
        cmd.CommandText = "update " & Trim(Common_Procedures.ReportTempTable) & " set Meters8 = c.Excess_Short from " & Trim(Common_Procedures.ReportTempTable) & " b, Weaver_Cloth_Receipt_Head a, Weaver_Wages_Head c, Company_Head tZ, Ledger_Head tP WHERE " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " b.name1 LIKE 'WCLRC-%' and b.name1 = 'WCLRC-' + a.Weaver_ClothReceipt_Code and a.Weaver_Wages_Code = c.Weaver_Wages_Code and b.meters6 < 0 and a.Weaver_ClothReceipt_Date between @fromdate and @todate and a.company_idno = tZ.company_idno and a.ledger_idno = tP.ledger_idno"
        cmd.ExecuteNonQuery()

        '-------- Updating endscount group name
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Then '---- SANTHA EXPORTS (SOMANUR)
            cmd.CommandText = "update " & Trim(Common_Procedures.ReportTempTable) & " set name7 = c.EndsCount_Name from " & Trim(Common_Procedures.ReportTempTable) & " a, EndsCount_Head b, EndsCount_Head c where a.name7 <> '' and b.EndsCount_Stockunder_IdNo <> 0 and a.name7 = b.EndsCount_Name and b.EndsCount_Stockunder_IdNo = c.EndsCount_IdNo"
            cmd.ExecuteNonQuery()
        End If



        '-------- Yarn

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(name1, weight1) Select c.count_name, a.Weight from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo <> 0 and a.Count_IdNo = c.Count_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date < @fromdate and a.Weight <> 0"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(name1, weight1) Select c.count_name, -1*a.Weight from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo <> 0 and a.Count_IdNo = c.Count_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date < @fromdate and a.Weight <> 0"
        cmd.ExecuteNonQuery()



        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, name5, name6, name7, weight1) Select 0, 'Opening', 'YARN', name1, sum(Weight1) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by name1 having sum(Weight1) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6, name7, weight1) Select 1, a.Reference_Date, a.Reference_Code, a.Reference_No, a.For_OrderBy, a.Party_Bill_No, tP.Ledger_Name, a.Particulars, 'YARN', c.count_name, abs(a.Weight) from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo <> 0 and a.Count_IdNo = c.Count_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date between @fromdate and @todate and a.Weight <> 0 "
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6, name7, weight1) Select 2, a.Reference_Date, a.Reference_Code, a.Reference_No, a.For_OrderBy, a.Party_Bill_No, tP.Ledger_Name, a.Particulars, 'YARN', c.count_name, -1*abs(a.Weight) from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo <> 0 and a.Count_IdNo = c.Count_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Reference_Date between @fromdate and @todate and a.Weight <> 0 "
        cmd.ExecuteNonQuery()

        '-------- Updating count group name
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1395" Then '---- SANTHA EXPORTS (SOMANUR)
            cmd.CommandText = "update " & Trim(Common_Procedures.ReportTempTable) & " set name7 = c.Count_Name from " & Trim(Common_Procedures.ReportTempTable) & " a, Count_Head b, Count_Head c where a.name7 <> '' and b.Count_StockUnder_IdNo <> 0 and a.name7 = b.Count_Name and b.Count_StockUnder_IdNo = c.Count_IdNo"
            cmd.ExecuteNonQuery()
        End If

        '-------- Amount

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, name5, name6, Currency1 ) Select 0, 'Opening', 'AMOUNT', sum(a.Voucher_Amount)  from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo LEFT OUTER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Voucher_Date < @fromdate and a.Voucher_Amount <> 0"
        cmd.ExecuteNonQuery()

        vWeavWagSQL_Cond = ""
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            vWeavWagSQL_Cond = "(a.Entry_Identification NOT LIKE 'GWWAG-%' and a.Entry_Identification NOT LIKE 'GWTDS-%')"
            cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6, Currency1) Select 11, a.Voucher_Date, a.Voucher_Code, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name, replace(left(a.Entry_Identification, len(a.Entry_Identification)-6),'-' + cast(a.Company_Idno as varchar) + '-','-') as Particularss, 'AMOUNT', abs(eW.Net_Amount) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo INNER JOIN Weaver_Wages_Head eW ON a.Entry_Identification = eW.Weaver_Wages_Code Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate and a.Voucher_Amount > 0 and a.Entry_Identification LIKE 'GWWAG-%'"
            cmd.ExecuteNonQuery()
        End If

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6,Name10 , Currency1) Select 12, a.Voucher_Date, a.Voucher_Code, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name, replace(left(a.Entry_Identification, len(a.Entry_Identification)-6),'-' + cast(a.Company_Idno as varchar) + '-','-') as Particularss, 'AMOUNT',a.Narration , -1*abs(a.Voucher_Amount) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & vWeavWagSQL_Cond & IIf(Trim(vWeavWagSQL_Cond) <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate and a.Voucher_Amount < 0 "
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(int3, Date1, name1, name2, meters1, name3, name4, name5, name6,name10 , Currency1) Select 11, a.Voucher_Date, a.Voucher_Code, a.Voucher_No, a.For_OrderBy, a.Voucher_No, tP.Ledger_Name, replace(left(a.Entry_Identification, len(a.Entry_Identification)-6),'-' + cast(a.Company_Idno as varchar) + '-','-') as Particularss, 'AMOUNT',a.Narration , abs(a.Voucher_Amount) from Voucher_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo <> 0 and a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.Ledger_IdNo <> 0 and a.Ledger_IdNo = tP.Ledger_IdNo Where " & SqlCondt & IIf(Trim(SqlCondt) <> "", " and ", "") & vWeavWagSQL_Cond & IIf(Trim(vWeavWagSQL_Cond) <> "", " and ", "") & " a.Voucher_Date between @fromdate and @todate and a.Voucher_Amount > 0 "
        cmd.ExecuteNonQuery()

    End Sub

    Private Sub btn_Print_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Print.Click
        Common_Procedures.Print_OR_Preview_Status = 1
        print_record()
    End Sub

    Private Sub cbo_Filter_PartyName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Filter_PartyName.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Ledger_AlaisHead", "Ledger_DisplayName", "(ledger_type = 'WEAVER'  or Ledger_Type = 'GODOWN' or Show_In_All_Entry = 1 )", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_Filter_PartyName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Filter_PartyName.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Filter_PartyName, dtp_Filter_ToDate, cbo_Filter_CountName, "Ledger_AlaisHead", "Ledger_DisplayName", "(ledger_type = 'WEAVER'  or Ledger_Type = 'GODOWN' or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_Filter_PartyName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Filter_PartyName.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Filter_PartyName, cbo_Filter_CountName, "Ledger_AlaisHead", "Ledger_DisplayName", "(ledger_type = 'WEAVER'  or Ledger_Type = 'GODOWN' or Show_In_All_Entry = 1)", "(Ledger_idno = 0)")
    End Sub

    Private Sub cbo_Filter_CountName_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Filter_CountName.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "Count_Head", "Count_Name", "", "(Count_IdNo = 0)")
    End Sub

    Private Sub cbo_Filter_CountName_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Filter_CountName.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Filter_CountName, cbo_Filter_PartyName, Nothing, "Count_Head", "Count_Name", "", "(Count_IdNo = 0)")

        If e.KeyValue = 40 Or (e.Control = True And e.KeyValue = 40) Then
            If Common_Procedures.settings.CustomerCode = "1249" Then
                cbo_Verified_Sts.Focus()
            Else
                If txt_filter_LotNo.Visible Then
                    txt_filter_LotNo.Focus()
                Else
                    btn_Filter_Show.Focus()
                End If


            End If

        End If
    End Sub

    Private Sub cbo_Filter_CountName_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Filter_CountName.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Filter_CountName, Nothing, "Count_Head", "Count_Name", "", "(Count_IdNo = 0)")
        If Asc(e.KeyChar) = 13 Then
            If Common_Procedures.settings.CustomerCode = "1249" Then
                cbo_Verified_Sts.Focus()
            Else
                If txt_filter_LotNo.Visible Then
                    txt_filter_LotNo.Focus()
                Else
                    btn_Filter_Show.Focus()
                End If

            End If
        End If
    End Sub


    Private Sub cbo_Verified_Sts_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Verified_Sts.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "", "", "", "")

    End Sub
    Private Sub cbo_Verified_Sts_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Verified_Sts.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Verified_Sts, cbo_Filter_CountName, btn_Filter_Show, "", "", "", "")
    End Sub

    Private Sub cbo_Verified_Sts_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Verified_Sts.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Verified_Sts, btn_Filter_Show, "", "", "", "")
    End Sub


    Private Sub dgv_Filter_Details_CellDoubleClick1(ByVal sender As Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgv_Filter_Details.CellDoubleClick
        Open_FilterEntry()
    End Sub

    Private Sub dgv_Filter_Details_KeyDown1(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgv_Filter_Details.KeyDown
        If e.KeyCode = 13 Then
            Open_FilterEntry()
        End If
    End Sub

    Private Sub Open_FilterEntry()
        Dim movno As String

        On Error Resume Next

        movno = Trim(dgv_Filter_Details.CurrentRow.Cells(1).Value)

        If Val(movno) <> 0 Then
            Filter_Status = True
            Filter_RowNo = dgv_Filter_Details.CurrentRow.Index
            move_record(movno)
            pnl_Back.Enabled = True
            pnl_Filter.Visible = False
        End If

    End Sub

    Private Sub dgtxt_Details_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgtxt_Details.KeyUp
        If e.Control = True And UCase(Chr(e.KeyCode)) = "D" Then
            dgv_Details_KeyUp(sender, e)
        End If
    End Sub

    Private Sub btn_Cancel_PrintOption_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Cancel_PrintOption.Click
        btn_Close_PrintOption_Click(sender, e)
    End Sub

    Private Sub btn_Close_PrintOption_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_PrintOption.Click
        pnl_Back.Enabled = True
        pnl_PrintOption.Visible = False
    End Sub

    Private Sub btn_Print_SimpleFormat_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_SimpleFormat.Click

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1116" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1380" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1446" Then '---- St.LOURDU MATHA TEX (Somanur)
            prn_WagesFrmt = "FORMAT-4"
        Else
            prn_WagesFrmt = "FORMAT-2"
        End If

        'prn_WagesFrmt = "FORMAT-2"

        prn_WagesDontShowToPartyName = 0

        txt_PrintRange_FromNo.Text = prn_FromNo
        txt_PrintRange_ToNo.Text = prn_ToNo

        msk_PrintRange_DateFrom.Text = msk_Date.Text
        msk_PrintRange_DateTo.Text = msk_Date.Text
        msk_PrintRange_DateFrom.Enabled = False
        msk_PrintRange_DateTo.Enabled = False
        dtp_PrintRange_DateFrom.Enabled = False
        dtp_PrintRange_DateTo.Enabled = False

        pnl_PrintRange.Visible = True
        pnl_Back.Enabled = False
        pnl_PrintOption.Visible = False

        If txt_PrintRange_FromNo.Enabled Then txt_PrintRange_FromNo.Focus()

    End Sub

    Private Sub btn_Print_WithGST_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_WithGST.Click

        prn_WagesFrmt = "FORMAT-1"
        Prn_FrghtAmt_STS = True

        prn_WagesDontShowToPartyName = 1
        'Debug.Print(prn_Wages_Prt_WeaverName_IN_Heading)

        txt_PrintRange_FromNo.Text = prn_FromNo
        txt_PrintRange_ToNo.Text = prn_ToNo

        msk_PrintRange_DateFrom.Text = msk_Date.Text
        msk_PrintRange_DateTo.Text = msk_Date.Text
        msk_PrintRange_DateFrom.Enabled = False
        msk_PrintRange_DateTo.Enabled = False
        dtp_PrintRange_DateFrom.Enabled = False
        dtp_PrintRange_DateTo.Enabled = False

        pnl_PrintRange.Visible = True
        pnl_Back.Enabled = False
        pnl_PrintOption.Visible = False

        If txt_PrintRange_FromNo.Enabled Then txt_PrintRange_FromNo.Focus()

    End Sub

    Private Sub btn_Print_Simple_WithName_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_Simple_WithName.Click
        prn_WagesFrmt = "FORMAT-2"
        prn_WagesDontShowToPartyName = 0

        txt_PrintRange_FromNo.Text = prn_FromNo
        txt_PrintRange_ToNo.Text = prn_ToNo

        msk_PrintRange_DateFrom.Text = msk_Date.Text
        msk_PrintRange_DateTo.Text = msk_Date.Text
        msk_PrintRange_DateFrom.Enabled = False
        msk_PrintRange_DateTo.Enabled = False
        dtp_PrintRange_DateFrom.Enabled = False
        dtp_PrintRange_DateTo.Enabled = False

        pnl_PrintRange.Visible = True
        pnl_Back.Enabled = False
        pnl_PrintOption.Visible = False

        If txt_PrintRange_FromNo.Enabled Then txt_PrintRange_FromNo.Focus()

    End Sub

    Private Sub btn_Print_Simple_WithOutName_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_Simple_WithOutName.Click
        prn_WagesFrmt = "FORMAT-2"
        prn_WagesDontShowToPartyName = 1

        txt_PrintRange_FromNo.Text = prn_FromNo
        txt_PrintRange_ToNo.Text = prn_ToNo

        msk_PrintRange_DateFrom.Text = msk_Date.Text
        msk_PrintRange_DateTo.Text = msk_Date.Text
        msk_PrintRange_DateFrom.Enabled = False
        msk_PrintRange_DateTo.Enabled = False
        dtp_PrintRange_DateFrom.Enabled = False
        dtp_PrintRange_DateTo.Enabled = False

        pnl_PrintRange.Visible = True
        pnl_Back.Enabled = False
        pnl_PrintOption.Visible = False

        If txt_PrintRange_FromNo.Enabled Then txt_PrintRange_FromNo.Focus()

    End Sub

    Private Sub btn_Insert_WeaverBillNo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Insert_WeaverBillNo.Click
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim movno As String, inpno As String
        Dim led_idno As Integer = 0

        Try

            inpno = InputBox("Enter Weaver Bill No.", "FOR INSERTION...")

            led_idno = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

            Da = New SqlClient.SqlDataAdapter("select Weaver_Wages_No from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code LIKE '%/" & Trim(Common_Procedures.FnRange) & "' and Ledger_IdNo = " & Str(Val(led_idno)) & " and Weaver_BillNo = '" & Trim(inpno) & "'", con)
            Da.Fill(Dt)

            movno = ""
            If Dt.Rows.Count > 0 Then
                If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                    movno = Trim(Dt.Rows(0)(0).ToString)
                End If
            End If

            Dt.Clear()

            If Val(movno) <> 0 Then
                move_record(movno)

            Else
                lbl_WeaverBillNo.Text = Trim(UCase(inpno))

            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT FIND...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            Dt.Dispose()
            Da.Dispose()

        End Try

    End Sub

    Private Sub dtp_Date_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dtp_Date.KeyDown
        vcbo_KeyDwnVal = e.KeyValue
        If e.KeyCode = 40 Then
            e.Handled = True
            e.SuppressKeyPress = True
            cbo_Weaver.Focus()
        End If
    End Sub

    Private Sub dtp_Date_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles dtp_Date.KeyPress
        If Trim(UCase(e.KeyChar)) = "D" Then
            dtp_Date.Text = Date.Today
        End If
        If Asc(e.KeyChar) = 13 Then
            e.Handled = True
            cbo_Weaver.Focus()
        End If
    End Sub


    Private Sub btn_Close_PrintRange_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Close_PrintRange.Click
        pnl_Back.Enabled = True
        pnl_PrintRange.Visible = False
    End Sub

    Private Sub btn_Cancel_PrintRange_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Cancel_PrintRange.Click
        btn_Close_PrintRange_Click(sender, e)
    End Sub

    Private Sub btn_Print_PrintRange_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_Print_PrintRange.Click
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim I As Integer = 0
        Dim OrdBy_FrmNo As Single = 0, OrdByToNo As Single = 0
        Dim BillDate_FrmNo As String, BillDate_ToNo As String

        Try




            'If Val(txt_PrintRange_FromNo.Text) = 0 Then
            '    MessageBox.Show("Invalid From No", "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            '    txt_PrintRange_FromNo.Focus()
            '    Exit Sub
            'End If

            'If Val(txt_PrintRange_ToNo.Text) = 0 Then
            '    MessageBox.Show("Invalid To No", "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)
            '    txt_PrintRange_ToNo.Focus()
            '    Exit Sub
            'End If

            prn_FromNo = Trim(txt_PrintRange_FromNo.Text)
            prn_ToNo = Trim(txt_PrintRange_ToNo.Text)


            vPrintRange_FromDate = ""
            vPrintRange_ToDate = ""
            If Val(prn_FromNo) = 0 And Val(prn_ToNo) = 0 Then
                If msk_PrintRange_DateFrom.Visible = True And msk_PrintRange_DateFrom.Enabled = True Then
                    If Trim(msk_PrintRange_DateFrom.Text) <> "" And Trim(msk_PrintRange_DateTo.Text) <> "" Then
                        If IsDate(msk_PrintRange_DateFrom.Text) = True And IsDate(msk_PrintRange_DateTo.Text) = True Then
                            vPrintRange_FromDate = msk_PrintRange_DateFrom.Text
                            vPrintRange_ToDate = msk_PrintRange_DateTo.Text
                        End If
                    End If
                End If
            End If

            btn_Close_PrintRange_Click(sender, e)

            printing_WeaverWages()

        Catch ex As Exception
            MsgBox("The printing operation failed" & vbCrLf & ex.Message, MsgBoxStyle.Critical, "DOES NOT PRINT...")

        Finally
            dt1.Dispose()
            da1.Dispose()

        End Try
        Print_PDF_Status = False

    End Sub

    Private Sub txt_PrintRange_ToNo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_PrintRange_ToNo.KeyDown
        If e.KeyValue = 38 Then txt_PrintRange_FromNo.Focus()
        If e.KeyValue = 40 Then btn_Print_PrintRange.Focus()
    End Sub

    Private Sub txt_PrintRange_ToNo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_PrintRange_ToNo.KeyPress
        If Asc(e.KeyChar) = 13 Then
            If Val(txt_PrintRange_FromNo.Text) <> 0 And Val(txt_PrintRange_ToNo.Text) <> 0 Then
                btn_Print_PrintRange_Click(sender, e)

            Else
                If msk_PrintRange_DateFrom.Visible And msk_PrintRange_DateFrom.Enabled Then
                    msk_PrintRange_DateFrom.Focus()
                Else
                    btn_Print_PrintRange.Focus()
                End If

            End If
        End If
    End Sub

    Private Sub txt_FoldingLess_Perc_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_FoldingLess_Perc.TextChanged
        Dim i As Integer = 0

        If FrmLdSTS = True Then Exit Sub
        If NoCalc_Status = True Then Exit Sub

        Calculate_FoldingLess_Meter()

        With dgv_Details
            If .Visible = True Then

                If .Rows.Count > 0 Then
                    For i = 0 To .Rows.Count - 1
                        Weight_Calculation(i, 0)
                    Next
                End If

            End If

        End With

    End Sub

    Private Sub Calculate_FoldingLess_Meter()
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim RecCode As String = ""
        Dim I As Integer = 0
        Dim N As Integer = 0
        Dim Fldng As Single = 0

        If txt_FoldingLess_Perc.Visible = False Then Exit Sub

        Da = New SqlClient.SqlDataAdapter("Select a.* from Weaver_Cloth_Receipt_Head a where a.Weaver_ClothReceipt_Code = '" & Trim(lbl_RecCode.Text) & "'", con)
        Dt1 = New DataTable
        Da.Fill(Dt1)

        If Dt1.Rows.Count > 0 Then

            Fldng = Val(Dt1.Rows(I).Item("folding").ToString)
            If Val(Fldng) = 0 Then Fldng = 100

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1152" Then
                    txt_Sound_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type1_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type1_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                    txt_Seconds_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type2_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type2_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                    txt_Bits_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type3_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type3_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                    txt_Reject_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type4_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type4_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")
                    txt_Other_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type5_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type5_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0.00")

                Else

                    txt_Sound_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type1_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type1_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                    txt_Seconds_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type2_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type2_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                    txt_Bits_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type3_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type3_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                    txt_Reject_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type4_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type4_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")
                    txt_Other_Meter.Text = Format(Val(Dt1.Rows(I).Item("Type5_Checking_Meters").ToString) + Format((Val(Dt1.Rows(I).Item("Type5_Checking_Meters").ToString) * (Val(Fldng) - 100 - Val(txt_FoldingLess_Perc.Text)) / 100), "#########0.00"), "#########0")

                End If
                TotalMeter_Calculation()

                With dgv_Details
                    If .Rows.Count = 1 Then
                        .Rows(0).Cells(0).Value = Format(Val(lbl_Total_Meter.Text), "##########0.00")

                    ElseIf .Rows.Count = 2 And Val(.Rows(1).Cells(0).Value) = 0 Then
                        .Rows(0).Cells(0).Value = Format(Val(lbl_Total_Meter.Text), "##########0.00")


                    End If
                End With

            End If

        End If
        Dt1.Clear()

    End Sub

    Private Sub btn_SaveAll_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_SaveAll.Click
        Dim pwd As String = ""

        Dim g As New Password
        g.ShowDialog()

        pwd = Trim(Common_Procedures.Password_Input)

        If Trim(UCase(pwd)) <> "TSSA7417" Then
            MessageBox.Show("Invalid Password", "FAILED...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
            Exit Sub
        End If


        SaveAll_STS = True

        LastNo = ""
        movelast_record()

        LastNo = lbl_BillNo.Text

        movefirst_record()
        Timer1.Enabled = True

    End Sub

    Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick
        save_record()
        If Trim(UCase(LastNo)) = Trim(UCase(lbl_BillNo.Text)) Then
            Timer1.Enabled = False
            SaveAll_STS = False
            MessageBox.Show("All entries saved sucessfully", "FOR SAVING...", MessageBoxButtons.OK, MessageBoxIcon.Information)
        Else
            movenext_record()
        End If
    End Sub

    Private Sub txt_ScdsLsMeter_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_ScdsLsMeter.KeyDown
        If e.KeyValue = 38 Then txt_Add_Amount.Focus()
        If e.KeyValue = 40 Then txt_ScdsLsRate.Focus()
    End Sub

    Private Sub txt_ScdsLsMeter_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_ScdsLsMeter.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
        If Asc(e.KeyChar) = 13 Then
            txt_ScdsLsRate.Focus()
        End If
    End Sub

    Private Sub txt_ScdsLsRate_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_ScdsLsRate.KeyDown
        If e.KeyValue = 38 Then txt_ScdsLsMeter.Focus()
        If e.KeyValue = 40 Then txt_TdsPerc.Focus()
    End Sub

    Private Sub txt_ScdsLsRate_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_ScdsLsRate.KeyPress
        If Common_Procedures.Accept_NumericOnly(Asc(e.KeyChar)) = 0 Then
            e.Handled = True
        End If
        If Asc(e.KeyChar) = 13 Then
            txt_TdsPerc.Focus()
        End If
    End Sub

    Private Sub txt_ScdsLsRate_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_ScdsLsRate.LostFocus
        txt_Less_Amount.Text = Val(txt_ScdsLsMeter.Text) * Val(txt_ScdsLsRate.Text)
    End Sub

    Private Sub txt_ScdsLsMeter_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_ScdsLsMeter.LostFocus
        txt_Less_Amount.Text = Val(txt_ScdsLsMeter.Text) * Val(txt_ScdsLsRate.Text)
    End Sub

    Private Sub txt_Remarks_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles txt_Remarks.KeyDown
        If e.KeyValue = 38 Then
            txt_TdsPerc.Focus()
        End If

        If e.KeyValue = 40 Then
            If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                save_record()
            Else
                If msk_Date.Enabled And msk_Date.Visible Then
                    msk_Date.Focus()
                Else
                    cbo_Weaver.Focus()
                End If
            End If
        End If
    End Sub

    Private Sub txt_Remarks_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txt_Remarks.KeyPress
        If Asc(e.KeyChar) = 13 Then


            If MessageBox.Show("Do you want to save", "FOR SAVING...", MessageBoxButtons.YesNoCancel, MessageBoxIcon.Question) = DialogResult.Yes Then
                save_record()
            Else
                If msk_Date.Enabled And msk_Date.Visible Then
                    msk_Date.Focus()
                Else
                    cbo_Weaver.Focus()
                End If
            End If
        End If
    End Sub

    Private Sub set_PaperSize_For_PrintDocument1()
        Dim I As Integer = 0
        Dim PpSzSTS As Boolean = False
        Dim ps As Printing.PaperSize

        If Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_Custom8X6_As_Default_PaperSize) = 1 Then
            Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
            PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
            PrintDocument1.DefaultPageSettings.Landscape = False

        ElseIf Val(Common_Procedures.settings.Printing_For_FullSheet_Set_A4_As_Default_PaperSize) = 1 Then
            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    Exit For
                End If
            Next

        ElseIf Val(Common_Procedures.settings.Printing_For_HalfSheet_Set_A4_As_Default_PaperSize) = 1 Then
            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    Exit For
                End If
            Next


        Else


            PpSzSTS = False

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                'Debug.Print(ps.PaperName)
                If ps.Width = 800 And ps.Height = 600 Then
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PpSzSTS = True
                    Exit For
                End If
            Next

            If PpSzSTS = False Then

                For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                    If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.GermanStandardFanfold Then
                        ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                        PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                        PrintDocument1.DefaultPageSettings.PaperSize = ps
                        PpSzSTS = True
                        Exit For
                    End If
                Next

                If PpSzSTS = False Then
                    For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                        If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                            ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                            PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                            PrintDocument1.DefaultPageSettings.PaperSize = ps
                            Exit For
                        End If
                    Next
                End If

            End If

        End If

    End Sub

    Private Sub txt_Pcs_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Pcs.LostFocus
        Dim cmd As New SqlClient.SqlCommand
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt2 As New DataTable
        Dim Stock_In As String
        Dim mtrspcs As Single
        Dim No_Of_Pcs As Integer = 0
        Dim q As Single = 0
        Dim Dt As New DataTable
        Dim Clo_Mtrs_Pc As Single = 0
        Dim dt3 As New DataTable
        Dim dt4 As New DataTable
        Dim Clo_IdNo As Integer = 0
        Dim edscnt_id As Integer = 0
        Dim cnt_id As Integer = 0
        Dim mtrs As Single = 0

        'End_Id = 0
        'End_Id = Common_Procedures.EndsCount_NameToIdNo(con, Trim(cbo_EndsCount.Text))
        No_Of_Pcs = 0
        No_Of_Pcs = Val(txt_Pcs.Text)

        Clo_IdNo = Common_Procedures.Cloth_NameToIdNo(con, lbl_Cloth.Text)
        'Clo_Mtrs_Pc = 0

        'Da = New SqlClient.SqlDataAdapter("select * from Cloth_Head where Cloth_idno = " & Str(Val(Clo_IdNo)), con)
        'Da.Fill(Dt)

        'If Dt.Rows.Count > 0 Then
        '    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
        '        Clo_Mtrs_Pc = Dt.Rows(0).Item("Meters_Pcs").ToString
        '    End If
        'End If

        'Dt.Clear()
        'Dt.Dispose()
        'Da.Dispose()

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" Then '---- S.Ravichandran Textiles (Erode)
        '    lbl_ConsPavu.Text = Format(Val(Clo_Mtrs_Pc) * Val(txt_NoOfPcs.Text), "##########0.00")
        '    ' txt_ReceiptMeters.Text = Format(Val(Clo_Mtrs_Pc) * Val(txt_NoOfPcs.Text), "##########0.00")
        'End If

        ' If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1089" Then
        If Val(Clo_IdNo) <> 0 And Val(No_Of_Pcs) <> 0 Then
            Stock_In = ""
            mtrspcs = 0

            Da = New SqlClient.SqlDataAdapter("Select Stock_In , Meters_Pcs from  Cloth_Head Where Cloth_idno = " & Str(Val(Clo_IdNo)), con)
            Dt2 = New DataTable
            Da.Fill(Dt2)
            If Dt2.Rows.Count > 0 Then
                Stock_In = Dt2.Rows(0)("Stock_In").ToString
                mtrspcs = Val(Dt2.Rows(0)("Meters_Pcs").ToString)
            End If
            Dt2.Clear()

            If Trim(UCase(Stock_In)) = "PCS" Then
                txt_Rec_Meter.Text = Format(Val(No_Of_Pcs) * Val(mtrspcs), "########0.00")
            End If

        End If
        'Else
        '    If Val(End_Id) <> 0 And Val(No_Of_Pcs) <> 0 Then
        '        Stock_In = ""
        '        mtrspcs = 0

        '        Da = New SqlClient.SqlDataAdapter("Select Stock_In , Meters_Pcs from  EndsCount_Head Where EndsCount_IdNo = " & Str(Val(End_Id)), con)
        '        Dt2 = New DataTable
        '        Da.Fill(Dt2)
        '        If Dt2.Rows.Count > 0 Then
        '            Stock_In = Dt2.Rows(0)("Stock_In").ToString
        '            mtrspcs = Val(Dt2.Rows(0)("Meters_Pcs").ToString)
        '        End If
        '        Dt2.Clear()

        '        If Trim(UCase(Stock_In)) = "PCS" Then
        '            txt_ReceiptMeters.Text = Format(Val(No_Of_Pcs) * Val(mtrspcs), "########0.00")
        '        End If

        '    End If

        '  End If


        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1081" AND Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1116" Then '---- S.Ravichandran Textiles (Erode)
        '    ConsumedYarn_Calculation()
        '    ConsumedPavu_Calculation()
        'End If


    End Sub

    Private Sub txt_CGST_Percentage_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_CGST_Percentage.TextChanged

        Total_Amount_Calculation()
    End Sub

    Private Sub txt_SGST_Percentage_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_SGST_Percentage.TextChanged
        Total_Amount_Calculation()
    End Sub
    Private Function ReverseChargeMechanism_Checking(ByVal Cn1 As SqlClient.SqlConnection, ByVal Led_ID As Integer, Optional ByVal sqltr As SqlClient.SqlTransaction = Nothing) As Boolean
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt As New DataTable
        Dim RCM_Status As Boolean = False

        Try

            Dim da1 As New SqlClient.SqlDataAdapter("select Ledger_GSTinNo  from Ledger_Head  where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Ledger_IdNo = " & Val(Led_ID), Cn1)
            da1.Fill(dt)
            If IsNothing(sqltr) = False Then
                da1.SelectCommand.Transaction = sqltr
            End If
            RCM_Status = False
            If dt.Rows.Count > 0 Then
                RCM_Status = True
            End If
            dt.Clear()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "FOR  MOVING...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        Finally
            dt.Dispose()
            da.Dispose()

        End Try

        ReverseChargeMechanism_Checking = RCM_Status

    End Function

    Private Sub Printing_Format_GST_Weaver(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' Simple Format without Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim p2Font As Font
        Dim pTFontB As Font
        Dim pTFontR As Font
        Dim pTFont As Font

        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1, C2, C3, C4, C5, W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim CurY1 As Single = 0

        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If

        p1Font = New Font("Times", 11, FontStyle.Bold)
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10 ' 30
            .Right = 60 ' 50
            .Top = 30
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 11, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        'If PrintDocument1.DefaultPageSettings.Landscape = True Then
        '    With PrintDocument1.DefaultPageSettings.PaperSize
        '        PrintWidth = .Height - TMargin - BMargin
        '        PrintHeight = .Width - RMargin - LMargin
        '        PageWidth = .Height - TMargin
        '        PageHeight = .Width - RMargin
        '    End With
        'End If

        'd1 = e.Graphics.MeasureString("Department   : ", pFont).Width
        'i1 = e.Graphics.MeasureString("Item Name : ", pFont).Width
        'b1 = e.Graphics.MeasureString("Brand Name : ", pFont).Width
        'qn1 = e.Graphics.MeasureString("Quantity (NEW ITEM) : ", pFont).Width
        'qo1 = e.Graphics.MeasureString("Quantity (OLD ITEM) - Usable  : ", pFont).Width
        'qo2 = e.Graphics.MeasureString("Quantity (OLD ITEM) - Scrap : ", pFont).Width

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 50 : ClAr(4) = 50 : ClAr(5) = 50
        ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))


        C1 = ClAr(1) + ClAr(2)
        C2 = C1 + ClAr(3) + ClAr(4)
        C3 = C2 + ClAr(5)
        C4 = C3 + ClAr(6)
        C5 = C4 + ClAr(7)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
            TxtHgt = 18.9

        Else
            TxtHgt = 19

        End If

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)
        p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

        Try

            prn_Prev_HeadIndx = prn_HeadIndx

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format_GST_Weaver_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1

                CurY = CurY + TxtHgt - 10
                CurY1 = CurY

                pTFontB = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
                pTFontR = New Font("TAM_SC_Suvita", 10, FontStyle.Regular)
                pFont = New Font("Calibri", 10, FontStyle.Regular)
                p1Font = New Font("Calibri", 10, FontStyle.Bold)




                '===============Left Side===================
                Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, pTFontB)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                CurY1 = CurY1 + TxtHgt
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1195" Then

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY1, 0, 0, pTFontB)
                        'Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY1, 0, 0, pTFontB)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY1, 0, 0, pTFontB)
                        'Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY1, 0, 0, pTFontB)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If
                End If

                CurY1 = CurY1 + TxtHgt
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1195" Then
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî e†ì˜ ", LMargin + 10, CurY1, 0, 0, pTFontB)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1, 0, 0, pTFontB)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If
                End If


                If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_GSTinNo").ToString) <> "" Then
                    CurY1 = CurY1 + TxtHgt

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        CurY1 = CurY1 + TxtHgt
                        p2Font = New Font("Calibri", 10, FontStyle.Bold Or FontStyle.Underline)
                        Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p2Font)
                    End If

                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If
                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1195" Then
                        CurY1 = CurY1 + TxtHgt
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)
                        Common_Procedures.Print_To_PrintDocument(e, "Total GST", LMargin + 10, CurY1, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    CurY1 = CurY1 + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)
                    Common_Procedures.Print_To_PrintDocument(e, "Total Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)

                Else
                    If Common_Procedures.settings.CustomerCode = "1307" Then
                        CurY1 = CurY1 + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If
                    End If
                    CurY1 = CurY1 + TxtHgt
                    'Common_Procedures.Print_To_PrintDocument(e, "Net Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è", LMargin + 10, CurY1, 0, 0, pTFontB)
                    If Common_Procedures.settings.CustomerCode = "1307" Then
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    End If


                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1159" Then

                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                End If




                'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                '    CurY1 = CurY1 + TxtHgt
                '    Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY1, 0, 0, p1Font)

                '    pFont = New Font("Calibri", 11, FontStyle.Regular)
                '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                'End If


                'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                '    CurY1 = CurY1 + TxtHgt
                '    Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY1, 0, 0, p1Font)

                '    pFont = New Font("Calibri", 11, FontStyle.Regular)
                '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                'End If

                'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                '    CurY1 = CurY1 + TxtHgt
                '    Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                '    pFont = New Font("calibri", 11, FontStyle.Regular)
                '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                'End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1159" Then

                    CurY1 = CurY1 + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)
                    CurY1 = CurY1 + 2
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString), "##########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    CurY1 = CurY1 + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                End If

                'CurY1 = CurY1 + TxtHgt
                'e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                '================Right Side===================
                snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                    pFont = New Font("Calibri", 11, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, "I Quality", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                End If

                Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                CurY = CurY + TxtHgt
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                    Common_Procedures.Print_To_PrintDocument(e, "II Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                End If

                Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                CurY = CurY + TxtHgt

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, "H†", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                    ' CurY = CurY + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString) <> 0 Then
                        CurY = CurY + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                        Common_Procedures.Print_To_PrintDocument(e, "-" & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString) * (prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, "-" & prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If
                End If

                CurY = CurY + TxtHgt
                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) <> 0 Then
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
                        Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªê‚AƒÜì£v", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                End If


                CurY = CurY + TxtHgt
                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) <> 0 Then

                    Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                Else

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1018" Then
                        p2Font = New Font("Calibri", 13, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Remarks").ToString, LMargin + C1 + 10 + 50, CurY - 10, 0, 0, p2Font)
                    End If

                End If


                CurY = CurY + TxtHgt

                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)
                CurY = CurY + TxtHgt

                Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFontB)
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), PageWidth - 10, CurY, 1, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY, 1, 0, pFont)
                End If

                CurY = CurY + TxtHgt
                ' e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY, LMargin + C1 - 10, CurY)
                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)

                CurY = CurY + 10
                'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                '    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è ", LMargin + 10, CurY, 0, 0, pTFontB)
                'Else
                '    Common_Procedures.Print_To_PrintDocument(e, "eF ªî£¬è ", LMargin + 10, CurY, 0, 0, pTFontB)
                'End If

                'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString, LMargin + C1 - 10, CurY, 1, 0, pFont)

                W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", p1Font).Width
                W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", p1Font).Width

                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                pFont = New Font("Calibri", 11, FontStyle.Regular)

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1195" Then
                    Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY, 0, 0, pTFontR)

                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 80, CurY, 0, 0, pFont)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1018" Then

                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY, 0, 0, pTFontR)

                        Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 50, CurY, 0, 0, pFont)
                    End If
                Else

                    pFont = New Font("Calibri", 12, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "E & OE", LMargin + C1 + 10, CurY + TxtHgt + 10, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "HSN/SAC : 998821", LMargin + C1 + 100, CurY + TxtHgt + 10, 0, 0, pFont)

                End If


                pFont = New Font("Calibri", 11, FontStyle.Regular)

                NoofDets = NoofDets + 1

                prn_DetIndx = prn_DetIndx + 1

                CurY = CurY + TxtHgt + 10
                CurY = CurY + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))

            End If




            Printing_Format_GST_Weaver_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        prn_Prev_HeadIndx = prn_HeadIndx
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True
        Else
            e.HasMorePages = False
        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format_GST_Weaver_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GstNo As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String, Led_gst As String
        Dim strHeight As Single
        Dim C1, C2, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GstNo = ""


        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        Cmp_GstNo = IIf(Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_GSTinNo").ToString) <> "", "GSTIN : " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_GSTinNo").ToString), "") & IIf(Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString) <> "", " PAN : " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Pan_No").ToString), "")



        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)

            CurY = CurY + TxtHgt - 10

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                p1Font = New Font("Calibri", 11, FontStyle.Regular)
            Else
                p1Font = New Font("Calibri", 18, FontStyle.Bold)
            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                Common_Procedures.Print_To_PrintDocument(e, "From", LMargin + 10, CurY, 0, 0, p1Font)
            End If

            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
                p1Font = New Font("Calibri", 9, FontStyle.Regular)
            Else
                p1Font = New Font("Calibri", 11, FontStyle.Regular)
            End If

            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, p1Font)
            CurY = CurY + TxtHgt - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, p1Font)

            If Cmp_GstNo <> "" Then
                CurY = CurY + TxtHgt - 1
                Common_Procedures.Print_To_PrintDocument(e, Cmp_GstNo, LMargin, CurY, 2, PrintWidth, p1Font)
            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
                CurY = CurY + TxtHgt - 1
                Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, p1Font)
            End If
            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)

            CurY = CurY + TxtHgt
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        Else
            TxtHgt = TxtHgt + 2

        End If
        LnAr(2) = CurY


        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        Led_gst = prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        End If


        C1 = ClAr(1) + ClAr(2) + 115
        'C1 = ClAr(1) + ClAr(2) + 75
        C2 = C1 + ClAr(4) + 100
        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        If Val(prn_WagesDontShowToPartyName) = 1 Then

            CurY = CurY + TxtHgt
            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY, 0, 0, p1Font)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY, 0, 0, p1Font)
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ": " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 40, CurY, 0, 0, pFont)

            Else
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ": " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)

            End If

            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            End If
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ": " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + 5

        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, pFont)
            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)

            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C1 + 10, CurY, 0, 0, p1Font)

            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)

            'If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
            '    pFont = New Font("Calibri", 11, FontStyle.Regular)
            '    Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
            'Else
            '    pFont = New Font("Calibri", 11, FontStyle.Regular)
            '    Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
            'End If
            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + C2 + 10, CurY, 0, 0, p1Font)
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            pFont = New Font("Calibri", 11, FontStyle.Regular)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, pFont)

            pFont = New Font("Calibri", 11, FontStyle.Regular)
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, pFont)
            If Led_gst <> "" Then
                CurY = CurY + TxtHgt
                Common_Procedures.Print_To_PrintDocument(e, " GSTIN : " & Led_gst, LMargin + S1 + 10, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 40, CurY, 0, 0, pFont)
            Else
                pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 30, CurY, 0, 0, pFont)
            End If

            pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 + +10, CurY, 0, 0, p1Font)
            End If
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("P_DC_NO").ToString) <> "" Then
                pFont = New Font("Calibri", 11, FontStyle.Regular)
                CurY = CurY + TxtHgt + 10

                Common_Procedures.Print_To_PrintDocument(e, "P.DC.NO", LMargin + C1 + 10, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("P_DC_NO").ToString, LMargin + C1 + W1 + 40, CurY, 0, 0, pFont)

            End If




        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

    End Sub

    Private Sub Printing_Format_GST_Weaver_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        'S1 = e.Graphics.MeasureString("ªî£¬è Þ¼Š¹   : ", pFont).Width
        'CurY = CurY + 10
        'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
        'Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è Þ¼Š¹   : ", LMargin + 10, CurY, 0, 0, pFont)
        'pFont = New Font("Calibri", 11, FontStyle.Regular)
        'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString & "Cr", LMargin + S1 + 70, CurY, 0, 0, pFont)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1032" Then
            ' CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

            'e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            'e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        End If

        Dim BmsInWrds As String = ""
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1195" Then
            p1Font = New Font("Calibri", 12, FontStyle.Regular)
            CurY = CurY + TxtHgt
            BmsInWrds = Common_Procedures.Rupees_Converstion(Val(Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#############0.00")))
            BmsInWrds = Replace(Trim((BmsInWrds)), "", "")

            Common_Procedures.Print_To_PrintDocument(e, "Rupees    : " & BmsInWrds & " ", LMargin + 10, CurY, 0, 0, p1Font)
        End If



        If Trim(prn_HdDt.Rows(0).Item("Remarks").ToString) <> "" Then
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "Remarks : " & prn_HdDt.Rows(0).Item("Remarks").ToString, LMargin + 10, CurY, 0, 0, pFont)


        End If



        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt


        CurY = CurY + 10
        pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
        p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
        '    Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, p1Font)
        'End If

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        ' Else
        ' Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        'End If

        '----------------------------------






        '----------------------------------------







        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, p1Font)

            Else
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

            End If
        End If
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        End If


        '----------------------------------------------



        'Dim da1 As New SqlClient.SqlDataAdapter
        'Dim Dt1 As New DataTable
        'Dim i As Integer = 0
        'Dim k As Integer = 0
        'Dim Cmp_Name As String
        'Dim p1Font As Font
        'Dim S1, C1, C2 As Single
        'Dim Tot_EBeam_StkSumry As Single = 0
        'Dim prn_Tot_Pavu_StkSumry As String = ""
        'Dim prn_Tot_Yarn_StkSumry As String = ""
        'Dim prn_Tot_Amt_BalSumry As Single = 0
        'Dim pTBFont As Font

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1395" Then '---- SANTHA EXPORTS (SOMANUR)

        '    For i = NoofDets + 1 To NoofItems_PerPage
        '        CurY = CurY + TxtHgt
        '    Next



        '    e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        '    'CurY = CurY + TxtHgt
        '    'e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        '    LnAr(6) = CurY

        '    CurY = CurY + 5

        '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX

        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4)) '---DATE
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, LnAr(4)) '---PAVU I/O
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, LnAr(4)) '---PAVU STOCK
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, LnAr(4)) '---YARN I/O
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, LnAr(4)) '---YARN STOCK
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM I/O
        '        'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM STOCK
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        '    Else

        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))

        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
        '        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        '    End If

        'End If

        'CurY = CurY + 10

        'If prn_PageNo <= 1 Then

        '    Tot_EBeam_StkSumry = 0
        '    prn_Tot_Pavu_StkSumry = ""
        '    prn_Tot_Yarn_StkSumry = ""
        '    prn_Tot_Amt_BalSumry = 0

        '    da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
        '    Dt1 = New DataTable
        '    da1.Fill(Dt1)
        '    If Dt1.Rows.Count > 0 Then
        '        If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
        '            Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
        '        End If
        '    End If
        '    Dt1.Clear()

        '    da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
        '    Dt1 = New DataTable
        '    da1.Fill(Dt1)
        '    If Dt1.Rows.Count > 0 Then
        '        If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
        '            prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
        '        End If
        '    End If
        '    Dt1.Clear()

        '    da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
        '    Dt1 = New DataTable
        '    da1.Fill(Dt1)
        '    If Dt1.Rows.Count > 0 Then
        '        For k = 0 To Dt1.Rows.Count - 1
        '            prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
        '        Next
        '    End If
        '    Dt1.Clear()

        '    da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
        '    Dt1 = New DataTable
        '    da1.Fill(Dt1)
        '    If Dt1.Rows.Count > 0 Then
        '        For k = 0 To Dt1.Rows.Count - 1
        '            prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
        '        Next
        '    End If
        '    Dt1.Clear()

        '    C1 = ClAr(1) + ClAr(2) + ClAr(3) - 70
        '    C2 = C1 + ClAr(4) + ClAr(5)

        '    If Prn_In_English_STS = True Then
        '        S1 = e.Graphics.MeasureString("YARN :", pFont).Width
        '    Else
        '        S1 = e.Graphics.MeasureString("Ë™  :", pTFont).Width '---NOOL
        '    End If

        '    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then '---- Nithya Textiles (Sedapalayam)

        '        If Prn_In_English_STS = True Then '-----English

        '            Common_Procedures.Print_To_PrintDocument(e, "STOCK DETAILS:- ", LMargin + 10, CurY, 0, 0, pFont)

        '            Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '            Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

        '            Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + C2 + 30, CurY, 0, 0, pFont)
        '            Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

        '            CurY = CurY + TxtHgt

        '            Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

        '            Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


        '            CurY = CurY + TxtHgt

        '            Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + C1 + 10, CurY, 0, 0, pFont)
        '            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

        '        Else

        '            pTBFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
        '            Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTBFont)

        '            Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
        '            Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

        '            Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
        '            Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

        '            CurY = CurY + TxtHgt

        '            Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

        '            Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
        '            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont,, True, PageWidth)


        '            CurY = CurY + TxtHgt

        '            Common_Procedures.Print_To_PrintDocument(e, "Ë™  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
        '            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont,, True, PageWidth)

        '        End If
        '    Else
        '        CurY = CurY + TxtHgt
        '    End If

        'Else
        '    CurY = CurY + TxtHgt
        '    CurY = CurY + TxtHgt

        'End If

        'CurY = CurY + TxtHgt
        'CurY = CurY + TxtHgt

        'If Prn_In_English_STS = True Then
        '    Common_Procedures.Print_To_PrintDocument(e, "WEAVER SIGNATURE", LMargin + 10, CurY, 0, 0, pFont)
        'Else
        '    Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)
        'End If

        ''If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        ''    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        ''Else
        'Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        ''End If

        'If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        'Else
        '    p1Font = New Font("Calibri", 12, FontStyle.Bold)
        '    Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        'End If

        'CurY = CurY + TxtHgt + 10

        'e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        'e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        'e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)



    End Sub


    Private Sub btn_FromWeaver_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_FromWeaver.Click

        Prn_FrghtAmt_STS = True
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1098" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Then
            Prn_FrghtAmt_STS = False
            prn_WagesFrmt = "FORMAT-1"
        ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1037" Then
            prn_WagesFrmt = "FORMAT-2.1"
        Else
            prn_WagesFrmt = "FORMAT-3"
        End If


        'prn_WagesDontShowToPartyName = 1

        txt_PrintRange_FromNo.Text = prn_FromNo
        txt_PrintRange_ToNo.Text = prn_ToNo

        msk_PrintRange_DateFrom.Text = msk_Date.Text
        msk_PrintRange_DateTo.Text = msk_Date.Text
        msk_PrintRange_DateFrom.Enabled = False
        msk_PrintRange_DateTo.Enabled = False
        dtp_PrintRange_DateFrom.Enabled = False
        dtp_PrintRange_DateTo.Enabled = False

        pnl_PrintRange.Visible = True
        pnl_Back.Enabled = False
        pnl_PrintOption.Visible = False

        If txt_PrintRange_FromNo.Enabled Then txt_PrintRange_FromNo.Focus()

    End Sub

    Private Sub btn_SMS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_SMS.Click
        Dim i As Integer = 0
        Dim smstxt As String = ""
        Dim PhNo As String = "", AgPNo As String = ""
        Dim Led_IdNo As Integer = 0, Agnt_IdNo As Integer = 0
        Dim SMS_SenderID As String = ""
        Dim SMS_Key As String = ""
        Dim SMS_RouteID As String = ""
        Dim SMS_Type As String = ""
        Dim BlNos As String = ""

        Try

            Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

            PhNo = Common_Procedures.get_FieldValue(con, "Ledger_Head", "MobileNo_Frsms", "(Ledger_IdNo = " & Str(Val(Led_IdNo)) & ")")

            'smstxt = Common_Procedures.Company_IdNoToName(con, Val(lbl_Company.Tag))
            'smstxt = smstxt & vbCrLf & Get_WeaverStock_Summary()


            If dgv_Details_Total.RowCount > 0 Then


                smstxt = smstxt & " Total Yarns : " & Val(dgv_Details_Total.Rows(0).Cells(6).Value()) & vbCrLf
            End If

            smstxt = smstxt & " Sound : " & Trim(txt_Sound_Meter.Text) & vbCrLf
            smstxt = smstxt & " Seconds : " & Trim(txt_Seconds_Meter.Text) & vbCrLf
            smstxt = smstxt & " Others : " & Trim(txt_Other_Meter.Text) & vbCrLf

            smstxt = smstxt & " Amount: " & Trim(lbl_Net_Amount.Text) & vbCrLf
            'smstxt = smstxt & " Tax Amount : " & Val(lbl_CGST_Amount.Text) + Val(lbl_SGST_Amount.Text) + Val(lbl_IGST_Amount.Text) & vbCrLf
            smstxt = smstxt & "Rec Meters : " & Trim(txt_Rec_Meter.Text) & vbCrLf

            smstxt = smstxt & " " & Chr(13)
            smstxt = smstxt & " Thanks! " & Chr(13)
            smstxt = smstxt & Common_Procedures.Company_IdNoToName(con, Val(lbl_Company.Tag))

            SMS_SenderID = ""
            SMS_Key = ""
            SMS_RouteID = ""
            SMS_Type = ""

            Common_Procedures.get_SMS_Provider_Details(con, Val(lbl_Company.Tag), SMS_SenderID, SMS_Key, SMS_RouteID, SMS_Type)

            Sms_Entry.vSmsPhoneNo = Trim(PhNo)
            Sms_Entry.vSmsMessage = Trim(smstxt)

            Sms_Entry.SMSProvider_SenderID = SMS_SenderID
            Sms_Entry.SMSProvider_Key = SMS_Key
            Sms_Entry.SMSProvider_RouteID = SMS_RouteID
            Sms_Entry.SMSProvider_Type = SMS_Type

            Dim f1 As New Sms_Entry
            f1.MdiParent = MDIParent1
            f1.Show()

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT SEND SMS...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Function Get_WeaverStock_Summary() As String

        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim NewNo As Integer = 0
        Dim Led_ID As Integer = 0
        Dim cmd As New SqlClient.SqlCommand
        Dim Dt As New DataTable
        Dim Dtbl1 As New DataTable
        Dim Bal As Decimal = 0
        Dim Amt As Double = 0, BillPend As Double = 0
        Dim count As String = ""
        Dim eNDS As String = ""
        Dim Bal_Amt As String = ""
        Dim Adv_Amt As String = ""
        Dim Yarn_Stk As String = ""
        Dim Pavu_Stk As String = ""
        Dim Beam_Stk As String = ""


        Led_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

        'da = New SqlClient.SqlDataAdapter("select max(Party_Rec_No) from Weaver_Payment_Head where Ledger_idno = " & Val(Led_ID) & " and Weaver_Payment_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "'", con)
        'da.Fill(dt1)
        'NewNo = 0
        'If dt1.Rows.Count > 0 Then

        '    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
        '        NewNo = Val(dt1.Rows(0)(0).ToString)
        '    End If
        'End If

        'NewNo = NewNo + 1

        'lbl_PartyRecNo.Text = NewNo

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1081" Then
        '-----------BALANCE

        da = New SqlClient.SqlDataAdapter("select  sum(a.voucher_amount) as amount from voucher_details a WHERE a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ledger_idno = " & Str(Val(Led_ID)) & " ", con)
        Dtbl1 = New DataTable
        da.Fill(Dtbl1)

        Adv_Amt = 0
        If Dtbl1.Rows.Count > 0 Then
            For i = 0 To Dtbl1.Rows.Count - 1
                'Amt = Val(Dtbl1.Rows(i).Item("amount").ToString)
                'Adv_Amt = Trim(Format(Math.Abs(Val(Amt)), "#########0.00")) & IIf(Val(Amt) >= 0, " Cr", " Dr")


                Amt = Val(Dtbl1.Rows(i).Item("amount").ToString)

                If Val(Amt) <> 0 Then Adv_Amt = Trim(Format(Val(Amt), "#########0.00"))

            Next i
        End If

        'Else

        '    '----------- Advance
        '    lbl_AdvBalance.Text = ""
        '    da = New SqlClient.SqlDataAdapter("select sum(a.voucher_amount) as amount from voucher_details a WHERE a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ledger_idno = " & Str(Val(Led_ID)) & " and (a.Entry_Identification LIKE 'OPENI-%' or a.Voucher_Code LIKE 'WADVP-%' or a.Voucher_Code LIKE 'WPADP-%' or a.Voucher_Code LIKE 'WADVD-%'  or a.Voucher_Code LIKE 'WPADD-%') ", con)
        '    Dtbl1 = New DataTable
        '    da.Fill(Dtbl1)
        '    Bal = 0
        '    If Dtbl1.Rows.Count > 0 Then
        '        Amt = Val(Dtbl1.Rows(0).Item("amount").ToString)
        '        lbl_AdvBalance.Text = "Advance : " + Trim(Format(Math.Abs(Val(Amt)), "#########0.00")) & IIf(Val(Amt) >= 0, " Cr", " Dr")
        '    End If

        '    '----------- Cooly
        '    lbl_CoolyBalance.Text = ""
        '    da = New SqlClient.SqlDataAdapter("select sum(a.voucher_amount) as amount from voucher_details a WHERE a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.ledger_idno = " & Str(Val(Led_ID)) & " and (a.Entry_Identification NOT LIKE 'OPENI-%' AND a.Voucher_Code NOT LIKE 'WADVP-%' AND a.Voucher_Code NOT LIKE 'WPADP-%' AND a.Voucher_Code NOT LIKE 'WADVD-%' AND a.Voucher_Code NOT LIKE 'WPADD-%') ", con)
        '    Dtbl1 = New DataTable
        '    da.Fill(Dtbl1)
        '    Bal = 0
        '    If Dtbl1.Rows.Count > 0 Then
        '        Amt = Val(Dtbl1.Rows(0).Item("amount").ToString)
        '        lbl_CoolyBalance.Text = "Cooly : " + Trim(Format(Math.Abs(Val(Amt)), "#########0.00")) & IIf(Val(Amt) >= 0, " Cr", " Dr")
        '    End If

        'End If
        ''----------- YARN

        cmd.Connection = con

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, weight1) Select a.DeliveryTo_Idno, tP.Ledger_Name, c.count_name, sum(a.Weight) from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON  a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo = c.Count_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and a.Weight <> 0 group by a.DeliveryTo_Idno, tP.Ledger_Name, c.count_name having sum(a.Weight) <> 0"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, weight1) Select a.ReceivedFrom_Idno, tP.Ledger_Name, c.count_name, -1*sum(a.Weight) from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON  a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo = c.Count_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and a.Weight <> 0 group by a.ReceivedFrom_Idno, tP.Ledger_Name, c.count_name having sum(a.Weight) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(Int1, name1, name2, weight1) Select Int1, name1, name2, sum(weight1) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by Int1, name1, name2 having sum(Weight1) <> 0"
        cmd.ExecuteNonQuery()

        Yarn_Stk = ""

        da = New SqlClient.SqlDataAdapter("select Int1, name1, name2, weight1 as wgt from " & Trim(Common_Procedures.ReportTempTable) & " ", con)
        Dtbl1 = New DataTable
        da.Fill(Dtbl1)
        count = ""
        If Dtbl1.Rows.Count > 0 Then
            For i = 0 To Dtbl1.Rows.Count - 1
                count = Trim(Dtbl1.Rows(i).Item("name2").ToString)
                Yarn_Stk = Trim(Yarn_Stk) & " " & Trim(count) & " : " & Format(Val(Dtbl1.Rows(i).Item("wgt").ToString), "#######0.000")
            Next i
        End If

        '-----------PAVU

        cmd.Connection = con

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, meters1) Select a.DeliveryTo_Idno, tP.Ledger_Name, c.endscount_name, sum(a.Meters) from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON  a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo = c.EndsCount_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & "  and a.Meters <> 0 group by a.DeliveryTo_Idno, tP.Ledger_Name, c.endscount_name having sum(a.Meters) <> 0"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, meters1) Select a.ReceivedFrom_Idno, tP.Ledger_Name, c.endscount_name, -1*sum(a.Meters) from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo = c.EndsCount_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & "  and a.Meters <> 0 group by a.ReceivedFrom_Idno, tP.Ledger_Name, c.endscount_name having sum(a.Meters) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(Int1, name1, name3, meters1) Select Int1, name1, name2, sum(meters1) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by Int1, name1, name2 having sum(meters1) <> 0"
        cmd.ExecuteNonQuery()

        Pavu_Stk = ""

        da = New SqlClient.SqlDataAdapter("select Int1, name1, name3, meters1 from " & Trim(Common_Procedures.ReportTempTable) & " ", con)
        Dtbl1 = New DataTable
        da.Fill(Dtbl1)
        eNDS = ""
        If Dtbl1.Rows.Count > 0 Then
            For i = 0 To Dtbl1.Rows.Count - 1
                eNDS = Trim(Dtbl1.Rows(i).Item("name3").ToString)
                Pavu_Stk = Trim(Pavu_Stk) & " " & Trim(eNDS) & " : " & Format(Val(Dtbl1.Rows(i).Item("meters1").ToString), "#######0.00")
            Next i
        End If


        '-------- Empty Beam
        cmd.Connection = con

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, Name1, Int2) Select a.DeliveryTo_Idno, tP.Ledger_Name,  sum(a.Empty_Beam+a.Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and  (a.Empty_Beam+a.Pavu_Beam) <> 0 group by a.DeliveryTo_Idno, tP.Ledger_Name having sum(a.Empty_Beam+a.Pavu_Beam) <> 0 "
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, Name1, Int2) Select a.ReceivedFrom_Idno, tP.Ledger_Name,  -1*sum(a.Empty_Beam+a.Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and (a.Empty_Beam+a.Pavu_Beam) <> 0 group by a.ReceivedFrom_Idno, tP.Ledger_Name having sum(a.Empty_Beam+a.Pavu_Beam) <> 0 "
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(Int1, Name1, Int2) Select Int1, Name1,  sum(Int2) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by Int1, Name1  having sum(Int2) <> 0 "
        cmd.ExecuteNonQuery()

        Beam_Stk = ""

        da = New SqlClient.SqlDataAdapter("select Int1, name1, Int2 from " & Trim(Common_Procedures.ReportTempTable) & " ", con)
        Dtbl1 = New DataTable
        da.Fill(Dtbl1)

        If Dtbl1.Rows.Count > 0 Then
            For i = 0 To Dtbl1.Rows.Count - 1
                Beam_Stk = Trim(Dtbl1.Rows(i).Item("Int2").ToString) & " Beams"
            Next i
        End If
        Dt.Dispose()
        da.Dispose()


        Get_WeaverStock_Summary = "Amount : " & Adv_Amt & vbCrLf & "Yarn : " & Yarn_Stk & vbCrLf & "Pavu : " & Pavu_Stk & vbCrLf & "E.Beam : " & Beam_Stk

    End Function

    Private Sub cbo_Ends_Count_GotFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Ends_Count.GotFocus
        Common_Procedures.ComboBox_ItemSelection_SetDataSource(sender, con, "EndsCount_Head", "EndsCount_Name", "", "(EndsCount_IdNo = 0)")
    End Sub

    Private Sub cbo_Ends_Count_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Ends_Count.KeyDown
        Common_Procedures.ComboBox_ItemSelection_KeyDown(sender, e, con, cbo_Ends_Count, cbo_Weaver, txt_Sound_Meter, "EndsCount_Head", "EndsCount_Name", "", "(EndsCount_IdNo = 0)")
    End Sub

    Private Sub cbo_Ends_Count_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles cbo_Ends_Count.KeyPress
        Common_Procedures.ComboBox_ItemSelection_KeyPress(sender, e, con, cbo_Ends_Count, txt_Sound_Meter, "EndsCount_Head", "EndsCount_Name", "", "(EndsCount_IdNo = 0)")
    End Sub

    Private Sub cbo_Ends_Count_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles cbo_Ends_Count.KeyUp

        If e.Control = False And e.KeyValue = 17 Then
            Dim f As New EndsCount_Creation

            Common_Procedures.Master_Return.Form_Name = Me.Name
            Common_Procedures.Master_Return.Control_Name = cbo_Ends_Count.Name
            Common_Procedures.Master_Return.Return_Value = ""
            Common_Procedures.Master_Return.Master_Type = ""

            f.MdiParent = MDIParent1
            f.Show()

        End If
    End Sub

    Private Sub Printing_Format5(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' Simple Format without Stock
        Dim pFont As Font
        Dim vTamFont As Font
        Dim p1Font As Font
        Dim vpFont_B As Font
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single = 0, vCurYL As Single = 0, vCurYR As Single = 0
        Dim vTpCurY As Single = 0
        Dim C1, C2, C3, C4, C5 As Single
        Dim vSndAmt, vSecAmt, vBitAmt, vRjtAmt, vOtrAmt As String
        Dim vNtAmt As String = "", vGrsAmt As String = ""
        Dim vTtAmt As String = ""
        Dim vRndoffamt As String = ""
        Dim BLNo1 As String, BLNo2 As String
        Dim I As Integer


        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If

        pFont = New Font("Calibri", 11, FontStyle.Regular)
        vTamFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        vpFont_B = New Font("Calibri", 11, FontStyle.Bold)

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 10
            .Right = 60
            .Top = 20
            .Bottom = 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With


        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = Val(35) : ClAr(2) = 250 : ClAr(3) = 50 : ClAr(4) = 50 : ClAr(5) = 50
        ClAr(6) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5))

        C1 = ClAr(1) + ClAr(2)
        C2 = C1 + ClAr(3) + ClAr(4)
        C3 = C2 + ClAr(5)
        C4 = C3 + ClAr(6)
        C5 = C4 + ClAr(7)

        TxtHgt = 18

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Try

            prn_Prev_HeadIndx = prn_HeadIndx

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format5_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1

                '---  Line-1

                CurY = CurY + 5
                vTpCurY = CurY

                vCurYL = vTpCurY



                BLNo1 = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString)
                BLNo2 = ""
                If Len(BLNo1) > 20 Then
                    For I = 20 To 1 Step -1
                        If Mid$(Trim(BLNo1), I, 1) = " " Or Mid$(Trim(BLNo1), I, 1) = "," Or Mid$(Trim(BLNo1), I, 1) = "." Or Mid$(Trim(BLNo1), I, 1) = "-" Or Mid$(Trim(BLNo1), I, 1) = "/" Or Mid$(Trim(BLNo1), I, 1) = "_" Or Mid$(Trim(BLNo1), I, 1) = "(" Or Mid$(Trim(BLNo1), I, 1) = ")" Or Mid$(Trim(BLNo1), I, 1) = "\" Or Mid$(Trim(BLNo1), I, 1) = "[" Or Mid$(Trim(BLNo1), I, 1) = "]" Or Mid$(Trim(BLNo1), I, 1) = "{" Or Mid$(Trim(BLNo1), I, 1) = "}" Or Mid$(Trim(BLNo1), I, 1) = """" Then Exit For
                    Next I
                    If I = 0 Then I = 20
                    BLNo2 = Microsoft.VisualBasic.Right(Trim(BLNo1), Len(BLNo1) - I)
                    BLNo1 = Microsoft.VisualBasic.Left(Trim(BLNo1), I)
                End If

                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Fabric Name", LMargin + 10, vCurYL, 0, 0, vpFont_B)  '--- ragam
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, vCurYL, 0, 0, vTamFont)  '--- ragam
                End If

                Common_Procedures.Print_To_PrintDocument(e, BLNo1, LMargin + C1 - 10, vCurYL, 1, 0, pFont)

                If Trim(BLNo2) <> "" Then
                    vCurYL = vCurYL + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, BLNo2, LMargin + C1 - 10, vCurYL, 1, 0, pFont)
                End If

                vCurYL = vCurYL + TxtHgt + 5 + (TxtHgt \ 2)
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "No.of Pieces", LMargin + 10, vCurYL, 0, 0, vpFont_B)  '--- ragam
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + 10, vCurYL, 0, 0, vTamFont)   '--- Pcs Ennikkai
                End If

                Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString), LMargin + C1 - 10, vCurYL, 1, 0, pFont)

                vCurYL = vCurYL + TxtHgt + 5 + (TxtHgt \ 2)
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Receipt Meters", LMargin + 10, vCurYL, 0, 0, vpFont_B) '--- Receipt Meters
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜", LMargin + 10, vCurYL, 0, 0, vTamFont) '--- Thuni Varavoo Meter
                End If

                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString), "#########0.00"), LMargin + C1 - 10, vCurYL, 1, 0, pFont)

                vCurYL = vCurYL + TxtHgt + 5
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Difference Meters", LMargin + 10, vCurYL, 0, 0, vpFont_B)   '--- Excess/Short
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, vCurYL, 0, 0, vTamFont)   '--- Valari Meter
                End If

                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, vCurYL, 1, 0, pFont)

                vCurYL = vCurYL + TxtHgt + 7
                e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, vCurYL, LMargin + C1 - 10, vCurYL)

                vCurYL = vCurYL + 9
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Total Meters", LMargin + 10, vCurYL, 0, 0, vpFont_B) '--- Total Meter
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî e†ì˜ ", LMargin + 10, vCurYL, 0, 0, vTamFont) '--- Moaththa Meter
                End If

                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, LMargin + C1 - 10, vCurYL, 1, 0, pFont)

                vCurYL = vCurYL + TxtHgt + 7
                e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, vCurYL, LMargin + C1 - 10, vCurYL)



                vCurYL = vCurYL + TxtHgt
                vCurYL = vCurYL + TxtHgt
                vCurYL = vCurYL + (TxtHgt \ 2)
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Weft Consumed Yarn", LMargin + 10, vCurYL, 0, 0, vpFont_B)     '--- Consumed Yarn
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + 10, vCurYL, 0, 0, vTamFont)
                End If
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 - 10, vCurYL, 1, 0, pFont)



                vCurYR = vTpCurY

                vSndAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString), "##########0.00")
                vSecAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString), "##########0.00")
                vBitAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString), "##########0.00")
                vRjtAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString), "##########0.00")
                vOtrAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString), "##########0.00")

                vGrsAmt = Format(Val(vSndAmt) + Val(vSecAmt) + Val(vBitAmt) + Val(vRjtAmt) + Val(vOtrAmt), "##########0.00")

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And (Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("Loom_Type").ToString)) = "POWER LOOM" Or Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("Loom_Type").ToString)) = "POWERLOOM") And Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString) = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString) Then

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type1, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B) '---Sound   Meters * rate = Amount
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ê¾‡†", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont) '---Sound   Meters * rate = Amount
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString), "#########0.00"), PageWidth - 190, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vSndAmt) + Val(vSecAmt), "########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)



                Else

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type1, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B) '---Sound   Meters * rate = Amount
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont) '---Sound   Meters * rate = Amount
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vSndAmt), "########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)

                    vCurYR = vCurYR + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type2, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B) '---Seconds    Meters * rate = Amount
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ê¾‡†", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont) '---Seconds    Meters * rate = Amount
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont) '---Seconds    Meters * rate = Amount
                        End If

                    End If

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vSecAmt), "########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)

                End If




                vCurYR = vCurYR + TxtHgt
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString) = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString) Then

                    If (Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString)) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "C", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)  '---C 10- 30 and C30+      Meters * rate = Amount
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)  '---Seconds      Meters * rate = Amount
                        End If

                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString), "#########0.00"), PageWidth - 190, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(vBitAmt) + Val(vRjtAmt), "########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                    End If

                Else

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                            If Prn_In_English_STS = True Then
                                Common_Procedures.Print_To_PrintDocument(e, "C", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)  '---C 10- 30 and C30+      Meters * rate = Amount
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)  '---Seconds      Meters * rate = Amount
                            End If

                        Else
                            If Prn_In_English_STS = True Then
                                Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type3, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)  '---Bits      Meters * rate = Amount
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)  '---Bits      Meters * rate = Amount
                            End If

                        End If


                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(vBitAmt), "##########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                    End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) <> 0 Then
                        vCurYR = vCurYR + TxtHgt
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                            If Prn_In_English_STS = True Then
                                Common_Procedures.Print_To_PrintDocument(e, "C", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)  '---C 10- 30 and C30+      Meters * rate = Amount
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)  '---Seconds      Meters * rate = Amount
                            End If

                        Else

                            If Prn_In_English_STS = True Then
                                Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type4, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                            End If

                        End If


                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(vRjtAmt), "########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                    End If


                End If



                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) <> 0 Then
                    vCurYR = vCurYR + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type5, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then
                            Common_Procedures.Print_To_PrintDocument(e, "èN¾", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                        End If

                    End If

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vOtrAmt), "########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                End If

                vCurYR = vCurYR + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, vCurYR, PageWidth - 10, vCurYR)
                vCurYR = vCurYR - 10

                vRndoffamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString), "#############0") - Format(Val(vGrsAmt), "##########0.00")
                If Val(vRndoffamt) <> 0 Then
                    vCurYR = vCurYR + TxtHgt
                    If Val(vRndoffamt) > 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Common_Procedures.Print_To_PrintDocument(e, "(+)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    ElseIf Val(vRndoffamt) < 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Common_Procedures.Print_To_PrintDocument(e, "(-)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(vRndoffamt)), "###########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                End If

                vCurYR = vCurYR + TxtHgt
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Wages Amount", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                End If
                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, PageWidth - 10, vCurYR, 1, 0, pFont)

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" Then '---- BRT TEXTILES(SOMANUR)
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        vCurYR = vCurYR + TxtHgt
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, lbl_FreightCharge_Caption.Text, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "õ‡® õ£ì¬è", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                        End If


                        Common_Procedures.Print_To_PrintDocument(e, "(-)", PageWidth - 80, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, PageWidth - 10, vCurYR, 1, 0, pFont)


                        '-------Taxable Value
                        vCurYR = vCurYR + TxtHgt + 5
                        e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, vCurYR, PageWidth - 10, vCurYR)
                        vCurYR = vCurYR - 15

                        vCurYR = vCurYR + TxtHgt
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, lbl_TaxableValue_Caption.Text, LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "õ‡® õ£ì¬è", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, "(-)", PageWidth - 80, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Taxable_Amount").ToString, PageWidth - 10, vCurYR, 1, 0, pFont)

                    End If
                End If





                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                    vCurYR = vCurYR + TxtHgt
                    p1Font = New Font("Calibri", 10, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "CGST  @  " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                    Common_Procedures.Print_To_PrintDocument(e, "(+)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                End If

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    vCurYR = vCurYR + TxtHgt
                    p1Font = New Font("Calibri", 10, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "SGST  @  " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                    Common_Procedures.Print_To_PrintDocument(e, "(+)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1267" Then '---- BRT TEXTILES(SOMANUR)
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        vCurYR = vCurYR + TxtHgt
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Freight", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "õ‡® õ£ì¬è", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                        End If


                        Common_Procedures.Print_To_PrintDocument(e, "(-)", PageWidth - 80, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, PageWidth - 10, vCurYR, 1, 0, pFont)
                    End If
                End If


                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                    vCurYR = vCurYR + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "H®ˆî‹", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                    End If


                    Common_Procedures.Print_To_PrintDocument(e, "(-)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, PageWidth - 10, vCurYR, 1, 0, pFont)
                End If

                If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                    vCurYR = vCurYR + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Ü†õ£¡v", LMargin + C1 + 10, vCurYR, 0, 0, vTamFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, "(+)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, PageWidth - 10, vCurYR, 1, 0, pFont)
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1267" Or (Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And (Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("Loom_Type").ToString)) = "POWER LOOM" Or Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("Loom_Type").ToString)) = "POWERLOOM")) Then

                    vCurYR = vCurYR + TxtHgt + 5
                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, vCurYR, PageWidth - 10, vCurYR)
                    vCurYR = vCurYR - 15

                    vCurYR = vCurYR + TxtHgt
                    vTtAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Assesable_Value").ToString), "##########0.00")
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vTtAmt), "#########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)

                    vCurYR = vCurYR + TxtHgt + 5
                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, vCurYR, PageWidth - 10, vCurYR)

                    vCurYR = vCurYR + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "TDS  @  " & Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString) & " %", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Common_Procedures.Print_To_PrintDocument(e, "(-)", PageWidth - 80, vCurYR, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, PageWidth - 10, vCurYR, 1, 0, pFont)
                    End If

                End If



                vNtAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "###########0.00")
                vRndoffamt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString), "#############0") - Format(Val(vNtAmt), "###########0.00")
                If Val(vRndoffamt) <> 0 Then
                    vCurYR = vCurYR + TxtHgt
                    If Val(vRndoffamt) > 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Common_Procedures.Print_To_PrintDocument(e, "(+)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    ElseIf Val(vRndoffamt) < 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Round Off", LMargin + C1 + 10, vCurYR, 0, 0, vpFont_B)
                        Common_Procedures.Print_To_PrintDocument(e, "(-)", PageWidth - 80, vCurYR, 1, 0, pFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(vRndoffamt)), "###########0.00"), PageWidth - 10, vCurYR, 1, 0, pFont)
                End If

                CurY = IIf(vCurYL > vCurYR, vCurYL, vCurYR)


                CurY = CurY + TxtHgt + 10
                e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 50, CurY, PageWidth - 10, CurY)
                CurY = CurY + TxtHgt - 10
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Net Amount", LMargin + C1 + 10, CurY, 0, 0, vpFont_B)
                Else
                    p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ªî£¬è", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                End If

                p1Font = New Font("Calibri", 11, FontStyle.Bold)
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1267" And (Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("LoomType_ClothReceipt").ToString)) = "AUTO LOOM" Or Trim(UCase(prn_HdDt.Rows(prn_HeadIndx).Item("LoomType_ClothReceipt").ToString)) = "AUTOLOOM") Then
                    vTtAmt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Assesable_Value").ToString), "##########0.00")
                    Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.Currency_Format(Val(vTtAmt)), PageWidth - 10, CurY, 1, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.Currency_Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString)), PageWidth - 10, CurY, 1, 0, p1Font)
                End If

                prn_DetIndx = prn_DetIndx + 1

                CurY = CurY + TxtHgt + 10

                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(3))

            End If

            Printing_Format5_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

        prn_Prev_HeadIndx = prn_HeadIndx
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True
        Else
            e.HasMorePages = False
        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format5_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim Da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, S1, W1, W2 As Single
        Dim vPcsChkNo As String = ""
        Dim vPcsChkDate As String = ""


        PageNo = PageNo + 1

        CurY = TMargin


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = ""

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_TinNo = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If

        CurY = CurY + TxtHgt - 10

        p1Font = New Font("Calibri", 18, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height

        p1Font = New Font("Calibri", 11, FontStyle.Regular)
        CurY = CurY + strHeight - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, p1Font)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, p1Font)
        CurY = CurY + TxtHgt - 1
        Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin + 10, CurY, 0, 0, p1Font)
        Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, PrintWidth - 10, CurY, 1, 0, p1Font)


        CurY = CurY + TxtHgt + 5
        p1Font = New Font("Calibri", 13, FontStyle.Bold)

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1140" Then
            Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
        Else
            If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
            End If

        End If


        CurY = CurY + strHeight - 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        LnAr(2) = CurY


        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If


        C1 = ClAr(1) + ClAr(2) + 150
        C2 = C1 + ClAr(4) + 80
        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width


        CurY = CurY + TxtHgt - 10
        p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, pFont)


        pFont = New Font("Calibri", 10, FontStyle.Regular)
        Common_Procedures.Print_To_PrintDocument(e, "BILL NO", LMargin + C1 + 10, CurY, 0, 0, pFont)


        If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        Else
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        End If


        pFont = New Font("Calibri", 11, FontStyle.Regular)
        Common_Procedures.Print_To_PrintDocument(e, "BILL DATE ", LMargin + C2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        pFont = New Font("Calibri", 11, FontStyle.Regular)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, pFont, , True)

        vPcsChkNo = ""
        vPcsChkDate = ""
        Da1 = New SqlClient.SqlDataAdapter("select c.Weaver_Piece_Checking_No, c.Weaver_Piece_Checking_Date from Weaver_Wages_Head a INNER JOIN Weaver_Cloth_Receipt_Head b ON a.Weaver_Wages_Code = b.Weaver_Wages_Code LEFT OUTER JOIN Weaver_Piece_Checking_Head c ON b.Weaver_Piece_Checking_Code = c.Weaver_Piece_Checking_Code Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.Weaver_Wages_Code = '" & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Code").ToString) & "'", con)
        Dt1 = New DataTable
        Da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0).Item("Weaver_Piece_Checking_No").ToString) = False Then
                vPcsChkNo = Dt1.Rows(0).Item("Weaver_Piece_Checking_No").ToString
            End If
            If IsDBNull(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString) = False Then
                If Trim(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString) <> "" Then
                    vPcsChkDate = Format(Convert.ToDateTime(Dt1.Rows(0).Item("Weaver_Piece_Checking_Date").ToString), "dd-MM-yyyy").ToString
                End If

            End If
        End If
        Dt1.Clear()

        Common_Procedures.Print_To_PrintDocument(e, "IR NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & vPcsChkNo, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "IR DATE ", LMargin + C2 + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & vPcsChkDate, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        pFont = New Font("Calibri", 11, FontStyle.Regular)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, pFont, , True)


        If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then

            Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        Else

            Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C1 + 10, CurY, 0, 0, pFont)
            pFont = New Font("Calibri", 11, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C1 + W1 + 20, CurY, 0, 0, pFont)
        End If


        Common_Procedures.Print_To_PrintDocument(e, "DC DATE ", LMargin + C2 + 10, CurY, 0, 0, pFont)
        pFont = New Font("Calibri", 11, FontStyle.Regular)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

        ' End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY

        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(2))

    End Sub

    Private Sub Printing_Format5_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim i As Integer
        Dim Cmp_Name As String
        Dim p1Font As Font

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next


        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt


        CurY = CurY + 10

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            If Prn_In_English_STS = True Then
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "Weaver's Signature", LMargin + 10, CurY, 0, 0, p1Font)
            Else
                p1Font = New Font("TAM_SC_Suvita", 11, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, p1Font)
            End If

        End If
        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, p1Font)

            Else
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

            End If
        End If

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1032" Then
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        End If

    End Sub

    Private Sub Printing_Format6(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' common Format with Stock
        Dim cmd As New SqlClient.SqlCommand
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim Oppav As Single = 0, Opyn As Single = 0, OpEmty As Single = 0, OpCly As Single = 0, oPN As String = ""
        Dim Ipav As Single = 0, Iyn As Single = 0, IEmty As Single = 0, ICly As Single = 0, INo As String = ""
        Dim Opav As Single = 0, Oyn As Single = 0, OEmty As Single = 0, OCly As Single = 0, ONo As String = ""
        Dim Rpav As Single = 0, Ryn As Single = 0, REmty As Single = 0, RCly As Single = 0, RNo As String = ""
        Dim Tpav As Single = 0, Tyn As Single = 0, TEmty As Single = 0, TCly As Single = 0, TNo As String = ""
        Dim CurY1 As Single = 0
        Dim Rndoffamt As Single = 0
        Dim Ntamt As Single = 0
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable

        Dim OpN1 As String = "", Ino1 As String = "", ONo1 As String = "", Rno1 As String = "", TNo1 As String = ""

        p1Font = New Font("Calibri", 11, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30
            .Right = 50
            .Top = 1 ' 30
            .Bottom = 25 ' 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        pTFont = New Font("Amudham", 10, FontStyle.Bold)
        p1Font = New Font("Amudham", 10, FontStyle.Bold)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}


        ClAr(1) = Val(100) : ClAr(2) = 85 : ClAr(3) = 70 : ClAr(4) = 100 : ClAr(5) = 75 : ClAr(6) = 130
        ClAr(7) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6))

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)  '285
        C2 = C1 + ClAr(5)  '385



        '  If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
        TxtHgt = 18
        '  Else
        '  TxtHgt = 17.25 ' 18  ' 18.5
        '  End If

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format6_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = 0

                CurY = CurY
                Weaver_AllStock_Ledger(Val(prn_HdDt.Rows(0).Item("Ledger_IdNo").ToString), prn_HdDt.Rows(0).Item("Weaver_Wages_Date").ToString)

                OpEmty = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Int6) as OP_EmptyBeam from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'BEAM' and Int3 = 0 and Int6 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        OpEmty = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                Oppav = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Meters6) as OP_Pavu from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'PAVU' and Int3 = 0 and Meters6 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        Oppav = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                Opyn = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Weight1) as OP_Yarn from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'YARN' and Int3 = 0 and Weight1 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        Opyn = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                OpCly = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Currency1) as OP_Amount from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'AMOUNT' and Int3 = 0 and Currency1 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        OpCly = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()



                CurY = CurY + TxtHgt + 5

                Common_Procedures.Print_To_PrintDocument(e, "Kd; ,Ug;g[", LMargin + 5, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, oPN, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(Oppav), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(Opyn), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Val(OpEmty), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(OpCly), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, OpN1, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 5, CurY, 0, 0, pFont)
                CurY = CurY + TxtHgt + 5
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)



                INo = ""
                Ino1 = ""
                IEmty = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Int6) as InWard_EmptyBeam from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'BEAM' and Int3 = 1 and Int6 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        IEmty = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                Ipav = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Meters6) as InWard_Pavu from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'PAVU' and Int3 = 1 and Meters6 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        Ipav = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                Iyn = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Weight1) as InWard_Yarn from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'YARN' and Int3 = 1 and Weight1 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        Iyn = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                ICly = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Currency1) as InWard_Amount from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'AMOUNT' and Int3 = 12 and Currency1 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        ICly = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                CurY = CurY + TxtHgt
                Common_Procedures.Print_To_PrintDocument(e, "tut[", LMargin + 5, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, INo, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(Ipav)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(Iyn)), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Math.Abs(Val(IEmty)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(ICly)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, (Ino1), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 5, CurY, 0, 0, pFont)
                CurY = CurY + TxtHgt + 5
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                CurY = CurY + TxtHgt
                Rpav = Format(Val(Oppav) + Math.Abs(Val(Ipav)), "##############0.00")
                Ryn = Format(Val(Opyn) + Math.Abs(Val(Iyn)), "##############0.000")
                REmty = Val(OpEmty) + Math.Abs(Val(IEmty))
                RCly = Format(Val(OpCly) + Math.Abs(Val(RCly)), "##############0.00")
                Common_Procedures.Print_To_PrintDocument(e, "kPjp", LMargin + 5, CurY, 0, 0, pTFont)

                Common_Procedures.Print_To_PrintDocument(e, RNo, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(Rpav), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(Ryn), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Val(REmty), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(RCly), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Rno1, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 5, CurY, 0, 0, pFont)
                CurY = CurY + TxtHgt + 5
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)


                ONo = ""
                Ino1 = ""
                OEmty = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Int6) as InWard_EmptyBeam from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'BEAM' and Int3 = 2 and Int6 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        OEmty = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                Opav = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Meters6) as InWard_Pavu from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'PAVU' and Int3 = 2 and Meters6 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        Opav = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                Oyn = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Weight1) as InWard_Yarn from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'YARN' and Int3 = 2 and Weight1 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        Oyn = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()

                OCly = 0
                da2 = New SqlClient.SqlDataAdapter("select sum(Currency1) as InWard_Amount from " & Trim(Common_Procedures.ReportTempTable) & " Where name6 = 'AMOUNT' and Int3 = 11 and Currency1 <> 0", con)
                dt1 = New DataTable
                da2.Fill(dt1)
                If dt1.Rows.Count > 0 Then
                    If IsDBNull(dt1.Rows(0)(0).ToString) = False Then
                        OCly = Val(dt1.Rows(0)(0).ToString)
                    End If
                End If
                dt1.Clear()


                CurY = CurY + TxtHgt
                Common_Procedures.Print_To_PrintDocument(e, "gw;W", LMargin + 5, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, ONo, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(Opav)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(Oyn)), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Math.Abs(Val(OEmty)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(OCly)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ONo1, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 5, CurY, 0, 0, pFont)
                CurY = CurY + TxtHgt + 5
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                CurY = CurY + TxtHgt
                Tpav = Format(Val(Rpav) - Math.Abs(Val(Opav)), "##############0.00")
                Tyn = Format(Val(Ryn) + Math.Abs(Val(Oyn)), "##############0.000")
                TEmty = Val(REmty) + Math.Abs(Val(OEmty))
                TCly = Format(Val(RCly) + Math.Abs(Val(OCly)), "##############0.00")
                Common_Procedures.Print_To_PrintDocument(e, ",Ug;g[", LMargin + 5, CurY, 0, 0, pTFont)

                Common_Procedures.Print_To_PrintDocument(e, TNo, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(Tpav), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(Tyn), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, TEmty, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(TCly), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, TNo1, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 5, CurY, 0, 0, pFont)
            End If

            CurY = CurY + TxtHgt

            Printing_Format6_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)


        End Try


        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format6_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GSTNO As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "JOBWORK INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GSTNO = ""

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        '    Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        '    Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        'Else

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTNO = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If


        'End If

        CurY = CurY + TxtHgt - 15

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2 & ", " & Cmp_GSTNO, LMargin, CurY, 2, PrintWidth, pFont)

            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285




        C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + 20



        S1 = e.Graphics.MeasureString("TO :", pTFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("gP!; te;j njjp                ", pTFont).Width

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        '    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        '    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        '    If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        '    Else
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        '    End If

        'Else
        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If

        'End If


        CurY = CurY + TxtHgt - 10
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "bgah; ", LMargin + 5, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, ":  " & "M/s." & Led_Name, LMargin + S1 + 30, CurY, 0, 0, p1Font)



        Common_Procedures.Print_To_PrintDocument(e, "be", LMargin + C3 + 10, CurY, 0, 0, pTFont)
        'Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
        If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
        End If

        CurY = CurY + TxtHgt
        p1Font = New Font("Calibri", 9, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "Ch;", LMargin + 5, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, ":  " & Led_Add1, LMargin + S1 + 30, CurY, 0, 0, p1Font)

        Common_Procedures.Print_To_PrintDocument(e, "njjp", LMargin + C3 + 10, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)


        CurY = CurY + TxtHgt
        p1Font = New Font("Calibri", 9, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, p1Font)
        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(3) = CurY
        CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, "gP!; te;j njjp", LMargin + 10, CurY, 0, 0, pFont)
        'Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + W1 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "gP!; te;j njjp", LMargin + 10, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + W2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "ufk;", LMargin + C3 + 10, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, "bkhj;j gP!;", LMargin + 10, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + W2 + 30, CurY, 0, 0, pFont)

        Common_Procedures.Print_To_PrintDocument(e, "kPl;lh;", LMargin + C3 + 10, CurY, 0, 0, pTFont)
        Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
        CurY = CurY + TxtHgt + 10


        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(4) = CurY
        e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2))
        CurY = CurY + TxtHgt - 10
        '  Common_Procedures.Print_To_PrintDocument(e, "«îF", LMargin, CurY, 2, ClAr(1), pTFont)
        Common_Procedures.Print_To_PrintDocument(e, "bek;gh;", LMargin + ClAr(1), CurY, 2, ClAr(2), pTFont)
        Common_Procedures.Print_To_PrintDocument(e, "ght[ E}y;", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pTFont)
        Common_Procedures.Print_To_PrintDocument(e, "Cil E}y;", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pTFont)
        Common_Procedures.Print_To_PrintDocument(e, "fhyp nuhy;", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pTFont)

        Common_Procedures.Print_To_PrintDocument(e, "Typ tpguk;", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pTFont)

        Common_Procedures.Print_To_PrintDocument(e, "bek;gh;", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pTFont)
        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pTFont)
        'End If
        'Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pTFont)
        'Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pTFont)

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(5) = CurY


    End Sub

    Private Sub Printing_Format6_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0

        'For i = NoofDets + 1 To NoofItems_PerPage
        '    CurY = CurY + TxtHgt
        'Next

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        LnAr(6) = CurY

        CurY = CurY + 5

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        CurY = CurY + 10

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString


        'If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
        '    Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        'Else
        p1Font = New Font("Calibri", 12, FontStyle.Bold)
        Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        ' End If

        CurY = CurY + TxtHgt + 70

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub getfrieghtAmt()
        Dim frt_Lm, Tds_Perc As String
        Dim Frt_Amt As Integer
        Dim NoofLm As String
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim LedID As Integer
        Dim vFRGHT_ADD_STS As Boolean = True
        Dim vBILLDT As Date
        Dim NewCode As String

        frt_Lm = 0
        NoofLm = 0
        Tds_Perc = 0
        vFRGHT_ADD_STS = True

        LedID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

        Da = New SqlClient.SqlDataAdapter("Select Freight_Loom, NoOf_Looms, Tds_Perc from Ledger_Head Where Ledger_IdNo = " & Str(Val(LedID)), con)
        Dt = New DataTable
        Da.Fill(Dt)
        If Dt.Rows.Count > 0 Then
            If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                frt_Lm = Dt.Rows(0).Item("Freight_Loom").ToString
                NoofLm = Dt.Rows(0).Item("NoOf_Looms").ToString
                Tds_Perc = Dt.Rows(0).Item("Tds_Perc").ToString
            End If
        End If
        Dt.Clear()


        If Trim(Common_Procedures.settings.CustomerCode) = "1267" Then ' -  BRT 

        vBILLDT = dtp_Date.Value.Date

        NewCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Da = New SqlClient.SqlDataAdapter("Select sum(Freight_Charge) from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "' and Weaver_Wages_Code LIKE '" & Trim(Pk_Condition) & "%' and Ledger_IdNo = " & Str(Val(LedID)) & " and month(Weaver_Wages_Date) =  " & Str(Month(vBILLDT)) & " and year(Weaver_Wages_Date) =  " & Str(Year(vBILLDT)) & " and Weaver_Wages_Code <> '" & Trim(NewCode) & "' ", con)
        Dt = New DataTable
        Da.Fill(Dt)
        If Dt.Rows.Count > 0 Then
            If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                If Val(Dt.Rows(0)(0).ToString) <> 0 Then
                    vFRGHT_ADD_STS = False
                End If
            End If
        End If
        Dt.Clear()

        Dt.Dispose()
        Da.Dispose()

        End If

        If vFRGHT_ADD_STS = True Then
            Frt_Amt = Val(frt_Lm) * Val(NoofLm)
            txt_Freight_Charge.Text = Val(Frt_Amt)
        End If

        txt_TdsPerc.Text = Val(Tds_Perc)



    End Sub

    Private Sub cbo_Weaver_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Weaver.LostFocus
        Dim da As New SqlClient.SqlDataAdapter
        Dim dt1 As New DataTable
        Dim NewNo As Integer = 0
        Dim Led_ID As Integer = 0
        Dim cmd As New SqlClient.SqlCommand
        Dim Dt As New DataTable
        Dim Dtbl1 As New DataTable
        Dim Bal As Decimal = 0
        Dim Amt As Double = 0, BillPend As Double = 0
        Dim count As String = ""
        Dim eNDS As String = ""
        '----------- YARN
        Led_ID = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

        cmd.Connection = con

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, weight1) Select a.DeliveryTo_Idno, tP.Ledger_Name, c.count_name, sum(a.Weight) from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON  a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo = c.Count_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and a.Weight <> 0 group by a.DeliveryTo_Idno, tP.Ledger_Name, c.count_name having sum(a.Weight) <> 0"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, weight1) Select a.ReceivedFrom_Idno, tP.Ledger_Name, c.count_name, -1*sum(a.Weight) from Stock_Yarn_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON  a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN Count_Head c ON a.Count_IdNo = c.Count_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and a.Weight <> 0 group by a.ReceivedFrom_Idno, tP.Ledger_Name, c.count_name having sum(a.Weight) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(Int1, name1, name2, weight1) Select Int1, name1, name2, sum(weight1) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by Int1, name1, name2 having sum(Weight1) <> 0"
        cmd.ExecuteNonQuery()

        lbl_Yarn.Text = ""

        da = New SqlClient.SqlDataAdapter("select Int1, name1, name2, weight1 as wgt from " & Trim(Common_Procedures.ReportTempTable) & " ", con)
        Dtbl1 = New DataTable
        da.Fill(Dtbl1)
        count = ""
        If Dtbl1.Rows.Count > 0 Then
            For i = 0 To Dtbl1.Rows.Count - 1
                count = Trim(Dtbl1.Rows(i).Item("name2").ToString)
                lbl_Yarn.Text = Trim(lbl_Yarn.Text) & " " & Trim(count) & " : " & Format(Val(Dtbl1.Rows(i).Item("wgt").ToString), "#######0.000")
            Next i
        End If

        '-----------PAVU

        cmd.Connection = con

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, meters1) Select a.DeliveryTo_Idno, tP.Ledger_Name, c.endscount_name, sum(a.Meters) from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON  a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo = c.EndsCount_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & "  and a.Meters <> 0 group by a.DeliveryTo_Idno, tP.Ledger_Name, c.endscount_name having sum(a.Meters) <> 0"
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, name1, name2, meters1) Select a.ReceivedFrom_Idno, tP.Ledger_Name, c.endscount_name, -1*sum(a.Meters) from Stock_Pavu_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo INNER JOIN EndsCount_Head c ON a.EndsCount_IdNo = c.EndsCount_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & "  and a.Meters <> 0 group by a.ReceivedFrom_Idno, tP.Ledger_Name, c.endscount_name having sum(a.Meters) <> 0"
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(Int1, name1, name3, meters1) Select Int1, name1, name2, sum(meters1) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by Int1, name1, name2 having sum(meters1) <> 0"
        cmd.ExecuteNonQuery()

        lbl_Pavu.Text = ""

        da = New SqlClient.SqlDataAdapter("select Int1, name1, name3, meters1 from " & Trim(Common_Procedures.ReportTempTable) & " ", con)
        Dtbl1 = New DataTable
        da.Fill(Dtbl1)
        eNDS = ""
        If Dtbl1.Rows.Count > 0 Then
            For i = 0 To Dtbl1.Rows.Count - 1
                eNDS = Trim(Dtbl1.Rows(i).Item("name3").ToString)
                lbl_Pavu.Text = Trim(lbl_Pavu.Text) & " " & Trim(eNDS) & " : " & Format(Val(Dtbl1.Rows(i).Item("meters1").ToString), "#######0.00")
            Next i
        End If


        '-------- Empty Beam
        cmd.Connection = con

        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempSubTable) & ""
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Truncate table " & Trim(Common_Procedures.ReportTempTable) & ""
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, Name1, Int2) Select a.DeliveryTo_Idno, tP.Ledger_Name,  sum(a.Empty_Beam+a.Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.DeliveryTo_Idno <> 0 and a.DeliveryTo_Idno = tP.Ledger_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and  (a.Empty_Beam+a.Pavu_Beam) <> 0 group by a.DeliveryTo_Idno, tP.Ledger_Name having sum(a.Empty_Beam+a.Pavu_Beam) <> 0 "
        cmd.ExecuteNonQuery()
        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempSubTable) & "(Int1, Name1, Int2) Select a.ReceivedFrom_Idno, tP.Ledger_Name,  -1*sum(a.Empty_Beam+a.Pavu_Beam) from Stock_Empty_BeamBagCone_Processing_Details a INNER JOIN Company_Head tZ ON a.Company_IdNo = tZ.Company_IdNo INNER JOIN Ledger_Head tP ON a.ReceivedFrom_Idno <> 0 and a.ReceivedFrom_Idno = tP.Ledger_IdNo Where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and tP.ledger_idno = " & Str(Val(Led_ID)) & " and (a.Empty_Beam+a.Pavu_Beam) <> 0 group by a.ReceivedFrom_Idno, tP.Ledger_Name having sum(a.Empty_Beam+a.Pavu_Beam) <> 0 "
        cmd.ExecuteNonQuery()

        cmd.CommandText = "Insert into " & Trim(Common_Procedures.ReportTempTable) & "(Int1, Name1, Int2) Select Int1, Name1,  sum(Int2) from " & Trim(Common_Procedures.ReportTempSubTable) & " group by Int1, Name1  having sum(Int2) <> 0 "
        cmd.ExecuteNonQuery()

        lbl_EmptyBeam.Text = ""

        da = New SqlClient.SqlDataAdapter("select Int1, name1, Int2 from " & Trim(Common_Procedures.ReportTempTable) & " ", con)
        Dtbl1 = New DataTable
        da.Fill(Dtbl1)

        If Dtbl1.Rows.Count > 0 Then
            For i = 0 To Dtbl1.Rows.Count - 1
                lbl_EmptyBeam.Text = Val(Dtbl1.Rows(i).Item("Int2").ToString) & " Beams"
            Next i
        End If
        Dt.Dispose()
        da.Dispose()


        If Trim(UCase(cbo_Weaver.Tag)) <> Trim(UCase(cbo_Weaver.Text)) Then
            cbo_Weaver.Tag = cbo_Weaver.Text
            getfrieghtAmt()
        End If

    End Sub

    Private Sub Printing_Format7(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim I As Integer = 0
        Dim NoofItems_PerPage As Integer = 0, NoofDets As Integer = 0
        Dim TxtHgt As Single = 0
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim W1, W2 As Single
        Dim snd As String, sec As String, bit As String, rjt As String, otr As String
        Dim CurY1 As Single = 0
        Dim RndOffAmt As String = 0
        Dim NtAmt As String = 0
        Dim vTotWgsAmt As String = ""

        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                PrintDocument1.DefaultPageSettings.PaperSize = ps
                Exit For
            End If
        Next

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30
            .Right = 50
            .Top = 30 ' 30
            .Bottom = 25 ' 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClAr(1) = Val(80) : ClAr(2) = 50 : ClAr(3) = 55 : ClAr(4) = 55 : ClAr(5) = 80 : ClAr(6) = 80 : ClAr(7) = 70 : ClAr(8) = 70 : ClAr(9) = 100
        ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)
        C2 = C1 + ClAr(5)


        TxtHgt = 15

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format7_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1
                NoofItems_PerPage = 32


                If prn_PageNo <= 1 Then


                    CurY1 = CurY

                    '---Right Side

                    CurY = CurY + TxtHgt - 10

                    snd = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString), "##########0.00")
                    sec = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString), "##########0.00")
                    bit = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString), "##########0.00")
                    rjt = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString), "##########0.00")
                    otr = Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString), "##########0.00")

                    NtAmt = Format(Val(snd) + Val(sec) + Val(bit) + Val(rjt) + Val(otr), "##########0.00")

                    Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type1, LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type2, LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type3, LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt

                    If Val(rjt) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type4, LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt
                    If Val(otr) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.ClothType.Type5, LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)

                    End If

                    RndOffAmt = Format(Format(Val(NtAmt), "##########0") - Format(Val(NtAmt), "##########0.00"), "##########0.00")
                    If Val(RndOffAmt) <> 0 Then
                        CurY = CurY + TxtHgt
                        If Val(RndOffAmt) > 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        ElseIf RndOffAmt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(RndOffAmt), "###########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    End If

                    CurY = CurY + TxtHgt + 5
                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY, PageWidth - 10, CurY)

                    CurY = CurY + TxtHgt - 10
                    Common_Procedures.Print_To_PrintDocument(e, "Total ", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY, 1, 0, pFont)

                    CurY = CurY + TxtHgt + 5
                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY, PageWidth - 10, CurY)


                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "No Of Pcs", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 75, CurY, 0, 0, pFont)


                    Common_Procedures.Print_To_PrintDocument(e, "Consumed Yarn Weight ", LMargin + C1 + 200, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 100, CurY, 0, 0, pFont)




                    W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", pFont).Width
                    W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", pFont).Width


                    '----Left Side 

                    CurY1 = CurY1 + TxtHgt - 10
                    Common_Procedures.Print_To_PrintDocument(e, "Fabric Name", LMargin + 10, CurY1, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "Fabric Receipt Meters", LMargin + 10, CurY1, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    CurY1 = CurY1 + TxtHgt
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString) >= 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Excess", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Short", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If



                    vTotWgsAmt = 0

                    CurY1 = CurY1 + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "Gross Wages Amount", LMargin + 10, CurY1, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    vTotWgsAmt = Format(Val(vTotWgsAmt) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString), "##########.00")

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "Freight", LMargin + 10, CurY1, 0, 0, pFont)
                        p1Font = New Font("Calibri", 8, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "(-)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        vTotWgsAmt = Format(Val(vTotWgsAmt) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString), "##########.00")
                    End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "Advance Amount", LMargin + 10, CurY1, 0, 0, pFont)
                        p1Font = New Font("Calibri", 8, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "(-)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        vTotWgsAmt = Format(Val(vTotWgsAmt) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), "##########.00")
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "Advance Amount", LMargin + 10, CurY1, 0, 0, pFont)
                        p1Font = New Font("Calibri", 8, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "(+)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        vTotWgsAmt = Format(Val(vTotWgsAmt) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "##########.00")
                    End If

                    CurY1 = CurY1 + TxtHgt + 2

                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 2
                    Common_Procedures.Print_To_PrintDocument(e, "   Total", LMargin + C1 - 110, CurY1, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vTotWgsAmt), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    CurY1 = CurY1 + TxtHgt + (TxtHgt \ 3)
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, pFont)
                        p1Font = New Font("Calibri", 8, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "(-)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        vTotWgsAmt = Format(Val(vTotWgsAmt) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString), "##########.00")
                    End If


                    '---Gst


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt + (TxtHgt \ 2)
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Value", LMargin + 10, CurY1, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                            CurY1 = CurY1 + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, "CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, pFont)
                            p1Font = New Font("Calibri", 8, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "(+)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                            vTotWgsAmt = Format(Val(vTotWgsAmt) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "##########.00")
                        End If


                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                            CurY1 = CurY1 + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, pFont)
                            p1Font = New Font("Calibri", 8, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "(+)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                            vTotWgsAmt = Format(Val(vTotWgsAmt) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "##########.00")
                        End If

                    End If


                    RndOffAmt = Format(Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString), "##########0") - Format(Val(vTotWgsAmt), "##########0.00"), "##########0.00")
                    If Val(RndOffAmt) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        If Val(RndOffAmt) > 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off ", LMargin + 10, CurY1, 0, 0, pFont)
                            p1Font = New Font("Calibri", 8, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "(+)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                        ElseIf RndOffAmt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off ", LMargin + 10, CurY1, 0, 0, pFont)
                            p1Font = New Font("Calibri", 8, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "(-)", LMargin + C1 - 90, CurY1, 1, 0, p1Font)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(RndOffAmt), "###########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    CurY1 = CurY1 + TxtHgt + 5
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + TxtHgt - 10
                    p1Font = New Font("Calibri", 10, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Net Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString), "############0.00"), LMargin + C1 - 10, CurY1, 1, 0, p1Font)

                    If CurY1 > CurY Then CurY = CurY1

                    CurY = CurY + TxtHgt + 5

                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    LnAr(4) = CurY
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(3))


                Else
                    NoofItems_PerPage = 15

                End If

                CurY = CurY + TxtHgt - 10
                Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin, CurY, 2, ClAr(1), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "DC/RC", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3) + ClAr(4), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5) + ClAr(6), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7) + ClAr(8), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9) + ClAr(10), pFont)

                CurY = CurY + TxtHgt + 6
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2), CurY)
                LnAr(8) = CurY
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + +ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY)
                LnAr(9) = CurY
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY)
                LnAr(10) = CurY
                e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY)
                LnAr(11) = CurY

                CurY = CurY + TxtHgt - 10
                Common_Procedures.Print_To_PrintDocument(e, "NO", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "DB", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "CR", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "Issue", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "Recvd", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
                'Common_Procedures.Print_To_PrintDocument(e, "Excs", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "Issue", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "Recvd", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "DB", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
                Common_Procedures.Print_To_PrintDocument(e, "CR", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pFont)

                CurY = CurY + TxtHgt + 5
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                LnAr(5) = CurY

                NoofDets = 0

                CurY = CurY - 10

                If prn_DetDt.Rows.Count > 0 Then

                    Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 10, CurY, 1, 0, pFont)

                            NoofDets = NoofDets + 1

                            If Val(Common_Procedures.settings.WeaverWages_Print_NoNeed_2nd_Page) = 1 Then
                                Printing_Format7_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                                GoTo LOOP2

                            Else

                                Printing_Format7_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True

                                Return

                            End If

                        End If

                        prn_Tot_EBeam_Stk = prn_Tot_EBeam_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)
                        prn_Tot_Pavu_Stk = prn_Tot_Pavu_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)
                        prn_Tot_Yarn_Stk = prn_Tot_Yarn_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)
                        prn_Tot_Amt_Bal = prn_Tot_Amt_Bal + Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)

                        CurY = CurY + TxtHgt
                        If IsDate(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString) = True Then
                            Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString), "dd-MM-yy").ToString, LMargin + 5, CurY, 0, 0, pFont)
                        Else

                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, "Opening", LMargin + 5, CurY, 0, 0, pFont)
                            End If

                        End If

                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) >= 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Math.Abs(Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) <> 0 Then
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) > 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                            End If
                            'If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuExcShtMtrs").ToString) <> 0 Then
                            '    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuExcShtMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                            'End If
                        End If

                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) <> 0 Then

                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) > 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                            End If

                        End If

                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) <> 0 Then
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) < 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 5, CurY, 1, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
                            End If
                        End If

                        NoofDets = NoofDets + 1

                        If NoofDets = 1 Then
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                                CurY = CurY + TxtHgt + 10
                                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                                CurY = CurY - 10
                            End If
                        End If

                        prn_DetIndx = prn_DetIndx + 1

                    Loop

                End If

            End If


LOOP1:
            CurY = CurY + TxtHgt

            Printing_Format7_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

LOOP2:
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True

        Else
            e.HasMorePages = False

        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format7_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GSTNO As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p1Font)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "WEAVING BILL", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        CurY = CurY + TxtHgt + 5
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GSTNO = ""

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        '    Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        '    Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        'Else

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTNO = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If


        'End If

        CurY = CurY + TxtHgt - 12

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + strHeight - 9
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTNO, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285


        C2 = C1 + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 20
        C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 20


        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        '    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        '    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        '    If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        '    Else
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        '    End If

        'Else
        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If

        'End If

        If Val(prn_WagesDontShowToPartyName) = 1 Then
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "BILL NO", LMargin + 10, CurY + 5, 0, 0, pFont)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + 140 + 10, CurY + 5, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)


            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC.NO", LMargin + C3 - 65, CurY + 5, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 40, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC.NO", LMargin + C3 - 65, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 30, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C2 - 20, CurY + 5, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC DATE", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
            End If
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 10, CurY, 0, 0, pFont)

            CurY = CurY + 5

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3 - 75, CurY, LMargin + C3 - 75, LnAr(2))

        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, p1Font)


            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
                Common_Procedures.Print_To_PrintDocument(e, "REPORT NO ", LMargin + C3 + 10, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "BILL NO ", LMargin + C3 + 10, CurY, 0, 0, pFont)
            End If
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If


            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
                Common_Procedures.Print_To_PrintDocument(e, "REPORT DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
            End If
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, pFont)


            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 40, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 40, CurY, 0, 0, pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC. NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "REC. DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            End If
            CurY = CurY + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2))

        End If

    End Sub

    Private Sub Printing_Format7_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim S1, C1, C2 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        CurY = CurY + TxtHgt - 10
        Common_Procedures.Print_To_PrintDocument(e, "Closing", LMargin + 5, CurY, 0, 0, pFont)
        If Val(prn_Tot_EBeam_Stk) > 0 Then
            Common_Procedures.Print_To_PrintDocument(e, Math.Abs(Val(prn_Tot_EBeam_Stk)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, Math.Abs(Val(prn_Tot_EBeam_Stk)), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
        End If
        If Val(prn_Tot_Pavu_Stk) >= 0 Then
            Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_Tot_Pavu_Stk)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 12, CurY, 1, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_Tot_Pavu_Stk)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 12, CurY, 1, 0, pFont)
        End If
        If Val(prn_Tot_Yarn_Stk) >= 0 Then
            Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_Tot_Yarn_Stk)), "##########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_Tot_Yarn_Stk)), "##########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
        End If
        If Val(prn_Tot_Amt_Bal) >= 0 Then
            Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_Tot_Amt_Bal)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, Format(Math.Abs(Val(prn_Tot_Amt_Bal)), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) + ClAr(11) - 5, CurY, 1, 0, pFont)
        End If

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        LnAr(6) = CurY

        CurY = CurY + 5


        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(8))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(9))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(9))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(10))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(11))



        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ",  ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ",  ", "") & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
            End If
            Dt1.Clear()

            C1 = ClAr(1) + ClAr(2) + ClAr(3)
            C2 = C1 + ClAr(4) + ClAr(5)

            S1 = e.Graphics.MeasureString("Ë™  :", pFont).Width

            CurY = CurY + 5
            p1Font = New Font("Calibri", 12, FontStyle.Bold Or FontStyle.Underline)
            Common_Procedures.Print_To_PrintDocument(e, "STOCK SUMMARY", LMargin + 10, CurY, 0, 0, p1Font)

            Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

            Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + C2 + 30, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt + 5

            Common_Procedures.Print_To_PrintDocument(e, "(as on  " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

            Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


            CurY = CurY + TxtHgt + 5
            Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + C1 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 0 Then
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
            CurY = CurY + 5
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)
        End If

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "Receiver's Signature", LMargin + 10, CurY, 0, 0, pFont)
        Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)


        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub
    Private Sub Printing_Format8(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim CurY1 As Single = 0
        Dim Rndoffamt As Single = 0
        Dim Ntamt As Single = 0
        Dim ItmNm1 As String = "", ItmNm2 As String = ""
        Dim ItmNm3 As String = "", ItmNm4 As String = ""
        Dim I As Integer = 0

        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If


        p1Font = New Font("Calibri", 11, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30
            .Right = 50
            .Top = 30 ' 30
            .Bottom = 25 ' 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
        p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then

            ClAr(1) = Val(110) : ClAr(2) = 80 : ClAr(3) = 85 : ClAr(4) = 85 : ClAr(5) = 90 : ClAr(6) = 0 : ClAr(7) = 90 : ClAr(8) = 0 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 140 '285
            C2 = C1 + ClAr(5)  '385

        Else
            ClAr(1) = Val(65) : ClAr(2) = 160 : ClAr(3) = 40 : ClAr(4) = 40 : ClAr(5) = 75 : ClAr(6) = 75 : ClAr(7) = 65 : ClAr(8) = 65 : ClAr(9) = 75
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))


            'ClAr(1) = Val(80) : ClAr(2) = 50 : ClAr(3) = 55 : ClAr(4) = 55 : ClAr(5) = 80 : ClAr(6) = 80 : ClAr(7) = 70 : ClAr(8) = 70 : ClAr(9) = 100
            'ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)  '285
            C2 = C1 + ClAr(5)  '385

        End If


        '  If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
        TxtHgt = 15
        '  Else
        '  TxtHgt = 17.25 ' 18  ' 18.5
        '  End If

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format8_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofItems_PerPage = 40

                If prn_PageNo <= 1 Then


                    CurY1 = CurY
                    'Right Side

                    CurY = CurY + TxtHgt - 10
                    snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                    sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                    bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                    rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                    otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                    Ntamt = snd + sec + bit + rjt + otr
                    '  Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "I Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt


                    pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "II Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    ' Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then

                        pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "H†", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        '  CurY = CurY + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString) <> 0 Then
                            CurY = CurY + TxtHgt
                            pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString) * (prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If
                    End If

                    CurY = CurY + TxtHgt

                    If Val(rjt) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt
                    If Val(otr) <> 0 Then
                        Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If



                    End If

                    CurY = CurY + TxtHgt

                    W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", pFont).Width
                    W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", pFont).Width


                    'Left Side 
                    CurY1 = CurY1 + TxtHgt - 10
                    Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt

                    pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                    Else

                        Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                        'Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    CurY1 = CurY1 + TxtHgt
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    p1Font = New Font("Calibri", 9, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                    'Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è ", LMargin + 10, CurY, 0, 0, p1Font)
                    pFont = New Font("Calibri", 9, FontStyle.Regular)

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY1, 0, 0, p1Font)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY1, 0, 0, p1Font)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 2
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    'Gst
                    CurY1 = CurY1 + TxtHgt - 10
                    'p1Font = New Font("Calibri", 9, FontStyle.Bold Or FontStyle.Underline)
                    'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    '    Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    'End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("calibri", 10, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        CurY1 = CurY1 + TxtHgt
                        p1Font = New Font("Calibri", 10, FontStyle.Bold Or FontStyle.Underline)
                        Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    End If


                    Rndoffamt = Format(Val(Ntamt), "##########0") - Ntamt
                    If Rndoffamt <> 0 Then
                        If Rndoffamt > 0 Then
                            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY1 - 10, 0, 0, p1Font)
                        ElseIf Rndoffamt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY1 - 10, 0, 0, pFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), PageWidth - 10, CurY1 - 10, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 - 5, PageWidth - 10, CurY1 - 5)

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY1, 0, 0, pTFont)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY1, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), PageWidth - 10, CurY1, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 + 5, PageWidth - 10, CurY1 + 5)


                    CurY1 = CurY1 + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY1, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 50, CurY1 - 3, 0, 0, pFont)


                    Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY1, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY1 - 3, 0, 0, pFont)
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 5
                    Common_Procedures.Print_To_PrintDocument(e, "Total Amount", LMargin + 10, CurY1, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString), "############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    If CurY1 > CurY Then CurY = CurY1

                    CurY = CurY + TxtHgt + 8

                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    LnAr(4) = CurY
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(3))


                Else
                    NoofItems_PerPage = 15

                End If

                CurY = CurY + TxtHgt - 10
                ' ªï‹

                Common_Procedures.Print_To_PrintDocument(e, "«îF", LMargin, CurY, 2, ClAr(1), pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "Mõó‹", LMargin + ClAr(1), CurY, 2, ClAr(2), pTFont)

                Common_Procedures.Print_To_PrintDocument(e, "d‹", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "õ/ð", LMargin + ClAr(1) + ClAr(2), CurY + TxtHgt, 2, ClAr(3), pTFont)

                Common_Procedures.Print_To_PrintDocument(e, "d‹", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY + TxtHgt, 2, ClAr(4), pTFont)



                Common_Procedures.Print_To_PrintDocument(e, "ð£¾", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY + TxtHgt, 2, ClAr(5), pTFont)

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                    Common_Procedures.Print_To_PrintDocument(e, "ð£¾", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY + TxtHgt, 2, ClAr(6), pTFont)
                End If
                Common_Procedures.Print_To_PrintDocument(e, "Ë™", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY + TxtHgt, 2, ClAr(7), pTFont)
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                    Common_Procedures.Print_To_PrintDocument(e, "Ë™", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY + TxtHgt, 2, ClAr(8), pTFont)
                End If
                Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY + TxtHgt, 2, ClAr(9), pTFont)

                Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY + TxtHgt, 2, ClAr(10), pTFont)

                CurY = CurY + TxtHgt + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                LnAr(5) = CurY


                NoofDets = 0

                CurY = CurY - 10

                If prn_DetDt.Rows.Count > 0 Then

                    Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 10, CurY, 1, 0, pFont)

                            NoofDets = NoofDets + 1

                            If Val(Common_Procedures.settings.WeaverWages_Print_NoNeed_2nd_Page) = 1 Then
                                Printing_Format8_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                                GoTo LOOP2

                            Else

                                Printing_Format8_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True

                                Return

                            End If

                        End If

                        prn_Tot_EBeam_Stk = prn_Tot_EBeam_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)
                        prn_Tot_Pavu_Stk = prn_Tot_Pavu_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)
                        prn_Tot_Yarn_Stk = prn_Tot_Yarn_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)
                        prn_Tot_Amt_Bal = prn_Tot_Amt_Bal + Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)

                        CurY = CurY + TxtHgt
                        If IsDate(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString) = True Then
                            Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString), "dd-MM-yy").ToString, LMargin + 5, CurY, 0, 0, pFont)
                        Else

                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, "Opening", LMargin + 5, CurY, 0, 0, pFont)
                            End If

                        End If

                        'Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString & " " & prn_DetDt.Rows(prn_DetIndx).Item("Narration").ToString, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)


                        ItmNm1 = prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString & IIf(prn_DetDt.Rows(prn_DetIndx).Item("Narration").ToString <> "", "-", "") & prn_DetDt.Rows(prn_DetIndx).Item("Narration").ToString
                        ItmNm2 = ""
                        If Len(ItmNm1) > 30 Then
                            For I = 30 To 1 Step -1
                                If Mid$(Trim(ItmNm1), I, 1) = " " Or Mid$(Trim(ItmNm1), I, 1) = "," Or Mid$(Trim(ItmNm1), I, 1) = "." Or Mid$(Trim(ItmNm1), I, 1) = "-" Or Mid$(Trim(ItmNm1), I, 1) = "/" Or Mid$(Trim(ItmNm1), I, 1) = "_" Or Mid$(Trim(ItmNm1), I, 1) = "(" Or Mid$(Trim(ItmNm1), I, 1) = ")" Or Mid$(Trim(ItmNm1), I, 1) = "\" Or Mid$(Trim(ItmNm1), I, 1) = "[" Or Mid$(Trim(ItmNm1), I, 1) = "]" Or Mid$(Trim(ItmNm1), I, 1) = "{" Or Mid$(Trim(ItmNm1), I, 1) = "}" Then Exit For
                            Next I
                            If I = 0 Then I = 30
                            ItmNm2 = Microsoft.VisualBasic.Right(Trim(ItmNm1), Len(ItmNm1) - I)
                            ItmNm1 = Microsoft.VisualBasic.Left(Trim(ItmNm1), I - 1)
                        End If

                        ItmNm3 = ItmNm2
                        ItmNm4 = ""
                        If Len(ItmNm3) > 30 Then
                            For I = 30 To 1 Step -1
                                If Mid$(Trim(ItmNm3), I, 1) = " " Or Mid$(Trim(ItmNm3), I, 1) = "," Or Mid$(Trim(ItmNm3), I, 1) = "." Or Mid$(Trim(ItmNm3), I, 1) = "-" Or Mid$(Trim(ItmNm3), I, 1) = "/" Or Mid$(Trim(ItmNm3), I, 1) = "_" Or Mid$(Trim(ItmNm3), I, 1) = "(" Or Mid$(Trim(ItmNm3), I, 1) = ")" Or Mid$(Trim(ItmNm3), I, 1) = "\" Or Mid$(Trim(ItmNm3), I, 1) = "[" Or Mid$(Trim(ItmNm3), I, 1) = "]" Or Mid$(Trim(ItmNm3), I, 1) = "{" Or Mid$(Trim(ItmNm3), I, 1) = "}" Then Exit For
                            Next I
                            If I = 0 Then I = 30
                            ItmNm4 = Microsoft.VisualBasic.Right(Trim(ItmNm3), Len(ItmNm3) - I)
                            ItmNm3 = Microsoft.VisualBasic.Left(Trim(ItmNm3), I - 1)
                        End If


                        Common_Procedures.Print_To_PrintDocument(e, ItmNm1, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)


                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) <> 0 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                If prn_DetIndx <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                End If
                            Else

                                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                            End If
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) <> 0 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                If prn_DetIndx <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                End If
                            Else

                                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 5, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Amt_Bal), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
                        End If

                        NoofDets = NoofDets + 1

                        'If Trim(ItmNm2) <> "" Then
                        '    CurY = CurY + TxtHgt
                        '    Common_Procedures.Print_To_PrintDocument(e, " " & ItmNm2, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                        '    NoofDets = NoofDets + 1
                        'End If
                        If Trim(ItmNm3) <> "" Then
                            CurY = CurY + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, " " & ItmNm3, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                            NoofDets = NoofDets + 1
                        End If
                        If Trim(ItmNm4) <> "" Then
                            CurY = CurY + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, " " & ItmNm4, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                            NoofDets = NoofDets + 1
                        End If

                        prn_DetIndx = prn_DetIndx + 1

                    Loop

                End If

            End If

LOOP1:
            CurY = CurY + TxtHgt

            Printing_Format8_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

LOOP2:
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True

        Else
            e.HasMorePages = False

        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format8_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GSTNO As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p1Font)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GSTNO = ""

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        '    Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        '    Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        'Else

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTNO = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If


        'End If

        CurY = CurY + TxtHgt - 15

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + strHeight - 9
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTNO, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
            C2 = 560 ' C1 + ClAr(5) + 70 + 70 + 70
            C3 = 420 'ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 70 + 20
        Else
            C2 = C1 + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 20
            C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 20
        End If


        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        '    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        '    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        '    If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        '    Else
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        '    End If

        'Else
        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If

        'End If

        If Val(prn_WagesDontShowToPartyName) = 1 Then
            CurY = CurY + TxtHgt
            'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then

                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY + 5, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)


            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C3 - 65, CurY + 5, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 40, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C3 - 65, CurY, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 30, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
            End If

            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 10, CurY, 0, 0, pFont)

            CurY = CurY + 5

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3 - 75, CurY, LMargin + C3 - 75, LnAr(2))


        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, p1Font)



            Common_Procedures.Print_To_PrintDocument(e, "BILL NO ", LMargin + C3 + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, p1Font)


            'p1Font = New Font("TAM_SC_Suvita", 8, FontStyle.Bold)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 40, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 40, CurY, 0, 0, pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC. NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "REC. DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            End If
            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2))

        End If

    End Sub

    Private Sub Printing_Format8_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim S1, C1, C2 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        'CurY = CurY + TxtHgt
        'e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        LnAr(6) = CurY

        CurY = CurY + 5

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        CurY = CurY + 10

        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
            End If
            Dt1.Clear()

            C1 = ClAr(1) + ClAr(2) + ClAr(3)
            C2 = C1 + ClAr(4) + ClAr(5)

            S1 = e.Graphics.MeasureString("Ë™  :", pFont).Width

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then '---- Nithya Textiles (Sedapalayam)


                Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTFont)

                Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                CurY = CurY + TxtHgt

                Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


                CurY = CurY + TxtHgt

                Common_Procedures.Print_To_PrintDocument(e, "Ë™  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

            Else
                CurY = CurY + TxtHgt
            End If

        Else
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        'Else
        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        'End If

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        Else
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub



    Private Sub Printing_Format9(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' common Format with Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim CurY1 As Single = 0
        Dim Rndoffamt As Single = 0
        Dim Ntamt As Single = 0
        Dim TpMargin As Single = 0
        Dim PCnt As Integer = 0, PrntCnt As Integer = 0


        PrntCnt = 1

        If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then

            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    Exit For
                End If
            Next

            If PrntCnt2ndPageSTS = False Then
                PrntCnt = 2
            End If

        Else

            'Dim pkCustomSize1 As New System.Drawing.Printing.PaperSize("PAPER 8X6", 800, 600)
            'PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = pkCustomSize1
            'PrintDocument1.DefaultPageSettings.PaperSize = pkCustomSize1
            'e.PageSettings.PaperSize = pkCustomSize1
            'PrintDocument1.DefaultPageSettings.Landscape = False
            For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
                If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                    ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                    PrintDocument1.DefaultPageSettings.PaperSize = ps
                    PrintDocument1.PrinterSettings.DefaultPageSettings.PaperSize = ps
                    e.PageSettings.PaperSize = ps
                    Exit For
                End If
            Next

        End If

        'If prn_PageSize_SetUP_STS = False Then
        '    set_PaperSize_For_PrintDocument1()
        '    prn_PageSize_SetUP_STS = True
        'End If


        p1Font = New Font("Calibri", 11, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30
            .Right = 50
            If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then
                .Top = 10 ' 30
            Else
                .Top = 30 '30
            End If
            .Bottom = 25 ' 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
        p1Font = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then

            ClAr(1) = Val(110) : ClAr(2) = 80 : ClAr(3) = 85 : ClAr(4) = 85 : ClAr(5) = 90 : ClAr(6) = 0 : ClAr(7) = 90 : ClAr(8) = 0 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 140 '285
            C2 = C1 + ClAr(5)  '385

        Else
            ClAr(1) = Val(80) : ClAr(2) = 50 : ClAr(3) = 55 : ClAr(4) = 55 : ClAr(5) = 80 : ClAr(6) = 80 : ClAr(7) = 70 : ClAr(8) = 70 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)  '285
            C2 = C1 + ClAr(5)  '385

        End If


        '  If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then

        If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then
            TxtHgt = 13.5
        Else
            TxtHgt = 15.5
        End If

        '  Else
        '  TxtHgt = 17.25 ' 18  ' 18.5
        '  End If

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        TpMargin = TMargin

        PrntCnt2ndPageSTS = False



        For PCnt = 1 To PrntCnt

            If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then

                If PCnt = 1 Then
                    prn_PageNo = 0

                    prn_DetIndx = 0
                    prn_DetSNo = 0

                    prn_Tot_EBeam_Stk = 0
                    prn_Tot_Pavu_Stk = 0
                    prn_Tot_Yarn_Stk = 0
                    prn_Tot_Amt_Bal = 0

                    TpMargin = TMargin

                Else

                    prn_PageNo = 0

                    prn_DetIndx = 0
                    prn_DetSNo = 0

                    prn_Tot_EBeam_Stk = 0
                    prn_Tot_Pavu_Stk = 0
                    prn_Tot_Yarn_Stk = 0
                    prn_Tot_Amt_Bal = 0

                    TpMargin = 600 + TMargin  ' 600 + TMargin

                End If

            End If

            Try

                If prn_HdDt.Rows.Count > 0 Then

                    Printing_Format9_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TpMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                    NoofDets = NoofDets + 1
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                        NoofItems_PerPage = 9
                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
                        NoofItems_PerPage = 38
                    Else
                        NoofItems_PerPage = 6
                    End If

                    If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then
                        If prn_DetDt.Rows.Count > NoofItems_PerPage Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1309" Then
                                NoofItems_PerPage = 44
                            Else
                                NoofItems_PerPage = 40
                            End If
                        End If
                    End If

                    If prn_PageNo <= 1 Then


                        CurY1 = CurY
                        'Right Side

                        CurY = CurY + TxtHgt - 10
                        snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                        sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                        bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                        rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                        otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                        Ntamt = snd + sec + bit + rjt + otr
                        '  Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "I Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If

                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                        CurY = CurY + TxtHgt


                        pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "II Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        ' Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                        CurY = CurY + TxtHgt

                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then

                            pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                                Common_Procedures.Print_To_PrintDocument(e, "H†", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                            End If
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            '  CurY = CurY + TxtHgt
                            If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString) <> 0 Then
                                CurY = CurY + TxtHgt
                                pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                                Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                                pFont = New Font("Calibri", 9, FontStyle.Regular)
                                Common_Procedures.Print_To_PrintDocument(e, "-" & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString) * (prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, "-" & prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                            End If
                        End If

                        CurY = CurY + TxtHgt

                        If Val(rjt) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If


                        CurY = CurY + TxtHgt
                        If Val(otr) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                                Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                            End If



                        End If

                        CurY = CurY + TxtHgt

                        W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", pFont).Width
                        W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", pFont).Width


                        'Left Side 
                        CurY1 = CurY1 + TxtHgt - 10
                        Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        CurY1 = CurY1 + TxtHgt

                        pFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                        Else

                            Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                            'Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                        End If

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                        CurY1 = CurY1 + TxtHgt
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If


                        CurY1 = CurY1 + TxtHgt
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        'Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è ", LMargin + 10, CurY, 0, 0, p1Font)
                        pFont = New Font("Calibri", 9, FontStyle.Regular)

                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                        p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
                        CurY1 = CurY1 + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If



                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                            CurY1 = CurY1 + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY1, 0, 0, p1Font)

                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        End If

                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                            CurY1 = CurY1 + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY1, 0, 0, p1Font)

                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If

                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                            CurY1 = CurY1 + TxtHgt
                            Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                            pFont = New Font("calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If

                        CurY1 = CurY1 + TxtHgt + 2
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                        CurY1 = CurY1 + 2
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        CurY1 = CurY1 + TxtHgt + 2
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                        'Gst
                        CurY1 = CurY1 + TxtHgt - 10
                        'p1Font = New Font("Calibri", 9, FontStyle.Bold Or FontStyle.Underline)
                        'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        '    Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                        'End If

                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                            p1Font = New Font("calibri", 10, FontStyle.Bold)
                            Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                            CurY1 = CurY1 + TxtHgt
                            p1Font = New Font("Calibri", 10, FontStyle.Bold Or FontStyle.Underline)
                            Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                        End If


                        Rndoffamt = Format(Val(Ntamt), "##########0") - Ntamt
                        If Rndoffamt <> 0 Then
                            If Rndoffamt > 0 Then
                                p1Font = New Font("Calibri", 9, FontStyle.Bold)
                                Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY1 - 10, 0, 0, p1Font)
                            ElseIf Rndoffamt < 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY1 - 10, 0, 0, pFont)
                            End If
                            Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), PageWidth - 10, CurY1 - 10, 1, 0, pFont)
                        End If


                        CurY1 = CurY1 + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                            'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, p1Font)
                            Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If

                        e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 - 5, PageWidth - 10, CurY1 - 5)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY1, 0, 0, pTFont)

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY1, 1, 0, pFont)
                        End If

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), PageWidth - 10, CurY1, 1, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY1, 1, 0, pFont)
                        End If


                        CurY1 = CurY1 + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                            Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                        End If

                        e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 + 5, PageWidth - 10, CurY1 + 5)


                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY1, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 50, CurY1 - 3, 0, 0, pFont)


                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY1, 0, 0, pTFont)
                        Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY1 - 3, 0, 0, pFont)
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                        CurY1 = CurY1 + 5
                        Common_Procedures.Print_To_PrintDocument(e, "Total Amount", LMargin + 10, CurY1, 0, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString), "############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)


                        If CurY1 > CurY Then CurY = CurY1

                        CurY = CurY + TxtHgt + 8

                        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                        LnAr(4) = CurY
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1, CurY, LMargin + C1, LnAr(3))


                    Else
                        NoofItems_PerPage = 15

                    End If

                    CurY = CurY + TxtHgt - 10
                    Common_Procedures.Print_To_PrintDocument(e, "«îF", LMargin, CurY, 2, ClAr(1), pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "ªï‹.", LMargin + ClAr(1), CurY, 2, ClAr(2), pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pTFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pTFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pTFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pTFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pTFont)

                    CurY = CurY + TxtHgt
                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    LnAr(5) = CurY


                    NoofDets = 0

                    CurY = CurY - 10

                    If prn_DetDt.Rows.Count > 0 Then

                        Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                            If NoofDets >= NoofItems_PerPage Then

                                CurY = CurY + TxtHgt

                                Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 10, CurY, 1, 0, pFont)

                                NoofDets = NoofDets + 1

                                If Val(Common_Procedures.settings.WeaverWages_Print_NoNeed_2nd_Page) = 1 Then
                                    Printing_Format9_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                                    GoTo LOOP2

                                Else

                                    Printing_Format9_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                    e.HasMorePages = True

                                    Return

                                End If

                            End If

                            prn_Tot_EBeam_Stk = prn_Tot_EBeam_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)
                            prn_Tot_Pavu_Stk = prn_Tot_Pavu_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)
                            prn_Tot_Yarn_Stk = prn_Tot_Yarn_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)
                            prn_Tot_Amt_Bal = prn_Tot_Amt_Bal + Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)

                            CurY = CurY + TxtHgt
                            If IsDate(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString) = True Then
                                Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString), "dd-MM-yy").ToString, LMargin + 5, CurY, 0, 0, pFont)
                            Else

                                If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, "Opening", LMargin + 5, CurY, 0, 0, pFont)
                                End If

                            End If

                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                            End If
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) <> 0 Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                    If prn_DetIndx <> 0 Then
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                    End If
                                Else

                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                End If
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) <> 0 Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                    If prn_DetIndx <> 0 Then
                                        Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                    End If
                                Else

                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                End If

                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 5, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Amt_Bal), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
                            End If

                            NoofDets = NoofDets + 1

                            prn_DetIndx = prn_DetIndx + 1

                        Loop

                    End If

                End If

LOOP1:
                CurY = CurY + TxtHgt

                Printing_Format9_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

            Catch ex As Exception
                MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

            End Try

            If Val(Common_Procedures.settings.WeaverWages_Print_2Copy_In_SinglePage) = 1 Then
                If PCnt = 1 And PrntCnt = 2 And PrntCnt2ndPageSTS = False Then
                    If prn_DetDt.Rows.Count > 9 Then
                        PrntCnt2ndPageSTS = True
                        e.HasMorePages = True
                        Return
                    End If
                End If
            End If

            PrntCnt2ndPageSTS = False

        Next PCnt

LOOP2:
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True

        Else
            e.HasMorePages = False

        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format9_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GSTNO As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p1Font)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GSTNO = ""

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        '    Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        '    Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        'Else

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTNO = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If


        'End If

        CurY = CurY + TxtHgt - 15

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + strHeight - 9
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTNO, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If
        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
            C2 = 560 ' C1 + ClAr(5) + 70 + 70 + 70
            C3 = 420 'ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 70 + 20
        Else
            C2 = C1 + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 20
            C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 20
        End If


        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        '    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        '    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        '    If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        '    Else
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        '    End If

        'Else
        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If

        'End If

        If Val(prn_WagesDontShowToPartyName) = 1 Then
            CurY = CurY + TxtHgt
            'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then

                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY + 5, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)


            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C3 - 65, CurY + 5, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 40, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C3 - 65, CurY, 0, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 30, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
            End If

            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 10, CurY, 0, 0, pFont)

            CurY = CurY + 5

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3 - 75, CurY, LMargin + C3 - 75, LnAr(2))


        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, p1Font)



            Common_Procedures.Print_To_PrintDocument(e, "BILL NO ", LMargin + C3 + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, p1Font)


            'p1Font = New Font("TAM_SC_Suvita", 8, FontStyle.Bold)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 40, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 40, CurY, 0, 0, pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC. NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "REC. DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            End If
            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, p1Font)

            If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("P_DC_NO").ToString) <> "" Then
                Common_Procedures.Print_To_PrintDocument(e, "P.DC.NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("P_DC_NO").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If



            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2))

        End If

    End Sub

    Private Sub Printing_Format9_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim S1, C1, C2 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        'CurY = CurY + TxtHgt
        'e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        LnAr(6) = CurY

        CurY = CurY + 5

        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
        e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        CurY = CurY + 10

        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
            End If
            Dt1.Clear()

            C1 = ClAr(1) + ClAr(2) + ClAr(3)
            C2 = C1 + ClAr(4) + ClAr(5)

            S1 = e.Graphics.MeasureString("Ë™  :", pFont).Width

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then '---- Nithya Textiles (Sedapalayam)


                Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTFont)

                Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                CurY = CurY + TxtHgt

                Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


                CurY = CurY + TxtHgt

                Common_Procedures.Print_To_PrintDocument(e, "Ë™  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

            Else
                CurY = CurY + TxtHgt
            End If



            If Trim(prn_HdDt.Rows(0).Item("Remarks").ToString) <> "" Then

                CurY = CurY + TxtHgt

                Common_Procedures.Print_To_PrintDocument(e, "Remarks : " & prn_HdDt.Rows(0).Item("Remarks").ToString, LMargin + 10, CurY, 0, 0, pFont)

            End If

        Else
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt

        Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        'Else
        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        'End If

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        Else
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub



    Private Sub Btn_stockFormat2_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles Btn_stockFormat2.Click

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1098" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1307" Then
            prn_WagesFrmt = "FORMAT-1"
            prn_Wages_Prt_WeaverName_IN_Heading = 1
        Else
            prn_WagesFrmt = "FORMAT-5"
        End If


        prn_WagesDontShowToPartyName = 0

        txt_PrintRange_FromNo.Text = prn_FromNo
        txt_PrintRange_ToNo.Text = prn_ToNo

        msk_PrintRange_DateFrom.Text = msk_Date.Text
        msk_PrintRange_DateTo.Text = msk_Date.Text
        msk_PrintRange_DateFrom.Enabled = False
        msk_PrintRange_DateTo.Enabled = False
        dtp_PrintRange_DateFrom.Enabled = False
        dtp_PrintRange_DateTo.Enabled = False

        pnl_PrintRange.Visible = True
        pnl_Back.Enabled = False
        pnl_PrintOption.Visible = False

        If txt_PrintRange_FromNo.Enabled Then txt_PrintRange_FromNo.Focus()

    End Sub

    Private Sub btn_EMail_Click(sender As Object, e As EventArgs) Handles btn_EMail.Click
        Dim Led_IdNo As Integer
        Dim MailTxt As String

        Try

            Led_IdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

            MailTxt = "INVOICE " & vbCrLf & vbCrLf
            MailTxt = MailTxt & "Invoice No.-" & Trim(lbl_BillNo.Text) & vbCrLf & "Date-" & Trim(msk_Date.Text)
            MailTxt = MailTxt & vbCrLf & "Lot No.-" & Trim(lbl_RecNo.Text) & " Rec Date : " & Trim(lbl_Rec_Date.Text)
            MailTxt = MailTxt & vbCrLf & "Value-" & Trim(lbl_Net_Amount.Text)

            EMAIL_Entry.vMailID = Common_Procedures.get_FieldValue(con, "Ledger_Head", "Ledger_Mail", "(Ledger_IdNo = " & Str(Val(Led_IdNo)) & ")")
            EMAIL_Entry.vSubJect = "Invocie : " & Trim(lbl_BillNo.Text)
            EMAIL_Entry.vMessage = Trim(MailTxt)

            Dim f1 As New EMAIL_Entry
            f1.MdiParent = MDIParent1
            f1.Show()


        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT SEND MAIL...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try
    End Sub

    Private Sub btn_PDF_Click(sender As Object, e As EventArgs) Handles btn_PDF.Click
        Common_Procedures.Print_OR_Preview_Status = 1
        Print_PDF_Status = True
        print_record()
        'Print_PDF_Status = False
    End Sub

    Private Sub Printing_Format10(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' common Format with Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        Dim pTBFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim CurY1 As Single = 0
        Dim Rndoffamt As Single = 0
        Dim Ntamt As Single = 0

        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If


        p1Font = New Font("Calibri", 11, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30
            .Right = 50
            .Top = 30 ' 30
            .Bottom = 25 ' 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
        pTBFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)


        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then

            ClAr(1) = Val(110) : ClAr(2) = 80 : ClAr(3) = 85 : ClAr(4) = 85 : ClAr(5) = 90 : ClAr(6) = 0 : ClAr(7) = 90 : ClAr(8) = 0 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 140 '285
            C2 = C1 + ClAr(5)  '385

        Else
            ClAr(1) = Val(80) : ClAr(2) = 50 : ClAr(3) = 55 : ClAr(4) = 55 : ClAr(5) = 80 : ClAr(6) = 80 : ClAr(7) = 70 : ClAr(8) = 70 : ClAr(9) = 100
            ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

            C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)  '285
            C2 = C1 + ClAr(5)  '385

        End If


        '  If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
        TxtHgt = 15
        '  Else
        '  TxtHgt = 17.25 ' 18  ' 18.5
        '  End If

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format10_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                    NoofItems_PerPage = 9
                ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
                    NoofItems_PerPage = 38
                Else
                    NoofItems_PerPage = 6
                End If


                If prn_PageNo <= 1 Then

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Fabric Name", LMargin + 10, CurY, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, pTFont) '---Thuni
                    End If

                    CurY1 = CurY
                    'Right Side

                    CurY = CurY + TxtHgt - 10
                    snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                    sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                    bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                    rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                    otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                    Ntamt = snd + sec + bit + rjt + otr
                    '  Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "I Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "SOUND", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt


                    'pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "II Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "SECONDS", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    ' Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "H†", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Else
                            If Prn_In_English_STS = True Then
                                Common_Procedures.Print_To_PrintDocument(e, "BITS", LMargin + C1 + 10, CurY, 0, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                            End If
                        End If
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                        '  CurY = CurY + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString) <> 0 Then
                            CurY = CurY + TxtHgt
                            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString) * (prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If
                    End If

                    CurY = CurY + TxtHgt

                    If Val(rjt) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Rejected", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, pTFont) '---Kalivu
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt
                    If Val(otr) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Others ", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, pTFont) '----Idhara
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If

                    End If

                    CurY = CurY + TxtHgt

                    If Prn_In_English_STS = True Then
                        W1 = e.Graphics.MeasureString("No.of Pieces : ", pFont).Width '---Piece Ennikkai
                        W2 = e.Graphics.MeasureString("Yarn Cost : ", pFont).Width '-----Nool Selavu
                    Else
                        W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", pTFont).Width
                        W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", pTFont).Width
                    End If

                    'Left Side 
                    CurY1 = CurY1 + TxtHgt - 10
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Type", LMargin + 10, CurY1 + 5, 0, 0, pFont) '----Ragam
                    Else
                        'Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt

                    pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Receipt Meters", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont) '---Thuni Varavu
                            'Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                        End If
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    CurY1 = CurY1 + TxtHgt
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then
                        Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTBFont) '---Valari
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Excess/Short", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont) '---Valari
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    p1Font = New Font("Calibri", 9, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                    'Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è ", LMargin + 10, CurY, 0, 0, pTBFont)

                    pFont = New Font("Calibri", 9, FontStyle.Regular)

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY1, 0, 0, pFont)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY1, 0, 0, p1Font)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 2
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    'Gst
                    CurY1 = CurY1 + TxtHgt - 10
                    'p1Font = New Font("Calibri", 9, FontStyle.Bold Or FontStyle.Underline)
                    'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    '    Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    'End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("calibri", 10, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        CurY1 = CurY1 + TxtHgt
                        p1Font = New Font("Calibri", 10, FontStyle.Bold Or FontStyle.Underline)
                        Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    End If


                    Rndoffamt = Format(Val(Ntamt), "##########0") - Ntamt
                    If Rndoffamt <> 0 Then
                        If Rndoffamt > 0 Then
                            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY1 - 10, 0, 0, p1Font)
                        ElseIf Rndoffamt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY1 - 10, 0, 0, pFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), PageWidth - 10, CurY1 - 10, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 - 5, PageWidth - 10, CurY1 - 5)

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Total", LMargin + C1 + 10, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY1, 0, 0, pTFont) '-----Mottham
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY1, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), PageWidth - 10, CurY1, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 + 5, PageWidth - 10, CurY1 + 5)


                    CurY1 = CurY1 + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Total Piece", LMargin + C1 + 10, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY1, 0, 0, pTFont) '---Thuni Ennikai
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 50, CurY1 - 3, 0, 0, pFont)

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Yarn Cost", LMargin + C1 + 250, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY1, 0, 0, pTFont) '---Nool Selavu
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY1 - 3, 0, 0, pFont)
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 5
                    Common_Procedures.Print_To_PrintDocument(e, "Total Amount", LMargin + 10, CurY1, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString), "############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    If CurY1 > CurY Then CurY = CurY1

                    CurY = CurY + TxtHgt + 8

                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX
                        CurY = CurY + TxtHgt - 13
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + ClAr(1) + ClAr(2) + 40, CurY, 2, ClAr(4), pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾", LMargin + ClAr(1) + ClAr(2) + 40, CurY, 1, ClAr(4), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, ClAr(4), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "d‹", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 1, ClAr(6), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 60, CurY, 2, ClAr(8), pTBFont)
                            CurY = CurY + TxtHgt - 5
                            e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
                        End If
                        CurY = CurY + TxtHgt - 10
                        LnAr(4) = CurY
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 5, CurY, LMargin + C1 - 5, LnAr(3))

                    Else
                        LnAr(4) = CurY
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 5, CurY, LMargin + C1 - 5, LnAr(3))
                    End If


                Else
                    NoofItems_PerPage = 15

                End If

                CurY = CurY + TxtHgt - 10
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin, CurY, 2, ClAr(1), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "NO.", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "BEAM STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "«îF", LMargin - 5, CurY, 2, ClAr(1), pTBFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then '----KAMACHIAMMAN TEX
                        Common_Procedures.Print_To_PrintDocument(e, "ªï‹.", LMargin + ClAr(1), CurY, 2, ClAr(2), pTBFont)
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pTBFont)
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pTBFont)
                    End If
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + 5, CurY, 2, ClAr(2), pTBFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pTBFont)
                    End If
                End If
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "PAVU STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 25, CurY, 2, ClAr(3), pTBFont) '---PAVU IRUPPU
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pTBFont) '---PAVU IRUPPU
                        End If
                    End If
                End If
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
                Else
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(4), pTBFont) '---NOOL VARAVU/PATRU
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pTBFont) '---NOOL VARAVU/PATRU
                    End If
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "YARN STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 2, ClAr(5), pTBFont) '--- YARN IRUPU
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pTBFont) '--- YARN IRUPU
                        End If
                    End If
                End If
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pFont)
                Else
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 2, ClAr(6), pTBFont)
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(7), pTBFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pTBFont)
                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pTBFont) '---THOGAI IRUPPUR
                End If

                CurY = CurY + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                LnAr(5) = CurY


                NoofDets = 0

                CurY = CurY - 10

                If prn_DetDt.Rows.Count > 0 Then

                    Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 10, CurY, 1, 0, pFont)

                            NoofDets = NoofDets + 1

                            If Val(Common_Procedures.settings.WeaverWages_Print_NoNeed_2nd_Page) = 1 Then
                                Printing_Format10_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                                GoTo LOOP2

                            Else

                                Printing_Format10_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True

                                Return

                            End If

                        End If

                        prn_Tot_EBeam_Stk = prn_Tot_EBeam_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)
                        prn_Tot_Pavu_Stk = prn_Tot_Pavu_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)
                        prn_Tot_Yarn_Stk = prn_Tot_Yarn_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)
                        prn_Tot_Amt_Bal = prn_Tot_Amt_Bal + Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)

                        CurY = CurY + TxtHgt
                        If IsDate(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString) = True Then
                            Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString), "dd-MM-yy").ToString, LMargin + 5, CurY, 0, 0, pFont)
                        Else

                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, "Opening", LMargin + 5, CurY, 0, 0, pFont)
                            End If

                        End If

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) <> 0 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                If prn_DetIndx <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                End If
                            Else
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + 20, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) <> 0 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                If prn_DetIndx <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                End If
                            Else
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 15, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                End If
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 15, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                        End If
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 5, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Amt_Bal), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
                        End If

                        NoofDets = NoofDets + 1

                        prn_DetIndx = prn_DetIndx + 1

                    Loop

                End If

            End If

LOOP1:
            CurY = CurY + TxtHgt

            Printing_Format10_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

LOOP2:
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True

        Else
            e.HasMorePages = False

        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Printing_Format10_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GSTNO As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p1Font)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GSTNO = ""

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        '    Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        '    Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        'Else

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTNO = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If
        'End If

        CurY = CurY + TxtHgt - 15

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + strHeight - 9
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTNO, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If

        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
            C2 = 560 ' C1 + ClAr(5) + 70 + 70 + 70
            C3 = 420 'ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 70 + 20
        Else
            C2 = C1 + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 20
            C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 20
        End If


        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        '    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        '    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        '    If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        '    Else
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        '    End If

        'Else
        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If

        'End If

        If Val(prn_WagesDontShowToPartyName) = 1 Then
            CurY = CurY + TxtHgt
            'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Prn_In_English_STS = True Then
                Common_Procedures.Print_To_PrintDocument(e, "BILL NO.", LMargin + 10, CurY + 5, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY + 5, 0, 0, pTFont) '---
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then

                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            If Prn_In_English_STS = True Then
                Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + 140 + 10, CurY + 5, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY + 5, 0, 0, pTFont)
            End If
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)


            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DELIVERY NO", LMargin + C3 - 65, CurY + 5, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C3 - 65, CurY + 5, 0, 0, pTFont)
                End If
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 40, CurY, 0, 0, pFont)
            Else
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "RECEIPT NO", LMargin + C3 - 65, CurY, 0, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C3 - 65, CurY, 0, 0, p1Font)
                End If
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 30, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DELIVERY DATE", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                End If
            Else
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "RECEIPT DATE", LMargin + C2 - 20, CurY + 5, 0, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                End If
            End If

            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 10, CurY, 0, 0, pFont)

            CurY = CurY + 5
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3 - 75, CurY, LMargin + C3 - 75, LnAr(2))


        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, p1Font)


            Common_Procedures.Print_To_PrintDocument(e, "BILL NO ", LMargin + C3 + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, p1Font)


            'p1Font = New Font("TAM_SC_Suvita", 8, FontStyle.Bold)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 40, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 40, CurY, 0, 0, pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC. NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "REC. DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            End If
            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

            'CurY = CurY + TxtHgt
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2) - 10)

        End If

    End Sub

    Private Sub Printing_Format10_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim S1, C1, C2 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0
        Dim pTBFont As Font

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        'CurY = CurY + TxtHgt
        'e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        LnAr(6) = CurY

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4) - 17) '---DATE
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, LnAr(4)) '---PAVU I/O
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, LnAr(4)) '---PAVU STOCK
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, LnAr(4)) '---YARN I/O
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, LnAr(4) - 17) '---YARN STOCK
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM I/O
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM STOCK
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4) - 17)
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        Else

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        End If

        CurY = CurY + 10

        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
            End If
            Dt1.Clear()

            C1 = ClAr(1) + ClAr(2) + ClAr(3)
            C2 = C1 + ClAr(4) + ClAr(5)

            If Prn_In_English_STS = True Then
                S1 = e.Graphics.MeasureString("YARN :", pFont).Width
            Else
                S1 = e.Graphics.MeasureString("Ë™  :", pTFont).Width '---NOOL
            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then '---- Nithya Textiles (Sedapalayam)

                If Prn_In_English_STS = True Then '-----English

                    Common_Procedures.Print_To_PrintDocument(e, "STOCK DETAILS:- ", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + C2 + 30, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                Else
                    pTBFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTBFont)

                    Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "Ë™  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                End If
            Else
                CurY = CurY + TxtHgt
            End If

        Else
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt

        If Prn_In_English_STS = True Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER SIGNATURE", LMargin + 10, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)
        End If

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        'Else
        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        'End If

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        Else
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub

    Private Sub msk_Date_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_Date.KeyDown
        vcbo_KeyDwnVal = e.KeyValue


        If e.KeyCode = 40 Then
            e.Handled = True
            e.SuppressKeyPress = True
            cbo_Weaver.Focus()
        End If

        vmskOldText = ""
        vmskSelStrt = -1
        If e.KeyCode = 46 Or e.KeyCode = 8 Then
            vmskOldText = msk_Date.Text
            vmskSelStrt = msk_Date.SelectionStart
        End If

    End Sub

    Private Sub msk_Date_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles msk_Date.KeyPress
        If Trim(UCase(e.KeyChar)) = "D" Then
            e.Handled = True
            msk_Date.Text = Date.Today
            msk_Date.SelectionStart = 0
        End If
        If Asc(e.KeyChar) = 13 Then
            e.Handled = True
            cbo_Weaver.Focus()
        End If
    End Sub

    Private Sub msk_Date_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_Date.KeyUp

        Try
            If IsDate(msk_Date.Text) = True Then
                If e.KeyCode = 107 Then
                    msk_Date.Text = DateAdd("D", 1, Convert.ToDateTime(msk_Date.Text))
                    msk_Date.SelectionStart = 0
                ElseIf e.KeyCode = 109 Then
                    msk_Date.Text = DateAdd("D", -1, Convert.ToDateTime(msk_Date.Text))
                    msk_Date.SelectionStart = 0
                End If
                dtp_Date.Value = Convert.ToDateTime(msk_Date.Text)
            End If

            If e.KeyCode = 46 Or e.KeyCode = 8 Then
                Common_Procedures.maskEdit_Date_ON_DelBackSpace(sender, e, vmskOldText, vmskSelStrt)
            End If

        Catch ex As Exception
            '----

        End Try

    End Sub

    Private Sub msk_Date_TextChanged(sender As Object, e As EventArgs) Handles msk_Date.TextChanged
        Try
            If FrmLdSTS = True Then Exit Sub

            If Me.ActiveControl.Name <> dtp_Date.Name Then

                If IsDate(msk_Date.Text) = True Then
                    dtp_Date.Value = Convert.ToDateTime(msk_Date.Text)
                End If

            End If

        Catch ex As Exception
            '---

        End Try
    End Sub

    Private Sub msk_Date_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles msk_Date.LostFocus
        If IsDate(msk_Date.Text) = True Then
            If Microsoft.VisualBasic.DateAndTime.Day(Convert.ToDateTime(msk_Date.Text)) <= 31 Or Microsoft.VisualBasic.DateAndTime.Month(Convert.ToDateTime(msk_Date.Text)) <= 31 Then
                If Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_Date.Text)) <= 2050 And Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_Date.Text)) >= 2000 Then
                    dtp_Date.Value = Convert.ToDateTime(msk_Date.Text)
                End If
            End If
        End If
    End Sub

    Private Sub dtp_Date_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dtp_Date.TextChanged
        Try

            If FrmLdSTS = True Then Exit Sub

            If Me.ActiveControl.Name <> msk_Date.Name Then
                If IsDate(dtp_Date.Text) = True Then
                    msk_Date.Text = dtp_Date.Text
                    msk_Date.SelectionStart = 0
                End If
            End If

        Catch ex As Exception
            '----
        End Try
    End Sub

    Private Sub Check_WeaverGSTIN_Status()
        Dim da3 As New SqlClient.SqlDataAdapter
        Dim dt3 As New DataTable
        Dim Weaver_Idno As Integer
        Dim Lom_Type As String = "", GSTNo As String = ""


        If chk_WvrGST_Sts = False Then Exit Sub

        Try

            Weaver_Idno = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_Weaver.Text)

            da3 = New SqlClient.SqlDataAdapter("SELECT * FROM Ledger_Head Where Ledger_IdNo = " & Val(Weaver_Idno) & "", con)
            'da3 = New SqlClient.SqlDataAdapter("SELECT a.*, LH.Ledger_GSTinNo FROM Weaver_Cloth_Receipt_Head a INNER JOIN Ledger_Head LH ON a.Ledger_IdNo = LH.Ledger_IdNo Where Weaver_ClothReceipt_No = " & Val(Weaver_Idno) & "", con)
            dt3 = New DataTable
            da3.Fill(dt3)

            If dt3.Rows.Count > 0 Then

                Lom_Type = Trim(dt3.Rows(0).Item("Weaver_LoomType").ToString)
                GSTNo = Trim(dt3.Rows(0).Item("Ledger_GSTinNo").ToString)

                If Trim(Lom_Type) = "AUTO LOOM" Or Trim(Lom_Type) = "AUTOLOOM" And Trim(GSTNo) <> "" Then
                    txt_CGST_Percentage.Text = "2.5"
                    txt_SGST_Percentage.Text = "2.5"
                Else
                    txt_CGST_Percentage.Text = ""
                    txt_SGST_Percentage.Text = ""
                End If

            End If

        Catch ex As Exception

        End Try
    End Sub

    Private Sub cbo_Weaver_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles cbo_Weaver.TextChanged
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1204" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1033" Then
            Check_WeaverGSTIN_Status()
        End If
    End Sub

    Private Sub Check_Weaver_LoomType_Sts()
        'Dim da As New SqlClient.SqlDataAdapter
        'Dim dt As New DataTable
        'Dim Weaver_Idno As Integer
        'Dim LoomType As String = ""

        'If Trim(Common_Procedures.settings.CustomerCode) = "1033" Or Trim(Common_Procedures.settings.CustomerCode) = "1204" Then

        '    Weaver_Idno = Common_Procedures.Ledger_NameToIdNo(con, cbo_Weaver.Text)

        '    da = New SqlClient.SqlDataAdapter("SELECT * FROM Ledger_Head Where Ledger_IdNo = " & Val(Weaver_Idno) & "", con)
        '    dt = New DataTable
        '    da.Fill(dt)

        '    LoomType = Trim(dt.Rows(0).Item("Weaver_LoomType").ToString)

        '    If Trim(LoomType) = "POWERLOOM" Then
        '        FrmLdSTS = True
        '        NoCalc_Status = True
        '        chk_WvrLmTp_Sts = True
        '        txt_CGST_Percentage.Text = ""
        '        txt_SGST_Percentage.Text = ""
        '    End If

        'End If

    End Sub


    Private Sub btn_UserModification_Click(sender As System.Object, e As System.EventArgs) Handles btn_UserModification.Click
        If Val(Common_Procedures.User.IdNo) = 1 Then
            Dim f1 As New User_Modifications
            f1.Entry_Name = Me.Name
            f1.Entry_PkValue = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)
            f1.ShowDialog()
        End If
    End Sub



    Private Sub Printing_Format_GST_Weaver_1408(ByRef e As System.Drawing.Printing.PrintPageEventArgs) ' common Format with Stock
        Dim pFont As Font
        Dim p1Font As Font
        Dim pTFont As Font
        Dim pTBFont As Font
        'Dim ps As Printing.PaperSize
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        'Dim I As Integer
        Dim NoofItems_PerPage As Integer, NoofDets As Integer
        Dim TxtHgt As Single
        Dim PpSzSTS As Boolean = False
        Dim LnAr(15) As Single, ClAr(15) As Single
        Dim EntryCode As String
        Dim CurY As Single
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim C4 As Single = 0, C5 As Single = 0, C6 As Single = 0
        Dim W1, W2 As Single
        Dim snd, sec, bit, rjt, otr As Single
        Dim CurY1 As Single = 0
        Dim Rndoffamt As Single = 0
        Dim Ntamt As Single = 0

        If prn_PageSize_SetUP_STS = False Then
            set_PaperSize_For_PrintDocument1()
            prn_PageSize_SetUP_STS = True
        End If


        p1Font = New Font("Calibri", 11, FontStyle.Bold)


        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30
            .Right = 50
            .Top = 30 ' 30
            .Bottom = 25 ' 30
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
        pTBFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)


        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        Erase LnAr
        Erase ClAr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        'If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then

        '    ClAr(1) = Val(110) : ClAr(2) = 200 : ClAr(3) = 60 : ClAr(4) = 80 : ClAr(5) = 60 : ClAr(6) = 80 : ClAr(7) = 60 ' : ClAr(8) = 0 : ClAr(9) = 100
        '    ClAr(8) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7)) ' + ClAr(8) + ClAr(9))

        '    C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 140 '285
        '    C2 = C1 + ClAr(5)  '385

        'Else
        '    ClAr(1) = Val(80) : ClAr(2) = 50 : ClAr(3) = 55 : ClAr(4) = 55 : ClAr(5) = 80 : ClAr(6) = 80 : ClAr(7) = 70 : ClAr(8) = 70 : ClAr(9) = 100
        '    ClAr(10) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9))

        '    C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)  '285
        '    C2 = C1 + ClAr(5)  '385

        'End If
        ClAr(1) = Val(110) : ClAr(2) = 200 : ClAr(3) = 60 : ClAr(4) = 80 : ClAr(5) = 60 : ClAr(6) = 80 : ClAr(7) = 60 ' : ClAr(8) = 0 : ClAr(9) = 100
        ClAr(8) = PageWidth - (LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7)) ' + ClAr(8) + ClAr(9))
        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)  '285
        C2 = C1 + ClAr(5)

        '  If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
        TxtHgt = 15
        '  Else
        '  TxtHgt = 17.25 ' 18  ' 18.5
        '  End If

        EntryCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        prn_Prev_HeadIndx = prn_HeadIndx

        Try

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format_GST_Weaver_1408_PageHeader(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClAr)

                NoofDets = NoofDets + 1
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                    NoofItems_PerPage = 9
                ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
                    NoofItems_PerPage = 38
                Else
                    NoofItems_PerPage = 6
                End If


                If prn_PageNo <= 1 Then

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Fabric Name", LMargin + 10, CurY, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY, 0, 0, pTFont) '---Thuni
                    End If

                    CurY1 = CurY
                    'Right Side

                    CurY = CurY + TxtHgt - 10
                    snd = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Sound_cooly").ToString)
                    sec = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_cooly").ToString)
                    bit = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_cooly").ToString)
                    rjt = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Reject_cooly").ToString)
                    otr = Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString) * Val(prn_HdDt.Rows(prn_HeadIndx).Item("Others_cooly").ToString)

                    Ntamt = snd + sec + bit + rjt + otr
                    '  Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "I Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "SOUND", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ê¾‡† ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If
                    End If

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(snd), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Sound_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt


                    'pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, "II Quality", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "SECONDS", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        End If
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    ' Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(sec), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Seconds_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)


                    CurY = CurY + TxtHgt

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString) <> 0 Then
                        pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                            Common_Procedures.Print_To_PrintDocument(e, "H†", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                        Else
                            If Prn_In_English_STS = True Then
                                Common_Procedures.Print_To_PrintDocument(e, "BITS", LMargin + C1 + 10, CurY, 0, 0, pFont)
                            Else
                                Common_Procedures.Print_To_PrintDocument(e, "îQ óè‹ ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                            End If
                        End If
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(bit), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Bits_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Or Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                        '  CurY = CurY + TxtHgt
                        If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString) <> 0 Then
                            CurY = CurY + TxtHgt
                            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "ªêè‡†v ", LMargin + C1 + 10, CurY, 0, 0, p1Font)
                            pFont = New Font("Calibri", 9, FontStyle.Regular)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString) * (prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, "-" & prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Rate").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Scecondsless_Meter").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If
                    End If

                    CurY = CurY + TxtHgt

                    If Val(rjt) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Rejected", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "èN¾ ", LMargin + C1 + 10, CurY, 0, 0, pTFont) '---Kalivu
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(rjt), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Reject_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                    End If


                    CurY = CurY + TxtHgt
                    If Val(otr) <> 0 Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Others ", LMargin + C1 + 10, CurY, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Þîó ", LMargin + C1 + 10, CurY, 0, 0, pTFont) '----Idhara
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(otr), "########0.00"), PageWidth - 10, CurY, 1, 0, pFont)

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                            Common_Procedures.Print_To_PrintDocument(e, " = ", PageWidth - 80, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Cooly").ToString, PageWidth - 100, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, " X ", PageWidth - 170, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Others_Meters").ToString, PageWidth - 190, CurY, 1, 0, pFont)
                        End If

                    End If

                    CurY = CurY + TxtHgt

                    If Prn_In_English_STS = True Then
                        W1 = e.Graphics.MeasureString("No.of Pieces : ", pFont).Width '---Piece Ennikkai
                        W2 = e.Graphics.MeasureString("Yarn Cost : ", pFont).Width '-----Nool Selavu
                    Else
                        W1 = e.Graphics.MeasureString("dv â‡E‚¬è : ", pTFont).Width
                        W2 = e.Graphics.MeasureString("Ë™ ªêô¾ : ", pTFont).Width
                    End If

                    'Left Side 
                    CurY1 = CurY1 + TxtHgt - 10
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Type", LMargin + 10, CurY1 + 5, 0, 0, pFont) '----Ragam
                    Else
                        'Common_Procedures.Print_To_PrintDocument(e, "óè‹ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Cloth_Name").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt

                    pTFont = New Font("TAM_SC_Suvita", 9, FontStyle.Regular)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1040" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont)
                    Else
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Receipt Meters", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "¶E õó¾ e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont) '---Thuni Varavu
                            'Common_Procedures.Print_To_PrintDocument(e, "¶E", LMargin + 10, CurY1 + 5, 0, 0, p1Font)
                        End If
                    End If

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Receipt_Meters").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    CurY1 = CurY1 + TxtHgt
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" And Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then
                        Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTBFont) '---Valari
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    ElseIf Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "Excess/Short", LMargin + 10, CurY1 + 5, 0, 0, pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "õ÷K e†ì˜ ", LMargin + 10, CurY1 + 5, 0, 0, pTFont) '---Valari
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Excess_Short").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    p1Font = New Font("Calibri", 9, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                    'Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî ªî£¬è ", LMargin + 10, CurY, 0, 0, pTBFont)

                    pFont = New Font("Calibri", 9, FontStyle.Regular)

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) TDS @ " & prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc").ToString & " %", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If


                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Freight", LMargin + 10, CurY1, 0, 0, pFont)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Less) Amount", LMargin + 10, CurY1, 0, 0, p1Font)

                        pFont = New Font("Calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString) <> 0 Then
                        CurY1 = CurY1 + TxtHgt
                        Common_Procedures.Print_To_PrintDocument(e, "(Add) Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        pFont = New Font("calibri", 9, FontStyle.Regular)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 2
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Freight_Charge").ToString) - Val(prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("add_amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)

                    CurY1 = CurY1 + TxtHgt + 2
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    'Gst
                    CurY1 = CurY1 + TxtHgt - 10
                    'p1Font = New Font("Calibri", 9, FontStyle.Bold Or FontStyle.Underline)
                    'If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                    '    Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    'End If

                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Or Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("calibri", 10, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "Taxable Amount", LMargin + 10, CurY1, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_cooly").ToString, LMargin + C1 - 10, CurY1, 1, 0, pFont)

                        CurY1 = CurY1 + TxtHgt
                        p1Font = New Font("Calibri", 10, FontStyle.Bold Or FontStyle.Underline)
                        Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + 10, CurY1, 0, 0, p1Font)
                    End If


                    Rndoffamt = Format(Val(Ntamt), "##########0") - Ntamt
                    If Rndoffamt <> 0 Then
                        If Rndoffamt > 0 Then
                            p1Font = New Font("Calibri", 9, FontStyle.Bold)
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (+)", LMargin + C1 + 10, CurY1 - 10, 0, 0, p1Font)
                        ElseIf Rndoffamt < 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, "Round Off (-)", LMargin + C1 + 10, CurY1 - 10, 0, 0, pFont)
                        End If
                        Common_Procedures.Print_To_PrintDocument(e, Format(Rndoffamt, "###########0.00"), PageWidth - 10, CurY1 - 10, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        'Common_Procedures.Print_To_PrintDocument(e, "Tâv® õK", LMargin + 10, CurY, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, "   CGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("CGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 - 5, PageWidth - 10, CurY1 - 5)

                    pFont = New Font("Calibri", 9, FontStyle.Regular)
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Total", LMargin + C1 + 10, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ªñ£ˆî‹ ", LMargin + C1 + 10, CurY1, 0, 0, pTFont) '-----Mottham
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1065" Then
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Meters").ToString, PageWidth - 190, CurY1, 1, 0, pFont)
                    End If

                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1049" Then
                        Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString - prn_HdDt.Rows(prn_HeadIndx).Item("Less_Amount").ToString), PageWidth - 10, CurY1, 1, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(prn_HeadIndx).Item("Total_Cooly").ToString, PageWidth - 10, CurY1, 1, 0, pFont)
                    End If


                    CurY1 = CurY1 + TxtHgt
                    If Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString) <> 0 Then
                        p1Font = New Font("Calibri", 9, FontStyle.Bold)
                        Common_Procedures.Print_To_PrintDocument(e, "   SGST @ " & Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Percentage").ToString), "#########0.0") & " %", LMargin + 10, CurY1 - 3, 0, 0, p1Font)
                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("SGST_Amount").ToString), "#########0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)
                    End If

                    e.Graphics.DrawLine(Pens.Black, LMargin + C2 + 10, CurY1 + 5, PageWidth - 10, CurY1 + 5)


                    CurY1 = CurY1 + TxtHgt
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Total Piece", LMargin + C1 + 10, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "dv â‡E‚¬è ", LMargin + C1 + 10, CurY1, 0, 0, pTFont) '---Thuni Ennikai
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Pcs").ToString, LMargin + C1 + W1 + 50, CurY1 - 3, 0, 0, pFont)

                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "Yarn Cost", LMargin + C1 + 250, CurY1, 0, 0, pFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ ªêô¾ ", LMargin + C1 + 250, CurY1, 0, 0, pTFont) '---Nool Selavu
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_HdDt.Rows(prn_HeadIndx).Item("Total_Dgv_Weight").ToString, LMargin + C1 + 250 + W2 + 10, CurY1 - 3, 0, 0, pFont)
                    e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 100, CurY1, LMargin + C1 - 10, CurY1)

                    CurY1 = CurY1 + 5
                    Common_Procedures.Print_To_PrintDocument(e, "Total Amount", LMargin + 10, CurY1, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(prn_HeadIndx).Item("Net_Amount").ToString) + Val(prn_HdDt.Rows(prn_HeadIndx).Item("Tds_Perc_Calc").ToString), "############0.00"), LMargin + C1 - 10, CurY1, 1, 0, pFont)


                    If CurY1 > CurY Then CurY = CurY1

                    CurY = CurY + TxtHgt + 8

                    e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX
                        CurY = CurY + TxtHgt - 13
                        If Prn_In_English_STS = True Then
                            Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + ClAr(1) + ClAr(2) + 40, CurY, 2, ClAr(4), pFont)
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾", LMargin + ClAr(1) + ClAr(2) + 40, CurY, 1, ClAr(4), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 1, ClAr(4), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "d‹", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 1, ClAr(6), pTBFont)
                            Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 60, CurY, 2, ClAr(8), pTBFont)
                            CurY = CurY + TxtHgt - 5
                            e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
                        End If
                        CurY = CurY + TxtHgt - 10
                        LnAr(4) = CurY
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 5, CurY, LMargin + C1 - 5, LnAr(3))

                    Else
                        LnAr(4) = CurY
                        e.Graphics.DrawLine(Pens.Black, LMargin + C1 - 5, CurY, LMargin + C1 - 5, LnAr(3))
                    End If


                Else
                    NoofItems_PerPage = 15

                End If

                CurY = CurY + TxtHgt - 10
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DATE", LMargin, CurY, 2, ClAr(1), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "NO.", LMargin + ClAr(1), CurY, 2, ClAr(2), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "BEAM STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "«îF", LMargin - 5, CurY, 2, ClAr(1), pTBFont)
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then '----KAMACHIAMMAN TEX
                        Common_Procedures.Print_To_PrintDocument(e, "ªï‹.", LMargin + ClAr(1), CurY, 2, ClAr(2), pTBFont)
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), pTBFont)
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), pTBFont)
                    End If
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + 5, CurY, 2, ClAr(2), pTBFont)
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "ð£¾ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), pTBFont)
                    End If
                End If
                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "PAVU STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pFont)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 25, CurY, 2, ClAr(3), pTBFont) '---PAVU IRUPPU
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "ð£¾ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), pTBFont) '---PAVU IRUPPU
                        End If
                    End If
                End If
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pFont)
                Else
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(4), pTBFont) '---NOOL VARAVU/PATRU
                    Else
                        Common_Procedures.Print_To_PrintDocument(e, "Ë™ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), pTBFont) '---NOOL VARAVU/PATRU
                    End If
                End If

                If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                    If Prn_In_English_STS = True Then
                        Common_Procedures.Print_To_PrintDocument(e, "YARN STK", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pFont)
                    Else
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, 2, ClAr(5), pTBFont) '--- YARN IRUPU
                        Else
                            Common_Procedures.Print_To_PrintDocument(e, "Ë™ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), pTBFont) '--- YARN IRUPU
                        End If
                    End If
                End If
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pFont)
                Else
                    If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '---KAMACHIAMMAN TEX
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 2, ClAr(6), pTBFont)
                        Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(7), pTBFont)
                    End If
                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è õ/ð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, 2, ClAr(9), pTBFont)
                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è Þ¼", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, 2, ClAr(10), pTBFont) '---THOGAI IRUPPUR
                End If

                CurY = CurY + TxtHgt
                e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
                LnAr(5) = CurY


                NoofDets = 0

                CurY = CurY - 10

                If prn_DetDt.Rows.Count > 0 Then

                    Do While prn_DetIndx <= prn_DetDt.Rows.Count - 1

                        If NoofDets >= NoofItems_PerPage Then

                            CurY = CurY + TxtHgt

                            Common_Procedures.Print_To_PrintDocument(e, "Continued....", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 10, CurY, 1, 0, pFont)

                            NoofDets = NoofDets + 1

                            If Val(Common_Procedures.settings.WeaverWages_Print_NoNeed_2nd_Page) = 1 Then
                                Printing_Format_GST_Weaver_1408_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

                                GoTo LOOP2

                            Else

                                Printing_Format_GST_Weaver_1408_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, False)

                                e.HasMorePages = True

                                Return

                            End If

                        End If

                        prn_Tot_EBeam_Stk = prn_Tot_EBeam_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString)
                        prn_Tot_Pavu_Stk = prn_Tot_Pavu_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString)
                        prn_Tot_Yarn_Stk = prn_Tot_Yarn_Stk + Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString)
                        prn_Tot_Amt_Bal = prn_Tot_Amt_Bal + Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString)

                        CurY = CurY + TxtHgt
                        If IsDate(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString) = True Then
                            Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_DetDt.Rows(prn_DetIndx).Item("Date1").ToString), "dd-MM-yy").ToString, LMargin + 5, CurY, 0, 0, pFont)
                        Else

                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("Ent_OrderBy").ToString) = 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, "Opening", LMargin + 5, CurY, 0, 0, pFont)
                            End If

                        End If

                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("Dc_Rec_No").ToString, LMargin + ClAr(1) + 5, CurY, 0, 0, pFont)
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 5, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, 1, 0, pFont)
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString) <> 0 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                If prn_DetIndx <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                End If
                            Else
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + 20, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("PavuMtrs").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 10, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Pavu_Stk), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString) <> 0 Then
                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
                                If prn_DetIndx <> 0 Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                End If
                            Else
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 15, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("YarnWgt").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                End If
                            End If

                            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then
                                If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 15, CurY, 1, 0, pFont)
                                Else
                                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Yarn_Stk), "#########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                                End If
                            End If
                        End If
                        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX (ERODE)
                            If Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString) <> 0 Then
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_DetDt.Rows(prn_DetIndx).Item("EmptyBeam").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 5, CurY, 1, 0, pFont)
                                Common_Procedures.Print_To_PrintDocument(e, Val(prn_Tot_EBeam_Stk), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) - 5, CurY, 1, 0, pFont)
                            End If
                        End If
                        If Val(prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString) <> 0 Then
                            Common_Procedures.Print_To_PrintDocument(e, prn_DetDt.Rows(prn_DetIndx).Item("amount").ToString, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) - 5, CurY, 1, 0, pFont)
                            Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_Tot_Amt_Bal), "#########0.00"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10) - 5, CurY, 1, 0, pFont)
                        End If

                        NoofDets = NoofDets + 1

                        prn_DetIndx = prn_DetIndx + 1

                    Loop

                End If

            End If

LOOP1:
            CurY = CurY + TxtHgt

            Printing_Format_GST_Weaver_1408_PageFooter(e, EntryCode, TxtHgt, pFont, pTFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClAr, NoofDets, True)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

LOOP2:
        prn_HeadIndx = prn_HeadIndx + 1

        If prn_HeadIndx <= prn_HdDt.Rows.Count - 1 Then
            e.HasMorePages = True

        Else
            e.HasMorePages = False

        End If

        prn_DetDt.Clear()

        prn_PageNo = 0

        prn_DetIndx = 0
        prn_DetSNo = 0

        prn_Tot_EBeam_Stk = 0
        prn_Tot_Pavu_Stk = 0
        prn_Tot_Yarn_Stk = 0
        prn_Tot_Amt_Bal = 0

    End Sub

    Private Sub Chk_Freight_charge_print_sts_CheckedChanged(sender As Object, e As EventArgs) Handles Chk_Freight_charge_print_sts.CheckedChanged

    End Sub

    Private Sub Printing_Format_GST_Weaver_1408_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim p1Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String, Cmp_GSTNO As String
        Dim Led_Name As String, Led_Add As String, Led_Add1 As String, Led_Add2 As String
        Dim strHeight As Single
        Dim C1, C2, C3, S1, W1, W2 As Single

        PageNo = PageNo + 1

        CurY = TMargin
        p1Font = New Font("Calibri", 11, FontStyle.Bold)
        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1065" Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER FABRIC INSPECTION AND ACCOUNT REPORT", LMargin, CurY, 2, PrintWidth, p1Font)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "REVERSE CHARGE INVOICE", LMargin, CurY, 2, PrintWidth, p1Font)
        End If

        CurY = CurY + TxtHgt
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = "" : Cmp_GSTNO = ""

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        '    Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        '    Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString
        'Else

        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        Cmp_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        Cmp_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE NO.:" & prn_HdDt.Rows(prn_HeadIndx).Item("Company_PhoneNo").ToString
        End If
        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString) <> "" Then
            Cmp_GSTNO = "GSTIN : " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_GSTinNo").ToString
        End If
        'End If

        CurY = CurY + TxtHgt - 15

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) <> 1 Then '---- Arul Kumaran Textiles (Somanur)
            p1Font = New Font("Calibri", 18, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Name, LMargin, CurY, 2, PrintWidth, p1Font)
            strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
            CurY = CurY + strHeight - 1
            Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1 & " " & Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            CurY = CurY + strHeight - 9
            Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTNO, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + strHeight - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add1, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_Add2, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_PhNo, LMargin, CurY, 2, PrintWidth, pFont)
            'CurY = CurY + TxtHgt - 1
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_TinNo, LMargin + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, Cmp_CstNo, PageWidth - 10, CurY, 1, 0, pFont)

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        End If

        LnAr(2) = CurY

        C1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) '285


        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1009" Then
            C2 = 560 ' C1 + ClAr(5) + 70 + 70 + 70
            C3 = 420 'ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + 70 + 20
        Else
            C2 = C1 + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + 20
            C3 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + 20
        End If


        S1 = e.Graphics.MeasureString("TO   :    ", pFont).Width
        W1 = e.Graphics.MeasureString("óC¶ ªï‹.   ", pFont).Width
        W2 = e.Graphics.MeasureString("óC¶ «îF   ", pFont).Width

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        '    Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString
        '    Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString

        '    If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address4").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address3").ToString)
        '    ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString) <> "" Then
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address2").ToString)
        '    Else
        '        Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Company_Address1").ToString)
        '    End If

        'Else
        Led_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        Led_Add1 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString
        Led_Add2 = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString & " " & prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString

        If Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address4").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address3").ToString)
        ElseIf Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString) <> "" Then
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString) & " " & Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address2").ToString)
        Else
            Led_Add = Trim(prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Address1").ToString)
        End If

        'End If

        If Val(prn_WagesDontShowToPartyName) = 1 Then
            CurY = CurY + TxtHgt
            'pFont = New Font("TAM_SC_Suvita", 11, FontStyle.Regular)
            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Prn_In_English_STS = True Then
                Common_Procedures.Print_To_PrintDocument(e, "BILL NO.", LMargin + 10, CurY + 5, 0, 0, p1Font)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + 10, CurY + 5, 0, 0, pTFont) '---
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then

                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + W1 + 20, CurY, 0, 0, pFont)
            End If

            If Prn_In_English_STS = True Then
                Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + 140 + 10, CurY + 5, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, "H™ «îF ", LMargin + 140 + 10, CurY + 5, 0, 0, pTFont)
            End If
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + 140 + W2 + 20, CurY, 0, 0, pFont)


            p1Font = New Font("TAM_SC_Suvita", 9, FontStyle.Bold)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DELIVERY NO", LMargin + C3 - 65, CurY + 5, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªìLõK ªï‹.", LMargin + C3 - 65, CurY + 5, 0, 0, pTFont)
                End If
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 40, CurY, 0, 0, pFont)
            Else
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "RECEIPT NO", LMargin + C3 - 65, CurY, 0, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óC¶ ªï‹. ", LMargin + C3 - 65, CurY, 0, 0, p1Font)
                End If
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 - 65 + W1 + 30, CurY, 0, 0, pFont)
            End If

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "DELIVERY DATE", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "ªìLõK «îF", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                End If
            Else
                If Prn_In_English_STS = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "RECEIPT DATE", LMargin + C2 - 20, CurY + 5, 0, 0, pFont)
                Else
                    Common_Procedures.Print_To_PrintDocument(e, "óC¶ «îF ", LMargin + C2 - 20, CurY + 5, 0, 0, p1Font)
                End If
            End If

            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 10, CurY, 0, 0, pFont)

            CurY = CurY + 5
            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3 - 75, CurY, LMargin + C3 - 75, LnAr(2))


        Else

            CurY = CurY + TxtHgt - 10
            p1Font = New Font("Calibri", 11, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "TO  :  " & "M/s." & Led_Name, LMargin + 10, CurY, 0, 0, p1Font)


            Common_Procedures.Print_To_PrintDocument(e, "BILL NO ", LMargin + C3 + 10, CurY, 0, 0, pFont)
            'Common_Procedures.Print_To_PrintDocument(e, "H™ ªï‹. ", LMargin + C3 + 10, CurY + 5, 0, 0, p1Font)
            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_BillNo").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            Else
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)
            End If

            Common_Procedures.Print_To_PrintDocument(e, "BILL DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add1, LMargin + S1 + 10, CurY, 0, 0, p1Font)


            'p1Font = New Font("TAM_SC_Suvita", 8, FontStyle.Bold)

            If Val(Common_Procedures.settings.WeaverWages_Print_Weavers_BillNo_SeparateSlNo) = 1 Then
                Common_Procedures.Print_To_PrintDocument(e, "DC NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 40, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "DC DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 40, CurY, 0, 0, pFont)

            Else
                Common_Procedures.Print_To_PrintDocument(e, "REC. NO", LMargin + C3 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & prn_HdDt.Rows(prn_HeadIndx).Item("Rec_No").ToString, LMargin + C3 + W1 + 30, CurY, 0, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, "REC. DATE", LMargin + C2 + 10, CurY, 0, 0, pFont)
                Common_Procedures.Print_To_PrintDocument(e, ":   " & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Rec_Date").ToString), "dd-MM-yyyy").ToString, LMargin + C2 + W2 + 30, CurY, 0, 0, pFont)

            End If
            CurY = CurY + TxtHgt
            p1Font = New Font("Calibri", 9, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, " " & Led_Add2, LMargin + S1 + 10, CurY, 0, 0, p1Font)

            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

            'CurY = CurY + TxtHgt
            LnAr(4) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin + C3, CurY, LMargin + C3, LnAr(2) - 10)

        End If

    End Sub

    Private Sub Printing_Format_GST_Weaver_1408_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal pTFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable
        Dim i As Integer = 0
        Dim k As Integer = 0
        Dim Cmp_Name As String
        Dim p1Font As Font
        Dim S1, C1, C2 As Single
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0
        Dim pTBFont As Font

        For i = NoofDets + 1 To NoofItems_PerPage
            CurY = CurY + TxtHgt
        Next

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        'CurY = CurY + TxtHgt
        'e.Graphics.DrawLine(Pens.Black, LMargin, CurY + 5, PageWidth, CurY + 5)
        LnAr(6) = CurY

        CurY = CurY + 5

        If Trim(UCase(Common_Procedures.settings.CustomerCode)) = "1297" Then '-----KAMACHIAMMAN TEX

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4) - 17) '---DATE
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) - 30, LnAr(4)) '---PAVU I/O
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) - 5, LnAr(4)) '---PAVU STOCK
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 10, LnAr(4)) '---YARN I/O
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, LnAr(4) - 17) '---YARN STOCK
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM I/O
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4)) '---BEAM STOCK
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4) - 17)
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        Else

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), CurY, LMargin + ClAr(1), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), CurY, LMargin + ClAr(1) + ClAr(2), LnAr(4))

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(4))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), CurY, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9) + ClAr(10), LnAr(4))

        End If

        CurY = CurY + 10

        If prn_PageNo <= 1 Then

            Tot_EBeam_StkSumry = 0
            prn_Tot_Pavu_StkSumry = ""
            prn_Tot_Yarn_StkSumry = ""
            prn_Tot_Amt_BalSumry = 0

            da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                    prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
                End If
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
                Next
            End If
            Dt1.Clear()

            da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
            Dt1 = New DataTable
            da1.Fill(Dt1)
            If Dt1.Rows.Count > 0 Then
                For k = 0 To Dt1.Rows.Count - 1
                    prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
                Next
            End If
            Dt1.Clear()

            C1 = ClAr(1) + ClAr(2) + ClAr(3)
            C2 = C1 + ClAr(4) + ClAr(5)

            If Prn_In_English_STS = True Then
                S1 = e.Graphics.MeasureString("YARN :", pFont).Width
            Else
                S1 = e.Graphics.MeasureString("Ë™  :", pTFont).Width '---NOOL
            End If

            If Trim(UCase(Common_Procedures.settings.CustomerCode)) <> "1009" Then '---- Nithya Textiles (Sedapalayam)

                If Prn_In_English_STS = True Then '-----English

                    Common_Procedures.Print_To_PrintDocument(e, "STOCK DETAILS:- ", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "BEAM", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "AMOUNT", LMargin + C2 + 30, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "PAVU", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "YARN", LMargin + C1 + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                Else
                    pTBFont = New Font("TAM_SC_Suvita", 10, FontStyle.Bold)
                    Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, CurY, 0, 0, pTBFont)

                    Common_Procedures.Print_To_PrintDocument(e, "d‹  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, " : " & Val(Tot_EBeam_StkSumry), LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "ªî£¬è  ", LMargin + C2 + 30, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & Format(Math.Abs(Val(prn_Tot_Amt_BalSumry)), "#########0.00") & IIf(Val(prn_Tot_Amt_BalSumry) < 0, " Dr", " Cr"), LMargin + C2 + 90, CurY, 0, 0, pFont)

                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "(" & Format(Convert.ToDateTime(prn_HdDt.Rows(prn_HeadIndx).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy").ToString & ")", LMargin + 10, CurY, 0, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, "ð£¾  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Pavu_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)


                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "Ë™  ", LMargin + C1 + 10, CurY, 0, 0, pTFont)
                    Common_Procedures.Print_To_PrintDocument(e, "  :  " & prn_Tot_Yarn_StkSumry, LMargin + C1 + S1 + 20, CurY, 0, 0, pFont)

                End If
            Else
                CurY = CurY + TxtHgt
            End If

        Else
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt

        End If

        CurY = CurY + TxtHgt
        CurY = CurY + TxtHgt

        If Prn_In_English_STS = True Then
            Common_Procedures.Print_To_PrintDocument(e, "WEAVER SIGNATURE", LMargin + 10, CurY, 0, 0, pFont)
        Else
            Common_Procedures.Print_To_PrintDocument(e, "îPè£ó˜ ¬èªò£Šð‹  ", LMargin + 10, CurY, 0, 0, pTFont)
        End If

        'If Val(prn_Wages_Prt_WeaverName_IN_Heading) = 1 Then
        '    Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Ledger_Name").ToString
        'Else
        Cmp_Name = prn_HdDt.Rows(prn_HeadIndx).Item("Company_Name").ToString
        'End If

        If Val(Common_Procedures.settings.WeaverWages_Print_Dont_Show_Company_Heading) = 1 Then
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 15, CurY, 1, 0, pFont)

        Else
            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For " & Cmp_Name, PageWidth - 15, CurY, 1, 0, p1Font)

        End If

        CurY = CurY + TxtHgt + 10

        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

        e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
        e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

    End Sub


    Private Sub Printing_Format_1408(ByRef e As System.Drawing.Printing.PrintPageEventArgs)
        Dim EntryCode As String
        Dim I As Integer, J As Integer, NoofDets As Integer, NoofItems_PerPage As Integer
        Dim pFont As Font
        Dim LMargin As Single, RMargin As Single, TMargin As Single, BMargin As Single
        Dim PrintWidth As Single, PrintHeight As Single
        Dim PageWidth As Single, PageHeight As Single
        Dim CurY As Single, TxtHgt As Single
        Dim CurY1 As Single, TxtHgt1 As Single
        Dim Cmp_Name As String
        Dim LnAr(15) As Single, ClArr(15) As Single
        Dim ItmNm1 As String, ItmNm2 As String
        Dim ps As Printing.PaperSize
        Dim W1 As Single = 0
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim NewCode As String = ""
        Dim Cmd As New SqlClient.SqlCommand
        Dim da3 As New SqlClient.SqlDataAdapter
        Dim dt3 As New DataTable
        Cmd.Connection = con
        vprn_Tot_Amt = 0
        For I = 0 To PrintDocument1.PrinterSettings.PaperSizes.Count - 1
            If PrintDocument1.PrinterSettings.PaperSizes(I).Kind = Printing.PaperKind.A4 Then
                ps = PrintDocument1.PrinterSettings.PaperSizes(I)
                PrintDocument1.DefaultPageSettings.PaperSize = ps
                Exit For
            End If
        Next

        With PrintDocument1.DefaultPageSettings.Margins
            .Left = 30 ' 30 '60
            .Right = 60
            .Top = 40 ' 60
            .Bottom = 40
            LMargin = .Left
            RMargin = .Right
            TMargin = .Top
            BMargin = .Bottom
        End With

        pFont = New Font("Calibri", 10, FontStyle.Regular)
        'pFont = New Font("Calibri", 12, FontStyle.Regular)

        e.Graphics.TextRenderingHint = Drawing.Text.TextRenderingHint.AntiAlias

        With PrintDocument1.DefaultPageSettings.PaperSize
            PrintWidth = .Width - RMargin - LMargin
            PrintHeight = .Height - TMargin - BMargin
            PageWidth = .Width - RMargin
            PageHeight = .Height - BMargin
        End With
        If PrintDocument1.DefaultPageSettings.Landscape = True Then
            With PrintDocument1.DefaultPageSettings.PaperSize
                PrintWidth = .Height - TMargin - BMargin
                PrintHeight = .Width - RMargin - LMargin
                PageWidth = .Height - TMargin
                PageHeight = .Width - RMargin
            End With
        End If

        TxtHgt = 19 ' e.Graphics.MeasureString("A", pFont).Height  ' 20


        NoofItems_PerPage = 5


        Erase LnAr
        Erase ClArr

        LnAr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        ClArr = New Single(15) {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

        ClArr(1) = Val(100) : ClArr(2) = 200 : ClArr(3) = 55 : ClArr(4) = 75 : ClArr(5) = 55 : ClArr(6) = 75 : ClArr(7) = 55
        ClArr(8) = PageWidth - (LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7)) '+ ClArr(8) + ClArr(9))


        ' ClArr(2) = 230 : ClArr(3) = 85 : ClArr(4) = 50 : ClArr(5) = 80 : ClArr(6) = 55 : ClArr(7) = 80
        ' ClArr(8) = PageWidth - (LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7))

        CurY = TMargin

        Cmp_Name = Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Name").ToString)

        EntryCode = Trim(Val(lbl_Company.Tag)) & "-" & Trim(lbl_BillNo.Text) & "/" & Trim(Common_Procedures.FnYearCode)

        Try

            prn_Prev_HeadIndx = prn_HeadIndx

            If prn_HdDt.Rows.Count > 0 Then

                Printing_Format_1408_PageHeader(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, prn_PageNo, NoofItems_PerPage, CurY, LnAr, ClArr)

                W1 = e.Graphics.MeasureString("Ends Count : ", pFont).Width

                NoofDets = 0
                'DetSNo = 0
                CurY = CurY - 10
                prn_DetIndx = 0
                'prn_DetAr(prn_DetMxIndx, 1) = Trim(prn_DetDt1.Rows(I).Item("Ends_Name").ToString)
                'prn_DetAr(prn_DetMxIndx, 2) = Trim(prn_DetDt1.Rows(I).Item("Beam_No").ToString)
                'prn_DetAr(prn_DetMxIndx, 3) = Val(prn_DetDt1.Rows(I).Item("Pcs").ToString)
                'prn_DetAr(prn_DetMxIndx, 4) = Format(Val(prn_DetDt1.Rows(I).Item("Meters").ToString), "#########0.00")


                If prn_HdDt.Rows.Count > 0 Then


                    prn_DetSNo = prn_DetSNo + 1


                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Rec_Date").ToString, LMargin + 15, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("cloth_name").ToString, LMargin + ClArr(1) + 10, CurY, 0, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Pcs").ToString, LMargin + ClArr(1) + ClArr(2) + 10, CurY, 0, 0, pFont)
                    ' Common_Procedures.Print_To_PrintDocument(e, dt2.Rows(I).Item("Rec_Date").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) - 5, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Sound_Meters").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) - 5, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Excess_Short").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Total_Meters").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Sound_Cooly").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) - 10, CurY, 1, 0, pFont)


                    Common_Procedures.Print_To_PrintDocument(e, Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString * prn_HdDt.Rows(0).Item("Sound_Cooly").ToString), LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) - 5, CurY, 1, 0, pFont)



                    'vprn_Tot_Bgs_Bms = Val(vprn_Tot_Bgs_Bms) + Val(dt2.Rows(I).Item("YarnBag").ToString)
                    'vprn_Tot_Wgt_Mtr = Format(Val(vprn_Tot_Wgt_Mtr) + Val(dt2.Rows(I).Item("YarnWeight").ToString), "##########0.000")

                    NoofDets = NoofDets + 1



                    prn_DetIndx = prn_DetIndx + 1



                    'CurY1 = CurY1 + TxtHgt

                    'Common_Procedures.Print_To_PrintDocument(e, "T.Mtr", LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7), CurY1, 0, 0, pFont)
                    'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Total_Meters").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) - 5, CurY1, 1, 0, pFont)

                    'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Rate").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) - 5, CurY1, 1, 0, pFont)
                    'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("amount").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) - 5, CurY1, 1, 0, pFont)
                    'CurY1 = CurY1 + TxtHgt
                    'e.Graphics.DrawLine(Pens.Black, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7), CurY1, PageWidth, CurY1)
                    'CurY1 = CurY1 + TxtHgt
                    'Common_Procedures.Print_To_PrintDocument(e, "T.Kgs", LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7), CurY1, 0, 0, pFont)
                    'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Total_Weight").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) - 5, CurY1, 1, 0, pFont)
                    'Common_Procedures.Print_To_PrintDocument(e, dt3.Rows(0).Item("Rate").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) - 5, CurY1, 1, 0, pFont)
                    'Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Total_Amount").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + ClArr(8) + ClArr(9) + ClArr(10) - 5, CurY1, 1, 0, pFont)
                    'CurY1 = CurY1 + TxtHgt
                    'e.Graphics.DrawLine(Pens.Black, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7), CurY1, PageWidth, CurY1)
                    'e.Graphics.DrawLine(Pens.Black, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) + (ClArr(8) / 2) - 10, CurY1, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + +ClArr(7) + (ClArr(8) / 2) - 10, LnAr(4))
                    'vprn_Tot_Amt = Format(Val(prn_HdDt.Rows(0).Item("amount").ToString) + Val(prn_HdDt.Rows(0).Item("Total_Amount").ToString), "##########0.000")




                End If




                'If prn_DetDt1.Rows.Count > 0 Then


                '    da2 = New SqlClient.SqlDataAdapter("select a.*, b.Count_Name, c.Mill_Name,d.Item_HSN_Code from Yarn_Delivery_Details a INNER JOIN Count_Head b on a.Count_IdNo = b.Count_IdNo LEFT OUTER JOIN Mill_Head c ON a.Mill_IdNo = c.Mill_IdNo LEFT OUTER JOIN itemgroup_head d ON b.itemgroup_idno = d.itemgroup_idno where a.PavuYarn_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.sl_no", con)
                '    dt2 = New DataTable
                '    da2.Fill(dt2)
                '    'da2 = New SqlClient.SqlDataAdapter("Select b.Endscount_Name, IG.Item_HSN_Code, IG.Item_GST_Percentage, sum(a.Meters1) as PavuMtrs, sum(a.Int2) as Beams from " & Trim(Common_Procedures.EntryTempTable) & " a INNER JOIN EndsCount_Head b ON a.Int1 = b.EndsCount_IdNo INNER JOIN Count_Head c ON b.Count_IdNo = c.Count_IdNo LEFT OUTER JOIN ItemGroup_Head IG ON c.ItemGroup_IdNo = IG.ItemGroup_IdNo  group by b.EndsCount_Name, IG.Item_HSN_Code, IG.Item_GST_Percentage Order by b.EndsCount_Name, IG.Item_HSN_Code, IG.Item_GST_Percentage", con)
                '    'dt2 = New DataTable
                '    'da2.Fill(dt2)
                '    If dt2.Rows.Count > 0 Then
                '        prn_DetIndx = 0
                '        For I = 0 To dt2.Rows.Count - 1
                '            CurY = CurY + TxtHgt
                '            prn_DetSNo = prn_DetSNo + 1

                '            ' Common_Procedures.Print_To_PrintDocument(e, prn_DetSNo, LMargin + 15, CurY, 0, 0, pFont)
                '            'Common_Procedures.Print_To_PrintDocument(e, dt2.Rows(I).Item("Count_Name").ToString, LMargin + ClArr(1) + 10, CurY, 0, 0, pFont)
                '            'Common_Procedures.Print_To_PrintDocument(e, dt2.Rows(I).Item("Bags").ToString, LMargin + ClArr(1) + ClArr(2) + 10, CurY, 0, 0, pFont)
                '            'Common_Procedures.Print_To_PrintDocument(e, dt2.Rows(I).Item("Count_Name").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) - 5, CurY, 1, 0, pFont)


                '            Common_Procedures.Print_To_PrintDocument(e, dt2.Rows(I).Item("Bags").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) - 10, CurY, 1, 0, pFont)
                '            Common_Procedures.Print_To_PrintDocument(e, dt2.Rows(I).Item("Weight").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) - 10, CurY, 1, 0, pFont)
                '            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Item_HSN_Code").ToString, LMargin + ClArr(1) + ClArr(2) + ClArr(3) + ClArr(4) + ClArr(5) + ClArr(6) + ClArr(7) - 10, CurY, 1, 0, pFont)
                '            ' Common_Procedures.Print_To_PrintDocument(e, dt2.Rows(I).Item("Item_HSN_Code").ToString, PageWidth - 10, CurY, 1, 0, pFont)

                '            'vprn_Tot_Bgs_Bms = Val(vprn_Tot_Bgs_Bms) + Val(dt2.Rows(I).Item("Beams").ToString)
                '            'vprn_Tot_Wgt_Mtr = Format(Val(vprn_Tot_Wgt_Mtr) + Val(dt2.Rows(I).Item("PavuMtrs").ToString), "##########0.000")
                '            'vprn_Tot_Amt = Format(Val(vprn_Tot_Amt) + Val(Format(Val(dt2.Rows(I).Item("beams").ToString) * Val(prn_HdDt.Rows(0).Item("Rate").ToString), "##########0.00")), "##########0.000")

                '            NoofDets = NoofDets + 1

                '        Next

                '    End If
                '    dt2.Clear()

                'End If


            End If


            Printing_Format_1408_PageFooter(e, EntryCode, TxtHgt, pFont, LMargin, RMargin, TMargin, BMargin, PageWidth, PrintWidth, NoofItems_PerPage, CurY, LnAr, ClArr, Cmp_Name, NoofDets, True)




        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        End Try

        e.HasMorePages = False

    End Sub

    Private Sub Printing_Format_1408_PageHeader(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByRef PageNo As Integer, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single)
        Dim da2 As New SqlClient.SqlDataAdapter
        Dim dt2 As New DataTable
        Dim p1Font As Font
        Dim p2Font As Font
        Dim Cmp_Name As String, Cmp_Add1 As String, Cmp_Add2 As String
        Dim Cmp_PhNo As String, Cmp_TinNo As String, Cmp_CstNo As String
        Dim Cmp_StateCap As String, Cmp_StateNm As String, Cmp_StateCode As String, Cmp_GSTIN_Cap As String, Cmp_GSTIN_No As String
        Dim strHeight As Single
        Dim Led_Name As String, Led_Add1 As String, Led_Add2 As String, Led_Add3 As String, Led_Add4 As String, Led_TinNo As String
        Dim Led_GSTTinNo As String, Led_State As String, Led_StateCd As String, LedAadhar_No As String, Led_PanNo As String
        Dim LedNmAr(10) As String
        Dim Cmp_Desc As String, Cmp_Email As String
        Dim Cen1 As Single = 0
        Dim W1 As Single = 0
        Dim W2 As Single = 0
        Dim LInc As Integer = 0
        Dim prn_OriDupTri As String = ""
        Dim S As String = ""
        Dim Led_PhNo As String
        Dim CurX As Single = 0
        Dim strWidth As Single = 0
        Dim BlockInvNoY As Single = 0
        Dim Trans_Nm As String = ""
        Dim Indx As Integer = 0
        Dim HdWd As Single = 0
        Dim H1 As Single = 0
        Dim W3 As Single = 0
        Dim C1 As Single = 0, C2 As Single = 0, C3 As Single = 0
        Dim i As Integer = 0
        Dim ItmNm1 As String, ItmNm2 As String
        Dim Ends_name As String = ""
        PageNo = PageNo + 1

        CurY = TMargin
        Cen1 = ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4)
        'prn_Count = prn_Count + 1

        'da2 = New SqlClient.SqlDataAdapter("select a.*, b.* from Pavu_Delivery_Details a INNER JOIN EndsCount_Head b ON a.EndsCount_IdNo = b.EndsCount_IdNo where a.Company_IdNo = " & Str(Val(lbl_Company.Tag)) & " and a.PavuYarn_Delivery_Code = '" & Trim(EntryCode) & "' Order by a.Sl_No", con)
        'da2.Fill(dt2)
        'If dt2.Rows.Count > 0 Then
        '    'Common_Procedures.Print_To_PrintDocument(e, "Page : " & Trim(Val(PageNo)), PageWidth - 10, CurY - TxtHgt, 1, 0, pFont)
        '    Ends_name = dt2.Rows(0).Item("Ends_name").ToString()

        'End If
        'dt2.Clear()

        'p1Font = New Font("Calibri", 12, FontStyle.Regular)
        'Common_Procedures.Print_To_PrintDocument(e, "INVOICE", LMargin, CurY - TxtHgt, 2, PrintWidth, p1Font)
        p1Font = New Font("SaiIndira", 16, FontStyle.Bold)

        Common_Procedures.Print_To_PrintDocument(e, "ÜÄ¢ À¢ø", LMargin, CurY, 2, PrintWidth, p1Font)


        CurY = CurY + TxtHgt '+ 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(1) = CurY

        Cmp_Name = "" : Cmp_Add1 = "" : Cmp_Add2 = ""
        Cmp_PhNo = "" : Cmp_TinNo = "" : Cmp_CstNo = ""
        Cmp_Desc = "" : Cmp_Email = ""
        Cmp_StateCap = "" : Cmp_StateNm = "" : Cmp_StateCode = "" : Cmp_GSTIN_Cap = "" : Cmp_GSTIN_No = ""

        Cmp_Name = Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Name").ToString)

        Cmp_Add1 = Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address1").ToString)
        'If Trim(Cmp_Add1) <> "" Then
        '    If Microsoft.VisualBasic.Right(Trim(Cmp_Add1), 1) = "," Then
        '        Cmp_Add1 = Trim(Cmp_Add1) & ", " & Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address2").ToString)
        '    Else
        '        Cmp_Add1 = Trim(Cmp_Add1) & " " & Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address2").ToString)
        '    End If
        'Else
        '    Cmp_Add1 = Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address1").ToString)
        'End If
        Cmp_Add2 = Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address2").ToString)
        'Cmp_Add2 = Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address3").ToString)
        'If Trim(Cmp_Add2) <> "" Then
        '    If Microsoft.VisualBasic.Right(Trim(Cmp_Add2), 1) = "," Then
        '        Cmp_Add2 = Trim(Cmp_Add2) & ", " & Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address4").ToString)
        '    Else
        '        Cmp_Add2 = Trim(Cmp_Add2) & " " & Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address4").ToString)
        '    End If
        'Else
        '    Cmp_Add2 = Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Address4").ToString)
        'End If

        If Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString) <> "" Then
            Cmp_PhNo = "PHONE : " & Trim(prn_HdDt.Rows(0).Item("Company_PhoneNo").ToString)
        End If

        If Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString) <> "" Then
            Cmp_TinNo = "TIN NO. : " & Trim(prn_HdDt.Rows(0).Item("Company_TinNo").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString) <> "" Then
            Cmp_CstNo = "CST NO. : " & Trim(prn_HdDt.Rows(0).Item("Company_CstNo").ToString)
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_Description").ToString) <> "" Then
            Cmp_Desc = "(" & Trim(prn_HdDt.Rows(0).Item("Company_Description").ToString) & ")"
        End If
        If Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString) <> "" Then
            Cmp_Email = "E-mail : " & Trim(prn_HdDt.Rows(0).Item("Company_EMail").ToString)
        End If

        '***** GST START *****
        'If Trim(prn_HdDt.Rows(0).Item("Company_State_Name").ToString) <> "" Then
        '    Cmp_StateCap = "STATE : "
        '    Cmp_StateNm = prn_HdDt.Rows(0).Item("Company_State_Name").ToString
        'End If
        'If Trim(prn_HdDt.Rows(0).Item("Company_State_Code").ToString) <> "" Then
        '    Cmp_StateCode = "CODE :" & prn_HdDt.Rows(0).Item("Company_State_Code").ToString
        'End If
        'If Trim(prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString) <> "" Then
        '    Cmp_GSTIN_Cap = "GSTIN : "
        '    Cmp_GSTIN_No = prn_HdDt.Rows(0).Item("Company_GSTinNo").ToString
        'End If
        '***** GST END *****

        CurY = CurY + TxtHgt - 10

        p1Font = New Font("Calibri", 18, FontStyle.Bold)
        p2Font = New Font("SaiIndira", 18, FontStyle.Bold)

        Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("Tamil_name").ToString), LMargin + 10, CurY, 0, 0, p2Font)

        p2Font = New Font("SaiIndira", 14, FontStyle.Bold)

        Common_Procedures.Print_To_PrintDocument(e, "¦ÀÂ÷ :   " & Trim(prn_HdDt.Rows(0).Item("Company_Tamil_Name").ToString), LMargin + Cen1 + 10, CurY, 0, 0, p2Font)


        strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height





        p2Font = New Font("SaiIndira", 12, FontStyle.Regular)
        CurY = CurY + strHeight
        Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("Ledger_tamil_Address1").ToString), LMargin + 10, CurY, 0, 0, p2Font)

        Common_Procedures.Print_To_PrintDocument(e, "¾¢Õôâ÷", LMargin + Cen1 + 10, CurY, 0, 0, p2Font)
        CurY = CurY + TxtHgt
        Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("Ledger_tamil_Address2").ToString), LMargin + 10, CurY, 0, 0, p2Font)

        '***** GST START *****
        CurY = CurY + TxtHgt

        'p1Font = New Font("Calibri", 11, FontStyle.Bold)
        'strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_GSTIN_Cap), p1Font).Width
        'strWidth = e.Graphics.MeasureString(Trim(Cmp_StateCap & Cmp_StateNm & "     " & Cmp_GSTIN_Cap & Cmp_GSTIN_No), pFont).Width
        'If PrintWidth > strWidth Then
        '    CurX = LMargin + (PrintWidth - strWidth) / 2
        'Else
        '    CurX = LMargin
        'End If
        'pFont = New Font("Calibri", 11, FontStyle.Regular)
        'p1Font = New Font("Calibri", 11, FontStyle.Bold)
        'Common_Procedures.Print_To_PrintDocument(e, Cmp_StateCap, CurX, CurY, 0, 0, p1Font)
        'strWidth = e.Graphics.MeasureString(Cmp_StateCap, p1Font).Width
        'CurX = CurX + strWidth
        'Common_Procedures.Print_To_PrintDocument(e, Cmp_StateNm, CurX, CurY, 0, 0, pFont)

        'strWidth = e.Graphics.MeasureString(Cmp_StateNm, pFont).Width
        'p1Font = New Font("Calibri", 11, FontStyle.Bold)
        'CurX = CurX + strWidth
        'Common_Procedures.Print_To_PrintDocument(e, "     " & Cmp_GSTIN_Cap, CurX, CurY, 0, PrintWidth, p1Font)
        'strWidth = e.Graphics.MeasureString("     " & Cmp_GSTIN_Cap, p1Font).Width
        'CurX = CurX + strWidth
        'Common_Procedures.Print_To_PrintDocument(e, Cmp_GSTIN_No, CurX, CurY, 0, 0, pFont)

        'CurY = CurY + TxtHgt
        'Common_Procedures.Print_To_PrintDocument(e, Trim(Cmp_PhNo & "   " & Cmp_Email), LMargin, CurY, 2, PrintWidth, pFont)
        'pFont = New Font("Calibri", 10, FontStyle.Regular)
        ''***** GST END *****
        'CurY = CurY + TxtHgt


        'strHeight = e.Graphics.MeasureString(Cmp_Name, p1Font).Height
        CurY = CurY + TxtHgt + 10
        e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
        LnAr(2) = CurY
        e.Graphics.DrawLine(Pens.Black, Cen1, CurY, Cen1, LnAr(1))
        Try

            Led_Name = "" : Led_Add1 = "" : Led_Add2 = "" : Led_Add3 = "" : Led_Add4 = "" : Led_TinNo = "" : Led_PhNo = "" : Led_GSTTinNo = "" : Led_State = ""

            Led_StateCd = ""
            LedAadhar_No = "" : Led_PanNo = ""
            Led_Name = Trim(prn_HdDt.Rows(0).Item("tamil_name").ToString)

            Led_Add1 = Trim(prn_HdDt.Rows(0).Item("Ledger_Tamil_Address1").ToString)
            Led_Add2 = Trim(prn_HdDt.Rows(0).Item("Ledger_Tamil_Address2").ToString)
            'Led_Add3 = Trim(prn_HdDt.Rows(0).Item("Ledger_Address3").ToString) & " " & Trim(prn_HdDt.Rows(0).Item("Ledger_Address4").ToString)
            'Led_Add4 = ""  'Trim(prn_HdDt.Rows(0).Item("Ledger_Address4").ToString)
            '***** GST START *****
            'Led_TinNo = "Tin No : " & Trim(prn_HdDt.Rows(0).Item("Ledger_TinNo").ToString)
            'If Trim(prn_HdDt.Rows(0).Item("Ledger_PhoneNo").ToString) <> "" Then Led_PhNo = "Phone No : " & Trim(prn_HdDt.Rows(0).Item("Ledger_PhoneNo").ToString)

            'Led_State = "State : " & Trim(prn_HdDt.Rows(0).Item("Ledger_State_Name").ToString) & "  Code  :" & Trim(prn_HdDt.Rows(0).Item("Ledger_State_Code").ToString)
            'Led_StateCd = Trim(prn_HdDt.Rows(0).Item("Ledger_State_Code").ToString)
            'If Trim(prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString) <> "" Then Led_GSTTinNo = " GSTIN : " & Trim(prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString)
            'If Trim(prn_HdDt.Rows(0).Item("Ledger_GSTinNo").ToString) = "" Then
            '    If Trim(prn_HdDt.Rows(0).Item("Pan_No").ToString) <> "" Then Led_GSTTinNo = "Pan No : " & Trim(prn_HdDt.Rows(0).Item("Pan_No").ToString)
            '    If Trim(prn_HdDt.Rows(0).Item("Aadhar_No").ToString) <> "" Then LedAadhar_No = "AAdhar No : " & Trim(prn_HdDt.Rows(0).Item("Aadhar_No").ToString)
            'End If
            '***** GST END *****



            Erase LedNmAr
            LedNmAr = New String(10) {}
            LInc = 0

            LInc = LInc + 1
            LedNmAr(LInc) = Led_Name

            If Trim(Led_Add1) <> "" Then
                LInc = LInc + 1
                LedNmAr(LInc) = Led_Add1
            End If

            If Trim(Led_Add2) <> "" Then
                LInc = LInc + 1
                LedNmAr(LInc) = Led_Add2
            End If

            If Trim(Led_Add3) <> "" Then
                LInc = LInc + 1
                LedNmAr(LInc) = Led_Add3
            End If

            'If Trim(Led_Add4) <> "" Then
            '    LInc = LInc + 1
            '    LedNmAr(LInc) = Led_Add4
            'End If
            '***** GST START *****
            If Trim(Led_State) <> "" Then
                LInc = LInc + 1
                LedNmAr(LInc) = Led_State
            End If

            If Trim(Led_PhNo) <> "" Then
                LInc = LInc + 1
                LedNmAr(LInc) = Led_PhNo
            End If

            If Trim(Led_GSTTinNo) <> "" Then
                LInc = LInc + 1
                LedNmAr(LInc) = Led_GSTTinNo
            ElseIf Trim(Led_GSTTinNo) = "" Then
                LInc = LInc + 1
                LedNmAr(LInc) = LedAadhar_No
            End If
            'If Trim(LedAadhar_No) <> "" Then

            'End If
            '***** GST END *****


            W1 = e.Graphics.MeasureString("¦¿ .   ", pFont).Width
            W2 = e.Graphics.MeasureString("TO :", pFont).Width

            CurY = CurY + TxtHgt - 10
            BlockInvNoY = CurY

            ''***** GST START *****
            'p1Font = New Font("Calibri", 11, FontStyle.Bold)
            'Common_Procedures.Print_To_PrintDocument(e, "TO :    ", LMargin + 10, CurY, 0, 0, p1Font)
            'p1Font = New Font("SaiIndira", 11, FontStyle.Bold)
            ''"M/s. " & 

            'Common_Procedures.Print_To_PrintDocument(e, Trim(Led_Name), LMargin + W2 + 10, CurY + 5, 0, 0, p1Font)
            'p1Font = New Font("Calibri", 11, FontStyle.Bold)
            'CurY = CurY + TxtHgt + 5
            'p2Font = New Font("SaiIndira", 11, FontStyle.Regular)
            'Common_Procedures.Print_To_PrintDocument(e, Trim(LedNmAr(2)), LMargin + W2 + 10, CurY, 0, 0, p2Font)

            'CurY = CurY + TxtHgt + 5
            'Common_Procedures.Print_To_PrintDocument(e, Trim(LedNmAr(3)), LMargin + W2 + 10, CurY, 0, 0, pFont)

            'CurY = CurY + TxtHgt
            'Common_Procedures.Print_To_PrintDocument(e, Trim(LedNmAr(4)), LMargin + W2 + 10, CurY, 0, 0, pFont)

            'CurY = CurY + TxtHgt
            'Common_Procedures.Print_To_PrintDocument(e, Trim(LedNmAr(5)), LMargin + W2 + 10, CurY, 0, 0, pFont)

            'CurY = CurY + TxtHgt
            'Common_Procedures.Print_To_PrintDocument(e, Trim(LedNmAr(6)), LMargin + W2 + 10, CurY, 0, 0, pFont)

            'CurY = CurY + TxtHgt
            'Common_Procedures.Print_To_PrintDocument(e, Trim(LedNmAr(7)), LMargin + W2 + 10, CurY, 0, 0, pFont)
            'CurY = CurY + TxtHgt
            'Common_Procedures.Print_To_PrintDocument(e, Trim(LedNmAr(8)), LMargin + W2 + 10, CurY, 0, 0, pFont)
            '***** GST END *****


            '------------------- Invoice No Block

            '***** GST START *****

            p1Font = New Font("SaiIndira", 12, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "¦¿ . ", LMargin + 10, BlockInvNoY, 0, 0, p1Font)
            p1Font = New Font("Calibri", 14, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + W1 + 10, BlockInvNoY, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Weaver_BillNo").ToString, LMargin + W1 + 30, BlockInvNoY - 5, 0, 0, p1Font)


            p1Font = New Font("SaiIndira", 12, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "§¾¾¢", LMargin + Cen1 + 10, BlockInvNoY + 4, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + Cen1 + W1 + 10, BlockInvNoY + 4, 0, 0, pFont)
            Common_Procedures.Print_To_PrintDocument(e, Format(Convert.ToDateTime(prn_HdDt.Rows(0).Item("Weaver_Wages_Date").ToString), "dd-MM-yyyy"), LMargin + Cen1 + W1 + 30, BlockInvNoY - 5, 0, 0, pFont)






            BlockInvNoY = BlockInvNoY + TxtHgt







            'BlockInvNoY = BlockInvNoY + TxtHgt
            'If Trim(prn_HdDt.Rows(0).Item("Rec_No").ToString) <> "" Then
            '    p1Font = New Font("SaiIndira", 10, FontStyle.Regular)
            '    Common_Procedures.Print_To_PrintDocument(e, "¡£Î", LMargin + Cen1 + 10, BlockInvNoY, 0, 0, p1Font)
            '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + Cen1 + W1 + 10, BlockInvNoY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Rec_No").ToString, LMargin + Cen1 + W1 + 30, BlockInvNoY, 0, 0, pFont)
            'End If

            'BlockInvNoY = BlockInvNoY + TxtHgt
            'If Trim(prn_HdDt.Rows(0).Item("Cloth_Pick").ToString) <> "" Then
            '    p1Font = New Font("SaiIndira", 10, FontStyle.Regular)
            '    Common_Procedures.Print_To_PrintDocument(e, "À¢ì", LMargin + Cen1 + 10, BlockInvNoY, 0, 0, p1Font)
            '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + Cen1 + W1 + 10, BlockInvNoY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Cloth_Pick").ToString, LMargin + Cen1 + W1 + 30, BlockInvNoY, 0, 0, pFont)
            'End If
            'BlockInvNoY = BlockInvNoY + TxtHgt
            'If Trim(prn_HdDt.Rows(0).Item("Cloth_width").ToString) <> "" Then
            '    p1Font = New Font("SaiIndira", 10, FontStyle.Regular)
            '    Common_Procedures.Print_To_PrintDocument(e, "«¸Äõ", LMargin + Cen1 + 10, BlockInvNoY, 0, 0, p1Font)
            '    Common_Procedures.Print_To_PrintDocument(e, ":", LMargin + Cen1 + W1 + 10, BlockInvNoY, 0, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, prn_HdDt.Rows(0).Item("Cloth_width").ToString, LMargin + Cen1 + W1 + 30, BlockInvNoY, 0, 0, pFont)
            'End If

            CurY = CurY + TxtHgt + 10
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(3) = CurY

            e.Graphics.DrawLine(Pens.Black, Cen1, LnAr(3), Cen1, LnAr(2))



            CurY = CurY + TxtHgt - 10
            p1Font = New Font("SaiIndira", 10, FontStyle.Regular)
            Common_Procedures.Print_To_PrintDocument(e, "§¾¾¢", LMargin, CurY, 2, ClAr(1), p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "Å¢ÀÃõ", LMargin + ClAr(1), CurY, 2, ClAr(2), p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "À£Š", LMargin + ClAr(1) + ClAr(2), CurY, 2, ClAr(3), p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "Á£ð¼÷", LMargin + ClAr(1) + ClAr(2) + ClAr(3), CurY, 2, ClAr(4), p1Font)

            Common_Procedures.Print_To_PrintDocument(e, "ÅÇ¡¢", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "¦Á¡ò¾", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), p1Font)

            Common_Procedures.Print_To_PrintDocument(e, "§Ãð", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, 2, ClAr(7), p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "¦¾¡¨¸", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), p1Font)

            CurY = CurY + 20
            Common_Procedures.Print_To_PrintDocument(e, "Á£ð¼÷", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), CurY, 2, ClAr(5), p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "Á£ð¼÷", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), CurY, 2, ClAr(6), p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "å    ¨À", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), CurY, 2, ClAr(8), p1Font)
            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(4) = CurY

        Catch ex As Exception

            MessageBox.Show(ex.Message, "DOES NOT PRINT", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub Printing_Format_1408_PageFooter(ByRef e As System.Drawing.Printing.PrintPageEventArgs, ByVal EntryCode As String, ByVal TxtHgt As Single, ByVal pFont As Font, ByVal LMargin As Single, ByVal RMargin As Single, ByVal TMargin As Single, ByVal BMargin As Single, ByVal PageWidth As Single, ByVal PrintWidth As Single, ByVal NoofItems_PerPage As Integer, ByRef CurY As Single, ByRef LnAr() As Single, ByRef ClAr() As Single, ByVal Cmp_Name As String, ByVal NoofDets As Integer, ByVal is_LastPage As Boolean)
        Dim p1Font As Font
        Dim p2Font As Font
        Dim Rup1 As String, Rup2 As String
        Dim I As Integer
        Dim vTaxPerc As Single = 0
        Dim BnkDetAr() As String
        Dim BankNm1 As String = ""
        Dim BankNm2 As String = ""
        Dim BankNm3 As String = ""
        Dim BankNm4 As String = ""
        Dim BInc As Integer
        Dim w1 As Single = 0
        Dim w2 As Single = 0
        Dim Jurs As String = ""
        Dim vNoofHsnCodes As Integer = 0
        Dim Yax As Single
        Dim LedIdNo As Integer = 0
        Dim ItmIdNo As Integer = 0
        Dim InterStateStatus As Boolean = False
        Dim Rnd_off As Single = 0
        Dim NetAmt As Single = 0
        Dim NtAmt As Single = 0
        Dim CgstAmt As Single = 0
        Dim IgstAmt As Single = 0
        Dim SgstAmt As Single = 0
        LedIdNo = 0
        InterStateStatus = False
        Dim Tot_EBeam_StkSumry As Single = 0
        Dim prn_Tot_Pavu_StkSumry As String = ""
        Dim prn_Tot_Yarn_StkSumry As String = ""
        Dim prn_Tot_Amt_BalSumry As Single = 0
        Dim da1 As New SqlClient.SqlDataAdapter
        Dim Dt1 As New DataTable

        Dim cury1 As Single = 0
        '''--------
        Tot_EBeam_StkSumry = 0
        prn_Tot_Pavu_StkSumry = ""
        prn_Tot_Yarn_StkSumry = ""
        prn_Tot_Amt_BalSumry = 0

        da1 = New SqlClient.SqlDataAdapter("select sum(int6) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'BEAM'", con)
        Dt1 = New DataTable
        da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                Tot_EBeam_StkSumry = Val(Dt1.Rows(0)(0).ToString)
            End If
        End If
        Dt1.Clear()

        da1 = New SqlClient.SqlDataAdapter("select sum(currency1) from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'AMOUNT'", con)
        Dt1 = New DataTable
        da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            If IsDBNull(Dt1.Rows(0)(0).ToString) = False Then
                prn_Tot_Amt_BalSumry = Val(Dt1.Rows(0)(0).ToString)
            End If
        End If
        Dt1.Clear()

        da1 = New SqlClient.SqlDataAdapter("select name7 as EndsCount, sum(meters6) as PavuMtrs from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'PAVU' GROUP BY name7 having sum(meters6) <> 0 ORDER BY name7", con)
        Dt1 = New DataTable
        da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            For k = 0 To Dt1.Rows.Count - 1
                prn_Tot_Pavu_StkSumry = Trim(prn_Tot_Pavu_StkSumry) & IIf(Trim(prn_Tot_Pavu_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("EndsCount").ToString & " : " & Dt1.Rows(k).Item("PavuMtrs").ToString
            Next
        End If
        Dt1.Clear()

        da1 = New SqlClient.SqlDataAdapter("select name7 as CountName, sum(weight1) as YarnWgt from " & Trim(Common_Procedures.ReportTempTable) & " where name6 = 'YARN' GROUP BY name7 having sum(weight1) <> 0 ORDER BY name7", con)
        Dt1 = New DataTable
        da1.Fill(Dt1)
        If Dt1.Rows.Count > 0 Then
            For k = 0 To Dt1.Rows.Count - 1
                prn_Tot_Yarn_StkSumry = Trim(prn_Tot_Yarn_StkSumry) & IIf(Trim(prn_Tot_Yarn_StkSumry) <> "", ", ", "") & Dt1.Rows(k).Item("CountName").ToString & " : " & Dt1.Rows(k).Item("YarnWgt").ToString
            Next
        End If
        Dt1.Clear()


        '''---------





        w1 = e.Graphics.MeasureString("Ends Count : ", pFont).Width

        ' LedIdNo = Common_Procedures.Ledger_AlaisNameToIdNo(con, cbo_DelvAt.Text)
        InterStateStatus = Common_Procedures.Is_InterState_Party(con, Val(lbl_Company.Tag), LedIdNo)
        Try

            For I = NoofDets + 1 To NoofItems_PerPage
                CurY = CurY + TxtHgt
                prn_DetIndx = prn_DetIndx + 1
            Next

            CurY = CurY + TxtHgt

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            'CurY = CurY + TxtHgt - 10
            'If is_LastPage = True Then
            '    Common_Procedures.Print_To_PrintDocument(e, "TOTAL", LMargin + ClAr(1) + ClAr(2) - 10, CurY, 1, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, vprn_Tot_Bgs_Bms, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) - 5, CurY, 1, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vprn_Tot_Wgt_Mtr), " ###########0.000"), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 5, CurY, 1, 0, pFont)
            '    Common_Procedures.Print_To_PrintDocument(e, Format(Val(vprn_Tot_Amt), "########0.00"), PageWidth - 5, CurY, 1, 0, pFont)
            'End If
            'CurY = CurY + TxtHgt + 5

            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), CurY, PageWidth, CurY)
            LnAr(5) = CurY

            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(5), LMargin, LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), LnAr(5), LMargin + ClAr(1), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), LnAr(5), LMargin + ClAr(1) + ClAr(2), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(5), LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(5), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(5), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(5), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(5), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(5), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(3))
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(5), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8) + ClAr(9), LnAr(3))




            CurY = CurY + TxtHgt - 10
            If is_LastPage = True Then
                p1Font = New Font("Calibri", 10, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, "Total Value", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, p1Font)
                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Total_Taxable_Amount").ToString), "##########0.00"), PageWidth - 5, CurY, 1, 0, p1Font)
            End If
            p2Font = New Font("TAM_SC_Suvita", 10, FontStyle.Regular)
            cury1 = CurY
            Common_Procedures.Print_To_PrintDocument(e, "Þ¼Š¹ Mõó‹ :- ", LMargin + 10, cury1, 0, 0, p2Font)
            cury1 = cury1 + TxtHgt + 5
            Common_Procedures.Print_To_PrintDocument(e, "d‹ Þ¼Š¹", LMargin + 10, cury1, 0, 0, p2Font)
            Common_Procedures.Print_To_PrintDocument(e, " :  " & Val(Tot_EBeam_StkSumry), LMargin + ClAr(1) + 20, cury1, 0, 0, pFont)
            cury1 = cury1 + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "ð£¾  Þ¼Š¹", LMargin + 10, cury1, 0, 0, p2Font)
            Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_Tot_Pavu_StkSumry, LMargin + ClAr(1) + 20, cury1, 0, 0, pFont)
            cury1 = cury1 + TxtHgt
            Common_Procedures.Print_To_PrintDocument(e, "Ë™  Þ¼Š¹", LMargin + 10, cury1, 0, 0, p2Font)
            Common_Procedures.Print_To_PrintDocument(e, " :  " & prn_Tot_Yarn_StkSumry, LMargin + ClAr(1) + 20, cury1, 0, 0, pFont)


            ''vTaxPerc = get_GST_Tax_Percentage_For_Printing(EntryCode)
            CgstAmt = Format(Val(vprn_Tot_Amt) * 2.5 / 100, "########0.00")
            SgstAmt = Format(Val(vprn_Tot_Amt) * 2.5 / 100, "########0.00")




            CurY = CurY + TxtHgt
            If is_LastPage = True Then
                IgstAmt = Format(Val(vprn_Tot_Amt) * 5 / 100, "########0.00")
                Common_Procedures.Print_To_PrintDocument(e, "Tds 1 %", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Tds_Perc_Calc").ToString), "########0.00"), PageWidth - 5, CurY, 1, 0, pFont)
            End If

            'Less_Amount


            If is_LastPage = True Then

                If Val(prn_HdDt.Rows(0).Item("Add_Amount").ToString) <> 0 Then

                    CurY = CurY + TxtHgt
                    Common_Procedures.Print_To_PrintDocument(e, "Add", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Add_Amount").ToString), "########0.00"), PageWidth - 5, CurY, 1, 0, pFont)
                End If



                If Val(prn_HdDt.Rows(0).Item("Less_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, "Less", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Less_Amount").ToString), "########0.00"), PageWidth - 5, CurY, 1, 0, pFont)
                End If


                If Val(prn_HdDt.Rows(0).Item("Deduction_Amount").ToString) <> 0 Then
                    CurY = CurY + TxtHgt

                    Common_Procedures.Print_To_PrintDocument(e, Trim(prn_HdDt.Rows(0).Item("Deduction_caption").ToString), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Deduction_Amount").ToString), "########0.00"), PageWidth - 5, CurY, 1, 0, pFont)
                End If


                'Freight_Charge


                CurY = CurY + TxtHgt
                If is_LastPage = True Then
                    If Val(prn_HdDt.Rows(0).Item("Freight_Charge").ToString) <> 0 Then


                        Common_Procedures.Print_To_PrintDocument(e, "Freight", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, pFont)

                        Common_Procedures.Print_To_PrintDocument(e, Format(Val(prn_HdDt.Rows(0).Item("Freight_Charge").ToString), "########0.00"), PageWidth - 5, CurY, 1, 0, pFont)
                    End If
                End If

            End If

            NetAmt = Format(Val(prn_HdDt.Rows(0).Item("Net_Amount").ToString), "########0.00")
            NtAmt = Format(Val(NetAmt), "#########0")
            NtAmt = Common_Procedures.Currency_Format(Val(NtAmt))

            Rnd_off = Format(Val(CSng(NtAmt)) - Val(NetAmt), "#########0.00")

            If Val(Rnd_off) <> 0 Then
                CurY = CurY + TxtHgt
                If is_LastPage = True Then
                    Common_Procedures.Print_To_PrintDocument(e, "Round Off", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) - 10, CurY, 1, 0, pFont)
                    Common_Procedures.Print_To_PrintDocument(e, Format(Val(Rnd_off), "########0.00"), PageWidth - 5, CurY, 1, 0, pFont)
                End If
            End If

            CurY = CurY + TxtHgt + 5
            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), CurY, PageWidth, CurY)


            CurY = CurY + TxtHgt - 10

            p1Font = New Font("Calibri", 15, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "Net Amount", LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) - 10, CurY, 1, 0, p1Font)
            If is_LastPage = True Then
                p1Font = New Font("Calibri", 12, FontStyle.Bold)
                Common_Procedures.Print_To_PrintDocument(e, Common_Procedures.Currency_Format(Val(NtAmt)), PageWidth - 5, CurY, 1, 0, p1Font)
            End If

            CurY = CurY + TxtHgt + 10
            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(6) = CurY
            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(6), LMargin, LnAr(3))
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1), LnAr(6), LMargin + ClAr(1), LnAr(3))
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2), LnAr(6), LMargin + ClAr(1) + ClAr(2), LnAr(3))
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(6), LMargin + ClAr(1) + ClAr(2) + ClAr(3), LnAr(3))
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(6), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4), LnAr(3))
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(6), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5), LnAr(3))
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(6), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6), LnAr(3))
            'e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(6), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7), LnAr(3))


            e.Graphics.DrawLine(Pens.Black, LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(6), LMargin + ClAr(1) + ClAr(2) + ClAr(3) + ClAr(4) + ClAr(5) + ClAr(6) + ClAr(7) + ClAr(8), LnAr(5))

            'Rup1 = ""
            'Rup2 = ""
            'If is_LastPage = True Then
            '    Rup1 = Common_Procedures.Rupees_Converstion(Val(NtAmt))
            '    If Len(Rup1) > 80 Then
            '        For I = 80 To 1 Step -1
            '            If Mid$(Trim(Rup1), I, 1) = " " Then Exit For
            '        Next I
            '        If I = 0 Then I = 80
            '        Rup2 = Microsoft.VisualBasic.Right(Trim(Rup1), Len(Rup1) - I)
            '        Rup1 = Microsoft.VisualBasic.Left(Trim(Rup1), I - 1)
            '    End If
            'End If

            ''***** GST START *****
            'CurY = CurY + TxtHgt - 12
            'p1Font = New Font("Calibri", 10, FontStyle.Bold)
            'Common_Procedures.Print_To_PrintDocument(e, "Amount Chargeable (In Words)  : " & Rup1, LMargin + 10, CurY, 0, 0, p1Font)
            'If Trim(Rup2) <> "" Then
            '    CurY = CurY + TxtHgt - 5
            '    Common_Procedures.Print_To_PrintDocument(e, "                                " & Rup2, LMargin + 10, CurY, 0, 0, p1Font)
            'End If
            ''***** GST END *****

            'CurY = CurY + TxtHgt + 5
            'e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)

            'CurY = CurY + 10
            'p1Font = New Font("SaiIndira", 12, FontStyle.Bold)
            ''Common_Procedures.Print_To_PrintDocument(e, " §Áü¸ñ¼ ¨ºº¢í À£õ¸û  " & Val(prn_HdDt.Rows(0).Item("Total_Beam").ToString) & "  ìÌ ¦Á¡ò¾ Á£ð¼÷  " & Val(prn_HdDt.Rows(0).Item("Total_Meters").ToString) & "   °¨¼ áø  " & Val(prn_HdDt.Rows(0).Item("Total_Bags").ToString) & " ¨À Ð½¢  ", LMargin + 10, CurY, 0, 0, p1Font)
            'CurY = CurY + TxtHgt + 5
            'Common_Procedures.Print_To_PrintDocument(e, "¦¿º× ¦ºöÐ ¦¸¡ÎôÀ¾ü¸¡¸ ¦ÀüÚì¦¸¡ñ§¼¡õ . ", LMargin + 10, CurY, 0, 0, p1Font)
            'CurY = CurY + TxtHgt
            'e.Graphics.DrawImage(DirectCast(Global.Textile.My.Resources.Resources.Amirtham_1408_Description_footer, Drawing.Image), LMargin + 30, CurY + 5, 700, 60)
            'CurY = CurY + TxtHgt + TxtHgt + TxtHgt
            'e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            LnAr(10) = CurY

            'vNoofHsnCodes = get_GST_Noof_HSN_Codes_For_Printing(EntryCode)
            'If vNoofHsnCodes <> 0 Then
            'Printing_GST_HSN_Details_Format1(e, EntryCode, TxtHgt, pFont, CurY, LMargin, PageWidth, PrintWidth, LnAr(10))
            'End If

            CurY = CurY + TxtHgt - 5

            p1Font = New Font("Calibri", 12, FontStyle.Bold)
            p1Font = New Font("SaiIndira", 12, FontStyle.Bold)
            Common_Procedures.Print_To_PrintDocument(e, "For  " & prn_HdDt.Rows(0).Item("Company_tamil_name").ToString, PageWidth - 10, CurY, 1, 0, p1Font)



            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            CurY = CurY + TxtHgt
            p1Font = New Font("SaiIndira", 10, FontStyle.Regular)
            'Common_Procedures.Print_To_PrintDocument(e, "ÅñÊ ¦¿õÀ÷   :   " & prn_HdDt.Rows(0).Item("Vehicle_No").ToString, LMargin + 15, CurY, 0, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "¨¸¦ÂØòÐ", LMargin + ClAr(1), CurY, 1, 0, p1Font)
            Common_Procedures.Print_To_PrintDocument(e, "Authorised Signatory", PageWidth - 10, CurY, 1, 0, pFont)



            CurY = CurY + TxtHgt + 10

            e.Graphics.DrawLine(Pens.Black, LMargin, CurY, PageWidth, CurY)
            e.Graphics.DrawLine(Pens.Black, LMargin, LnAr(1), LMargin, CurY)
            e.Graphics.DrawLine(Pens.Black, PageWidth, LnAr(1), PageWidth, CurY)

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT PRINT...", MessageBoxButtons.OK, MessageBoxIcon.Error)

        End Try

    End Sub

    Private Sub txt_PrintRange_FromNo_TextChanged(sender As Object, e As EventArgs) Handles txt_PrintRange_FromNo.TextChanged
        PrintRange_byDate_Enable_Disable()
    End Sub

    Private Sub txt_PrintRange_ToNo_TextChanged(sender As Object, e As EventArgs) Handles txt_PrintRange_ToNo.TextChanged
        PrintRange_byDate_Enable_Disable()
    End Sub

    Private Sub PrintRange_byDate_Enable_Disable()
        If Val(txt_PrintRange_FromNo.Text) = 0 And Val(txt_PrintRange_ToNo.Text) = 0 Then
            If msk_PrintRange_DateFrom.Visible = True Then
                msk_PrintRange_DateFrom.Enabled = True
                msk_PrintRange_DateTo.Enabled = True
                dtp_PrintRange_DateFrom.Enabled = True
                dtp_PrintRange_DateTo.Enabled = True

            Else
                GoTo GOTOLOOP1

            End If

        Else

GOTOLOOP1:
            msk_PrintRange_DateFrom.Enabled = False
            msk_PrintRange_DateTo.Enabled = False
            dtp_PrintRange_DateFrom.Enabled = False
            dtp_PrintRange_DateTo.Enabled = False

        End If
    End Sub

    Private Sub msk_Date_MaskInputRejected(sender As Object, e As MaskInputRejectedEventArgs) Handles msk_Date.MaskInputRejected

    End Sub

    Private Sub FindRecord()
        Dim Da As New SqlClient.SqlDataAdapter
        Dim Dt As New DataTable
        Dim movno As String, inpno As String
        Dim InvCode As String


        Try


            If Trim(txt_BillNoOpen.Text) = "" And Trim(txt_LotNo_Open.Text) = "" Then
                MessageBox.Show("Invalid Bill/Lot No... ", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub
            ElseIf Trim(txt_BillNoOpen.Text) <> "" Then
                InvCode = ""

                inpno = Trim(txt_BillNoOpen.Text)

                InvCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(Common_Procedures.FnYearCode)

                Da = New SqlClient.SqlDataAdapter("select Weaver_Wages_No from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Weaver_Wages_Code = '" & Trim(InvCode) & "'", con)
                Da.Fill(Dt)

                movno = ""
                If Dt.Rows.Count > 0 Then
                    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                        movno = Trim(Dt.Rows(0)(0).ToString)
                    End If
                End If

                Dt.Clear()

                If Trim(movno) <> "" Then
                    move_record(movno)
                Else
                    MessageBox.Show("Ref No. does not exists", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                End If

            ElseIf Trim(txt_LotNo_Open.Text) <> "" Then
                InvCode = ""

                inpno = Trim(txt_LotNo_Open.Text)

                InvCode = Trim(Pk_Condition) & Trim(Val(lbl_Company.Tag)) & "-" & Trim(inpno) & "/" & Trim(Common_Procedures.FnYearCode)

                Da = New SqlClient.SqlDataAdapter("select Weaver_Wages_No from Weaver_Wages_Head where company_idno = " & Str(Val(lbl_Company.Tag)) & " and Rec_No = '" & Trim(inpno) & "'  and Weaver_Wages_Code like '%/" & Trim(Common_Procedures.FnYearCode) & "' ", con)
                Da.Fill(Dt)

                movno = ""
                If Dt.Rows.Count > 0 Then
                    If IsDBNull(Dt.Rows(0)(0).ToString) = False Then
                        movno = Trim(Dt.Rows(0)(0).ToString)
                    End If
                End If

                Dt.Clear()
                If Val(movno) <> 0 Then
                    move_record(movno)
                Else
                    'MessageBox.Show(Trim(cbo_InOrOutOpen.Text) & " No. does not exists", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

                End If

            ElseIf Trim(txt_BillNoOpen.Text) = "" Or Trim(txt_LotNo_Open.Text) = "" Then
                MessageBox.Show("Invalid Bill/Lot No... ", "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)
                Exit Sub
            End If

        Catch ex As Exception
            MessageBox.Show(ex.Message, "DOES NOT FIND...", MessageBoxButtons.OKCancel, MessageBoxIcon.Error)

        Finally
            Dt.Dispose()
            Da.Dispose()

        End Try


    End Sub
    Private Sub btn_OpenRecord_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_OpenRecord.Click
        pnl_Back.Enabled = True
        pnl_OpenRecord.Visible = False
        FindRecord()
    End Sub

    Private Sub btn_CloseOpenRecord_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btn_CloseOpenRecord.Click
        pnl_Back.Enabled = True
        pnl_OpenRecord.Visible = False
    End Sub

    Private Sub txt_BillNoOpen_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txt_BillNoOpen.KeyPress
        If Asc(e.KeyChar) = 13 Then
            If Trim(txt_BillNoOpen.Text) <> "" Then
                pnl_Back.Enabled = True
                pnl_OpenRecord.Visible = False
                FindRecord()
            Else
                txt_LotNo_Open.Focus()
            End If

        End If
    End Sub
    Private Sub txt_LotNo_Open_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txt_LotNo_Open.KeyPress
        If Asc(e.KeyChar) = 13 Then
            pnl_Back.Enabled = True
            pnl_OpenRecord.Visible = False
            FindRecord()
        End If
    End Sub

    Private Sub txt_filter_LotNo_KeyDown(sender As Object, e As KeyEventArgs) Handles txt_filter_LotNo.KeyDown
        On Error Resume Next
        If e.KeyValue = 38 Then
            cbo_Filter_CountName.Focus()
        End If 'e.Handled = True : SendKeys.Send("+{TAB}")

        If e.KeyValue = 40 Or (e.Control = True And e.KeyValue = 40) Then
            If Common_Procedures.settings.CustomerCode = "1249" Then
                cbo_Verified_Sts.Focus()
            Else
                btn_Filter_Show.Focus()

            End If

        End If
    End Sub

    Private Sub txt_filter_LotNo_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txt_filter_LotNo.KeyPress
        On Error Resume Next
        If Asc(e.KeyChar) = 13 Then
            If Common_Procedures.settings.CustomerCode = "1249" Then
                cbo_Verified_Sts.Focus()
            Else
                btn_Filter_Show.Focus()

            End If
        End If

    End Sub

    Private Sub txt_addless_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txt_addless_beforeTax.KeyPress
        If Common_Procedures.Accept_NegativeNumbers(Asc(e.KeyChar)) = 0 Then e.Handled = True

        If Asc(e.KeyChar) = 13 Then

            If txt_Elogation.Enabled And txt_Elogation.Visible = True Then
                txt_Elogation.Focus()
            ElseIf txt_Freight_Charge.Enabled And txt_Freight_Charge.Visible = True Then
                txt_Freight_Charge.Focus()
            Else
                txt_deduction.Focus()
            End If

        End If


    End Sub

    Private Sub txt_addless_TextChanged(sender As Object, e As EventArgs) Handles txt_addless_beforeTax.TextChanged
        Total_Amount_Calculation()
    End Sub

    Private Sub txt_deduction_KeyDown(sender As Object, e As KeyEventArgs) Handles txt_deduction.KeyDown
        If e.KeyCode = 40 Then
            txt_CGST_Percentage.Focus()
        End If

        If e.KeyCode = 38 Then
            txt_addless_beforeTax.Focus()
        End If

    End Sub

    Private Sub txt_addless_KeyDown(sender As Object, e As KeyEventArgs) Handles txt_addless_beforeTax.KeyDown

        If e.KeyCode = 40 Then

            If txt_Elogation.Enabled And txt_Elogation.Visible = True Then
                txt_Elogation.Focus()
            ElseIf txt_Freight_Charge.Enabled And txt_Freight_Charge.Visible = True Then
                txt_Freight_Charge.Focus()
            Else
                txt_deduction.Focus()
            End If

        End If

        If e.KeyValue = 38 Then

            If dgv_Details.Rows.Count > 0 Then
                dgv_Details.Focus()
                dgv_Details.CurrentCell = dgv_Details.Rows(0).Cells(0)
                dgv_Details.CurrentCell.Selected = True
            End If

        End If

    End Sub

    Private Sub txt_Elogation_KeyDown(sender As Object, e As KeyEventArgs) Handles txt_Elogation.KeyDown
        If e.KeyCode = 40 Then
            txt_CGST_Percentage.Focus()
        End If

        If e.KeyCode = 38 Then
            txt_addless_beforeTax.Focus()
        End If

    End Sub

    Private Sub lbl_Taxable_Value_Click(sender As Object, e As EventArgs) Handles lbl_Taxable_Value.Click

    End Sub

    Private Sub msk_PrintRange_DateFrom_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_PrintRange_DateFrom.KeyDown
        vcbo_KeyDwnVal = e.KeyValue

        If e.KeyCode = 38 Then
            e.Handled = True
            e.SuppressKeyPress = True
            txt_PrintRange_ToNo.Focus()

        ElseIf e.KeyCode = 40 Then
            e.Handled = True
            e.SuppressKeyPress = True
            msk_PrintRange_DateTo.Focus()

        End If

        vmskOldText = ""
        vmskSelStrt = -1
        If e.KeyCode = 46 Or e.KeyCode = 8 Then
            vmskOldText = msk_PrintRange_DateFrom.Text
            vmskSelStrt = msk_PrintRange_DateFrom.SelectionStart
        End If

    End Sub

    Private Sub msk_PrintRange_DateFrom_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles msk_PrintRange_DateFrom.KeyPress
        If Trim(UCase(e.KeyChar)) = "D" Then
            e.Handled = True
            msk_PrintRange_DateFrom.Text = Date.Today
            msk_PrintRange_DateFrom.SelectionStart = 0
        End If
        If Asc(e.KeyChar) = 13 Then
            e.Handled = True
            msk_PrintRange_DateTo.Focus()
        End If
    End Sub

    Private Sub msk_PrintRange_DateFrom_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_PrintRange_DateFrom.KeyUp

        Try
            If IsDate(msk_PrintRange_DateFrom.Text) = True Then
                If e.KeyCode = 107 Then
                    msk_PrintRange_DateFrom.Text = DateAdd("D", 1, Convert.ToDateTime(msk_PrintRange_DateFrom.Text))
                    msk_PrintRange_DateFrom.SelectionStart = 0
                ElseIf e.KeyCode = 109 Then
                    msk_PrintRange_DateFrom.Text = DateAdd("D", -1, Convert.ToDateTime(msk_PrintRange_DateFrom.Text))
                    msk_PrintRange_DateFrom.SelectionStart = 0
                End If
                dtp_PrintRange_DateFrom.Value = Convert.ToDateTime(msk_PrintRange_DateFrom.Text)
            End If

            If e.KeyCode = 46 Or e.KeyCode = 8 Then
                Common_Procedures.maskEdit_Date_ON_DelBackSpace(sender, e, vmskOldText, vmskSelStrt)
            End If

        Catch ex As Exception
            '----

        End Try

    End Sub

    Private Sub msk_PrintRange_DateFrom_TextChanged(sender As Object, e As EventArgs) Handles msk_PrintRange_DateFrom.TextChanged
        Try
            If FrmLdSTS = True Then Exit Sub

            If Me.ActiveControl.Name <> dtp_PrintRange_DateFrom.Name Then

                If IsDate(msk_PrintRange_DateFrom.Text) = True Then
                    dtp_PrintRange_DateFrom.Value = Convert.ToDateTime(msk_PrintRange_DateFrom.Text)
                End If

            End If

        Catch ex As Exception
            '---

        End Try
    End Sub

    Private Sub msk_PrintRange_DateFrom_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles msk_PrintRange_DateFrom.LostFocus
        If FrmLdSTS = True Then Exit Sub
        If IsDate(msk_PrintRange_DateFrom.Text) = True Then
            If Microsoft.VisualBasic.DateAndTime.Day(Convert.ToDateTime(msk_PrintRange_DateFrom.Text)) <= 31 Or Microsoft.VisualBasic.DateAndTime.Month(Convert.ToDateTime(msk_PrintRange_DateFrom.Text)) <= 31 Then
                If Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_PrintRange_DateFrom.Text)) <= 2050 And Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_PrintRange_DateFrom.Text)) >= 2000 Then
                    dtp_PrintRange_DateFrom.Value = Convert.ToDateTime(msk_PrintRange_DateFrom.Text)
                End If
            End If
        End If
    End Sub

    Private Sub dtp_PrintRange_DateFrom_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dtp_PrintRange_DateFrom.TextChanged
        Try
            If FrmLdSTS = True Then Exit Sub
            If Me.ActiveControl.Name <> dtp_PrintRange_DateFrom.Name Then
                If IsDate(dtp_PrintRange_DateFrom.Text) = True Then
                    msk_PrintRange_DateFrom.Text = dtp_PrintRange_DateFrom.Text
                    msk_PrintRange_DateFrom.SelectionStart = 0
                End If
            End If

        Catch ex As Exception
            '----
        End Try
    End Sub

    Private Sub msk_PrintRange_DateTo_KeyDown(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_PrintRange_DateTo.KeyDown
        vcbo_KeyDwnVal = e.KeyValue

        If e.KeyCode = 38 Then
            e.Handled = True
            e.SuppressKeyPress = True
            msk_PrintRange_DateFrom.Focus()

        ElseIf e.KeyCode = 40 Then
            e.Handled = True
            e.SuppressKeyPress = True
            If Trim(msk_PrintRange_DateFrom.Text) <> "" And Trim(msk_PrintRange_DateTo.Text) <> "" Then
                If IsDate(msk_PrintRange_DateFrom.Text) = True And IsDate(msk_PrintRange_DateTo.Text) = True Then
                    btn_Print_PrintRange_Click(sender, e)
                Else
                    btn_Print_PrintRange.Focus()
                End If
            Else
                btn_Print_PrintRange.Focus()
            End If
        End If

        vmskOldText = ""
        vmskSelStrt = -1
        If e.KeyCode = 46 Or e.KeyCode = 8 Then
            vmskOldText = msk_PrintRange_DateTo.Text
            vmskSelStrt = msk_PrintRange_DateTo.SelectionStart
        End If

    End Sub

    Private Sub msk_PrintRange_DateTo_KeyPress(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles msk_PrintRange_DateTo.KeyPress
        If Trim(UCase(e.KeyChar)) = "D" Then
            e.Handled = True
            msk_PrintRange_DateTo.Text = Date.Today
            msk_PrintRange_DateTo.SelectionStart = 0
        End If
        If Asc(e.KeyChar) = 13 Then
            e.Handled = True
            If Trim(msk_PrintRange_DateFrom.Text) <> "" And Trim(msk_PrintRange_DateTo.Text) <> "" Then
                If IsDate(msk_PrintRange_DateFrom.Text) = True And IsDate(msk_PrintRange_DateTo.Text) = True Then
                    btn_Print_PrintRange_Click(sender, e)
                Else
                    btn_Print_PrintRange.Focus()
                End If
            Else
                btn_Print_PrintRange.Focus()
            End If

        End If
    End Sub

    Private Sub msk_PrintRange_DateTo_KeyUp(ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles msk_PrintRange_DateTo.KeyUp

        Try
            If IsDate(msk_PrintRange_DateTo.Text) = True Then
                If e.KeyCode = 107 Then
                    msk_PrintRange_DateTo.Text = DateAdd("D", 1, Convert.ToDateTime(msk_PrintRange_DateTo.Text))
                    msk_PrintRange_DateTo.SelectionStart = 0
                ElseIf e.KeyCode = 109 Then
                    msk_PrintRange_DateTo.Text = DateAdd("D", -1, Convert.ToDateTime(msk_PrintRange_DateTo.Text))
                    msk_PrintRange_DateTo.SelectionStart = 0
                End If
                dtp_PrintRange_DateTo.Value = Convert.ToDateTime(msk_PrintRange_DateTo.Text)
            End If

            If e.KeyCode = 46 Or e.KeyCode = 8 Then
                Common_Procedures.maskEdit_Date_ON_DelBackSpace(sender, e, vmskOldText, vmskSelStrt)
            End If

        Catch ex As Exception
            '----

        End Try

    End Sub

    Private Sub msk_PrintRange_DateTo_TextChanged(sender As Object, e As EventArgs) Handles msk_PrintRange_DateTo.TextChanged
        Try
            If FrmLdSTS = True Then Exit Sub

            If Me.ActiveControl.Name <> dtp_PrintRange_DateTo.Name Then

                If IsDate(msk_PrintRange_DateTo.Text) = True Then
                    dtp_PrintRange_DateTo.Value = Convert.ToDateTime(msk_PrintRange_DateTo.Text)
                End If

            End If

        Catch ex As Exception
            '---

        End Try
    End Sub

    Private Sub msk_PrintRange_DateTo_LostFocus(ByVal sender As Object, ByVal e As System.EventArgs) Handles msk_PrintRange_DateTo.LostFocus
        If IsDate(msk_PrintRange_DateTo.Text) = True Then
            If Microsoft.VisualBasic.DateAndTime.Day(Convert.ToDateTime(msk_PrintRange_DateTo.Text)) <= 31 Or Microsoft.VisualBasic.DateAndTime.Month(Convert.ToDateTime(msk_PrintRange_DateTo.Text)) <= 31 Then
                If Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_PrintRange_DateTo.Text)) <= 2050 And Microsoft.VisualBasic.DateAndTime.Year(Convert.ToDateTime(msk_PrintRange_DateTo.Text)) >= 2000 Then
                    dtp_PrintRange_DateTo.Value = Convert.ToDateTime(msk_PrintRange_DateTo.Text)
                End If
            End If
        End If
    End Sub

    Private Sub dtp_PrintRange_DateTo_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles dtp_PrintRange_DateTo.TextChanged
        Try

            If FrmLdSTS = True Then Exit Sub

            If Me.ActiveControl.Name <> msk_PrintRange_DateTo.Name Then
                If IsDate(dtp_PrintRange_DateTo.Text) = True Then
                    msk_PrintRange_DateTo.Text = dtp_PrintRange_DateTo.Text
                    msk_PrintRange_DateTo.SelectionStart = 0
                End If
            End If

        Catch ex As Exception
            '----
        End Try
    End Sub

End Class